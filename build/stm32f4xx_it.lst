ARM GAS  /tmp/ccd6kAw8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB131:
  27              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f4xx_it.c ****   *
  17:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f4xx_it.c ****   */
  19:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f4xx_it.c **** 
  21:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f4xx_it.c **** #include "main.h"
  23:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f4xx_it.c **** #include "bms.h"
  27:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32f4xx_it.c **** 
  29:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  31:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccd6kAw8.s 			page 2


  32:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Core/Src/stm32f4xx_it.c **** 
  34:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32f4xx_it.c **** 
  39:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32f4xx_it.c **** 
  44:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32f4xx_it.c **** 
  49:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32f4xx_it.c **** 
  54:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32f4xx_it.c **** 
  59:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan1;
  61:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan2;
  62:Core/Src/stm32f4xx_it.c **** extern CAN_HandleTypeDef hcan3;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim2_ch1;
  64:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim2_ch2_ch4;
  65:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim2_up_ch3;
  66:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  67:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim7;
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  70:Core/Src/stm32f4xx_it.c **** 
  71:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  72:Core/Src/stm32f4xx_it.c **** 
  73:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  74:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  75:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  76:Core/Src/stm32f4xx_it.c **** /**
  77:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  78:Core/Src/stm32f4xx_it.c ****   */
  79:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  80:Core/Src/stm32f4xx_it.c **** {
  28              		.loc 1 80 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
ARM GAS  /tmp/ccd6kAw8.s 			page 3


  36              		.cfi_endproc
  37              	.LFE131:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB132:
  81:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  82:Core/Src/stm32f4xx_it.c **** 
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32f4xx_it.c ****   while (1)
  86:Core/Src/stm32f4xx_it.c ****   {
  87:Core/Src/stm32f4xx_it.c ****   }
  88:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  89:Core/Src/stm32f4xx_it.c **** }
  90:Core/Src/stm32f4xx_it.c **** 
  91:Core/Src/stm32f4xx_it.c **** /**
  92:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  93:Core/Src/stm32f4xx_it.c ****   */
  94:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  95:Core/Src/stm32f4xx_it.c **** {
  49              		.loc 1 95 0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L4:
  56 0000 FEE7     		b	.L4
  57              		.cfi_endproc
  58              	.LFE132:
  60              		.section	.text.MemManage_Handler,"ax",%progbits
  61              		.align	1
  62              		.global	MemManage_Handler
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu fpv4-sp-d16
  68              	MemManage_Handler:
  69              	.LFB133:
  96:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  97:Core/Src/stm32f4xx_it.c **** 
  98:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  99:Core/Src/stm32f4xx_it.c ****   while (1)
 100:Core/Src/stm32f4xx_it.c ****   {
 101:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 102:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 103:Core/Src/stm32f4xx_it.c ****   }
 104:Core/Src/stm32f4xx_it.c **** }
 105:Core/Src/stm32f4xx_it.c **** 
 106:Core/Src/stm32f4xx_it.c **** /**
 107:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  /tmp/ccd6kAw8.s 			page 4


 108:Core/Src/stm32f4xx_it.c ****   */
 109:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 110:Core/Src/stm32f4xx_it.c **** {
  70              		.loc 1 110 0
  71              		.cfi_startproc
  72              		@ Volatile: function does not return.
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76              	.L6:
  77 0000 FEE7     		b	.L6
  78              		.cfi_endproc
  79              	.LFE133:
  81              		.section	.text.BusFault_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	BusFault_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	BusFault_Handler:
  90              	.LFB134:
 111:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f4xx_it.c **** 
 113:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 114:Core/Src/stm32f4xx_it.c ****   while (1)
 115:Core/Src/stm32f4xx_it.c ****   {
 116:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 118:Core/Src/stm32f4xx_it.c ****   }
 119:Core/Src/stm32f4xx_it.c **** }
 120:Core/Src/stm32f4xx_it.c **** 
 121:Core/Src/stm32f4xx_it.c **** /**
 122:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 123:Core/Src/stm32f4xx_it.c ****   */
 124:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 125:Core/Src/stm32f4xx_it.c **** {
  91              		.loc 1 125 0
  92              		.cfi_startproc
  93              		@ Volatile: function does not return.
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97              	.L8:
  98 0000 FEE7     		b	.L8
  99              		.cfi_endproc
 100              	.LFE134:
 102              		.section	.text.UsageFault_Handler,"ax",%progbits
 103              		.align	1
 104              		.global	UsageFault_Handler
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu fpv4-sp-d16
 110              	UsageFault_Handler:
 111              	.LFB135:
 126:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
ARM GAS  /tmp/ccd6kAw8.s 			page 5


 127:Core/Src/stm32f4xx_it.c **** 
 128:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 129:Core/Src/stm32f4xx_it.c ****   while (1)
 130:Core/Src/stm32f4xx_it.c ****   {
 131:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 133:Core/Src/stm32f4xx_it.c ****   }
 134:Core/Src/stm32f4xx_it.c **** }
 135:Core/Src/stm32f4xx_it.c **** 
 136:Core/Src/stm32f4xx_it.c **** /**
 137:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 138:Core/Src/stm32f4xx_it.c ****   */
 139:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 140:Core/Src/stm32f4xx_it.c **** {
 112              		.loc 1 140 0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.L10:
 119 0000 FEE7     		b	.L10
 120              		.cfi_endproc
 121              	.LFE135:
 123              		.section	.text.DebugMon_Handler,"ax",%progbits
 124              		.align	1
 125              		.global	DebugMon_Handler
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	DebugMon_Handler:
 132              	.LFB136:
 141:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 142:Core/Src/stm32f4xx_it.c **** 
 143:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 144:Core/Src/stm32f4xx_it.c ****   while (1)
 145:Core/Src/stm32f4xx_it.c ****   {
 146:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 148:Core/Src/stm32f4xx_it.c ****   }
 149:Core/Src/stm32f4xx_it.c **** }
 150:Core/Src/stm32f4xx_it.c **** 
 151:Core/Src/stm32f4xx_it.c **** /**
 152:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 153:Core/Src/stm32f4xx_it.c ****   */
 154:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 155:Core/Src/stm32f4xx_it.c **** {
 133              		.loc 1 155 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE136:
 142              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
ARM GAS  /tmp/ccd6kAw8.s 			page 6


 143              		.align	1
 144              		.global	DMA1_Stream1_IRQHandler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	DMA1_Stream1_IRQHandler:
 151              	.LFB137:
 156:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 157:Core/Src/stm32f4xx_it.c **** 
 158:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 160:Core/Src/stm32f4xx_it.c **** 
 161:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 162:Core/Src/stm32f4xx_it.c **** }
 163:Core/Src/stm32f4xx_it.c **** 
 164:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 165:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 166:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 167:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 168:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 169:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 170:Core/Src/stm32f4xx_it.c **** 
 171:Core/Src/stm32f4xx_it.c **** /**
 172:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 173:Core/Src/stm32f4xx_it.c ****   */
 174:Core/Src/stm32f4xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 175:Core/Src/stm32f4xx_it.c **** {
 152              		.loc 1 175 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		.loc 1 175 0
 157 0000 08B5     		push	{r3, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
 176:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 177:Core/Src/stm32f4xx_it.c **** 
 178:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 179:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim2_up_ch3);
 161              		.loc 1 179 0
 162 0002 0248     		ldr	r0, .L14
 163 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 164              	.LVL0:
 165 0008 08BD     		pop	{r3, pc}
 166              	.L15:
 167 000a 00BF     		.align	2
 168              	.L14:
 169 000c 00000000 		.word	hdma_tim2_up_ch3
 170              		.cfi_endproc
 171              	.LFE137:
 173              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 174              		.align	1
 175              		.global	DMA1_Stream5_IRQHandler
 176              		.syntax unified
 177              		.thumb
ARM GAS  /tmp/ccd6kAw8.s 			page 7


 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	DMA1_Stream5_IRQHandler:
 182              	.LFB138:
 180:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 181:Core/Src/stm32f4xx_it.c **** 
 182:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
 183:Core/Src/stm32f4xx_it.c **** }
 184:Core/Src/stm32f4xx_it.c **** 
 185:Core/Src/stm32f4xx_it.c **** /**
 186:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 187:Core/Src/stm32f4xx_it.c ****   */
 188:Core/Src/stm32f4xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 189:Core/Src/stm32f4xx_it.c **** {
 183              		.loc 1 189 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 08B5     		push	{r3, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 3, -8
 190              		.cfi_offset 14, -4
 190:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 191:Core/Src/stm32f4xx_it.c **** 
 192:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 193:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim2_ch1);
 191              		.loc 1 193 0
 192 0002 0248     		ldr	r0, .L18
 193 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 194              	.LVL1:
 195 0008 08BD     		pop	{r3, pc}
 196              	.L19:
 197 000a 00BF     		.align	2
 198              	.L18:
 199 000c 00000000 		.word	hdma_tim2_ch1
 200              		.cfi_endproc
 201              	.LFE138:
 203              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 204              		.align	1
 205              		.global	DMA1_Stream6_IRQHandler
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	DMA1_Stream6_IRQHandler:
 212              	.LFB139:
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 197:Core/Src/stm32f4xx_it.c **** }
 198:Core/Src/stm32f4xx_it.c **** 
 199:Core/Src/stm32f4xx_it.c **** /**
 200:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 201:Core/Src/stm32f4xx_it.c ****   */
 202:Core/Src/stm32f4xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 203:Core/Src/stm32f4xx_it.c **** {
 213              		.loc 1 203 0
ARM GAS  /tmp/ccd6kAw8.s 			page 8


 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 08B5     		push	{r3, lr}
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
 204:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 205:Core/Src/stm32f4xx_it.c **** 
 206:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 207:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim2_ch2_ch4);
 221              		.loc 1 207 0
 222 0002 0248     		ldr	r0, .L22
 223 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 224              	.LVL2:
 225 0008 08BD     		pop	{r3, pc}
 226              	.L23:
 227 000a 00BF     		.align	2
 228              	.L22:
 229 000c 00000000 		.word	hdma_tim2_ch2_ch4
 230              		.cfi_endproc
 231              	.LFE139:
 233              		.section	.text.CAN1_RX0_IRQHandler,"ax",%progbits
 234              		.align	1
 235              		.global	CAN1_RX0_IRQHandler
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv4-sp-d16
 241              	CAN1_RX0_IRQHandler:
 242              	.LFB140:
 208:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 209:Core/Src/stm32f4xx_it.c **** 
 210:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 211:Core/Src/stm32f4xx_it.c **** }
 212:Core/Src/stm32f4xx_it.c **** 
 213:Core/Src/stm32f4xx_it.c **** /**
 214:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN1 RX0 interrupts.
 215:Core/Src/stm32f4xx_it.c ****   */
 216:Core/Src/stm32f4xx_it.c **** void CAN1_RX0_IRQHandler(void)
 217:Core/Src/stm32f4xx_it.c **** {
 243              		.loc 1 217 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 08B5     		push	{r3, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 3, -8
 250              		.cfi_offset 14, -4
 218:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 0 */
 219:Core/Src/stm32f4xx_it.c **** 
 220:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 0 */
 221:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan1);
 251              		.loc 1 221 0
 252 0002 0248     		ldr	r0, .L26
 253 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 254              	.LVL3:
ARM GAS  /tmp/ccd6kAw8.s 			page 9


 255 0008 08BD     		pop	{r3, pc}
 256              	.L27:
 257 000a 00BF     		.align	2
 258              	.L26:
 259 000c 00000000 		.word	hcan1
 260              		.cfi_endproc
 261              	.LFE140:
 263              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 264              		.align	1
 265              		.global	TIM2_IRQHandler
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	TIM2_IRQHandler:
 272              	.LFB141:
 222:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN1_RX0_IRQn 1 */
 223:Core/Src/stm32f4xx_it.c **** 
 224:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN1_RX0_IRQn 1 */
 225:Core/Src/stm32f4xx_it.c **** }
 226:Core/Src/stm32f4xx_it.c **** 
 227:Core/Src/stm32f4xx_it.c **** /**
 228:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 229:Core/Src/stm32f4xx_it.c ****   */
 230:Core/Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 231:Core/Src/stm32f4xx_it.c **** {
 273              		.loc 1 231 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 08B5     		push	{r3, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
 232:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 233:Core/Src/stm32f4xx_it.c **** 
 234:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 235:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 281              		.loc 1 235 0
 282 0002 0248     		ldr	r0, .L30
 283 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 284              	.LVL4:
 285 0008 08BD     		pop	{r3, pc}
 286              	.L31:
 287 000a 00BF     		.align	2
 288              	.L30:
 289 000c 00000000 		.word	htim2
 290              		.cfi_endproc
 291              	.LFE141:
 293              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 294              		.align	1
 295              		.global	TIM7_IRQHandler
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv4-sp-d16
 301              	TIM7_IRQHandler:
ARM GAS  /tmp/ccd6kAw8.s 			page 10


 302              	.LFB142:
 236:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 237:Core/Src/stm32f4xx_it.c **** 
 238:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 239:Core/Src/stm32f4xx_it.c **** }
 240:Core/Src/stm32f4xx_it.c **** 
 241:Core/Src/stm32f4xx_it.c **** /**
 242:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 243:Core/Src/stm32f4xx_it.c ****   */
 244:Core/Src/stm32f4xx_it.c **** void TIM7_IRQHandler(void)
 245:Core/Src/stm32f4xx_it.c **** {
 303              		.loc 1 245 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 08B5     		push	{r3, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 3, -8
 310              		.cfi_offset 14, -4
 246:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 0 */
 247:Core/Src/stm32f4xx_it.c **** 
 248:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 0 */
 249:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 311              		.loc 1 249 0
 312 0002 0248     		ldr	r0, .L34
 313 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 314              	.LVL5:
 315 0008 08BD     		pop	{r3, pc}
 316              	.L35:
 317 000a 00BF     		.align	2
 318              	.L34:
 319 000c 00000000 		.word	htim7
 320              		.cfi_endproc
 321              	.LFE142:
 323              		.section	.text.CAN2_RX1_IRQHandler,"ax",%progbits
 324              		.align	1
 325              		.global	CAN2_RX1_IRQHandler
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv4-sp-d16
 331              	CAN2_RX1_IRQHandler:
 332              	.LFB143:
 250:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM7_IRQn 1 */
 251:Core/Src/stm32f4xx_it.c **** 
 252:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM7_IRQn 1 */
 253:Core/Src/stm32f4xx_it.c **** }
 254:Core/Src/stm32f4xx_it.c **** 
 255:Core/Src/stm32f4xx_it.c **** /**
 256:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN2 RX1 interrupt.
 257:Core/Src/stm32f4xx_it.c ****   */
 258:Core/Src/stm32f4xx_it.c **** void CAN2_RX1_IRQHandler(void)
 259:Core/Src/stm32f4xx_it.c **** {
 333              		.loc 1 259 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccd6kAw8.s 			page 11


 337 0000 08B5     		push	{r3, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 260:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX1_IRQn 0 */
 261:Core/Src/stm32f4xx_it.c **** 
 262:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX1_IRQn 0 */
 263:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan2);
 341              		.loc 1 263 0
 342 0002 0248     		ldr	r0, .L38
 343 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 344              	.LVL6:
 345 0008 08BD     		pop	{r3, pc}
 346              	.L39:
 347 000a 00BF     		.align	2
 348              	.L38:
 349 000c 00000000 		.word	hcan2
 350              		.cfi_endproc
 351              	.LFE143:
 353              		.section	.text.CAN3_RX0_IRQHandler,"ax",%progbits
 354              		.align	1
 355              		.global	CAN3_RX0_IRQHandler
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 359              		.fpu fpv4-sp-d16
 361              	CAN3_RX0_IRQHandler:
 362              	.LFB144:
 264:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN2_RX1_IRQn 1 */
 265:Core/Src/stm32f4xx_it.c **** 
 266:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN2_RX1_IRQn 1 */
 267:Core/Src/stm32f4xx_it.c **** }
 268:Core/Src/stm32f4xx_it.c **** 
 269:Core/Src/stm32f4xx_it.c **** /**
 270:Core/Src/stm32f4xx_it.c ****   * @brief This function handles CAN3 RX0 interrupts.
 271:Core/Src/stm32f4xx_it.c ****   */
 272:Core/Src/stm32f4xx_it.c **** void CAN3_RX0_IRQHandler(void)
 273:Core/Src/stm32f4xx_it.c **** {
 363              		.loc 1 273 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 08B5     		push	{r3, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 3, -8
 370              		.cfi_offset 14, -4
 274:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN CAN3_RX0_IRQn 0 */
 275:Core/Src/stm32f4xx_it.c **** 
 276:Core/Src/stm32f4xx_it.c ****   /* USER CODE END CAN3_RX0_IRQn 0 */
 277:Core/Src/stm32f4xx_it.c ****   HAL_CAN_IRQHandler(&hcan3);
 371              		.loc 1 277 0
 372 0002 0248     		ldr	r0, .L42
 373 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 374              	.LVL7:
 375 0008 08BD     		pop	{r3, pc}
 376              	.L43:
 377 000a 00BF     		.align	2
ARM GAS  /tmp/ccd6kAw8.s 			page 12


 378              	.L42:
 379 000c 00000000 		.word	hcan3
 380              		.cfi_endproc
 381              	.LFE144:
 383              		.comm	watchdogBits,1,1
 384              		.comm	chargerOn,1,1
 385              		.comm	BMS,492,4
 386              		.comm	busFault,4,4
 387              		.comm	txCycle3,4,4
 388              		.comm	txCycle2,4,4
 389              		.comm	txCycle,4,4
 390              		.comm	canMailbox3,4,4
 391              		.comm	canMailbox2,4,4
 392              		.comm	canMailbox,4,4
 393              		.comm	canRx3,8,4
 394              		.comm	canRx2,8,4
 395              		.comm	canRx,8,4
 396              		.comm	txMsgExt3,24,4
 397              		.comm	txMsg3,24,4
 398              		.comm	rxMsg3,28,4
 399              		.comm	txMsgExt2,24,4
 400              		.comm	txMsg2,24,4
 401              		.comm	rxMsg2,28,4
 402              		.comm	txMsgExt,24,4
 403              		.comm	txMsg,24,4
 404              		.comm	rxMsg,28,4
 405              		.comm	sf5,40,4
 406              		.comm	sf4,40,4
 407              		.comm	sf3,40,4
 408              		.comm	sf2,40,4
 409              		.comm	sf,40,4
 410              		.comm	hcan3,40,4
 411              		.comm	hcan2,40,4
 412              		.comm	hcan1,40,4
 413              		.text
 414              	.Letext0:
 415              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 416              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 417              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 418              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 419              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 420              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 421              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 422              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 423              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 424              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 425              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 426              		.file 13 "/usr/include/newlib/sys/lock.h"
 427              		.file 14 "/usr/include/newlib/sys/_types.h"
 428              		.file 15 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 429              		.file 16 "/usr/include/newlib/sys/reent.h"
 430              		.file 17 "Core/Inc/can_setup.h"
 431              		.file 18 "Core/Inc/bms.h"
ARM GAS  /tmp/ccd6kAw8.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccd6kAw8.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccd6kAw8.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccd6kAw8.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccd6kAw8.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccd6kAw8.s:61     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccd6kAw8.s:68     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccd6kAw8.s:82     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccd6kAw8.s:89     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccd6kAw8.s:103    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccd6kAw8.s:110    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccd6kAw8.s:124    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccd6kAw8.s:131    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccd6kAw8.s:143    .text.DMA1_Stream1_IRQHandler:0000000000000000 $t
     /tmp/ccd6kAw8.s:150    .text.DMA1_Stream1_IRQHandler:0000000000000000 DMA1_Stream1_IRQHandler
     /tmp/ccd6kAw8.s:169    .text.DMA1_Stream1_IRQHandler:000000000000000c $d
     /tmp/ccd6kAw8.s:174    .text.DMA1_Stream5_IRQHandler:0000000000000000 $t
     /tmp/ccd6kAw8.s:181    .text.DMA1_Stream5_IRQHandler:0000000000000000 DMA1_Stream5_IRQHandler
     /tmp/ccd6kAw8.s:199    .text.DMA1_Stream5_IRQHandler:000000000000000c $d
     /tmp/ccd6kAw8.s:204    .text.DMA1_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccd6kAw8.s:211    .text.DMA1_Stream6_IRQHandler:0000000000000000 DMA1_Stream6_IRQHandler
     /tmp/ccd6kAw8.s:229    .text.DMA1_Stream6_IRQHandler:000000000000000c $d
     /tmp/ccd6kAw8.s:234    .text.CAN1_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccd6kAw8.s:241    .text.CAN1_RX0_IRQHandler:0000000000000000 CAN1_RX0_IRQHandler
     /tmp/ccd6kAw8.s:259    .text.CAN1_RX0_IRQHandler:000000000000000c $d
                            *COM*:0000000000000028 hcan1
     /tmp/ccd6kAw8.s:264    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccd6kAw8.s:271    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccd6kAw8.s:289    .text.TIM2_IRQHandler:000000000000000c $d
     /tmp/ccd6kAw8.s:294    .text.TIM7_IRQHandler:0000000000000000 $t
     /tmp/ccd6kAw8.s:301    .text.TIM7_IRQHandler:0000000000000000 TIM7_IRQHandler
     /tmp/ccd6kAw8.s:319    .text.TIM7_IRQHandler:000000000000000c $d
     /tmp/ccd6kAw8.s:324    .text.CAN2_RX1_IRQHandler:0000000000000000 $t
     /tmp/ccd6kAw8.s:331    .text.CAN2_RX1_IRQHandler:0000000000000000 CAN2_RX1_IRQHandler
     /tmp/ccd6kAw8.s:349    .text.CAN2_RX1_IRQHandler:000000000000000c $d
                            *COM*:0000000000000028 hcan2
     /tmp/ccd6kAw8.s:354    .text.CAN3_RX0_IRQHandler:0000000000000000 $t
     /tmp/ccd6kAw8.s:361    .text.CAN3_RX0_IRQHandler:0000000000000000 CAN3_RX0_IRQHandler
     /tmp/ccd6kAw8.s:379    .text.CAN3_RX0_IRQHandler:000000000000000c $d
                            *COM*:0000000000000028 hcan3
                            *COM*:0000000000000001 watchdogBits
                            *COM*:0000000000000001 chargerOn
                            *COM*:00000000000001ec BMS
                            *COM*:0000000000000004 busFault
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000004 canMailbox3
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx3
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000018 txMsg3
                            *COM*:000000000000001c rxMsg3
ARM GAS  /tmp/ccd6kAw8.s 			page 14


                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_tim2_up_ch3
hdma_tim2_ch1
hdma_tim2_ch2_ch4
HAL_CAN_IRQHandler
HAL_TIM_IRQHandler
htim2
htim7
