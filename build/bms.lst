ARM GAS  /tmp/ccH7Cmgp.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bms.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.getSOC,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	getSOC:
  25              	.LFB139:
  26              		.file 1 "Core/Src/bms.c"
   1:Core/Src/bms.c **** #include "bms.h"
   2:Core/Src/bms.c **** #include "settings.h"
   3:Core/Src/bms.c **** #include "my_math.h"
   4:Core/Src/bms.c **** 
   5:Core/Src/bms.c **** static void getPackVolt(bms_t *bms);
   6:Core/Src/bms.c **** static void getAvgCellVolt(bms_t *bms);
   7:Core/Src/bms.c **** static void getLowCellVolt(bms_t *bms);
   8:Core/Src/bms.c **** static void getHighCellVolt(bms_t *bms);
   9:Core/Src/bms.c **** static void getCellDelta(bms_t *bms);
  10:Core/Src/bms.c **** static void getLowCellTemp(bms_t *bms);
  11:Core/Src/bms.c **** static void getHighCellTemp(bms_t *bms);
  12:Core/Src/bms.c **** static void getAvgCellTemp(bms_t *bms);
  13:Core/Src/bms.c **** static void getTempDelta(bms_t *bms);
  14:Core/Src/bms.c **** static void getCellCount(bms_t *bms, int pack);
  15:Core/Src/bms.c **** static void getSOC(bms_t *bms);
  16:Core/Src/bms.c **** 
  17:Core/Src/bms.c **** enum
  18:Core/Src/bms.c **** {
  19:Core/Src/bms.c ****     Boot,
  20:Core/Src/bms.c ****     Ready,
  21:Core/Src/bms.c ****     Drive,
  22:Core/Src/bms.c ****     Charge,
  23:Core/Src/bms.c ****     Error
  24:Core/Src/bms.c **** };
  25:Core/Src/bms.c **** 
  26:Core/Src/bms.c **** enum
  27:Core/Src/bms.c **** {
  28:Core/Src/bms.c ****     off,
  29:Core/Src/bms.c ****     on, //key on, inverter off
  30:Core/Src/bms.c ****     charge_keyOff,
  31:Core/Src/bms.c ****     charge_keyOn, //who even does that
  32:Core/Src/bms.c ****     idle,         //key on, inverter on
ARM GAS  /tmp/ccH7Cmgp.s 			page 2


  33:Core/Src/bms.c ****     run,          //key on direction selected
  34:Core/Src/bms.c ****     launchMode,   //break shit
  35:Core/Src/bms.c ****     burnout,      //destroy tires
  36:Core/Src/bms.c **** };
  37:Core/Src/bms.c **** 
  38:Core/Src/bms.c **** /*/SOC filtering
  39:Core/Src/bms.c **** static const int numReadings = 10;
  40:Core/Src/bms.c **** static int readings[10];  // the readings from the analog input
  41:Core/Src/bms.c **** static int readIndex = 0; // the index of the current reading
  42:Core/Src/bms.c **** static int total = 0;     // the running total
  43:Core/Src/bms.c **** static int average = 0;   // the average
  44:Core/Src/bms.c **** */
  45:Core/Src/bms.c **** 
  46:Core/Src/bms.c **** static const uint8_t balanceByte[96] =
  47:Core/Src/bms.c ****     {0, 0, 0, 0, 0, 0,
  48:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  49:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2, 2, 2,
  50:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3, 3, 3,
  51:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4, 4, 4,
  52:Core/Src/bms.c ****      5, 5, 5, 5, 5, 5, 5, 5,
  53:Core/Src/bms.c ****      6, 6, 6, 6, 6, 6, 6, 6,
  54:Core/Src/bms.c ****      7, 7, 7, 7, 7, 7, 7, 7,
  55:Core/Src/bms.c ****      0, 0, 0, 0, 0, 0, 0, 0,
  56:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  57:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2,
  58:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3,
  59:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4};
  60:Core/Src/bms.c **** 
  61:Core/Src/bms.c **** 
  62:Core/Src/bms.c ****     static const uint8_t balanceShift[96] =
  63:Core/Src/bms.c ****     {0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  64:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  65:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  66:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  67:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  68:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  69:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  70:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  71:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  72:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  73:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  74:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  75:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,};
  76:Core/Src/bms.c **** 
  77:Core/Src/bms.c **** // Initialize BMS //////////////////////////////////////////////////////////////////
  78:Core/Src/bms.c **** void initBMS(void)
  79:Core/Src/bms.c **** {
  80:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
  81:Core/Src/bms.c ****     {
  82:Core/Src/bms.c ****         BMS[i].state = Boot;
  83:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
  84:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
  85:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
  86:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
  87:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
  88:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
  89:Core/Src/bms.c ****         BMS[i].packVolt = 0;
ARM GAS  /tmp/ccH7Cmgp.s 			page 3


  90:Core/Src/bms.c ****         BMS[i].SOC = 0;
  91:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
  92:Core/Src/bms.c **** 
  93:Core/Src/bms.c ****         for (size_t j = 0; j < 96; j++)
  94:Core/Src/bms.c ****         {
  95:Core/Src/bms.c ****             BMS[i].cellVolt[j] = 0; 
  96:Core/Src/bms.c ****         }
  97:Core/Src/bms.c **** 
  98:Core/Src/bms.c ****         for (size_t j = 0; j < 16; j++)
  99:Core/Src/bms.c ****         {
 100:Core/Src/bms.c ****             BMS[i].tempSensor[j] = 0; 
 101:Core/Src/bms.c ****         }
 102:Core/Src/bms.c ****     }
 103:Core/Src/bms.c ****     vechicleState = off;
 104:Core/Src/bms.c ****     charged = false;
 105:Core/Src/bms.c **** }
 106:Core/Src/bms.c **** 
 107:Core/Src/bms.c **** // Primary State Machine ///////////////////////////////////////////////////////////////
 108:Core/Src/bms.c **** void bmsStateHandler(bms_t *bms)
 109:Core/Src/bms.c **** {
 110:Core/Src/bms.c ****     switch (bms->state)
 111:Core/Src/bms.c ****     {
 112:Core/Src/bms.c ****     case Boot:
 113:Core/Src/bms.c ****         bms->chargeRequest = 0;
 114:Core/Src/bms.c ****         bms->state = Ready;
 115:Core/Src/bms.c ****         break;
 116:Core/Src/bms.c **** 
 117:Core/Src/bms.c ****     case Ready:
 118:Core/Src/bms.c ****         bms->chargeRequest = 0;
 119:Core/Src/bms.c **** 
 120:Core/Src/bms.c ****         if (bms->avgCellVolt > BALANCE_VOLTAGE)
 121:Core/Src/bms.c ****         {
 122:Core/Src/bms.c ****             if ((bms->highCellVolt - bms->lowCellVolt) > (BALANCE_HYS)) 
 123:Core/Src/bms.c ****             {
 124:Core/Src/bms.c ****                 bms->balancecells = true;
 125:Core/Src/bms.c ****             }
 126:Core/Src/bms.c **** 
 127:Core/Src/bms.c ****             else if ((bms->highCellVolt - bms->lowCellVolt) <= BALANCE_HYS)
 128:Core/Src/bms.c ****             {
 129:Core/Src/bms.c ****                 bms->balancecells = false;
 130:Core/Src/bms.c ****             }
 131:Core/Src/bms.c ****         }
 132:Core/Src/bms.c ****         else
 133:Core/Src/bms.c ****         {
 134:Core/Src/bms.c ****             bms->balancecells = false;
 135:Core/Src/bms.c ****         }
 136:Core/Src/bms.c **** 
 137:Core/Src/bms.c ****         if (bms->highCellVolt < (CHARGE_V_SETPOINT - CHARGE_HYS))
 138:Core/Src/bms.c ****         {
 139:Core/Src/bms.c ****             bms->state = Charge;
 140:Core/Src/bms.c ****         }
 141:Core/Src/bms.c **** 
 142:Core/Src/bms.c ****         if (vechicleState != off) //idle || run)
 143:Core/Src/bms.c ****         {
 144:Core/Src/bms.c ****             bms->balancecells = false;
 145:Core/Src/bms.c ****             bms->state = Drive;
 146:Core/Src/bms.c ****         }
ARM GAS  /tmp/ccH7Cmgp.s 			page 4


 147:Core/Src/bms.c ****         break;
 148:Core/Src/bms.c **** 
 149:Core/Src/bms.c ****     case Drive:
 150:Core/Src/bms.c **** 
 151:Core/Src/bms.c ****         if (vechicleState == off)
 152:Core/Src/bms.c ****         {
 153:Core/Src/bms.c ****             bms->state = Ready;
 154:Core/Src/bms.c ****         }
 155:Core/Src/bms.c ****         break;
 156:Core/Src/bms.c **** 
 157:Core/Src/bms.c ****     case Charge:
 158:Core/Src/bms.c ****         bms->balancecells = false;
 159:Core/Src/bms.c ****         bms->chargeRequest = 1;
 160:Core/Src/bms.c **** 
 161:Core/Src/bms.c ****         if (bms->highCellVolt > CHARGE_V_SETPOINT || bms->highCellTemp > OVER_T_SETPOINT)
 162:Core/Src/bms.c ****         {
 163:Core/Src/bms.c ****             if (bms->avgCellVolt > CHARGE_V_SETPOINT - BALANCE_HYS)
 164:Core/Src/bms.c ****             {
 165:Core/Src/bms.c ****                 //SOC charged func
 166:Core/Src/bms.c ****             }
 167:Core/Src/bms.c ****             else
 168:Core/Src/bms.c ****             {
 169:Core/Src/bms.c ****                 //SOC charged func
 170:Core/Src/bms.c ****             }
 171:Core/Src/bms.c ****             bms->chargeRequest = 0;
 172:Core/Src/bms.c ****             bms->state = Ready;
 173:Core/Src/bms.c ****         }
 174:Core/Src/bms.c **** 
 175:Core/Src/bms.c ****         if (charged)
 176:Core/Src/bms.c ****         {
 177:Core/Src/bms.c ****             bms->chargeRequest = 0;
 178:Core/Src/bms.c ****             bms->state = Ready;
 179:Core/Src/bms.c ****         }
 180:Core/Src/bms.c **** 
 181:Core/Src/bms.c ****         break;
 182:Core/Src/bms.c **** 
 183:Core/Src/bms.c ****     case Error:
 184:Core/Src/bms.c ****         bms->chargeRequest = 0;
 185:Core/Src/bms.c **** 
 186:Core/Src/bms.c ****         if (bms->lowCellVolt > UNDER_V_SETPOINT && bms->highCellVolt < OVER_V_SETPOINT)
 187:Core/Src/bms.c ****         {
 188:Core/Src/bms.c ****             bms->state = Ready;
 189:Core/Src/bms.c ****         }
 190:Core/Src/bms.c ****         break;
 191:Core/Src/bms.c **** 
 192:Core/Src/bms.c ****     default:
 193:Core/Src/bms.c ****         break;
 194:Core/Src/bms.c ****     }
 195:Core/Src/bms.c **** }
 196:Core/Src/bms.c **** 
 197:Core/Src/bms.c **** // 10kw Tesla Charger /////////////////////////////////////////////////////////////////////
 198:Core/Src/bms.c **** void acChargeCommand(void)
 199:Core/Src/bms.c **** {
 200:Core/Src/bms.c ****     uint8_t canTx2[8];
 201:Core/Src/bms.c ****     if (BMS[0].chargeRequest && BMS[1].chargeRequest)
 202:Core/Src/bms.c ****     {
 203:Core/Src/bms.c ****         charged = false;
ARM GAS  /tmp/ccH7Cmgp.s 			page 5


 204:Core/Src/bms.c ****         int val = 32;
 205:Core/Src/bms.c ****         //txMsg2.StdId = 0x605; //set parameter ID
 206:Core/Src/bms.c ****         //txMsg2.DLC = 8;
 207:Core/Src/bms.c ****         canTx2[0] = 0x40;
 208:Core/Src/bms.c ****         canTx2[1] = 0x00;
 209:Core/Src/bms.c ****         canTx2[2] = 0x20;
 210:Core/Src/bms.c ****         canTx2[3] = 9;
 211:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 212:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 213:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 214:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 215:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 216:Core/Src/bms.c ****         can2tx(0x605,8,canTx2);
 217:Core/Src/bms.c ****     }
 218:Core/Src/bms.c **** 
 219:Core/Src/bms.c ****     if (!BMS[0].chargeRequest || !BMS[1].chargeRequest)
 220:Core/Src/bms.c ****     {
 221:Core/Src/bms.c ****         int val = 0;
 222:Core/Src/bms.c ****         //txMsg2.StdId = 0x605; //set parameter ID
 223:Core/Src/bms.c ****         //txMsg2.DLC = 8;
 224:Core/Src/bms.c ****         canTx2[0] = 0x40;
 225:Core/Src/bms.c ****         canTx2[1] = 0x00;
 226:Core/Src/bms.c ****         canTx2[2] = 0x20;
 227:Core/Src/bms.c ****         canTx2[3] = 9;
 228:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 229:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 230:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 231:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 232:Core/Src/bms.c ****         can2tx(0x605,8,canTx2);
 233:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 234:Core/Src/bms.c ****         charged = true;
 235:Core/Src/bms.c ****     }
 236:Core/Src/bms.c **** }
 237:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 238:Core/Src/bms.c **** void tx500kData(void)
 239:Core/Src/bms.c **** {
 240:Core/Src/bms.c **** 
 241:Core/Src/bms.c ****     //txMsg2.StdId = 0x138; //BMS1
 242:Core/Src/bms.c ****     //txMsg2.DLC = 8;
 243:Core/Src/bms.c ****     uint8_t bms0[8];
 244:Core/Src/bms.c ****     bms0[0] = BMS[0].packVolt & 0xFF;
 245:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 246:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 247:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 248:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 249:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 250:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 251:Core/Src/bms.c ****     bms0[7] = 0;
 252:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 253:Core/Src/bms.c **** 
 254:Core/Src/bms.c ****     //txMsg2.StdId = 0x139; //BMS2
 255:Core/Src/bms.c ****     //txMsg2.DLC = 8;
 256:Core/Src/bms.c ****     uint8_t bms1[8];
 257:Core/Src/bms.c ****     bms1[0] = BMS[1].packVolt & 0xFF;
 258:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 259:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 260:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
ARM GAS  /tmp/ccH7Cmgp.s 			page 6


 261:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 262:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 263:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 264:Core/Src/bms.c ****     bms1[7] = 0;
 265:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 266:Core/Src/bms.c ****     //c2tx(&txMsg2, canTx2);
 267:Core/Src/bms.c **** }
 268:Core/Src/bms.c **** 
 269:Core/Src/bms.c **** void refreshData(void)
 270:Core/Src/bms.c **** {
 271:Core/Src/bms.c **** 
 272:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 273:Core/Src/bms.c ****     {
 274:Core/Src/bms.c ****         requestBICMdata(&BMS[i]);
 275:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 276:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 277:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 278:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 279:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 280:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 281:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 282:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 283:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 284:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 285:Core/Src/bms.c ****         getSOC(&BMS[i]);
 286:Core/Src/bms.c ****         acChargeCommand();
 287:Core/Src/bms.c ****     }
 288:Core/Src/bms.c **** }
 289:Core/Src/bms.c **** 
 290:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 291:Core/Src/bms.c **** void sendCommand(void)
 292:Core/Src/bms.c **** {
 293:Core/Src/bms.c ****     uint8_t canTx[8];
 294:Core/Src/bms.c ****     //txMsg.StdId = 0x200;
 295:Core/Src/bms.c ****     //txMsg.DLC = 3;
 296:Core/Src/bms.c ****     canTx[0] = 0x02;
 297:Core/Src/bms.c ****     canTx[1] = 0x00;
 298:Core/Src/bms.c ****     canTx[2] = 0x00;
 299:Core/Src/bms.c ****     can1tx(0x200,3,canTx);
 300:Core/Src/bms.c ****     //c1tx(&txMsg, canTx); //pack 1
 301:Core/Src/bms.c **** 
 302:Core/Src/bms.c ****     uint8_t canTx3[8];
 303:Core/Src/bms.c ****     //txMsg3.StdId = 0x200;
 304:Core/Src/bms.c ****     //txMsg3.DLC = 3;
 305:Core/Src/bms.c ****     canTx3[0] = 0x02;
 306:Core/Src/bms.c ****     canTx3[1] = 0x00;
 307:Core/Src/bms.c ****     canTx3[2] = 0x00;
 308:Core/Src/bms.c ****     can3tx(0x200,3,canTx3);
 309:Core/Src/bms.c ****     //c3tx(&txMsg3, canTx3); // pack 2
 310:Core/Src/bms.c **** }
 311:Core/Src/bms.c **** 
 312:Core/Src/bms.c **** void requestBICMdata(bms_t *bms)
 313:Core/Src/bms.c **** {
 314:Core/Src/bms.c ****     sendCommand();
 315:Core/Src/bms.c ****     uint8_t canTx[8];
 316:Core/Src/bms.c ****     if (!bms->balancecells)
 317:Core/Src/bms.c ****     {
ARM GAS  /tmp/ccH7Cmgp.s 			page 7


 318:Core/Src/bms.c **** 
 319:Core/Src/bms.c ****         //txMsg.StdId = 0x300;
 320:Core/Src/bms.c ****         //txMsg.DLC = 8;
 321:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 322:Core/Src/bms.c ****         {
 323:Core/Src/bms.c ****             canTx[i] = 0x00;
 324:Core/Src/bms.c ****         }
 325:Core/Src/bms.c ****         can1tx(0x300,8,canTx);
 326:Core/Src/bms.c ****         can3tx(0x300,8,canTx);
 327:Core/Src/bms.c ****         //c1tx(&txMsg, canTx); //pack 1
 328:Core/Src/bms.c **** 
 329:Core/Src/bms.c ****         //txMsg.StdId = 0x310;
 330:Core/Src/bms.c ****         //txMsg.DLC = 5;
 331:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 332:Core/Src/bms.c ****         {
 333:Core/Src/bms.c ****             canTx[i] = 0x00;
 334:Core/Src/bms.c ****         }
 335:Core/Src/bms.c ****         can1tx(0x310,5,canTx);
 336:Core/Src/bms.c ****         can3tx(0x310,5,canTx);
 337:Core/Src/bms.c ****         //c1tx(&txMsg, canTx); //pack 1
 338:Core/Src/bms.c ****     }
 339:Core/Src/bms.c ****     /*
 340:Core/Src/bms.c ****     uint8_t canTx3[8];
 341:Core/Src/bms.c ****     if (!bms->balancecells)
 342:Core/Src/bms.c ****     {
 343:Core/Src/bms.c ****         txMsg3.StdId = 0x300;
 344:Core/Src/bms.c ****         txMsg3.DLC = 8;
 345:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 346:Core/Src/bms.c ****         {
 347:Core/Src/bms.c ****             canTx3[i] = 0x00;
 348:Core/Src/bms.c ****         }
 349:Core/Src/bms.c ****         c3tx(&txMsg3, canTx3); //pack 2
 350:Core/Src/bms.c **** 
 351:Core/Src/bms.c ****         txMsg3.StdId = 0x310;
 352:Core/Src/bms.c ****         txMsg3.DLC = 5;
 353:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 354:Core/Src/bms.c ****         {
 355:Core/Src/bms.c ****             canTx3[i] = 0x00;
 356:Core/Src/bms.c ****         }
 357:Core/Src/bms.c ****         c3tx(&txMsg3, canTx3); //pack 2
 358:Core/Src/bms.c ****     }
 359:Core/Src/bms.c ****     */
 360:Core/Src/bms.c **** }
 361:Core/Src/bms.c **** 
 362:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 363:Core/Src/bms.c **** void balanceCommand(bms_t *bms, int pack)
 364:Core/Src/bms.c **** {
 365:Core/Src/bms.c ****     uint8_t canTx[8];
 366:Core/Src/bms.c ****     if (pack == 0)
 367:Core/Src/bms.c ****     {
 368:Core/Src/bms.c ****         //txMsg.StdId = 0x300;
 369:Core/Src/bms.c ****         //txMsg.DLC = 8;
 370:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 371:Core/Src/bms.c ****         {
 372:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 373:Core/Src/bms.c ****             {
 374:Core/Src/bms.c ****                 canTx[balanceByte[i]] |= balanceShift[i];
ARM GAS  /tmp/ccH7Cmgp.s 			page 8


 375:Core/Src/bms.c ****             }
 376:Core/Src/bms.c ****         }
 377:Core/Src/bms.c ****         can1tx(0x300,8,canTx);
 378:Core/Src/bms.c ****         //c1tx(&txMsg, canTx);
 379:Core/Src/bms.c **** 
 380:Core/Src/bms.c ****         //txMsg.StdId = 0x310;
 381:Core/Src/bms.c ****         //txMsg.DLC = 5;
 382:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 383:Core/Src/bms.c ****         {
 384:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 385:Core/Src/bms.c ****             {
 386:Core/Src/bms.c ****                 canTx[balanceByte[i]] |= balanceShift[i];
 387:Core/Src/bms.c ****             }
 388:Core/Src/bms.c ****         }
 389:Core/Src/bms.c ****         can1tx(0x310,5,canTx);
 390:Core/Src/bms.c ****         //c1tx(&txMsg, canTx);
 391:Core/Src/bms.c ****     }
 392:Core/Src/bms.c **** 
 393:Core/Src/bms.c ****     uint8_t canTx3[8];
 394:Core/Src/bms.c ****     if (pack == 1)
 395:Core/Src/bms.c ****     {
 396:Core/Src/bms.c ****         //txMsg3.StdId = 0x300;
 397:Core/Src/bms.c ****         //txMsg3.DLC = 8;
 398:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 399:Core/Src/bms.c ****         {
 400:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 401:Core/Src/bms.c ****             {
 402:Core/Src/bms.c ****                 canTx3[balanceByte[i]] |= balanceShift[i];
 403:Core/Src/bms.c ****             }
 404:Core/Src/bms.c ****         }
 405:Core/Src/bms.c ****         can3tx(0x300,8,canTx3);
 406:Core/Src/bms.c ****         //c3tx(&txMsg3, canTx3);
 407:Core/Src/bms.c **** 
 408:Core/Src/bms.c ****         //txMsg3.StdId = 0x310;
 409:Core/Src/bms.c ****         //txMsg3.DLC = 5;
 410:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 411:Core/Src/bms.c ****         {
 412:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 413:Core/Src/bms.c ****             {
 414:Core/Src/bms.c ****                 canTx3[balanceByte[i]] |= balanceShift[i];
 415:Core/Src/bms.c ****             }
 416:Core/Src/bms.c ****         }
 417:Core/Src/bms.c ****         can3tx(0x310,5,canTx3);
 418:Core/Src/bms.c ****         //c3tx(&txMsg3, canTx3);
 419:Core/Src/bms.c ****     }
 420:Core/Src/bms.c **** }
 421:Core/Src/bms.c **** 
 422:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 423:Core/Src/bms.c **** void getSOC(bms_t *bms)
 424:Core/Src/bms.c **** {
  27              		.loc 1 424 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 425:Core/Src/bms.c ****     bms->SOC = MAP(bms->avgCellVolt, SOC_VOLT_10, SOC_VOLT_90, 10, 90);
ARM GAS  /tmp/ccH7Cmgp.s 			page 9


  33              		.loc 1 425 0
  34 0000 B0F8E620 		ldrh	r2, [r0, #230]
  35 0004 A2F61C42 		subw	r2, r2, #3100
  36 0008 02EB8202 		add	r2, r2, r2, lsl #2
  37 000c 1301     		lsls	r3, r2, #4
  38 000e 054A     		ldr	r2, .L2
  39 0010 82FB0312 		smull	r1, r2, r2, r3
  40 0014 DB17     		asrs	r3, r3, #31
  41 0016 C3EBA213 		rsb	r3, r3, r2, asr #6
  42 001a 0A33     		adds	r3, r3, #10
  43 001c 80F8F330 		strb	r3, [r0, #243]
  44 0020 7047     		bx	lr
  45              	.L3:
  46 0022 00BF     		.align	2
  47              	.L2:
  48 0024 D34D6210 		.word	274877907
  49              		.cfi_endproc
  50              	.LFE139:
  52              		.section	.text.getHighCellVolt,"ax",%progbits
  53              		.align	1
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	getHighCellVolt:
  60              	.LFB140:
 426:Core/Src/bms.c ****     /*
 427:Core/Src/bms.c ****     // subtract the last reading:
 428:Core/Src/bms.c ****     total = total - readings[readIndex];
 429:Core/Src/bms.c ****     // read from the sensor:
 430:Core/Src/bms.c ****     readings[readIndex] = bms->SOC;
 431:Core/Src/bms.c ****     // add the reading to the total:
 432:Core/Src/bms.c ****     total = total + readings[readIndex];
 433:Core/Src/bms.c ****     // advance to the next position in the array:
 434:Core/Src/bms.c ****     readIndex = readIndex + 1;
 435:Core/Src/bms.c ****     // if we're at the end of the array...
 436:Core/Src/bms.c ****     if (readIndex >= numReadings)
 437:Core/Src/bms.c ****     {
 438:Core/Src/bms.c ****         // ...wrap around to the beginning:
 439:Core/Src/bms.c ****         readIndex = 0;
 440:Core/Src/bms.c ****     }
 441:Core/Src/bms.c ****     // calculate the average:
 442:Core/Src/bms.c ****     average = total / numReadings;
 443:Core/Src/bms.c ****     */
 444:Core/Src/bms.c **** }
 445:Core/Src/bms.c **** 
 446:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 447:Core/Src/bms.c **** void getHighCellVolt(bms_t *bms)
 448:Core/Src/bms.c **** {
  61              		.loc 1 448 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL1:
 449:Core/Src/bms.c ****     bms->highCellVolt = 0;
  67              		.loc 1 449 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 10


  68 0000 0023     		movs	r3, #0
  69 0002 A0F8E430 		strh	r3, [r0, #228]	@ movhi
  70              	.LVL2:
  71              	.LBB2:
 450:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
  72              		.loc 1 450 0
  73 0006 00E0     		b	.L5
  74              	.LVL3:
  75              	.L6:
  76              		.loc 1 450 0 is_stmt 0 discriminator 2
  77 0008 0133     		adds	r3, r3, #1
  78              	.LVL4:
  79              	.L5:
  80              		.loc 1 450 0 discriminator 1
  81 000a 5F2B     		cmp	r3, #95
  82 000c 08D8     		bhi	.L8
 451:Core/Src/bms.c ****     {
 452:Core/Src/bms.c ****         if (bms->cellVolt[i] > bms->highCellVolt)
  83              		.loc 1 452 0 is_stmt 1
  84 000e 30F81320 		ldrh	r2, [r0, r3, lsl #1]
  85 0012 B0F8E410 		ldrh	r1, [r0, #228]
  86 0016 8A42     		cmp	r2, r1
  87 0018 F6D9     		bls	.L6
 453:Core/Src/bms.c ****         {
 454:Core/Src/bms.c ****             bms->highCellVolt = bms->cellVolt[i];
  88              		.loc 1 454 0
  89 001a A0F8E420 		strh	r2, [r0, #228]	@ movhi
  90 001e F3E7     		b	.L6
  91              	.L8:
  92              	.LBE2:
 455:Core/Src/bms.c ****         }
 456:Core/Src/bms.c ****     }
 457:Core/Src/bms.c **** }
  93              		.loc 1 457 0
  94 0020 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE140:
  98              		.section	.text.getHighCellTemp,"ax",%progbits
  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu fpv4-sp-d16
 105              	getHighCellTemp:
 106              	.LFB141:
 458:Core/Src/bms.c **** 
 459:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 460:Core/Src/bms.c **** void getHighCellTemp(bms_t *bms)
 461:Core/Src/bms.c **** {
 107              		.loc 1 461 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112              	.LVL5:
 462:Core/Src/bms.c ****     bms->highCellTemp = 0;
 113              		.loc 1 462 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 11


 114 0000 0023     		movs	r3, #0
 115 0002 A0F8EA30 		strh	r3, [r0, #234]	@ movhi
 116              	.LVL6:
 117              	.LBB3:
 463:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 118              		.loc 1 463 0
 119 0006 00E0     		b	.L10
 120              	.LVL7:
 121              	.L11:
 122              		.loc 1 463 0 is_stmt 0 discriminator 2
 123 0008 0133     		adds	r3, r3, #1
 124              	.LVL8:
 125              	.L10:
 126              		.loc 1 463 0 discriminator 1
 127 000a 0F2B     		cmp	r3, #15
 128 000c 0AD8     		bhi	.L13
 464:Core/Src/bms.c ****     {
 465:Core/Src/bms.c ****         if (bms->tempSensor[i] > bms->highCellTemp)
 129              		.loc 1 465 0 is_stmt 1
 130 000e 03F16002 		add	r2, r3, #96
 131 0012 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 132 0016 B0F8EA10 		ldrh	r1, [r0, #234]
 133 001a 8A42     		cmp	r2, r1
 134 001c F4D9     		bls	.L11
 466:Core/Src/bms.c ****         {
 467:Core/Src/bms.c ****             bms->highCellTemp = bms->tempSensor[i];
 135              		.loc 1 467 0
 136 001e A0F8EA20 		strh	r2, [r0, #234]	@ movhi
 137 0022 F1E7     		b	.L11
 138              	.L13:
 139              	.LBE3:
 468:Core/Src/bms.c ****         }
 469:Core/Src/bms.c ****     }
 470:Core/Src/bms.c **** }
 140              		.loc 1 470 0
 141 0024 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE141:
 145              		.section	.text.getLowCellTemp,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	getLowCellTemp:
 153              	.LFB142:
 471:Core/Src/bms.c **** 
 472:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 473:Core/Src/bms.c **** void getLowCellTemp(bms_t *bms)
 474:Core/Src/bms.c **** {
 154              		.loc 1 474 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              	.LVL9:
 475:Core/Src/bms.c ****     bms->lowCellTemp = 20000;
ARM GAS  /tmp/ccH7Cmgp.s 			page 12


 160              		.loc 1 475 0
 161 0000 44F62063 		movw	r3, #20000
 162 0004 A0F8EC30 		strh	r3, [r0, #236]	@ movhi
 163              	.LVL10:
 164              	.LBB4:
 476:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 165              		.loc 1 476 0
 166 0008 0023     		movs	r3, #0
 167 000a 00E0     		b	.L15
 168              	.LVL11:
 169              	.L16:
 170              		.loc 1 476 0 is_stmt 0 discriminator 2
 171 000c 0133     		adds	r3, r3, #1
 172              	.LVL12:
 173              	.L15:
 174              		.loc 1 476 0 discriminator 1
 175 000e 0F2B     		cmp	r3, #15
 176 0010 0CD8     		bhi	.L18
 477:Core/Src/bms.c ****     {
 478:Core/Src/bms.c ****         if (bms->tempSensor[i] > 0)
 177              		.loc 1 478 0 is_stmt 1
 178 0012 03F16002 		add	r2, r3, #96
 179 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 180 001a 002A     		cmp	r2, #0
 181 001c F6D0     		beq	.L16
 479:Core/Src/bms.c ****         {
 480:Core/Src/bms.c ****             if (bms->tempSensor[i] < bms->lowCellTemp)
 182              		.loc 1 480 0
 183 001e B0F8EC10 		ldrh	r1, [r0, #236]
 184 0022 8A42     		cmp	r2, r1
 185 0024 F2D2     		bcs	.L16
 481:Core/Src/bms.c ****             {
 482:Core/Src/bms.c ****                 bms->lowCellTemp = bms->tempSensor[i];
 186              		.loc 1 482 0
 187 0026 A0F8EC20 		strh	r2, [r0, #236]	@ movhi
 188 002a EFE7     		b	.L16
 189              	.L18:
 190              	.LBE4:
 483:Core/Src/bms.c ****             }
 484:Core/Src/bms.c ****         }
 485:Core/Src/bms.c ****     }
 486:Core/Src/bms.c **** }
 191              		.loc 1 486 0
 192 002c 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE142:
 196              		.section	.text.getAvgCellTemp,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	getAvgCellTemp:
 204              	.LFB143:
 487:Core/Src/bms.c **** 
 488:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 489:Core/Src/bms.c **** void getAvgCellTemp(bms_t *bms)
ARM GAS  /tmp/ccH7Cmgp.s 			page 13


 490:Core/Src/bms.c **** {
 205              		.loc 1 490 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL13:
 211 0000 10B4     		push	{r4}
 212              	.LCFI0:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 4, -4
 215              	.LVL14:
 216              	.LBB5:
 491:Core/Src/bms.c ****     int zeroCounter = 0;
 492:Core/Src/bms.c ****     int sumTemp = 0;
 493:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 217              		.loc 1 493 0
 218 0002 0023     		movs	r3, #0
 219              	.LBE5:
 492:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 220              		.loc 1 492 0
 221 0004 1946     		mov	r1, r3
 491:Core/Src/bms.c ****     int zeroCounter = 0;
 222              		.loc 1 491 0
 223 0006 1C46     		mov	r4, r3
 224              	.LBB6:
 225              		.loc 1 493 0
 226 0008 01E0     		b	.L20
 227              	.LVL15:
 228              	.L21:
 494:Core/Src/bms.c ****     {
 495:Core/Src/bms.c ****         if (bms->tempSensor[i] == 0) //IGNORE_TEMP)
 496:Core/Src/bms.c ****         {
 497:Core/Src/bms.c ****             zeroCounter++;
 498:Core/Src/bms.c ****         }
 499:Core/Src/bms.c **** 
 500:Core/Src/bms.c ****         sumTemp += bms->tempSensor[i];
 229              		.loc 1 500 0 discriminator 2
 230 000a 1144     		add	r1, r1, r2
 231              	.LVL16:
 493:Core/Src/bms.c ****     {
 232              		.loc 1 493 0 discriminator 2
 233 000c 0133     		adds	r3, r3, #1
 234              	.LVL17:
 235              	.L20:
 493:Core/Src/bms.c ****     {
 236              		.loc 1 493 0 is_stmt 0 discriminator 1
 237 000e 0F2B     		cmp	r3, #15
 238 0010 07D8     		bhi	.L24
 495:Core/Src/bms.c ****         {
 239              		.loc 1 495 0 is_stmt 1
 240 0012 03F16002 		add	r2, r3, #96
 241 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 242 001a 002A     		cmp	r2, #0
 243 001c F5D1     		bne	.L21
 497:Core/Src/bms.c ****         }
 244              		.loc 1 497 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 14


 245 001e 0134     		adds	r4, r4, #1
 246              	.LVL18:
 247 0020 F3E7     		b	.L21
 248              	.L24:
 249              	.LBE6:
 501:Core/Src/bms.c ****     }
 502:Core/Src/bms.c ****     bms->avgCellTemp = (sumTemp / (16 - zeroCounter));
 250              		.loc 1 502 0
 251 0022 C4F11004 		rsb	r4, r4, #16
 252              	.LVL19:
 253 0026 91FBF4F1 		sdiv	r1, r1, r4
 254              	.LVL20:
 255 002a A0F8EE10 		strh	r1, [r0, #238]	@ movhi
 503:Core/Src/bms.c **** }
 256              		.loc 1 503 0
 257 002e 5DF8044B 		ldr	r4, [sp], #4
 258              	.LCFI1:
 259              		.cfi_restore 4
 260              		.cfi_def_cfa_offset 0
 261 0032 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE143:
 265              		.section	.text.getTempDelta,"ax",%progbits
 266              		.align	1
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv4-sp-d16
 272              	getTempDelta:
 273              	.LFB144:
 504:Core/Src/bms.c **** 
 505:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 506:Core/Src/bms.c **** void getTempDelta(bms_t *bms)
 507:Core/Src/bms.c **** {
 274              		.loc 1 507 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              	.LVL21:
 508:Core/Src/bms.c ****     bms->tempDelta = bms->highCellTemp - bms->lowCellTemp;
 280              		.loc 1 508 0
 281 0000 B0F8EA30 		ldrh	r3, [r0, #234]
 282 0004 B0F8EC20 		ldrh	r2, [r0, #236]
 283 0008 9B1A     		subs	r3, r3, r2
 284 000a A0F8F030 		strh	r3, [r0, #240]	@ movhi
 285 000e 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE144:
 289              		.section	.text.getCellDelta,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	getCellDelta:
 297              	.LFB145:
ARM GAS  /tmp/ccH7Cmgp.s 			page 15


 509:Core/Src/bms.c **** }
 510:Core/Src/bms.c **** 
 511:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 512:Core/Src/bms.c **** void getCellDelta(bms_t *bms)
 513:Core/Src/bms.c **** {
 298              		.loc 1 513 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              	.LVL22:
 514:Core/Src/bms.c ****     bms->cellDelta = bms->highCellVolt - bms->lowCellVolt;
 304              		.loc 1 514 0
 305 0000 B0F8E430 		ldrh	r3, [r0, #228]
 306 0004 B0F8E220 		ldrh	r2, [r0, #226]
 307 0008 9B1A     		subs	r3, r3, r2
 308 000a A0F8E830 		strh	r3, [r0, #232]	@ movhi
 309 000e 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE145:
 313              		.section	.text.getLowCellVolt,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	getLowCellVolt:
 321              	.LFB146:
 515:Core/Src/bms.c **** }
 516:Core/Src/bms.c **** 
 517:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 518:Core/Src/bms.c **** void getLowCellVolt(bms_t *bms)
 519:Core/Src/bms.c **** {
 322              		.loc 1 519 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327              	.LVL23:
 520:Core/Src/bms.c ****     bms->lowCellVolt = 5000;
 328              		.loc 1 520 0
 329 0000 41F28833 		movw	r3, #5000
 330 0004 A0F8E230 		strh	r3, [r0, #226]	@ movhi
 331              	.LVL24:
 332              	.LBB7:
 521:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 333              		.loc 1 521 0
 334 0008 0023     		movs	r3, #0
 335 000a 00E0     		b	.L28
 336              	.LVL25:
 337              	.L29:
 338              		.loc 1 521 0 is_stmt 0 discriminator 2
 339 000c 0133     		adds	r3, r3, #1
 340              	.LVL26:
 341              	.L28:
 342              		.loc 1 521 0 discriminator 1
 343 000e 5F2B     		cmp	r3, #95
ARM GAS  /tmp/ccH7Cmgp.s 			page 16


 344 0010 08D8     		bhi	.L31
 522:Core/Src/bms.c ****     {
 523:Core/Src/bms.c ****         if (bms->cellVolt[i] < bms->lowCellVolt)
 345              		.loc 1 523 0 is_stmt 1
 346 0012 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 347 0016 B0F8E210 		ldrh	r1, [r0, #226]
 348 001a 8A42     		cmp	r2, r1
 349 001c F6D2     		bcs	.L29
 524:Core/Src/bms.c ****         {
 525:Core/Src/bms.c ****             bms->lowCellVolt = bms->cellVolt[i];
 350              		.loc 1 525 0
 351 001e A0F8E220 		strh	r2, [r0, #226]	@ movhi
 352 0022 F3E7     		b	.L29
 353              	.L31:
 354              	.LBE7:
 526:Core/Src/bms.c ****         }
 527:Core/Src/bms.c ****     }
 528:Core/Src/bms.c **** }
 355              		.loc 1 528 0
 356 0024 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE146:
 360              		.section	.text.getAvgCellVolt,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv4-sp-d16
 367              	getAvgCellVolt:
 368              	.LFB147:
 529:Core/Src/bms.c **** 
 530:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 531:Core/Src/bms.c **** void getAvgCellVolt(bms_t *bms)
 532:Core/Src/bms.c **** {
 369              		.loc 1 532 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL27:
 375              	.LBB8:
 533:Core/Src/bms.c **** 
 534:Core/Src/bms.c ****     int cellSum = 0;
 535:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 376              		.loc 1 535 0
 377 0000 0023     		movs	r3, #0
 378              	.LBE8:
 534:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 379              		.loc 1 534 0
 380 0002 1A46     		mov	r2, r3
 381              	.LBB9:
 382              		.loc 1 535 0
 383 0004 03E0     		b	.L33
 384              	.LVL28:
 385              	.L34:
 536:Core/Src/bms.c ****     {
 537:Core/Src/bms.c **** 
ARM GAS  /tmp/ccH7Cmgp.s 			page 17


 538:Core/Src/bms.c ****         cellSum += bms->cellVolt[i];
 386              		.loc 1 538 0 discriminator 3
 387 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 388 000a 0A44     		add	r2, r2, r1
 389              	.LVL29:
 535:Core/Src/bms.c ****     {
 390              		.loc 1 535 0 discriminator 3
 391 000c 0133     		adds	r3, r3, #1
 392              	.LVL30:
 393              	.L33:
 535:Core/Src/bms.c ****     {
 394              		.loc 1 535 0 is_stmt 0 discriminator 1
 395 000e 5F2B     		cmp	r3, #95
 396 0010 F9D9     		bls	.L34
 397              	.LBE9:
 539:Core/Src/bms.c ****     }
 540:Core/Src/bms.c ****     bms->avgCellVolt = (cellSum / 96);
 398              		.loc 1 540 0 is_stmt 1
 399 0012 0449     		ldr	r1, .L35
 400 0014 81FB0231 		smull	r3, r1, r1, r2
 401              	.LVL31:
 402 0018 D317     		asrs	r3, r2, #31
 403 001a C3EB2113 		rsb	r3, r3, r1, asr #4
 404 001e A0F8E630 		strh	r3, [r0, #230]	@ movhi
 405 0022 7047     		bx	lr
 406              	.L36:
 407              		.align	2
 408              	.L35:
 409 0024 ABAAAA2A 		.word	715827883
 410              		.cfi_endproc
 411              	.LFE147:
 413              		.section	.text.getPackVolt,"ax",%progbits
 414              		.align	1
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	getPackVolt:
 421              	.LFB148:
 541:Core/Src/bms.c **** }
 542:Core/Src/bms.c **** 
 543:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 544:Core/Src/bms.c **** void getPackVolt(bms_t *bms)
 545:Core/Src/bms.c **** {
 422              		.loc 1 545 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.LVL32:
 428              	.LBB10:
 546:Core/Src/bms.c ****     uint32_t packSum = 0;
 547:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 429              		.loc 1 547 0
 430 0000 0023     		movs	r3, #0
 431              	.LBE10:
 546:Core/Src/bms.c ****     uint32_t packSum = 0;
ARM GAS  /tmp/ccH7Cmgp.s 			page 18


 432              		.loc 1 546 0
 433 0002 1A46     		mov	r2, r3
 434              	.LBB11:
 435              		.loc 1 547 0
 436 0004 03E0     		b	.L38
 437              	.LVL33:
 438              	.L39:
 548:Core/Src/bms.c ****     {
 549:Core/Src/bms.c ****         packSum += bms->cellVolt[i];
 439              		.loc 1 549 0 discriminator 3
 440 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 441 000a 0A44     		add	r2, r2, r1
 442              	.LVL34:
 547:Core/Src/bms.c ****     {
 443              		.loc 1 547 0 discriminator 3
 444 000c 0133     		adds	r3, r3, #1
 445              	.LVL35:
 446              	.L38:
 547:Core/Src/bms.c ****     {
 447              		.loc 1 547 0 is_stmt 0 discriminator 1
 448 000e 5F2B     		cmp	r3, #95
 449 0010 F9D9     		bls	.L39
 450              	.LBE11:
 550:Core/Src/bms.c ****     }
 551:Core/Src/bms.c ****     bms->packVolt = packSum / 10;
 451              		.loc 1 551 0 is_stmt 1
 452 0012 034B     		ldr	r3, .L40
 453              	.LVL36:
 454 0014 A3FB0223 		umull	r2, r3, r3, r2
 455              	.LVL37:
 456 0018 DB08     		lsrs	r3, r3, #3
 457 001a A0F8E030 		strh	r3, [r0, #224]	@ movhi
 458 001e 7047     		bx	lr
 459              	.L41:
 460              		.align	2
 461              	.L40:
 462 0020 CDCCCCCC 		.word	-858993459
 463              		.cfi_endproc
 464              	.LFE148:
 466              		.section	.text.getCellCount,"ax",%progbits
 467              		.align	1
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	getCellCount:
 474              	.LFB149:
 552:Core/Src/bms.c **** }
 553:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 554:Core/Src/bms.c **** void getCellCount(bms_t *bms, int pack)
 555:Core/Src/bms.c **** {
 475              		.loc 1 555 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480              	.LVL38:
ARM GAS  /tmp/ccH7Cmgp.s 			page 19


 481 0000 10B4     		push	{r4}
 482              	.LCFI2:
 483              		.cfi_def_cfa_offset 4
 484              		.cfi_offset 4, -4
 485              	.LVL39:
 486              	.LBB12:
 556:Core/Src/bms.c ****     uint16_t cellCount = 0;
 557:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 487              		.loc 1 557 0
 488 0002 0023     		movs	r3, #0
 489              	.LBE12:
 556:Core/Src/bms.c ****     uint16_t cellCount = 0;
 490              		.loc 1 556 0
 491 0004 1A46     		mov	r2, r3
 492              	.LBB13:
 493              		.loc 1 557 0
 494 0006 00E0     		b	.L43
 495              	.LVL40:
 496              	.L44:
 497              		.loc 1 557 0 is_stmt 0 discriminator 2
 498 0008 0133     		adds	r3, r3, #1
 499              	.LVL41:
 500              	.L43:
 501              		.loc 1 557 0 discriminator 1
 502 000a 5F2B     		cmp	r3, #95
 503 000c 07D8     		bhi	.L48
 558:Core/Src/bms.c ****     {
 559:Core/Src/bms.c ****         if (bms->cellVolt[i] > IGNORE_VOLT)
 504              		.loc 1 559 0 is_stmt 1
 505 000e 30F81340 		ldrh	r4, [r0, r3, lsl #1]
 506 0012 B4F5FA7F 		cmp	r4, #500
 507 0016 F7D9     		bls	.L44
 560:Core/Src/bms.c ****         {
 561:Core/Src/bms.c ****             cellCount++;
 508              		.loc 1 561 0
 509 0018 0132     		adds	r2, r2, #1
 510              	.LVL42:
 511 001a 92B2     		uxth	r2, r2
 512              	.LVL43:
 513 001c F4E7     		b	.L44
 514              	.L48:
 515              	.LBE13:
 562:Core/Src/bms.c ****         }
 563:Core/Src/bms.c ****     }
 564:Core/Src/bms.c ****     if (cellCount != 96)
 516              		.loc 1 564 0
 517 001e 602A     		cmp	r2, #96
 518 0020 06D0     		beq	.L42
 565:Core/Src/bms.c ****     {
 566:Core/Src/bms.c ****         BMS[pack].state = Error;
 519              		.loc 1 566 0
 520 0022 F622     		movs	r2, #246
 521              	.LVL44:
 522 0024 044B     		ldr	r3, .L49
 523              	.LVL45:
 524 0026 02FB0131 		mla	r1, r2, r1, r3
 525              	.LVL46:
ARM GAS  /tmp/ccH7Cmgp.s 			page 20


 526 002a 0423     		movs	r3, #4
 527 002c 81F8F230 		strb	r3, [r1, #242]
 528              	.L42:
 567:Core/Src/bms.c ****     }
 568:Core/Src/bms.c **** }
 529              		.loc 1 568 0
 530 0030 5DF8044B 		ldr	r4, [sp], #4
 531              	.LCFI3:
 532              		.cfi_restore 4
 533              		.cfi_def_cfa_offset 0
 534 0034 7047     		bx	lr
 535              	.L50:
 536 0036 00BF     		.align	2
 537              	.L49:
 538 0038 00000000 		.word	BMS
 539              		.cfi_endproc
 540              	.LFE149:
 542              		.section	.text.initBMS,"ax",%progbits
 543              		.align	1
 544              		.global	initBMS
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	initBMS:
 551              	.LFB131:
  79:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 552              		.loc 1 79 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL47:
 558              	.LBB14:
  80:Core/Src/bms.c ****     {
 559              		.loc 1 80 0
 560 0000 0021     		movs	r1, #0
 561              	.LVL48:
 562 0002 0129     		cmp	r1, #1
 563 0004 41D8     		bhi	.L62
 564              	.LBE14:
  79:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 565              		.loc 1 79 0
 566 0006 10B4     		push	{r4}
 567              	.LCFI4:
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 4, -4
 570 0008 1DE0     		b	.L57
 571              	.LVL49:
 572              	.L54:
 573              	.LBB18:
 574              	.LBB15:
  95:Core/Src/bms.c ****         }
 575              		.loc 1 95 0 discriminator 3
 576 000a C1EB4113 		rsb	r3, r1, r1, lsl #5
 577 000e C1EB8303 		rsb	r3, r1, r3, lsl #2
 578 0012 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccH7Cmgp.s 			page 21


 579 0014 0024     		movs	r4, #0
 580 0016 2048     		ldr	r0, .L64
 581 0018 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  93:Core/Src/bms.c ****         {
 582              		.loc 1 93 0 discriminator 3
 583 001c 0132     		adds	r2, r2, #1
 584              	.LVL50:
 585              	.L53:
  93:Core/Src/bms.c ****         {
 586              		.loc 1 93 0 is_stmt 0 discriminator 1
 587 001e 5F2A     		cmp	r2, #95
 588 0020 F3D9     		bls	.L54
 589 0022 0022     		movs	r2, #0
 590              	.LVL51:
 591 0024 0AE0     		b	.L55
 592              	.LVL52:
 593              	.L56:
 594              	.LBE15:
 595              	.LBB16:
 100:Core/Src/bms.c ****         }
 596              		.loc 1 100 0 is_stmt 1 discriminator 3
 597 0026 C1EB4113 		rsb	r3, r1, r1, lsl #5
 598 002a C1EB8303 		rsb	r3, r1, r3, lsl #2
 599 002e 1344     		add	r3, r3, r2
 600 0030 6033     		adds	r3, r3, #96
 601 0032 0024     		movs	r4, #0
 602 0034 1848     		ldr	r0, .L64
 603 0036 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  98:Core/Src/bms.c ****         {
 604              		.loc 1 98 0 discriminator 3
 605 003a 0132     		adds	r2, r2, #1
 606              	.LVL53:
 607              	.L55:
  98:Core/Src/bms.c ****         {
 608              		.loc 1 98 0 is_stmt 0 discriminator 1
 609 003c 0F2A     		cmp	r2, #15
 610 003e F2D9     		bls	.L56
 611              	.LBE16:
  80:Core/Src/bms.c ****     {
 612              		.loc 1 80 0 is_stmt 1 discriminator 2
 613 0040 0131     		adds	r1, r1, #1
 614              	.LVL54:
 615 0042 0129     		cmp	r1, #1
 616 0044 19D8     		bhi	.L63
 617              	.LVL55:
 618              	.L57:
  82:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
 619              		.loc 1 82 0
 620 0046 F623     		movs	r3, #246
 621 0048 134A     		ldr	r2, .L64
 622 004a 03FB0123 		mla	r3, r3, r1, r2
 623 004e 0022     		movs	r2, #0
 624 0050 83F8F220 		strb	r2, [r3, #242]
  83:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
 625              		.loc 1 83 0
 626 0054 A3F8E820 		strh	r2, [r3, #232]	@ movhi
  84:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
ARM GAS  /tmp/ccH7Cmgp.s 			page 22


 627              		.loc 1 84 0
 628 0058 A3F8EA20 		strh	r2, [r3, #234]	@ movhi
  85:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
 629              		.loc 1 85 0
 630 005c 83F8F420 		strb	r2, [r3, #244]
  86:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
 631              		.loc 1 86 0
 632 0060 A3F8E420 		strh	r2, [r3, #228]	@ movhi
  87:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
 633              		.loc 1 87 0
 634 0064 A3F8E220 		strh	r2, [r3, #226]	@ movhi
  88:Core/Src/bms.c ****         BMS[i].packVolt = 0;
 635              		.loc 1 88 0
 636 0068 A3F8EC20 		strh	r2, [r3, #236]	@ movhi
  89:Core/Src/bms.c ****         BMS[i].SOC = 0;
 637              		.loc 1 89 0
 638 006c A3F8E020 		strh	r2, [r3, #224]	@ movhi
  90:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
 639              		.loc 1 90 0
 640 0070 83F8F320 		strb	r2, [r3, #243]
  91:Core/Src/bms.c **** 
 641              		.loc 1 91 0
 642 0074 A3F8F020 		strh	r2, [r3, #240]	@ movhi
 643              	.LVL56:
 644              	.LBB17:
  93:Core/Src/bms.c ****         {
 645              		.loc 1 93 0
 646 0078 D1E7     		b	.L53
 647              	.LVL57:
 648              	.L63:
 649              	.LBE17:
 650              	.LBE18:
 103:Core/Src/bms.c ****     charged = false;
 651              		.loc 1 103 0
 652 007a 0023     		movs	r3, #0
 653 007c 074A     		ldr	r2, .L64+4
 654              	.LVL58:
 655 007e 1370     		strb	r3, [r2]
 104:Core/Src/bms.c **** }
 656              		.loc 1 104 0
 657 0080 074A     		ldr	r2, .L64+8
 658 0082 1370     		strb	r3, [r2]
 105:Core/Src/bms.c **** 
 659              		.loc 1 105 0
 660 0084 5DF8044B 		ldr	r4, [sp], #4
 661              	.LCFI5:
 662              		.cfi_restore 4
 663              		.cfi_def_cfa_offset 0
 664 0088 7047     		bx	lr
 665              	.L62:
 103:Core/Src/bms.c ****     charged = false;
 666              		.loc 1 103 0
 667 008a 0023     		movs	r3, #0
 668 008c 034A     		ldr	r2, .L64+4
 669 008e 1370     		strb	r3, [r2]
 104:Core/Src/bms.c **** }
 670              		.loc 1 104 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 23


 671 0090 034A     		ldr	r2, .L64+8
 672 0092 1370     		strb	r3, [r2]
 673 0094 7047     		bx	lr
 674              	.L65:
 675 0096 00BF     		.align	2
 676              	.L64:
 677 0098 00000000 		.word	BMS
 678 009c 00000000 		.word	vechicleState
 679 00a0 00000000 		.word	charged
 680              		.cfi_endproc
 681              	.LFE131:
 683              		.section	.text.bmsStateHandler,"ax",%progbits
 684              		.align	1
 685              		.global	bmsStateHandler
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 689              		.fpu fpv4-sp-d16
 691              	bmsStateHandler:
 692              	.LFB132:
 109:Core/Src/bms.c ****     switch (bms->state)
 693              		.loc 1 109 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 698              	.LVL59:
 110:Core/Src/bms.c ****     {
 699              		.loc 1 110 0
 700 0000 90F8F230 		ldrb	r3, [r0, #242]	@ zero_extendqisi2
 701 0004 042B     		cmp	r3, #4
 702 0006 72D8     		bhi	.L66
 703 0008 DFE803F0 		tbb	[pc, r3]
 704              	.L69:
 705 000c 03       		.byte	(.L68-.L69)/2
 706 000d 0A       		.byte	(.L70-.L69)/2
 707 000e 39       		.byte	(.L71-.L69)/2
 708 000f 40       		.byte	(.L72-.L69)/2
 709 0010 60       		.byte	(.L73-.L69)/2
 710 0011 00       		.p2align 1
 711              	.L68:
 113:Core/Src/bms.c ****         bms->state = Ready;
 712              		.loc 1 113 0
 713 0012 0023     		movs	r3, #0
 714 0014 80F8F430 		strb	r3, [r0, #244]
 114:Core/Src/bms.c ****         break;
 715              		.loc 1 114 0
 716 0018 0123     		movs	r3, #1
 717 001a 80F8F230 		strb	r3, [r0, #242]
 115:Core/Src/bms.c **** 
 718              		.loc 1 115 0
 719 001e 7047     		bx	lr
 720              	.L70:
 118:Core/Src/bms.c **** 
 721              		.loc 1 118 0
 722 0020 0023     		movs	r3, #0
 723 0022 80F8F430 		strb	r3, [r0, #244]
ARM GAS  /tmp/ccH7Cmgp.s 			page 24


 120:Core/Src/bms.c ****         {
 724              		.loc 1 120 0
 725 0026 B0F8E620 		ldrh	r2, [r0, #230]
 726 002a 40F60A73 		movw	r3, #3850
 727 002e 9A42     		cmp	r2, r3
 728 0030 0ED9     		bls	.L74
 122:Core/Src/bms.c ****             {
 729              		.loc 1 122 0
 730 0032 B0F8E430 		ldrh	r3, [r0, #228]
 731 0036 B0F8E220 		ldrh	r2, [r0, #226]
 732 003a 9B1A     		subs	r3, r3, r2
 733 003c 112B     		cmp	r3, #17
 734 003e 03DD     		ble	.L75
 124:Core/Src/bms.c ****             }
 735              		.loc 1 124 0
 736 0040 0123     		movs	r3, #1
 737 0042 80F8F530 		strb	r3, [r0, #245]
 738 0046 06E0     		b	.L76
 739              	.L75:
 129:Core/Src/bms.c ****             }
 740              		.loc 1 129 0
 741 0048 0023     		movs	r3, #0
 742 004a 80F8F530 		strb	r3, [r0, #245]
 743 004e 02E0     		b	.L76
 744              	.L74:
 134:Core/Src/bms.c ****         }
 745              		.loc 1 134 0
 746 0050 0023     		movs	r3, #0
 747 0052 80F8F530 		strb	r3, [r0, #245]
 748              	.L76:
 137:Core/Src/bms.c ****         {
 749              		.loc 1 137 0
 750 0056 B0F8E420 		ldrh	r2, [r0, #228]
 751 005a 40F6B373 		movw	r3, #4019
 752 005e 9A42     		cmp	r2, r3
 753 0060 02D8     		bhi	.L77
 139:Core/Src/bms.c ****         }
 754              		.loc 1 139 0
 755 0062 0323     		movs	r3, #3
 756 0064 80F8F230 		strb	r3, [r0, #242]
 757              	.L77:
 142:Core/Src/bms.c ****         {
 758              		.loc 1 142 0
 759 0068 214B     		ldr	r3, .L80
 760 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 761 006c 002B     		cmp	r3, #0
 762 006e 3ED0     		beq	.L66
 144:Core/Src/bms.c ****             bms->state = Drive;
 763              		.loc 1 144 0
 764 0070 0023     		movs	r3, #0
 765 0072 80F8F530 		strb	r3, [r0, #245]
 145:Core/Src/bms.c ****         }
 766              		.loc 1 145 0
 767 0076 0223     		movs	r3, #2
 768 0078 80F8F230 		strb	r3, [r0, #242]
 769 007c 7047     		bx	lr
 770              	.L71:
ARM GAS  /tmp/ccH7Cmgp.s 			page 25


 151:Core/Src/bms.c ****         {
 771              		.loc 1 151 0
 772 007e 1C4B     		ldr	r3, .L80
 773 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 774 0082 A3BB     		cbnz	r3, .L66
 153:Core/Src/bms.c ****         }
 775              		.loc 1 153 0
 776 0084 0123     		movs	r3, #1
 777 0086 80F8F230 		strb	r3, [r0, #242]
 778 008a 7047     		bx	lr
 779              	.L72:
 158:Core/Src/bms.c ****         bms->chargeRequest = 1;
 780              		.loc 1 158 0
 781 008c 0023     		movs	r3, #0
 782 008e 80F8F530 		strb	r3, [r0, #245]
 159:Core/Src/bms.c **** 
 783              		.loc 1 159 0
 784 0092 0123     		movs	r3, #1
 785 0094 80F8F430 		strb	r3, [r0, #244]
 161:Core/Src/bms.c ****         {
 786              		.loc 1 161 0
 787 0098 B0F8E420 		ldrh	r2, [r0, #228]
 788 009c 41F25403 		movw	r3, #4180
 789 00a0 9A42     		cmp	r2, r3
 790 00a2 03D8     		bhi	.L78
 161:Core/Src/bms.c ****         {
 791              		.loc 1 161 0 is_stmt 0 discriminator 1
 792 00a4 B0F8EA30 		ldrh	r3, [r0, #234]
 793 00a8 952B     		cmp	r3, #149
 794 00aa 05D9     		bls	.L79
 795              	.L78:
 171:Core/Src/bms.c ****             bms->state = Ready;
 796              		.loc 1 171 0 is_stmt 1
 797 00ac 0023     		movs	r3, #0
 798 00ae 80F8F430 		strb	r3, [r0, #244]
 172:Core/Src/bms.c ****         }
 799              		.loc 1 172 0
 800 00b2 0123     		movs	r3, #1
 801 00b4 80F8F230 		strb	r3, [r0, #242]
 802              	.L79:
 175:Core/Src/bms.c ****         {
 803              		.loc 1 175 0
 804 00b8 0E4B     		ldr	r3, .L80+4
 805 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 806 00bc BBB1     		cbz	r3, .L66
 177:Core/Src/bms.c ****             bms->state = Ready;
 807              		.loc 1 177 0
 808 00be 0023     		movs	r3, #0
 809 00c0 80F8F430 		strb	r3, [r0, #244]
 178:Core/Src/bms.c ****         }
 810              		.loc 1 178 0
 811 00c4 0123     		movs	r3, #1
 812 00c6 80F8F230 		strb	r3, [r0, #242]
 813 00ca 7047     		bx	lr
 814              	.L73:
 184:Core/Src/bms.c **** 
 815              		.loc 1 184 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 26


 816 00cc 0023     		movs	r3, #0
 817 00ce 80F8F430 		strb	r3, [r0, #244]
 186:Core/Src/bms.c ****         {
 818              		.loc 1 186 0
 819 00d2 B0F8E230 		ldrh	r3, [r0, #226]
 820 00d6 B3F5FA6F 		cmp	r3, #2000
 821 00da 08D9     		bls	.L66
 186:Core/Src/bms.c ****         {
 822              		.loc 1 186 0 is_stmt 0 discriminator 1
 823 00dc B0F8E420 		ldrh	r2, [r0, #228]
 824 00e0 41F29903 		movw	r3, #4249
 825 00e4 9A42     		cmp	r2, r3
 826 00e6 02D8     		bhi	.L66
 188:Core/Src/bms.c ****         }
 827              		.loc 1 188 0 is_stmt 1
 828 00e8 0123     		movs	r3, #1
 829 00ea 80F8F230 		strb	r3, [r0, #242]
 830              	.L66:
 831 00ee 7047     		bx	lr
 832              	.L81:
 833              		.align	2
 834              	.L80:
 835 00f0 00000000 		.word	vechicleState
 836 00f4 00000000 		.word	charged
 837              		.cfi_endproc
 838              	.LFE132:
 840              		.section	.text.acChargeCommand,"ax",%progbits
 841              		.align	1
 842              		.global	acChargeCommand
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu fpv4-sp-d16
 848              	acChargeCommand:
 849              	.LFB133:
 199:Core/Src/bms.c ****     uint8_t canTx2[8];
 850              		.loc 1 199 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854 0000 00B5     		push	{lr}
 855              	.LCFI6:
 856              		.cfi_def_cfa_offset 4
 857              		.cfi_offset 14, -4
 858 0002 83B0     		sub	sp, sp, #12
 859              	.LCFI7:
 860              		.cfi_def_cfa_offset 16
 201:Core/Src/bms.c ****     {
 861              		.loc 1 201 0
 862 0004 264B     		ldr	r3, .L88
 863 0006 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 864 000a 1BB1     		cbz	r3, .L83
 201:Core/Src/bms.c ****     {
 865              		.loc 1 201 0 is_stmt 0 discriminator 1
 866 000c 244B     		ldr	r3, .L88
 867 000e 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 868 0012 3BBB     		cbnz	r3, .L87
ARM GAS  /tmp/ccH7Cmgp.s 			page 27


 869              	.L83:
 219:Core/Src/bms.c ****     {
 870              		.loc 1 219 0 is_stmt 1
 871 0014 224B     		ldr	r3, .L88
 872 0016 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 873 001a 1BB1     		cbz	r3, .L84
 219:Core/Src/bms.c ****     {
 874              		.loc 1 219 0 is_stmt 0 discriminator 1
 875 001c 204B     		ldr	r3, .L88
 876 001e 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 877 0022 E3B9     		cbnz	r3, .L82
 878              	.L84:
 879              	.LVL60:
 880              	.LBB19:
 224:Core/Src/bms.c ****         canTx2[1] = 0x00;
 881              		.loc 1 224 0 is_stmt 1
 882 0024 4023     		movs	r3, #64
 883 0026 8DF80030 		strb	r3, [sp]
 225:Core/Src/bms.c ****         canTx2[2] = 0x20;
 884              		.loc 1 225 0
 885 002a 0023     		movs	r3, #0
 886 002c 8DF80130 		strb	r3, [sp, #1]
 226:Core/Src/bms.c ****         canTx2[3] = 9;
 887              		.loc 1 226 0
 888 0030 2022     		movs	r2, #32
 889 0032 8DF80220 		strb	r2, [sp, #2]
 227:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 890              		.loc 1 227 0
 891 0036 0922     		movs	r2, #9
 892 0038 8DF80320 		strb	r2, [sp, #3]
 228:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 893              		.loc 1 228 0
 894 003c 8DF80430 		strb	r3, [sp, #4]
 229:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 895              		.loc 1 229 0
 896 0040 8DF80530 		strb	r3, [sp, #5]
 230:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 897              		.loc 1 230 0
 898 0044 8DF80630 		strb	r3, [sp, #6]
 231:Core/Src/bms.c ****         can2tx(0x605,8,canTx2);
 899              		.loc 1 231 0
 900 0048 8DF80730 		strb	r3, [sp, #7]
 232:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 901              		.loc 1 232 0
 902 004c 6A46     		mov	r2, sp
 903 004e 0821     		movs	r1, #8
 904 0050 40F20560 		movw	r0, #1541
 905 0054 FFF7FEFF 		bl	can2tx
 906              	.LVL61:
 234:Core/Src/bms.c ****     }
 907              		.loc 1 234 0
 908 0058 0122     		movs	r2, #1
 909 005a 124B     		ldr	r3, .L88+4
 910 005c 1A70     		strb	r2, [r3]
 911              	.LVL62:
 912              	.L82:
 913              	.LBE19:
ARM GAS  /tmp/ccH7Cmgp.s 			page 28


 236:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 914              		.loc 1 236 0
 915 005e 03B0     		add	sp, sp, #12
 916              	.LCFI8:
 917              		.cfi_remember_state
 918              		.cfi_def_cfa_offset 4
 919              		@ sp needed
 920 0060 5DF804FB 		ldr	pc, [sp], #4
 921              	.L87:
 922              	.LCFI9:
 923              		.cfi_restore_state
 924              	.LBB20:
 203:Core/Src/bms.c ****         int val = 32;
 925              		.loc 1 203 0
 926 0064 0023     		movs	r3, #0
 927 0066 0F4A     		ldr	r2, .L88+4
 928 0068 1370     		strb	r3, [r2]
 929              	.LVL63:
 207:Core/Src/bms.c ****         canTx2[1] = 0x00;
 930              		.loc 1 207 0
 931 006a 4022     		movs	r2, #64
 932 006c 8DF80020 		strb	r2, [sp]
 208:Core/Src/bms.c ****         canTx2[2] = 0x20;
 933              		.loc 1 208 0
 934 0070 8DF80130 		strb	r3, [sp, #1]
 209:Core/Src/bms.c ****         canTx2[3] = 9;
 935              		.loc 1 209 0
 936 0074 2022     		movs	r2, #32
 937 0076 8DF80220 		strb	r2, [sp, #2]
 210:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 938              		.loc 1 210 0
 939 007a 0921     		movs	r1, #9
 940 007c 8DF80310 		strb	r1, [sp, #3]
 211:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 941              		.loc 1 211 0
 942 0080 8DF80420 		strb	r2, [sp, #4]
 212:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 943              		.loc 1 212 0
 944 0084 8DF80530 		strb	r3, [sp, #5]
 213:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 945              		.loc 1 213 0
 946 0088 8DF80630 		strb	r3, [sp, #6]
 214:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 947              		.loc 1 214 0
 948 008c 8DF80730 		strb	r3, [sp, #7]
 216:Core/Src/bms.c ****     }
 949              		.loc 1 216 0
 950 0090 6A46     		mov	r2, sp
 951 0092 0821     		movs	r1, #8
 952 0094 40F20560 		movw	r0, #1541
 953 0098 FFF7FEFF 		bl	can2tx
 954              	.LVL64:
 955 009c BAE7     		b	.L83
 956              	.L89:
 957 009e 00BF     		.align	2
 958              	.L88:
 959 00a0 00000000 		.word	BMS
ARM GAS  /tmp/ccH7Cmgp.s 			page 29


 960 00a4 00000000 		.word	charged
 961              	.LBE20:
 962              		.cfi_endproc
 963              	.LFE133:
 965              		.section	.text.tx500kData,"ax",%progbits
 966              		.align	1
 967              		.global	tx500kData
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 971              		.fpu fpv4-sp-d16
 973              	tx500kData:
 974              	.LFB134:
 239:Core/Src/bms.c **** 
 975              		.loc 1 239 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 16
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 30B5     		push	{r4, r5, lr}
 980              	.LCFI10:
 981              		.cfi_def_cfa_offset 12
 982              		.cfi_offset 4, -12
 983              		.cfi_offset 5, -8
 984              		.cfi_offset 14, -4
 985 0002 85B0     		sub	sp, sp, #20
 986              	.LCFI11:
 987              		.cfi_def_cfa_offset 32
 244:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 988              		.loc 1 244 0
 989 0004 224C     		ldr	r4, .L92
 990 0006 B4F8E030 		ldrh	r3, [r4, #224]
 991 000a 8DF80830 		strb	r3, [sp, #8]
 245:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 992              		.loc 1 245 0
 993 000e 1B0A     		lsrs	r3, r3, #8
 994 0010 8DF80930 		strb	r3, [sp, #9]
 246:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 995              		.loc 1 246 0
 996 0014 B4F8EE30 		ldrh	r3, [r4, #238]
 997 0018 8DF80A30 		strb	r3, [sp, #10]
 247:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 998              		.loc 1 247 0
 999 001c 1B0A     		lsrs	r3, r3, #8
 1000 001e 8DF80B30 		strb	r3, [sp, #11]
 248:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 1001              		.loc 1 248 0
 1002 0022 B4F8E830 		ldrh	r3, [r4, #232]
 1003 0026 8DF80C30 		strb	r3, [sp, #12]
 249:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 1004              		.loc 1 249 0
 1005 002a 1B0A     		lsrs	r3, r3, #8
 1006 002c 8DF80D30 		strb	r3, [sp, #13]
 250:Core/Src/bms.c ****     bms0[7] = 0;
 1007              		.loc 1 250 0
 1008 0030 94F8F330 		ldrb	r3, [r4, #243]	@ zero_extendqisi2
 1009 0034 8DF80E30 		strb	r3, [sp, #14]
 251:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
ARM GAS  /tmp/ccH7Cmgp.s 			page 30


 1010              		.loc 1 251 0
 1011 0038 0025     		movs	r5, #0
 1012 003a 8DF80F50 		strb	r5, [sp, #15]
 252:Core/Src/bms.c **** 
 1013              		.loc 1 252 0
 1014 003e 02AA     		add	r2, sp, #8
 1015 0040 0821     		movs	r1, #8
 1016 0042 4FF49C70 		mov	r0, #312
 1017 0046 FFF7FEFF 		bl	can2tx
 1018              	.LVL65:
 257:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 1019              		.loc 1 257 0
 1020 004a B4F8D631 		ldrh	r3, [r4, #470]
 1021 004e 8DF80030 		strb	r3, [sp]
 258:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 1022              		.loc 1 258 0
 1023 0052 1B0A     		lsrs	r3, r3, #8
 1024 0054 8DF80130 		strb	r3, [sp, #1]
 259:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 1025              		.loc 1 259 0
 1026 0058 B4F8E431 		ldrh	r3, [r4, #484]
 1027 005c 8DF80230 		strb	r3, [sp, #2]
 260:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 1028              		.loc 1 260 0
 1029 0060 1B0A     		lsrs	r3, r3, #8
 1030 0062 8DF80330 		strb	r3, [sp, #3]
 261:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 1031              		.loc 1 261 0
 1032 0066 B4F8DE31 		ldrh	r3, [r4, #478]
 1033 006a 8DF80430 		strb	r3, [sp, #4]
 262:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 1034              		.loc 1 262 0
 1035 006e 1B0A     		lsrs	r3, r3, #8
 1036 0070 8DF80530 		strb	r3, [sp, #5]
 263:Core/Src/bms.c ****     bms1[7] = 0;
 1037              		.loc 1 263 0
 1038 0074 94F8E931 		ldrb	r3, [r4, #489]	@ zero_extendqisi2
 1039 0078 8DF80630 		strb	r3, [sp, #6]
 264:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 1040              		.loc 1 264 0
 1041 007c 8DF80750 		strb	r5, [sp, #7]
 265:Core/Src/bms.c ****     //c2tx(&txMsg2, canTx2);
 1042              		.loc 1 265 0
 1043 0080 6A46     		mov	r2, sp
 1044 0082 0821     		movs	r1, #8
 1045 0084 40F23910 		movw	r0, #313
 1046 0088 FFF7FEFF 		bl	can2tx
 1047              	.LVL66:
 267:Core/Src/bms.c **** 
 1048              		.loc 1 267 0
 1049 008c 05B0     		add	sp, sp, #20
 1050              	.LCFI12:
 1051              		.cfi_def_cfa_offset 12
 1052              		@ sp needed
 1053 008e 30BD     		pop	{r4, r5, pc}
 1054              	.L93:
 1055              		.align	2
ARM GAS  /tmp/ccH7Cmgp.s 			page 31


 1056              	.L92:
 1057 0090 00000000 		.word	BMS
 1058              		.cfi_endproc
 1059              	.LFE134:
 1061              		.section	.text.sendCommand,"ax",%progbits
 1062              		.align	1
 1063              		.global	sendCommand
 1064              		.syntax unified
 1065              		.thumb
 1066              		.thumb_func
 1067              		.fpu fpv4-sp-d16
 1069              	sendCommand:
 1070              	.LFB136:
 292:Core/Src/bms.c ****     uint8_t canTx[8];
 1071              		.loc 1 292 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 16
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075 0000 30B5     		push	{r4, r5, lr}
 1076              	.LCFI13:
 1077              		.cfi_def_cfa_offset 12
 1078              		.cfi_offset 4, -12
 1079              		.cfi_offset 5, -8
 1080              		.cfi_offset 14, -4
 1081 0002 85B0     		sub	sp, sp, #20
 1082              	.LCFI14:
 1083              		.cfi_def_cfa_offset 32
 296:Core/Src/bms.c ****     canTx[1] = 0x00;
 1084              		.loc 1 296 0
 1085 0004 0225     		movs	r5, #2
 1086 0006 8DF80850 		strb	r5, [sp, #8]
 297:Core/Src/bms.c ****     canTx[2] = 0x00;
 1087              		.loc 1 297 0
 1088 000a 0024     		movs	r4, #0
 1089 000c 8DF80940 		strb	r4, [sp, #9]
 298:Core/Src/bms.c ****     can1tx(0x200,3,canTx);
 1090              		.loc 1 298 0
 1091 0010 8DF80A40 		strb	r4, [sp, #10]
 299:Core/Src/bms.c ****     //c1tx(&txMsg, canTx); //pack 1
 1092              		.loc 1 299 0
 1093 0014 02AA     		add	r2, sp, #8
 1094 0016 0321     		movs	r1, #3
 1095 0018 4FF40070 		mov	r0, #512
 1096 001c FFF7FEFF 		bl	can1tx
 1097              	.LVL67:
 305:Core/Src/bms.c ****     canTx3[1] = 0x00;
 1098              		.loc 1 305 0
 1099 0020 8DF80050 		strb	r5, [sp]
 306:Core/Src/bms.c ****     canTx3[2] = 0x00;
 1100              		.loc 1 306 0
 1101 0024 8DF80140 		strb	r4, [sp, #1]
 307:Core/Src/bms.c ****     can3tx(0x200,3,canTx3);
 1102              		.loc 1 307 0
 1103 0028 8DF80240 		strb	r4, [sp, #2]
 308:Core/Src/bms.c ****     //c3tx(&txMsg3, canTx3); // pack 2
 1104              		.loc 1 308 0
 1105 002c 6A46     		mov	r2, sp
ARM GAS  /tmp/ccH7Cmgp.s 			page 32


 1106 002e 0321     		movs	r1, #3
 1107 0030 4FF40070 		mov	r0, #512
 1108 0034 FFF7FEFF 		bl	can3tx
 1109              	.LVL68:
 310:Core/Src/bms.c **** 
 1110              		.loc 1 310 0
 1111 0038 05B0     		add	sp, sp, #20
 1112              	.LCFI15:
 1113              		.cfi_def_cfa_offset 12
 1114              		@ sp needed
 1115 003a 30BD     		pop	{r4, r5, pc}
 1116              		.cfi_endproc
 1117              	.LFE136:
 1119              		.section	.text.requestBICMdata,"ax",%progbits
 1120              		.align	1
 1121              		.global	requestBICMdata
 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1125              		.fpu fpv4-sp-d16
 1127              	requestBICMdata:
 1128              	.LFB137:
 313:Core/Src/bms.c ****     sendCommand();
 1129              		.loc 1 313 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 8
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 1133              	.LVL69:
 1134 0000 10B5     		push	{r4, lr}
 1135              	.LCFI16:
 1136              		.cfi_def_cfa_offset 8
 1137              		.cfi_offset 4, -8
 1138              		.cfi_offset 14, -4
 1139 0002 82B0     		sub	sp, sp, #8
 1140              	.LCFI17:
 1141              		.cfi_def_cfa_offset 16
 1142 0004 0446     		mov	r4, r0
 314:Core/Src/bms.c ****     uint8_t canTx[8];
 1143              		.loc 1 314 0
 1144 0006 FFF7FEFF 		bl	sendCommand
 1145              	.LVL70:
 316:Core/Src/bms.c ****     {
 1146              		.loc 1 316 0
 1147 000a 94F8F530 		ldrb	r3, [r4, #245]	@ zero_extendqisi2
 1148 000e 33B1     		cbz	r3, .L98
 1149 0010 29E0     		b	.L96
 1150              	.LVL71:
 1151              	.L99:
 1152              	.LBB21:
 323:Core/Src/bms.c ****         }
 1153              		.loc 1 323 0 discriminator 3
 1154 0012 02AA     		add	r2, sp, #8
 1155 0014 1A44     		add	r2, r2, r3
 1156 0016 0021     		movs	r1, #0
 1157 0018 02F8081C 		strb	r1, [r2, #-8]
 321:Core/Src/bms.c ****         {
 1158              		.loc 1 321 0 discriminator 3
ARM GAS  /tmp/ccH7Cmgp.s 			page 33


 1159 001c 0133     		adds	r3, r3, #1
 1160              	.LVL72:
 1161              	.L98:
 321:Core/Src/bms.c ****         {
 1162              		.loc 1 321 0 is_stmt 0 discriminator 1
 1163 001e 072B     		cmp	r3, #7
 1164 0020 F7D9     		bls	.L99
 1165              	.LBE21:
 325:Core/Src/bms.c ****         can3tx(0x300,8,canTx);
 1166              		.loc 1 325 0 is_stmt 1
 1167 0022 6A46     		mov	r2, sp
 1168 0024 0821     		movs	r1, #8
 1169 0026 4FF44070 		mov	r0, #768
 1170 002a FFF7FEFF 		bl	can1tx
 1171              	.LVL73:
 326:Core/Src/bms.c ****         //c1tx(&txMsg, canTx); //pack 1
 1172              		.loc 1 326 0
 1173 002e 6A46     		mov	r2, sp
 1174 0030 0821     		movs	r1, #8
 1175 0032 4FF44070 		mov	r0, #768
 1176 0036 FFF7FEFF 		bl	can3tx
 1177              	.LVL74:
 1178              	.LBB22:
 331:Core/Src/bms.c ****         {
 1179              		.loc 1 331 0
 1180 003a 0023     		movs	r3, #0
 1181 003c 05E0     		b	.L100
 1182              	.LVL75:
 1183              	.L101:
 333:Core/Src/bms.c ****         }
 1184              		.loc 1 333 0 discriminator 3
 1185 003e 02AA     		add	r2, sp, #8
 1186 0040 1A44     		add	r2, r2, r3
 1187 0042 0021     		movs	r1, #0
 1188 0044 02F8081C 		strb	r1, [r2, #-8]
 331:Core/Src/bms.c ****         {
 1189              		.loc 1 331 0 discriminator 3
 1190 0048 0133     		adds	r3, r3, #1
 1191              	.LVL76:
 1192              	.L100:
 331:Core/Src/bms.c ****         {
 1193              		.loc 1 331 0 is_stmt 0 discriminator 1
 1194 004a 042B     		cmp	r3, #4
 1195 004c F7D9     		bls	.L101
 1196              	.LBE22:
 335:Core/Src/bms.c ****         can3tx(0x310,5,canTx);
 1197              		.loc 1 335 0 is_stmt 1
 1198 004e 6A46     		mov	r2, sp
 1199 0050 0521     		movs	r1, #5
 1200 0052 4FF44470 		mov	r0, #784
 1201 0056 FFF7FEFF 		bl	can1tx
 1202              	.LVL77:
 336:Core/Src/bms.c ****         //c1tx(&txMsg, canTx); //pack 1
 1203              		.loc 1 336 0
 1204 005a 6A46     		mov	r2, sp
 1205 005c 0521     		movs	r1, #5
 1206 005e 4FF44470 		mov	r0, #784
ARM GAS  /tmp/ccH7Cmgp.s 			page 34


 1207 0062 FFF7FEFF 		bl	can3tx
 1208              	.LVL78:
 1209              	.L96:
 360:Core/Src/bms.c **** 
 1210              		.loc 1 360 0
 1211 0066 02B0     		add	sp, sp, #8
 1212              	.LCFI18:
 1213              		.cfi_def_cfa_offset 8
 1214              		@ sp needed
 1215 0068 10BD     		pop	{r4, pc}
 1216              		.cfi_endproc
 1217              	.LFE137:
 1219              		.section	.text.refreshData,"ax",%progbits
 1220              		.align	1
 1221              		.global	refreshData
 1222              		.syntax unified
 1223              		.thumb
 1224              		.thumb_func
 1225              		.fpu fpv4-sp-d16
 1227              	refreshData:
 1228              	.LFB135:
 270:Core/Src/bms.c **** 
 1229              		.loc 1 270 0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233 0000 38B5     		push	{r3, r4, r5, lr}
 1234              	.LCFI19:
 1235              		.cfi_def_cfa_offset 16
 1236              		.cfi_offset 3, -16
 1237              		.cfi_offset 4, -12
 1238              		.cfi_offset 5, -8
 1239              		.cfi_offset 14, -4
 1240              	.LVL79:
 1241              	.LBB23:
 272:Core/Src/bms.c ****     {
 1242              		.loc 1 272 0
 1243 0002 0025     		movs	r5, #0
 1244 0004 2BE0     		b	.L104
 1245              	.LVL80:
 1246              	.L105:
 274:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 1247              		.loc 1 274 0 discriminator 3
 1248 0006 174B     		ldr	r3, .L107
 1249 0008 F624     		movs	r4, #246
 1250 000a 04FB0534 		mla	r4, r4, r5, r3
 1251 000e 2046     		mov	r0, r4
 1252 0010 FFF7FEFF 		bl	requestBICMdata
 1253              	.LVL81:
 275:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 1254              		.loc 1 275 0 discriminator 3
 1255 0014 2046     		mov	r0, r4
 1256 0016 FFF7FEFF 		bl	getPackVolt
 1257              	.LVL82:
 276:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 1258              		.loc 1 276 0 discriminator 3
 1259 001a 2046     		mov	r0, r4
ARM GAS  /tmp/ccH7Cmgp.s 			page 35


 1260 001c FFF7FEFF 		bl	getAvgCellVolt
 1261              	.LVL83:
 277:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 1262              		.loc 1 277 0 discriminator 3
 1263 0020 2046     		mov	r0, r4
 1264 0022 FFF7FEFF 		bl	getLowCellVolt
 1265              	.LVL84:
 278:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 1266              		.loc 1 278 0 discriminator 3
 1267 0026 2046     		mov	r0, r4
 1268 0028 FFF7FEFF 		bl	getHighCellVolt
 1269              	.LVL85:
 279:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 1270              		.loc 1 279 0 discriminator 3
 1271 002c 2046     		mov	r0, r4
 1272 002e FFF7FEFF 		bl	getCellDelta
 1273              	.LVL86:
 280:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 1274              		.loc 1 280 0 discriminator 3
 1275 0032 2046     		mov	r0, r4
 1276 0034 FFF7FEFF 		bl	getLowCellTemp
 1277              	.LVL87:
 281:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 1278              		.loc 1 281 0 discriminator 3
 1279 0038 2046     		mov	r0, r4
 1280 003a FFF7FEFF 		bl	getHighCellTemp
 1281              	.LVL88:
 282:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 1282              		.loc 1 282 0 discriminator 3
 1283 003e 2046     		mov	r0, r4
 1284 0040 FFF7FEFF 		bl	getAvgCellTemp
 1285              	.LVL89:
 283:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 1286              		.loc 1 283 0 discriminator 3
 1287 0044 2046     		mov	r0, r4
 1288 0046 FFF7FEFF 		bl	getTempDelta
 1289              	.LVL90:
 284:Core/Src/bms.c ****         getSOC(&BMS[i]);
 1290              		.loc 1 284 0 discriminator 3
 1291 004a 2946     		mov	r1, r5
 1292 004c 2046     		mov	r0, r4
 1293 004e FFF7FEFF 		bl	getCellCount
 1294              	.LVL91:
 285:Core/Src/bms.c ****         acChargeCommand();
 1295              		.loc 1 285 0 discriminator 3
 1296 0052 2046     		mov	r0, r4
 1297 0054 FFF7FEFF 		bl	getSOC
 1298              	.LVL92:
 286:Core/Src/bms.c ****     }
 1299              		.loc 1 286 0 discriminator 3
 1300 0058 FFF7FEFF 		bl	acChargeCommand
 1301              	.LVL93:
 272:Core/Src/bms.c ****     {
 1302              		.loc 1 272 0 discriminator 3
 1303 005c 0135     		adds	r5, r5, #1
 1304              	.LVL94:
 1305              	.L104:
ARM GAS  /tmp/ccH7Cmgp.s 			page 36


 272:Core/Src/bms.c ****     {
 1306              		.loc 1 272 0 is_stmt 0 discriminator 1
 1307 005e 012D     		cmp	r5, #1
 1308 0060 D1D9     		bls	.L105
 1309              	.LBE23:
 288:Core/Src/bms.c **** 
 1310              		.loc 1 288 0 is_stmt 1
 1311 0062 38BD     		pop	{r3, r4, r5, pc}
 1312              	.LVL95:
 1313              	.L108:
 1314              		.align	2
 1315              	.L107:
 1316 0064 00000000 		.word	BMS
 1317              		.cfi_endproc
 1318              	.LFE135:
 1320              		.section	.text.balanceCommand,"ax",%progbits
 1321              		.align	1
 1322              		.global	balanceCommand
 1323              		.syntax unified
 1324              		.thumb
 1325              		.thumb_func
 1326              		.fpu fpv4-sp-d16
 1328              	balanceCommand:
 1329              	.LFB138:
 364:Core/Src/bms.c ****     uint8_t canTx[8];
 1330              		.loc 1 364 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 16
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              	.LVL96:
 1335 0000 30B5     		push	{r4, r5, lr}
 1336              	.LCFI20:
 1337              		.cfi_def_cfa_offset 12
 1338              		.cfi_offset 4, -12
 1339              		.cfi_offset 5, -8
 1340              		.cfi_offset 14, -4
 1341 0002 85B0     		sub	sp, sp, #20
 1342              	.LCFI21:
 1343              		.cfi_def_cfa_offset 32
 1344 0004 0446     		mov	r4, r0
 366:Core/Src/bms.c ****     {
 1345              		.loc 1 366 0
 1346 0006 0D46     		mov	r5, r1
 1347 0008 C1B1     		cbz	r1, .L124
 1348              	.LVL97:
 1349              	.L111:
 394:Core/Src/bms.c ****     {
 1350              		.loc 1 394 0
 1351 000a 012D     		cmp	r5, #1
 1352 000c 51D0     		beq	.L127
 1353              	.L109:
 420:Core/Src/bms.c **** 
 1354              		.loc 1 420 0
 1355 000e 05B0     		add	sp, sp, #20
 1356              	.LCFI22:
 1357              		.cfi_remember_state
 1358              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccH7Cmgp.s 			page 37


 1359              		@ sp needed
 1360 0010 30BD     		pop	{r4, r5, pc}
 1361              	.LVL98:
 1362              	.L112:
 1363              	.LCFI23:
 1364              		.cfi_restore_state
 1365              	.LBB24:
 370:Core/Src/bms.c ****         {
 1366              		.loc 1 370 0 discriminator 2
 1367 0012 0133     		adds	r3, r3, #1
 1368              	.LVL99:
 1369              	.L110:
 370:Core/Src/bms.c ****         {
 1370              		.loc 1 370 0 is_stmt 0 discriminator 1
 1371 0014 3D2B     		cmp	r3, #61
 1372 0016 13D8     		bhi	.L128
 372:Core/Src/bms.c ****             {
 1373              		.loc 1 372 0 is_stmt 1
 1374 0018 B4F8E610 		ldrh	r1, [r4, #230]
 1375 001c 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1376 0020 9142     		cmp	r1, r2
 1377 0022 F6D2     		bcs	.L112
 374:Core/Src/bms.c ****             }
 1378              		.loc 1 374 0
 1379 0024 364A     		ldr	r2, .L132
 1380 0026 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1381 0028 3649     		ldr	r1, .L132+4
 1382 002a C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1383 002c 04A8     		add	r0, sp, #16
 1384 002e 0244     		add	r2, r2, r0
 1385 0030 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1386 0034 0143     		orrs	r1, r1, r0
 1387 0036 02F8081C 		strb	r1, [r2, #-8]
 1388 003a EAE7     		b	.L112
 1389              	.LVL100:
 1390              	.L124:
 1391              	.LBE24:
 1392 003c 0023     		movs	r3, #0
 1393 003e E9E7     		b	.L110
 1394              	.LVL101:
 1395              	.L128:
 377:Core/Src/bms.c ****         //c1tx(&txMsg, canTx);
 1396              		.loc 1 377 0
 1397 0040 02AA     		add	r2, sp, #8
 1398 0042 0821     		movs	r1, #8
 1399 0044 4FF44070 		mov	r0, #768
 1400 0048 FFF7FEFF 		bl	can1tx
 1401              	.LVL102:
 1402              	.LBB25:
 382:Core/Src/bms.c ****         {
 1403              		.loc 1 382 0
 1404 004c 3E23     		movs	r3, #62
 1405 004e 00E0     		b	.L114
 1406              	.LVL103:
 1407              	.L115:
 382:Core/Src/bms.c ****         {
 1408              		.loc 1 382 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccH7Cmgp.s 			page 38


 1409 0050 0133     		adds	r3, r3, #1
 1410              	.LVL104:
 1411              	.L114:
 382:Core/Src/bms.c ****         {
 1412              		.loc 1 382 0 discriminator 1
 1413 0052 5F2B     		cmp	r3, #95
 1414 0054 11D8     		bhi	.L129
 384:Core/Src/bms.c ****             {
 1415              		.loc 1 384 0 is_stmt 1
 1416 0056 B4F8E610 		ldrh	r1, [r4, #230]
 1417 005a 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1418 005e 9142     		cmp	r1, r2
 1419 0060 F6D2     		bcs	.L115
 386:Core/Src/bms.c ****             }
 1420              		.loc 1 386 0
 1421 0062 274A     		ldr	r2, .L132
 1422 0064 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1423 0066 2749     		ldr	r1, .L132+4
 1424 0068 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1425 006a 04A8     		add	r0, sp, #16
 1426 006c 0244     		add	r2, r2, r0
 1427 006e 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1428 0072 0143     		orrs	r1, r1, r0
 1429 0074 02F8081C 		strb	r1, [r2, #-8]
 1430 0078 EAE7     		b	.L115
 1431              	.L129:
 1432              	.LBE25:
 389:Core/Src/bms.c ****         //c1tx(&txMsg, canTx);
 1433              		.loc 1 389 0
 1434 007a 02AA     		add	r2, sp, #8
 1435 007c 0521     		movs	r1, #5
 1436 007e 4FF44470 		mov	r0, #784
 1437 0082 FFF7FEFF 		bl	can1tx
 1438              	.LVL105:
 1439 0086 C0E7     		b	.L111
 1440              	.LVL106:
 1441              	.L119:
 1442              	.LBB26:
 398:Core/Src/bms.c ****         {
 1443              		.loc 1 398 0 discriminator 2
 1444 0088 0133     		adds	r3, r3, #1
 1445              	.LVL107:
 1446              	.L117:
 398:Core/Src/bms.c ****         {
 1447              		.loc 1 398 0 is_stmt 0 discriminator 1
 1448 008a 3D2B     		cmp	r3, #61
 1449 008c 13D8     		bhi	.L130
 400:Core/Src/bms.c ****             {
 1450              		.loc 1 400 0 is_stmt 1
 1451 008e B4F8E610 		ldrh	r1, [r4, #230]
 1452 0092 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1453 0096 9142     		cmp	r1, r2
 1454 0098 F6D2     		bcs	.L119
 402:Core/Src/bms.c ****             }
 1455              		.loc 1 402 0
 1456 009a 194A     		ldr	r2, .L132
 1457 009c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccH7Cmgp.s 			page 39


 1458 009e 1949     		ldr	r1, .L132+4
 1459 00a0 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1460 00a2 04A8     		add	r0, sp, #16
 1461 00a4 0244     		add	r2, r2, r0
 1462 00a6 12F8100C 		ldrb	r0, [r2, #-16]	@ zero_extendqisi2
 1463 00aa 0143     		orrs	r1, r1, r0
 1464 00ac 02F8101C 		strb	r1, [r2, #-16]
 1465 00b0 EAE7     		b	.L119
 1466              	.LVL108:
 1467              	.L127:
 1468              	.LBE26:
 1469 00b2 0023     		movs	r3, #0
 1470 00b4 E9E7     		b	.L117
 1471              	.LVL109:
 1472              	.L130:
 405:Core/Src/bms.c ****         //c3tx(&txMsg3, canTx3);
 1473              		.loc 1 405 0
 1474 00b6 6A46     		mov	r2, sp
 1475 00b8 0821     		movs	r1, #8
 1476 00ba 4FF44070 		mov	r0, #768
 1477 00be FFF7FEFF 		bl	can3tx
 1478              	.LVL110:
 1479              	.LBB27:
 410:Core/Src/bms.c ****         {
 1480              		.loc 1 410 0
 1481 00c2 3E23     		movs	r3, #62
 1482 00c4 00E0     		b	.L121
 1483              	.LVL111:
 1484              	.L122:
 410:Core/Src/bms.c ****         {
 1485              		.loc 1 410 0 is_stmt 0 discriminator 2
 1486 00c6 0133     		adds	r3, r3, #1
 1487              	.LVL112:
 1488              	.L121:
 410:Core/Src/bms.c ****         {
 1489              		.loc 1 410 0 discriminator 1
 1490 00c8 5F2B     		cmp	r3, #95
 1491 00ca 11D8     		bhi	.L131
 412:Core/Src/bms.c ****             {
 1492              		.loc 1 412 0 is_stmt 1
 1493 00cc B4F8E610 		ldrh	r1, [r4, #230]
 1494 00d0 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1495 00d4 9142     		cmp	r1, r2
 1496 00d6 F6D2     		bcs	.L122
 414:Core/Src/bms.c ****             }
 1497              		.loc 1 414 0
 1498 00d8 094A     		ldr	r2, .L132
 1499 00da D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1500 00dc 0949     		ldr	r1, .L132+4
 1501 00de C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1502 00e0 04A8     		add	r0, sp, #16
 1503 00e2 0244     		add	r2, r2, r0
 1504 00e4 12F8100C 		ldrb	r0, [r2, #-16]	@ zero_extendqisi2
 1505 00e8 0143     		orrs	r1, r1, r0
 1506 00ea 02F8101C 		strb	r1, [r2, #-16]
 1507 00ee EAE7     		b	.L122
 1508              	.L131:
ARM GAS  /tmp/ccH7Cmgp.s 			page 40


 1509              	.LBE27:
 417:Core/Src/bms.c ****         //c3tx(&txMsg3, canTx3);
 1510              		.loc 1 417 0
 1511 00f0 6A46     		mov	r2, sp
 1512 00f2 0521     		movs	r1, #5
 1513 00f4 4FF44470 		mov	r0, #784
 1514 00f8 FFF7FEFF 		bl	can3tx
 1515              	.LVL113:
 420:Core/Src/bms.c **** 
 1516              		.loc 1 420 0
 1517 00fc 87E7     		b	.L109
 1518              	.L133:
 1519 00fe 00BF     		.align	2
 1520              	.L132:
 1521 0100 00000000 		.word	.LANCHOR0
 1522 0104 00000000 		.word	.LANCHOR1
 1523              		.cfi_endproc
 1524              	.LFE138:
 1526              		.section	.text.vehicleComms,"ax",%progbits
 1527              		.align	1
 1528              		.global	vehicleComms
 1529              		.syntax unified
 1530              		.thumb
 1531              		.thumb_func
 1532              		.fpu fpv4-sp-d16
 1534              	vehicleComms:
 1535              	.LFB150:
 569:Core/Src/bms.c **** 
 570:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 571:Core/Src/bms.c **** void vehicleComms(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 572:Core/Src/bms.c **** {
 1536              		.loc 1 572 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 0
 1539              		@ frame_needed = 0, uses_anonymous_args = 0
 1540              		@ link register save eliminated.
 1541              	.LVL114:
 573:Core/Src/bms.c ****     switch (rxMsg->StdId)
 1542              		.loc 1 573 0
 1543 0000 0268     		ldr	r2, [r0]
 1544 0002 40F21333 		movw	r3, #787
 1545 0006 9A42     		cmp	r2, r3
 1546 0008 02D1     		bne	.L134
 574:Core/Src/bms.c ****     {
 575:Core/Src/bms.c ****     case 0x313:
 576:Core/Src/bms.c ****         vechicleState = canRx[0];
 1547              		.loc 1 576 0
 1548 000a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1549 000c 014B     		ldr	r3, .L137
 1550 000e 1A70     		strb	r2, [r3]
 1551              	.L134:
 1552 0010 7047     		bx	lr
 1553              	.L138:
 1554 0012 00BF     		.align	2
 1555              	.L137:
 1556 0014 00000000 		.word	vechicleState
 1557              		.cfi_endproc
ARM GAS  /tmp/ccH7Cmgp.s 			page 41


 1558              	.LFE150:
 1560              		.global	__aeabi_i2d
 1561              		.global	__aeabi_dmul
 1562              		.global	__aeabi_d2uiz
 1563              		.section	.text.decodeVolt,"ax",%progbits
 1564              		.align	1
 1565              		.global	decodeVolt
 1566              		.syntax unified
 1567              		.thumb
 1568              		.thumb_func
 1569              		.fpu fpv4-sp-d16
 1571              	decodeVolt:
 1572              	.LFB151:
 577:Core/Src/bms.c ****         break;
 578:Core/Src/bms.c **** 
 579:Core/Src/bms.c ****     default:
 580:Core/Src/bms.c ****         break;
 581:Core/Src/bms.c ****     }
 582:Core/Src/bms.c **** }
 583:Core/Src/bms.c **** 
 584:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 585:Core/Src/bms.c **** void decodeVolt(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // cell voltage in millivol
 586:Core/Src/bms.c **** {
 1573              		.loc 1 586 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 0, uses_anonymous_args = 0
 1577              	.LVL115:
 1578 0000 38B5     		push	{r3, r4, r5, lr}
 1579              	.LCFI24:
 1580              		.cfi_def_cfa_offset 16
 1581              		.cfi_offset 3, -16
 1582              		.cfi_offset 4, -12
 1583              		.cfi_offset 5, -8
 1584              		.cfi_offset 14, -4
 1585 0002 0546     		mov	r5, r0
 1586 0004 1446     		mov	r4, r2
 587:Core/Src/bms.c ****     switch (rxMsg->StdId)
 1587              		.loc 1 587 0
 1588 0006 0B68     		ldr	r3, [r1]
 1589 0008 A3F58C63 		sub	r3, r3, #1120
 1590 000c 1E2B     		cmp	r3, #30
 1591 000e 00F22186 		bhi	.L139
 1592 0012 DFE813F0 		tbh	[pc, r3, lsl #1]
 1593              	.LVL116:
 1594              	.L142:
 1595 0016 1F00     		.2byte	(.L141-.L142)/2
 1596 0018 7B00     		.2byte	(.L143-.L142)/2
 1597 001a F500     		.2byte	(.L144-.L142)/2
 1598 001c 6F01     		.2byte	(.L145-.L142)/2
 1599 001e EC01     		.2byte	(.L146-.L142)/2
 1600 0020 6C02     		.2byte	(.L147-.L142)/2
 1601 0022 EE02     		.2byte	(.L148-.L142)/2
 1602 0024 1F06     		.2byte	(.L139-.L142)/2
 1603 0026 7203     		.2byte	(.L149-.L142)/2
 1604 0028 F403     		.2byte	(.L150-.L142)/2
 1605 002a 7604     		.2byte	(.L151-.L142)/2
ARM GAS  /tmp/ccH7Cmgp.s 			page 42


 1606 002c 1F06     		.2byte	(.L139-.L142)/2
 1607 002e FA04     		.2byte	(.L152-.L142)/2
 1608 0030 5C05     		.2byte	(.L153-.L142)/2
 1609 0032 BE05     		.2byte	(.L154-.L142)/2
 1610 0034 1F06     		.2byte	(.L139-.L142)/2
 1611 0036 4D00     		.2byte	(.L155-.L142)/2
 1612 0038 B800     		.2byte	(.L156-.L142)/2
 1613 003a 3201     		.2byte	(.L157-.L142)/2
 1614 003c AF01     		.2byte	(.L158-.L142)/2
 1615 003e 2B02     		.2byte	(.L159-.L142)/2
 1616 0040 AD02     		.2byte	(.L160-.L142)/2
 1617 0042 3103     		.2byte	(.L161-.L142)/2
 1618 0044 1F06     		.2byte	(.L139-.L142)/2
 1619 0046 B303     		.2byte	(.L162-.L142)/2
 1620 0048 3504     		.2byte	(.L163-.L142)/2
 1621 004a B904     		.2byte	(.L164-.L142)/2
 1622 004c 1F06     		.2byte	(.L139-.L142)/2
 1623 004e 2B05     		.2byte	(.L165-.L142)/2
 1624 0050 8D05     		.2byte	(.L166-.L142)/2
 1625 0052 EF05     		.2byte	(.L167-.L142)/2
 1626              		.p2align 1
 1627              	.L141:
 588:Core/Src/bms.c ****     {
 589:Core/Src/bms.c ****     case 0x460: // Begin module 1
 590:Core/Src/bms.c ****         bms->cellVolt[0] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1628              		.loc 1 590 0
 1629 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1630 0056 1B02     		lsls	r3, r3, #8
 1631 0058 03F47063 		and	r3, r3, #3840
 1632 005c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1633              	.LVL117:
 1634 005e 1844     		add	r0, r0, r3
 1635 0060 FFF7FEFF 		bl	__aeabi_i2d
 1636              	.LVL118:
 1637 0064 0022     		movs	r2, #0
 1638 0066 C24B     		ldr	r3, .L169
 1639 0068 FFF7FEFF 		bl	__aeabi_dmul
 1640              	.LVL119:
 1641 006c FFF7FEFF 		bl	__aeabi_d2uiz
 1642              	.LVL120:
 1643 0070 2880     		strh	r0, [r5]	@ movhi
 591:Core/Src/bms.c ****         bms->cellVolt[1] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1644              		.loc 1 591 0
 1645 0072 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1646 0074 1B02     		lsls	r3, r3, #8
 1647 0076 03F47063 		and	r3, r3, #3840
 1648 007a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1649 007c 1844     		add	r0, r0, r3
 1650 007e FFF7FEFF 		bl	__aeabi_i2d
 1651              	.LVL121:
 1652 0082 0022     		movs	r2, #0
 1653 0084 BA4B     		ldr	r3, .L169
 1654 0086 FFF7FEFF 		bl	__aeabi_dmul
 1655              	.LVL122:
 1656 008a FFF7FEFF 		bl	__aeabi_d2uiz
 1657              	.LVL123:
 1658 008e 6880     		strh	r0, [r5, #2]	@ movhi
ARM GAS  /tmp/ccH7Cmgp.s 			page 43


 592:Core/Src/bms.c ****         bms->cellVolt[2] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1659              		.loc 1 592 0
 1660 0090 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1661 0092 1B02     		lsls	r3, r3, #8
 1662 0094 03F47063 		and	r3, r3, #3840
 1663 0098 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1664 009a 1844     		add	r0, r0, r3
 1665 009c FFF7FEFF 		bl	__aeabi_i2d
 1666              	.LVL124:
 1667 00a0 0022     		movs	r2, #0
 1668 00a2 B34B     		ldr	r3, .L169
 1669 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1670              	.LVL125:
 1671 00a8 FFF7FEFF 		bl	__aeabi_d2uiz
 1672              	.LVL126:
 1673 00ac A880     		strh	r0, [r5, #4]	@ movhi
 593:Core/Src/bms.c ****         break;
 1674              		.loc 1 593 0
 1675 00ae 38BD     		pop	{r3, r4, r5, pc}
 1676              	.LVL127:
 1677              	.L155:
 594:Core/Src/bms.c **** 
 595:Core/Src/bms.c ****     case 0x470:
 596:Core/Src/bms.c ****         bms->cellVolt[3] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1678              		.loc 1 596 0
 1679 00b0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1680 00b2 1B02     		lsls	r3, r3, #8
 1681 00b4 03F47063 		and	r3, r3, #3840
 1682 00b8 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1683              	.LVL128:
 1684 00ba 1844     		add	r0, r0, r3
 1685 00bc FFF7FEFF 		bl	__aeabi_i2d
 1686              	.LVL129:
 1687 00c0 0022     		movs	r2, #0
 1688 00c2 AB4B     		ldr	r3, .L169
 1689 00c4 FFF7FEFF 		bl	__aeabi_dmul
 1690              	.LVL130:
 1691 00c8 FFF7FEFF 		bl	__aeabi_d2uiz
 1692              	.LVL131:
 1693 00cc E880     		strh	r0, [r5, #6]	@ movhi
 597:Core/Src/bms.c ****         bms->cellVolt[4] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1694              		.loc 1 597 0
 1695 00ce A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1696 00d0 1B02     		lsls	r3, r3, #8
 1697 00d2 03F47063 		and	r3, r3, #3840
 1698 00d6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1699 00d8 1844     		add	r0, r0, r3
 1700 00da FFF7FEFF 		bl	__aeabi_i2d
 1701              	.LVL132:
 1702 00de 0022     		movs	r2, #0
 1703 00e0 A34B     		ldr	r3, .L169
 1704 00e2 FFF7FEFF 		bl	__aeabi_dmul
 1705              	.LVL133:
 1706 00e6 FFF7FEFF 		bl	__aeabi_d2uiz
 1707              	.LVL134:
 1708 00ea 2881     		strh	r0, [r5, #8]	@ movhi
 598:Core/Src/bms.c ****         bms->cellVolt[5] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
ARM GAS  /tmp/ccH7Cmgp.s 			page 44


 1709              		.loc 1 598 0
 1710 00ec 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1711 00ee 1B02     		lsls	r3, r3, #8
 1712 00f0 03F47063 		and	r3, r3, #3840
 1713 00f4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1714 00f6 1844     		add	r0, r0, r3
 1715 00f8 FFF7FEFF 		bl	__aeabi_i2d
 1716              	.LVL135:
 1717 00fc 0022     		movs	r2, #0
 1718 00fe 9C4B     		ldr	r3, .L169
 1719 0100 FFF7FEFF 		bl	__aeabi_dmul
 1720              	.LVL136:
 1721 0104 FFF7FEFF 		bl	__aeabi_d2uiz
 1722              	.LVL137:
 1723 0108 6881     		strh	r0, [r5, #10]	@ movhi
 599:Core/Src/bms.c ****         break;
 1724              		.loc 1 599 0
 1725 010a 38BD     		pop	{r3, r4, r5, pc}
 1726              	.LVL138:
 1727              	.L143:
 600:Core/Src/bms.c **** 
 601:Core/Src/bms.c ****     case 0x461:
 602:Core/Src/bms.c ****         bms->cellVolt[6] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1728              		.loc 1 602 0
 1729 010c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1730 010e 1B02     		lsls	r3, r3, #8
 1731 0110 03F47063 		and	r3, r3, #3840
 1732 0114 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1733              	.LVL139:
 1734 0116 1844     		add	r0, r0, r3
 1735 0118 FFF7FEFF 		bl	__aeabi_i2d
 1736              	.LVL140:
 1737 011c 0022     		movs	r2, #0
 1738 011e 944B     		ldr	r3, .L169
 1739 0120 FFF7FEFF 		bl	__aeabi_dmul
 1740              	.LVL141:
 1741 0124 FFF7FEFF 		bl	__aeabi_d2uiz
 1742              	.LVL142:
 1743 0128 A881     		strh	r0, [r5, #12]	@ movhi
 603:Core/Src/bms.c ****         bms->cellVolt[7] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1744              		.loc 1 603 0
 1745 012a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1746 012c 1B02     		lsls	r3, r3, #8
 1747 012e 03F47063 		and	r3, r3, #3840
 1748 0132 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1749 0134 1844     		add	r0, r0, r3
 1750 0136 FFF7FEFF 		bl	__aeabi_i2d
 1751              	.LVL143:
 1752 013a 0022     		movs	r2, #0
 1753 013c 8C4B     		ldr	r3, .L169
 1754 013e FFF7FEFF 		bl	__aeabi_dmul
 1755              	.LVL144:
 1756 0142 FFF7FEFF 		bl	__aeabi_d2uiz
 1757              	.LVL145:
 1758 0146 E881     		strh	r0, [r5, #14]	@ movhi
 604:Core/Src/bms.c ****         bms->cellVolt[8] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1759              		.loc 1 604 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 45


 1760 0148 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1761 014a 1B02     		lsls	r3, r3, #8
 1762 014c 03F47063 		and	r3, r3, #3840
 1763 0150 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1764 0152 1844     		add	r0, r0, r3
 1765 0154 FFF7FEFF 		bl	__aeabi_i2d
 1766              	.LVL146:
 1767 0158 0022     		movs	r2, #0
 1768 015a 854B     		ldr	r3, .L169
 1769 015c FFF7FEFF 		bl	__aeabi_dmul
 1770              	.LVL147:
 1771 0160 FFF7FEFF 		bl	__aeabi_d2uiz
 1772              	.LVL148:
 1773 0164 2882     		strh	r0, [r5, #16]	@ movhi
 605:Core/Src/bms.c ****         bms->cellVolt[9] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1774              		.loc 1 605 0
 1775 0166 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1776 0168 1B02     		lsls	r3, r3, #8
 1777 016a 03F47063 		and	r3, r3, #3840
 1778 016e E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1779 0170 1844     		add	r0, r0, r3
 1780 0172 FFF7FEFF 		bl	__aeabi_i2d
 1781              	.LVL149:
 1782 0176 0022     		movs	r2, #0
 1783 0178 7D4B     		ldr	r3, .L169
 1784 017a FFF7FEFF 		bl	__aeabi_dmul
 1785              	.LVL150:
 1786 017e FFF7FEFF 		bl	__aeabi_d2uiz
 1787              	.LVL151:
 1788 0182 6882     		strh	r0, [r5, #18]	@ movhi
 606:Core/Src/bms.c ****         break;
 1789              		.loc 1 606 0
 1790 0184 38BD     		pop	{r3, r4, r5, pc}
 1791              	.LVL152:
 1792              	.L156:
 607:Core/Src/bms.c **** 
 608:Core/Src/bms.c ****     case 0x471:
 609:Core/Src/bms.c ****         bms->cellVolt[10] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1793              		.loc 1 609 0
 1794 0186 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1795 0188 1B02     		lsls	r3, r3, #8
 1796 018a 03F47063 		and	r3, r3, #3840
 1797 018e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1798              	.LVL153:
 1799 0190 1844     		add	r0, r0, r3
 1800 0192 FFF7FEFF 		bl	__aeabi_i2d
 1801              	.LVL154:
 1802 0196 0022     		movs	r2, #0
 1803 0198 754B     		ldr	r3, .L169
 1804 019a FFF7FEFF 		bl	__aeabi_dmul
 1805              	.LVL155:
 1806 019e FFF7FEFF 		bl	__aeabi_d2uiz
 1807              	.LVL156:
 1808 01a2 A882     		strh	r0, [r5, #20]	@ movhi
 610:Core/Src/bms.c ****         bms->cellVolt[11] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1809              		.loc 1 610 0
 1810 01a4 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccH7Cmgp.s 			page 46


 1811 01a6 1B02     		lsls	r3, r3, #8
 1812 01a8 03F47063 		and	r3, r3, #3840
 1813 01ac E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1814 01ae 1844     		add	r0, r0, r3
 1815 01b0 FFF7FEFF 		bl	__aeabi_i2d
 1816              	.LVL157:
 1817 01b4 0022     		movs	r2, #0
 1818 01b6 6E4B     		ldr	r3, .L169
 1819 01b8 FFF7FEFF 		bl	__aeabi_dmul
 1820              	.LVL158:
 1821 01bc FFF7FEFF 		bl	__aeabi_d2uiz
 1822              	.LVL159:
 1823 01c0 E882     		strh	r0, [r5, #22]	@ movhi
 611:Core/Src/bms.c ****         bms->cellVolt[12] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1824              		.loc 1 611 0
 1825 01c2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1826 01c4 1B02     		lsls	r3, r3, #8
 1827 01c6 03F47063 		and	r3, r3, #3840
 1828 01ca 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1829 01cc 1844     		add	r0, r0, r3
 1830 01ce FFF7FEFF 		bl	__aeabi_i2d
 1831              	.LVL160:
 1832 01d2 0022     		movs	r2, #0
 1833 01d4 664B     		ldr	r3, .L169
 1834 01d6 FFF7FEFF 		bl	__aeabi_dmul
 1835              	.LVL161:
 1836 01da FFF7FEFF 		bl	__aeabi_d2uiz
 1837              	.LVL162:
 1838 01de 2883     		strh	r0, [r5, #24]	@ movhi
 612:Core/Src/bms.c ****         bms->cellVolt[13] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1839              		.loc 1 612 0
 1840 01e0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1841 01e2 1B02     		lsls	r3, r3, #8
 1842 01e4 03F47063 		and	r3, r3, #3840
 1843 01e8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1844 01ea 1844     		add	r0, r0, r3
 1845 01ec FFF7FEFF 		bl	__aeabi_i2d
 1846              	.LVL163:
 1847 01f0 0022     		movs	r2, #0
 1848 01f2 5F4B     		ldr	r3, .L169
 1849 01f4 FFF7FEFF 		bl	__aeabi_dmul
 1850              	.LVL164:
 1851 01f8 FFF7FEFF 		bl	__aeabi_d2uiz
 1852              	.LVL165:
 1853 01fc 6883     		strh	r0, [r5, #26]	@ movhi
 613:Core/Src/bms.c ****         break;
 1854              		.loc 1 613 0
 1855 01fe 38BD     		pop	{r3, r4, r5, pc}
 1856              	.LVL166:
 1857              	.L144:
 614:Core/Src/bms.c **** 
 615:Core/Src/bms.c ****     case 0x462:
 616:Core/Src/bms.c ****         bms->cellVolt[14] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1858              		.loc 1 616 0
 1859 0200 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1860 0202 1B02     		lsls	r3, r3, #8
 1861 0204 03F47063 		and	r3, r3, #3840
ARM GAS  /tmp/ccH7Cmgp.s 			page 47


 1862 0208 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1863              	.LVL167:
 1864 020a 1844     		add	r0, r0, r3
 1865 020c FFF7FEFF 		bl	__aeabi_i2d
 1866              	.LVL168:
 1867 0210 0022     		movs	r2, #0
 1868 0212 574B     		ldr	r3, .L169
 1869 0214 FFF7FEFF 		bl	__aeabi_dmul
 1870              	.LVL169:
 1871 0218 FFF7FEFF 		bl	__aeabi_d2uiz
 1872              	.LVL170:
 1873 021c A883     		strh	r0, [r5, #28]	@ movhi
 617:Core/Src/bms.c ****         bms->cellVolt[15] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1874              		.loc 1 617 0
 1875 021e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1876 0220 1B02     		lsls	r3, r3, #8
 1877 0222 03F47063 		and	r3, r3, #3840
 1878 0226 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1879 0228 1844     		add	r0, r0, r3
 1880 022a FFF7FEFF 		bl	__aeabi_i2d
 1881              	.LVL171:
 1882 022e 0022     		movs	r2, #0
 1883 0230 4F4B     		ldr	r3, .L169
 1884 0232 FFF7FEFF 		bl	__aeabi_dmul
 1885              	.LVL172:
 1886 0236 FFF7FEFF 		bl	__aeabi_d2uiz
 1887              	.LVL173:
 1888 023a E883     		strh	r0, [r5, #30]	@ movhi
 618:Core/Src/bms.c ****         bms->cellVolt[16] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1889              		.loc 1 618 0
 1890 023c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1891 023e 1B02     		lsls	r3, r3, #8
 1892 0240 03F47063 		and	r3, r3, #3840
 1893 0244 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1894 0246 1844     		add	r0, r0, r3
 1895 0248 FFF7FEFF 		bl	__aeabi_i2d
 1896              	.LVL174:
 1897 024c 0022     		movs	r2, #0
 1898 024e 484B     		ldr	r3, .L169
 1899 0250 FFF7FEFF 		bl	__aeabi_dmul
 1900              	.LVL175:
 1901 0254 FFF7FEFF 		bl	__aeabi_d2uiz
 1902              	.LVL176:
 1903 0258 2884     		strh	r0, [r5, #32]	@ movhi
 619:Core/Src/bms.c ****         bms->cellVolt[17] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1904              		.loc 1 619 0
 1905 025a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1906 025c 1B02     		lsls	r3, r3, #8
 1907 025e 03F47063 		and	r3, r3, #3840
 1908 0262 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1909 0264 1844     		add	r0, r0, r3
 1910 0266 FFF7FEFF 		bl	__aeabi_i2d
 1911              	.LVL177:
 1912 026a 0022     		movs	r2, #0
 1913 026c 404B     		ldr	r3, .L169
 1914 026e FFF7FEFF 		bl	__aeabi_dmul
 1915              	.LVL178:
ARM GAS  /tmp/ccH7Cmgp.s 			page 48


 1916 0272 FFF7FEFF 		bl	__aeabi_d2uiz
 1917              	.LVL179:
 1918 0276 6884     		strh	r0, [r5, #34]	@ movhi
 620:Core/Src/bms.c ****         break;
 1919              		.loc 1 620 0
 1920 0278 38BD     		pop	{r3, r4, r5, pc}
 1921              	.LVL180:
 1922              	.L157:
 621:Core/Src/bms.c **** 
 622:Core/Src/bms.c ****     case 0x472:
 623:Core/Src/bms.c ****         bms->cellVolt[18] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1923              		.loc 1 623 0
 1924 027a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1925 027c 1B02     		lsls	r3, r3, #8
 1926 027e 03F47063 		and	r3, r3, #3840
 1927 0282 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1928              	.LVL181:
 1929 0284 1844     		add	r0, r0, r3
 1930 0286 FFF7FEFF 		bl	__aeabi_i2d
 1931              	.LVL182:
 1932 028a 0022     		movs	r2, #0
 1933 028c 384B     		ldr	r3, .L169
 1934 028e FFF7FEFF 		bl	__aeabi_dmul
 1935              	.LVL183:
 1936 0292 FFF7FEFF 		bl	__aeabi_d2uiz
 1937              	.LVL184:
 1938 0296 A884     		strh	r0, [r5, #36]	@ movhi
 624:Core/Src/bms.c ****         bms->cellVolt[19] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1939              		.loc 1 624 0
 1940 0298 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1941 029a 1B02     		lsls	r3, r3, #8
 1942 029c 03F47063 		and	r3, r3, #3840
 1943 02a0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1944 02a2 1844     		add	r0, r0, r3
 1945 02a4 FFF7FEFF 		bl	__aeabi_i2d
 1946              	.LVL185:
 1947 02a8 0022     		movs	r2, #0
 1948 02aa 314B     		ldr	r3, .L169
 1949 02ac FFF7FEFF 		bl	__aeabi_dmul
 1950              	.LVL186:
 1951 02b0 FFF7FEFF 		bl	__aeabi_d2uiz
 1952              	.LVL187:
 1953 02b4 E884     		strh	r0, [r5, #38]	@ movhi
 625:Core/Src/bms.c ****         bms->cellVolt[20] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1954              		.loc 1 625 0
 1955 02b6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1956 02b8 1B02     		lsls	r3, r3, #8
 1957 02ba 03F47063 		and	r3, r3, #3840
 1958 02be 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1959 02c0 1844     		add	r0, r0, r3
 1960 02c2 FFF7FEFF 		bl	__aeabi_i2d
 1961              	.LVL188:
 1962 02c6 0022     		movs	r2, #0
 1963 02c8 294B     		ldr	r3, .L169
 1964 02ca FFF7FEFF 		bl	__aeabi_dmul
 1965              	.LVL189:
 1966 02ce FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/ccH7Cmgp.s 			page 49


 1967              	.LVL190:
 1968 02d2 2885     		strh	r0, [r5, #40]	@ movhi
 626:Core/Src/bms.c ****         bms->cellVolt[21] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1969              		.loc 1 626 0
 1970 02d4 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1971 02d6 1B02     		lsls	r3, r3, #8
 1972 02d8 03F47063 		and	r3, r3, #3840
 1973 02dc E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1974 02de 1844     		add	r0, r0, r3
 1975 02e0 FFF7FEFF 		bl	__aeabi_i2d
 1976              	.LVL191:
 1977 02e4 0022     		movs	r2, #0
 1978 02e6 224B     		ldr	r3, .L169
 1979 02e8 FFF7FEFF 		bl	__aeabi_dmul
 1980              	.LVL192:
 1981 02ec FFF7FEFF 		bl	__aeabi_d2uiz
 1982              	.LVL193:
 1983 02f0 6885     		strh	r0, [r5, #42]	@ movhi
 627:Core/Src/bms.c ****         break;
 1984              		.loc 1 627 0
 1985 02f2 38BD     		pop	{r3, r4, r5, pc}
 1986              	.LVL194:
 1987              	.L145:
 628:Core/Src/bms.c ****     case 0x463:
 629:Core/Src/bms.c ****         bms->cellVolt[22] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1988              		.loc 1 629 0
 1989 02f4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1990 02f6 1B02     		lsls	r3, r3, #8
 1991 02f8 03F47063 		and	r3, r3, #3840
 1992 02fc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1993              	.LVL195:
 1994 02fe 1844     		add	r0, r0, r3
 1995 0300 FFF7FEFF 		bl	__aeabi_i2d
 1996              	.LVL196:
 1997 0304 0022     		movs	r2, #0
 1998 0306 1A4B     		ldr	r3, .L169
 1999 0308 FFF7FEFF 		bl	__aeabi_dmul
 2000              	.LVL197:
 2001 030c FFF7FEFF 		bl	__aeabi_d2uiz
 2002              	.LVL198:
 2003 0310 A885     		strh	r0, [r5, #44]	@ movhi
 630:Core/Src/bms.c ****         bms->cellVolt[23] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2004              		.loc 1 630 0
 2005 0312 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2006 0314 1B02     		lsls	r3, r3, #8
 2007 0316 03F47063 		and	r3, r3, #3840
 2008 031a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2009 031c 1844     		add	r0, r0, r3
 2010 031e FFF7FEFF 		bl	__aeabi_i2d
 2011              	.LVL199:
 2012 0322 0022     		movs	r2, #0
 2013 0324 124B     		ldr	r3, .L169
 2014 0326 FFF7FEFF 		bl	__aeabi_dmul
 2015              	.LVL200:
 2016 032a FFF7FEFF 		bl	__aeabi_d2uiz
 2017              	.LVL201:
 2018 032e E885     		strh	r0, [r5, #46]	@ movhi
ARM GAS  /tmp/ccH7Cmgp.s 			page 50


 631:Core/Src/bms.c ****         bms->cellVolt[24] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2019              		.loc 1 631 0
 2020 0330 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2021 0332 1B02     		lsls	r3, r3, #8
 2022 0334 03F47063 		and	r3, r3, #3840
 2023 0338 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2024 033a 1844     		add	r0, r0, r3
 2025 033c FFF7FEFF 		bl	__aeabi_i2d
 2026              	.LVL202:
 2027 0340 0022     		movs	r2, #0
 2028 0342 0B4B     		ldr	r3, .L169
 2029 0344 FFF7FEFF 		bl	__aeabi_dmul
 2030              	.LVL203:
 2031 0348 FFF7FEFF 		bl	__aeabi_d2uiz
 2032              	.LVL204:
 2033 034c 2886     		strh	r0, [r5, #48]	@ movhi
 632:Core/Src/bms.c ****         bms->cellVolt[25] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2034              		.loc 1 632 0
 2035 034e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2036 0350 1B02     		lsls	r3, r3, #8
 2037 0352 03F47063 		and	r3, r3, #3840
 2038 0356 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2039 0358 1844     		add	r0, r0, r3
 2040 035a FFF7FEFF 		bl	__aeabi_i2d
 2041              	.LVL205:
 2042 035e 0022     		movs	r2, #0
 2043 0360 034B     		ldr	r3, .L169
 2044 0362 FFF7FEFF 		bl	__aeabi_dmul
 2045              	.LVL206:
 2046 0366 FFF7FEFF 		bl	__aeabi_d2uiz
 2047              	.LVL207:
 2048 036a 6886     		strh	r0, [r5, #50]	@ movhi
 633:Core/Src/bms.c ****         break;
 2049              		.loc 1 633 0
 2050 036c 38BD     		pop	{r3, r4, r5, pc}
 2051              	.LVL208:
 2052              	.L170:
 2053 036e 00BF     		.align	2
 2054              	.L169:
 2055 0370 0000F43F 		.word	1072955392
 2056              	.LVL209:
 2057              	.L158:
 634:Core/Src/bms.c **** 
 635:Core/Src/bms.c ****     case 0x473:
 636:Core/Src/bms.c ****         bms->cellVolt[26] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2058              		.loc 1 636 0
 2059 0374 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2060 0376 1B02     		lsls	r3, r3, #8
 2061 0378 03F47063 		and	r3, r3, #3840
 2062 037c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2063              	.LVL210:
 2064 037e 1844     		add	r0, r0, r3
 2065 0380 FFF7FEFF 		bl	__aeabi_i2d
 2066              	.LVL211:
 2067 0384 0022     		movs	r2, #0
 2068 0386 BB4B     		ldr	r3, .L171
 2069 0388 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccH7Cmgp.s 			page 51


 2070              	.LVL212:
 2071 038c FFF7FEFF 		bl	__aeabi_d2uiz
 2072              	.LVL213:
 2073 0390 A886     		strh	r0, [r5, #52]	@ movhi
 637:Core/Src/bms.c ****         bms->cellVolt[27] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2074              		.loc 1 637 0
 2075 0392 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2076 0394 1B02     		lsls	r3, r3, #8
 2077 0396 03F47063 		and	r3, r3, #3840
 2078 039a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2079 039c 1844     		add	r0, r0, r3
 2080 039e FFF7FEFF 		bl	__aeabi_i2d
 2081              	.LVL214:
 2082 03a2 0022     		movs	r2, #0
 2083 03a4 B34B     		ldr	r3, .L171
 2084 03a6 FFF7FEFF 		bl	__aeabi_dmul
 2085              	.LVL215:
 2086 03aa FFF7FEFF 		bl	__aeabi_d2uiz
 2087              	.LVL216:
 2088 03ae E886     		strh	r0, [r5, #54]	@ movhi
 638:Core/Src/bms.c ****         bms->cellVolt[28] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2089              		.loc 1 638 0
 2090 03b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2091 03b2 1B02     		lsls	r3, r3, #8
 2092 03b4 03F47063 		and	r3, r3, #3840
 2093 03b8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2094 03ba 1844     		add	r0, r0, r3
 2095 03bc FFF7FEFF 		bl	__aeabi_i2d
 2096              	.LVL217:
 2097 03c0 0022     		movs	r2, #0
 2098 03c2 AC4B     		ldr	r3, .L171
 2099 03c4 FFF7FEFF 		bl	__aeabi_dmul
 2100              	.LVL218:
 2101 03c8 FFF7FEFF 		bl	__aeabi_d2uiz
 2102              	.LVL219:
 2103 03cc 2887     		strh	r0, [r5, #56]	@ movhi
 639:Core/Src/bms.c ****         bms->cellVolt[29] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2104              		.loc 1 639 0
 2105 03ce A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2106 03d0 1B02     		lsls	r3, r3, #8
 2107 03d2 03F47063 		and	r3, r3, #3840
 2108 03d6 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2109 03d8 1844     		add	r0, r0, r3
 2110 03da FFF7FEFF 		bl	__aeabi_i2d
 2111              	.LVL220:
 2112 03de 0022     		movs	r2, #0
 2113 03e0 A44B     		ldr	r3, .L171
 2114 03e2 FFF7FEFF 		bl	__aeabi_dmul
 2115              	.LVL221:
 2116 03e6 FFF7FEFF 		bl	__aeabi_d2uiz
 2117              	.LVL222:
 2118 03ea 6887     		strh	r0, [r5, #58]	@ movhi
 640:Core/Src/bms.c ****         break;
 2119              		.loc 1 640 0
 2120 03ec 38BD     		pop	{r3, r4, r5, pc}
 2121              	.LVL223:
 2122              	.L146:
ARM GAS  /tmp/ccH7Cmgp.s 			page 52


 641:Core/Src/bms.c **** 
 642:Core/Src/bms.c ****     case 0x464:
 643:Core/Src/bms.c ****         bms->cellVolt[30] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); // Begin module 2
 2123              		.loc 1 643 0
 2124 03ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2125 03f0 1B02     		lsls	r3, r3, #8
 2126 03f2 03F47063 		and	r3, r3, #3840
 2127 03f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2128              	.LVL224:
 2129 03f8 1844     		add	r0, r0, r3
 2130 03fa FFF7FEFF 		bl	__aeabi_i2d
 2131              	.LVL225:
 2132 03fe 0022     		movs	r2, #0
 2133 0400 9C4B     		ldr	r3, .L171
 2134 0402 FFF7FEFF 		bl	__aeabi_dmul
 2135              	.LVL226:
 2136 0406 FFF7FEFF 		bl	__aeabi_d2uiz
 2137              	.LVL227:
 2138 040a A887     		strh	r0, [r5, #60]	@ movhi
 644:Core/Src/bms.c ****         bms->cellVolt[31] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2139              		.loc 1 644 0
 2140 040c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2141 040e 1B02     		lsls	r3, r3, #8
 2142 0410 03F47063 		and	r3, r3, #3840
 2143 0414 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2144 0416 1844     		add	r0, r0, r3
 2145 0418 FFF7FEFF 		bl	__aeabi_i2d
 2146              	.LVL228:
 2147 041c 0022     		movs	r2, #0
 2148 041e 954B     		ldr	r3, .L171
 2149 0420 FFF7FEFF 		bl	__aeabi_dmul
 2150              	.LVL229:
 2151 0424 FFF7FEFF 		bl	__aeabi_d2uiz
 2152              	.LVL230:
 2153 0428 E887     		strh	r0, [r5, #62]	@ movhi
 645:Core/Src/bms.c ****         bms->cellVolt[32] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2154              		.loc 1 645 0
 2155 042a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2156 042c 1B02     		lsls	r3, r3, #8
 2157 042e 03F47063 		and	r3, r3, #3840
 2158 0432 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2159 0434 1844     		add	r0, r0, r3
 2160 0436 FFF7FEFF 		bl	__aeabi_i2d
 2161              	.LVL231:
 2162 043a 0022     		movs	r2, #0
 2163 043c 8D4B     		ldr	r3, .L171
 2164 043e FFF7FEFF 		bl	__aeabi_dmul
 2165              	.LVL232:
 2166 0442 FFF7FEFF 		bl	__aeabi_d2uiz
 2167              	.LVL233:
 2168 0446 A5F84000 		strh	r0, [r5, #64]	@ movhi
 646:Core/Src/bms.c ****         bms->cellVolt[33] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2169              		.loc 1 646 0
 2170 044a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2171 044c 1B02     		lsls	r3, r3, #8
 2172 044e 03F47063 		and	r3, r3, #3840
 2173 0452 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccH7Cmgp.s 			page 53


 2174 0454 1844     		add	r0, r0, r3
 2175 0456 FFF7FEFF 		bl	__aeabi_i2d
 2176              	.LVL234:
 2177 045a 0022     		movs	r2, #0
 2178 045c 854B     		ldr	r3, .L171
 2179 045e FFF7FEFF 		bl	__aeabi_dmul
 2180              	.LVL235:
 2181 0462 FFF7FEFF 		bl	__aeabi_d2uiz
 2182              	.LVL236:
 2183 0466 A5F84200 		strh	r0, [r5, #66]	@ movhi
 647:Core/Src/bms.c ****         break;
 2184              		.loc 1 647 0
 2185 046a 38BD     		pop	{r3, r4, r5, pc}
 2186              	.LVL237:
 2187              	.L159:
 648:Core/Src/bms.c **** 
 649:Core/Src/bms.c ****     case 0x474:
 650:Core/Src/bms.c ****         bms->cellVolt[34] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2188              		.loc 1 650 0
 2189 046c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2190 046e 1B02     		lsls	r3, r3, #8
 2191 0470 03F47063 		and	r3, r3, #3840
 2192 0474 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2193              	.LVL238:
 2194 0476 1844     		add	r0, r0, r3
 2195 0478 FFF7FEFF 		bl	__aeabi_i2d
 2196              	.LVL239:
 2197 047c 0022     		movs	r2, #0
 2198 047e 7D4B     		ldr	r3, .L171
 2199 0480 FFF7FEFF 		bl	__aeabi_dmul
 2200              	.LVL240:
 2201 0484 FFF7FEFF 		bl	__aeabi_d2uiz
 2202              	.LVL241:
 2203 0488 A5F84400 		strh	r0, [r5, #68]	@ movhi
 651:Core/Src/bms.c ****         bms->cellVolt[35] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2204              		.loc 1 651 0
 2205 048c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2206 048e 1B02     		lsls	r3, r3, #8
 2207 0490 03F47063 		and	r3, r3, #3840
 2208 0494 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2209 0496 1844     		add	r0, r0, r3
 2210 0498 FFF7FEFF 		bl	__aeabi_i2d
 2211              	.LVL242:
 2212 049c 0022     		movs	r2, #0
 2213 049e 754B     		ldr	r3, .L171
 2214 04a0 FFF7FEFF 		bl	__aeabi_dmul
 2215              	.LVL243:
 2216 04a4 FFF7FEFF 		bl	__aeabi_d2uiz
 2217              	.LVL244:
 2218 04a8 A5F84600 		strh	r0, [r5, #70]	@ movhi
 652:Core/Src/bms.c ****         bms->cellVolt[36] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2219              		.loc 1 652 0
 2220 04ac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2221 04ae 1B02     		lsls	r3, r3, #8
 2222 04b0 03F47063 		and	r3, r3, #3840
 2223 04b4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2224 04b6 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccH7Cmgp.s 			page 54


 2225 04b8 FFF7FEFF 		bl	__aeabi_i2d
 2226              	.LVL245:
 2227 04bc 0022     		movs	r2, #0
 2228 04be 6D4B     		ldr	r3, .L171
 2229 04c0 FFF7FEFF 		bl	__aeabi_dmul
 2230              	.LVL246:
 2231 04c4 FFF7FEFF 		bl	__aeabi_d2uiz
 2232              	.LVL247:
 2233 04c8 A5F84800 		strh	r0, [r5, #72]	@ movhi
 653:Core/Src/bms.c ****         bms->cellVolt[37] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2234              		.loc 1 653 0
 2235 04cc A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2236 04ce 1B02     		lsls	r3, r3, #8
 2237 04d0 03F47063 		and	r3, r3, #3840
 2238 04d4 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2239 04d6 1844     		add	r0, r0, r3
 2240 04d8 FFF7FEFF 		bl	__aeabi_i2d
 2241              	.LVL248:
 2242 04dc 0022     		movs	r2, #0
 2243 04de 654B     		ldr	r3, .L171
 2244 04e0 FFF7FEFF 		bl	__aeabi_dmul
 2245              	.LVL249:
 2246 04e4 FFF7FEFF 		bl	__aeabi_d2uiz
 2247              	.LVL250:
 2248 04e8 A5F84A00 		strh	r0, [r5, #74]	@ movhi
 654:Core/Src/bms.c ****         break;
 2249              		.loc 1 654 0
 2250 04ec 38BD     		pop	{r3, r4, r5, pc}
 2251              	.LVL251:
 2252              	.L147:
 655:Core/Src/bms.c **** 
 656:Core/Src/bms.c ****     case 0x465:
 657:Core/Src/bms.c ****         bms->cellVolt[38] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2253              		.loc 1 657 0
 2254 04ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2255 04f0 1B02     		lsls	r3, r3, #8
 2256 04f2 03F47063 		and	r3, r3, #3840
 2257 04f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2258              	.LVL252:
 2259 04f8 1844     		add	r0, r0, r3
 2260 04fa FFF7FEFF 		bl	__aeabi_i2d
 2261              	.LVL253:
 2262 04fe 0022     		movs	r2, #0
 2263 0500 5C4B     		ldr	r3, .L171
 2264 0502 FFF7FEFF 		bl	__aeabi_dmul
 2265              	.LVL254:
 2266 0506 FFF7FEFF 		bl	__aeabi_d2uiz
 2267              	.LVL255:
 2268 050a A5F84C00 		strh	r0, [r5, #76]	@ movhi
 658:Core/Src/bms.c ****         bms->cellVolt[39] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2269              		.loc 1 658 0
 2270 050e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2271 0510 1B02     		lsls	r3, r3, #8
 2272 0512 03F47063 		and	r3, r3, #3840
 2273 0516 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2274 0518 1844     		add	r0, r0, r3
 2275 051a FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccH7Cmgp.s 			page 55


 2276              	.LVL256:
 2277 051e 0022     		movs	r2, #0
 2278 0520 544B     		ldr	r3, .L171
 2279 0522 FFF7FEFF 		bl	__aeabi_dmul
 2280              	.LVL257:
 2281 0526 FFF7FEFF 		bl	__aeabi_d2uiz
 2282              	.LVL258:
 2283 052a A5F84E00 		strh	r0, [r5, #78]	@ movhi
 659:Core/Src/bms.c ****         bms->cellVolt[40] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2284              		.loc 1 659 0
 2285 052e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2286 0530 1B02     		lsls	r3, r3, #8
 2287 0532 03F47063 		and	r3, r3, #3840
 2288 0536 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2289 0538 1844     		add	r0, r0, r3
 2290 053a FFF7FEFF 		bl	__aeabi_i2d
 2291              	.LVL259:
 2292 053e 0022     		movs	r2, #0
 2293 0540 4C4B     		ldr	r3, .L171
 2294 0542 FFF7FEFF 		bl	__aeabi_dmul
 2295              	.LVL260:
 2296 0546 FFF7FEFF 		bl	__aeabi_d2uiz
 2297              	.LVL261:
 2298 054a A5F85000 		strh	r0, [r5, #80]	@ movhi
 660:Core/Src/bms.c ****         bms->cellVolt[41] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2299              		.loc 1 660 0
 2300 054e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2301 0550 1B02     		lsls	r3, r3, #8
 2302 0552 03F47063 		and	r3, r3, #3840
 2303 0556 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2304 0558 1844     		add	r0, r0, r3
 2305 055a FFF7FEFF 		bl	__aeabi_i2d
 2306              	.LVL262:
 2307 055e 0022     		movs	r2, #0
 2308 0560 444B     		ldr	r3, .L171
 2309 0562 FFF7FEFF 		bl	__aeabi_dmul
 2310              	.LVL263:
 2311 0566 FFF7FEFF 		bl	__aeabi_d2uiz
 2312              	.LVL264:
 2313 056a A5F85200 		strh	r0, [r5, #82]	@ movhi
 661:Core/Src/bms.c ****         break;
 2314              		.loc 1 661 0
 2315 056e 38BD     		pop	{r3, r4, r5, pc}
 2316              	.LVL265:
 2317              	.L160:
 662:Core/Src/bms.c **** 
 663:Core/Src/bms.c ****     case 0x475:
 664:Core/Src/bms.c ****         bms->cellVolt[42] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2318              		.loc 1 664 0
 2319 0570 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2320 0572 1B02     		lsls	r3, r3, #8
 2321 0574 03F47063 		and	r3, r3, #3840
 2322 0578 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2323              	.LVL266:
 2324 057a 1844     		add	r0, r0, r3
 2325 057c FFF7FEFF 		bl	__aeabi_i2d
 2326              	.LVL267:
ARM GAS  /tmp/ccH7Cmgp.s 			page 56


 2327 0580 0022     		movs	r2, #0
 2328 0582 3C4B     		ldr	r3, .L171
 2329 0584 FFF7FEFF 		bl	__aeabi_dmul
 2330              	.LVL268:
 2331 0588 FFF7FEFF 		bl	__aeabi_d2uiz
 2332              	.LVL269:
 2333 058c A5F85400 		strh	r0, [r5, #84]	@ movhi
 665:Core/Src/bms.c ****         bms->cellVolt[43] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2334              		.loc 1 665 0
 2335 0590 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2336 0592 1B02     		lsls	r3, r3, #8
 2337 0594 03F47063 		and	r3, r3, #3840
 2338 0598 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2339 059a 1844     		add	r0, r0, r3
 2340 059c FFF7FEFF 		bl	__aeabi_i2d
 2341              	.LVL270:
 2342 05a0 0022     		movs	r2, #0
 2343 05a2 344B     		ldr	r3, .L171
 2344 05a4 FFF7FEFF 		bl	__aeabi_dmul
 2345              	.LVL271:
 2346 05a8 FFF7FEFF 		bl	__aeabi_d2uiz
 2347              	.LVL272:
 2348 05ac A5F85600 		strh	r0, [r5, #86]	@ movhi
 666:Core/Src/bms.c ****         bms->cellVolt[44] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2349              		.loc 1 666 0
 2350 05b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2351 05b2 1B02     		lsls	r3, r3, #8
 2352 05b4 03F47063 		and	r3, r3, #3840
 2353 05b8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2354 05ba 1844     		add	r0, r0, r3
 2355 05bc FFF7FEFF 		bl	__aeabi_i2d
 2356              	.LVL273:
 2357 05c0 0022     		movs	r2, #0
 2358 05c2 2C4B     		ldr	r3, .L171
 2359 05c4 FFF7FEFF 		bl	__aeabi_dmul
 2360              	.LVL274:
 2361 05c8 FFF7FEFF 		bl	__aeabi_d2uiz
 2362              	.LVL275:
 2363 05cc A5F85800 		strh	r0, [r5, #88]	@ movhi
 667:Core/Src/bms.c ****         bms->cellVolt[45] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2364              		.loc 1 667 0
 2365 05d0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2366 05d2 1B02     		lsls	r3, r3, #8
 2367 05d4 03F47063 		and	r3, r3, #3840
 2368 05d8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2369 05da 1844     		add	r0, r0, r3
 2370 05dc FFF7FEFF 		bl	__aeabi_i2d
 2371              	.LVL276:
 2372 05e0 0022     		movs	r2, #0
 2373 05e2 244B     		ldr	r3, .L171
 2374 05e4 FFF7FEFF 		bl	__aeabi_dmul
 2375              	.LVL277:
 2376 05e8 FFF7FEFF 		bl	__aeabi_d2uiz
 2377              	.LVL278:
 2378 05ec A5F85A00 		strh	r0, [r5, #90]	@ movhi
 668:Core/Src/bms.c ****         break;
 2379              		.loc 1 668 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 57


 2380 05f0 38BD     		pop	{r3, r4, r5, pc}
 2381              	.LVL279:
 2382              	.L148:
 669:Core/Src/bms.c **** 
 670:Core/Src/bms.c ****     case 0x466:
 671:Core/Src/bms.c ****         bms->cellVolt[46] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2383              		.loc 1 671 0
 2384 05f2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2385 05f4 1B02     		lsls	r3, r3, #8
 2386 05f6 03F47063 		and	r3, r3, #3840
 2387 05fa 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2388              	.LVL280:
 2389 05fc 1844     		add	r0, r0, r3
 2390 05fe FFF7FEFF 		bl	__aeabi_i2d
 2391              	.LVL281:
 2392 0602 0022     		movs	r2, #0
 2393 0604 1B4B     		ldr	r3, .L171
 2394 0606 FFF7FEFF 		bl	__aeabi_dmul
 2395              	.LVL282:
 2396 060a FFF7FEFF 		bl	__aeabi_d2uiz
 2397              	.LVL283:
 2398 060e A5F85C00 		strh	r0, [r5, #92]	@ movhi
 672:Core/Src/bms.c ****         bms->cellVolt[47] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2399              		.loc 1 672 0
 2400 0612 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2401 0614 1B02     		lsls	r3, r3, #8
 2402 0616 03F47063 		and	r3, r3, #3840
 2403 061a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2404 061c 1844     		add	r0, r0, r3
 2405 061e FFF7FEFF 		bl	__aeabi_i2d
 2406              	.LVL284:
 2407 0622 0022     		movs	r2, #0
 2408 0624 134B     		ldr	r3, .L171
 2409 0626 FFF7FEFF 		bl	__aeabi_dmul
 2410              	.LVL285:
 2411 062a FFF7FEFF 		bl	__aeabi_d2uiz
 2412              	.LVL286:
 2413 062e A5F85E00 		strh	r0, [r5, #94]	@ movhi
 673:Core/Src/bms.c ****         bms->cellVolt[48] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2414              		.loc 1 673 0
 2415 0632 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2416 0634 1B02     		lsls	r3, r3, #8
 2417 0636 03F47063 		and	r3, r3, #3840
 2418 063a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2419 063c 1844     		add	r0, r0, r3
 2420 063e FFF7FEFF 		bl	__aeabi_i2d
 2421              	.LVL287:
 2422 0642 0022     		movs	r2, #0
 2423 0644 0B4B     		ldr	r3, .L171
 2424 0646 FFF7FEFF 		bl	__aeabi_dmul
 2425              	.LVL288:
 2426 064a FFF7FEFF 		bl	__aeabi_d2uiz
 2427              	.LVL289:
 2428 064e A5F86000 		strh	r0, [r5, #96]	@ movhi
 674:Core/Src/bms.c ****         bms->cellVolt[49] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2429              		.loc 1 674 0
 2430 0652 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
ARM GAS  /tmp/ccH7Cmgp.s 			page 58


 2431 0654 1B02     		lsls	r3, r3, #8
 2432 0656 03F47063 		and	r3, r3, #3840
 2433 065a E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2434 065c 1844     		add	r0, r0, r3
 2435 065e FFF7FEFF 		bl	__aeabi_i2d
 2436              	.LVL290:
 2437 0662 0022     		movs	r2, #0
 2438 0664 034B     		ldr	r3, .L171
 2439 0666 FFF7FEFF 		bl	__aeabi_dmul
 2440              	.LVL291:
 2441 066a FFF7FEFF 		bl	__aeabi_d2uiz
 2442              	.LVL292:
 2443 066e A5F86200 		strh	r0, [r5, #98]	@ movhi
 675:Core/Src/bms.c ****         break;
 2444              		.loc 1 675 0
 2445 0672 38BD     		pop	{r3, r4, r5, pc}
 2446              	.LVL293:
 2447              	.L172:
 2448              		.align	2
 2449              	.L171:
 2450 0674 0000F43F 		.word	1072955392
 2451              	.LVL294:
 2452              	.L161:
 676:Core/Src/bms.c **** 
 677:Core/Src/bms.c ****     case 0x476:
 678:Core/Src/bms.c ****         bms->cellVolt[50] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2453              		.loc 1 678 0
 2454 0678 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2455 067a 1B02     		lsls	r3, r3, #8
 2456 067c 03F47063 		and	r3, r3, #3840
 2457 0680 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2458              	.LVL295:
 2459 0682 1844     		add	r0, r0, r3
 2460 0684 FFF7FEFF 		bl	__aeabi_i2d
 2461              	.LVL296:
 2462 0688 0022     		movs	r2, #0
 2463 068a BE4B     		ldr	r3, .L173
 2464 068c FFF7FEFF 		bl	__aeabi_dmul
 2465              	.LVL297:
 2466 0690 FFF7FEFF 		bl	__aeabi_d2uiz
 2467              	.LVL298:
 2468 0694 A5F86400 		strh	r0, [r5, #100]	@ movhi
 679:Core/Src/bms.c ****         bms->cellVolt[51] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2469              		.loc 1 679 0
 2470 0698 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2471 069a 1B02     		lsls	r3, r3, #8
 2472 069c 03F47063 		and	r3, r3, #3840
 2473 06a0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2474 06a2 1844     		add	r0, r0, r3
 2475 06a4 FFF7FEFF 		bl	__aeabi_i2d
 2476              	.LVL299:
 2477 06a8 0022     		movs	r2, #0
 2478 06aa B64B     		ldr	r3, .L173
 2479 06ac FFF7FEFF 		bl	__aeabi_dmul
 2480              	.LVL300:
 2481 06b0 FFF7FEFF 		bl	__aeabi_d2uiz
 2482              	.LVL301:
ARM GAS  /tmp/ccH7Cmgp.s 			page 59


 2483 06b4 A5F86600 		strh	r0, [r5, #102]	@ movhi
 680:Core/Src/bms.c ****         bms->cellVolt[52] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2484              		.loc 1 680 0
 2485 06b8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2486 06ba 1B02     		lsls	r3, r3, #8
 2487 06bc 03F47063 		and	r3, r3, #3840
 2488 06c0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2489 06c2 1844     		add	r0, r0, r3
 2490 06c4 FFF7FEFF 		bl	__aeabi_i2d
 2491              	.LVL302:
 2492 06c8 0022     		movs	r2, #0
 2493 06ca AE4B     		ldr	r3, .L173
 2494 06cc FFF7FEFF 		bl	__aeabi_dmul
 2495              	.LVL303:
 2496 06d0 FFF7FEFF 		bl	__aeabi_d2uiz
 2497              	.LVL304:
 2498 06d4 A5F86800 		strh	r0, [r5, #104]	@ movhi
 681:Core/Src/bms.c ****         bms->cellVolt[53] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2499              		.loc 1 681 0
 2500 06d8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2501 06da 1B02     		lsls	r3, r3, #8
 2502 06dc 03F47063 		and	r3, r3, #3840
 2503 06e0 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2504 06e2 1844     		add	r0, r0, r3
 2505 06e4 FFF7FEFF 		bl	__aeabi_i2d
 2506              	.LVL305:
 2507 06e8 0022     		movs	r2, #0
 2508 06ea A64B     		ldr	r3, .L173
 2509 06ec FFF7FEFF 		bl	__aeabi_dmul
 2510              	.LVL306:
 2511 06f0 FFF7FEFF 		bl	__aeabi_d2uiz
 2512              	.LVL307:
 2513 06f4 A5F86A00 		strh	r0, [r5, #106]	@ movhi
 682:Core/Src/bms.c ****         break;
 2514              		.loc 1 682 0
 2515 06f8 38BD     		pop	{r3, r4, r5, pc}
 2516              	.LVL308:
 2517              	.L149:
 683:Core/Src/bms.c **** 
 684:Core/Src/bms.c ****     case 0x468:
 685:Core/Src/bms.c ****         bms->cellVolt[54] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 3
 2518              		.loc 1 685 0
 2519 06fa 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2520 06fc 1B02     		lsls	r3, r3, #8
 2521 06fe 03F47063 		and	r3, r3, #3840
 2522 0702 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2523              	.LVL309:
 2524 0704 1844     		add	r0, r0, r3
 2525 0706 FFF7FEFF 		bl	__aeabi_i2d
 2526              	.LVL310:
 2527 070a 0022     		movs	r2, #0
 2528 070c 9D4B     		ldr	r3, .L173
 2529 070e FFF7FEFF 		bl	__aeabi_dmul
 2530              	.LVL311:
 2531 0712 FFF7FEFF 		bl	__aeabi_d2uiz
 2532              	.LVL312:
 2533 0716 A5F86C00 		strh	r0, [r5, #108]	@ movhi
ARM GAS  /tmp/ccH7Cmgp.s 			page 60


 686:Core/Src/bms.c ****         bms->cellVolt[55] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2534              		.loc 1 686 0
 2535 071a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2536 071c 1B02     		lsls	r3, r3, #8
 2537 071e 03F47063 		and	r3, r3, #3840
 2538 0722 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2539 0724 1844     		add	r0, r0, r3
 2540 0726 FFF7FEFF 		bl	__aeabi_i2d
 2541              	.LVL313:
 2542 072a 0022     		movs	r2, #0
 2543 072c 954B     		ldr	r3, .L173
 2544 072e FFF7FEFF 		bl	__aeabi_dmul
 2545              	.LVL314:
 2546 0732 FFF7FEFF 		bl	__aeabi_d2uiz
 2547              	.LVL315:
 2548 0736 A5F86E00 		strh	r0, [r5, #110]	@ movhi
 687:Core/Src/bms.c ****         bms->cellVolt[56] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2549              		.loc 1 687 0
 2550 073a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2551 073c 1B02     		lsls	r3, r3, #8
 2552 073e 03F47063 		and	r3, r3, #3840
 2553 0742 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2554 0744 1844     		add	r0, r0, r3
 2555 0746 FFF7FEFF 		bl	__aeabi_i2d
 2556              	.LVL316:
 2557 074a 0022     		movs	r2, #0
 2558 074c 8D4B     		ldr	r3, .L173
 2559 074e FFF7FEFF 		bl	__aeabi_dmul
 2560              	.LVL317:
 2561 0752 FFF7FEFF 		bl	__aeabi_d2uiz
 2562              	.LVL318:
 2563 0756 A5F87000 		strh	r0, [r5, #112]	@ movhi
 688:Core/Src/bms.c ****         bms->cellVolt[57] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2564              		.loc 1 688 0
 2565 075a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2566 075c 1B02     		lsls	r3, r3, #8
 2567 075e 03F47063 		and	r3, r3, #3840
 2568 0762 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2569 0764 1844     		add	r0, r0, r3
 2570 0766 FFF7FEFF 		bl	__aeabi_i2d
 2571              	.LVL319:
 2572 076a 0022     		movs	r2, #0
 2573 076c 854B     		ldr	r3, .L173
 2574 076e FFF7FEFF 		bl	__aeabi_dmul
 2575              	.LVL320:
 2576 0772 FFF7FEFF 		bl	__aeabi_d2uiz
 2577              	.LVL321:
 2578 0776 A5F87200 		strh	r0, [r5, #114]	@ movhi
 689:Core/Src/bms.c ****         break;
 2579              		.loc 1 689 0
 2580 077a 38BD     		pop	{r3, r4, r5, pc}
 2581              	.LVL322:
 2582              	.L162:
 690:Core/Src/bms.c **** 
 691:Core/Src/bms.c ****     case 0x478:
 692:Core/Src/bms.c ****         bms->cellVolt[58] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2583              		.loc 1 692 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 61


 2584 077c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2585 077e 1B02     		lsls	r3, r3, #8
 2586 0780 03F47063 		and	r3, r3, #3840
 2587 0784 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2588              	.LVL323:
 2589 0786 1844     		add	r0, r0, r3
 2590 0788 FFF7FEFF 		bl	__aeabi_i2d
 2591              	.LVL324:
 2592 078c 0022     		movs	r2, #0
 2593 078e 7D4B     		ldr	r3, .L173
 2594 0790 FFF7FEFF 		bl	__aeabi_dmul
 2595              	.LVL325:
 2596 0794 FFF7FEFF 		bl	__aeabi_d2uiz
 2597              	.LVL326:
 2598 0798 A5F87400 		strh	r0, [r5, #116]	@ movhi
 693:Core/Src/bms.c ****         bms->cellVolt[59] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2599              		.loc 1 693 0
 2600 079c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2601 079e 1B02     		lsls	r3, r3, #8
 2602 07a0 03F47063 		and	r3, r3, #3840
 2603 07a4 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2604 07a6 1844     		add	r0, r0, r3
 2605 07a8 FFF7FEFF 		bl	__aeabi_i2d
 2606              	.LVL327:
 2607 07ac 0022     		movs	r2, #0
 2608 07ae 754B     		ldr	r3, .L173
 2609 07b0 FFF7FEFF 		bl	__aeabi_dmul
 2610              	.LVL328:
 2611 07b4 FFF7FEFF 		bl	__aeabi_d2uiz
 2612              	.LVL329:
 2613 07b8 A5F87600 		strh	r0, [r5, #118]	@ movhi
 694:Core/Src/bms.c ****         bms->cellVolt[60] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2614              		.loc 1 694 0
 2615 07bc 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2616 07be 1B02     		lsls	r3, r3, #8
 2617 07c0 03F47063 		and	r3, r3, #3840
 2618 07c4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2619 07c6 1844     		add	r0, r0, r3
 2620 07c8 FFF7FEFF 		bl	__aeabi_i2d
 2621              	.LVL330:
 2622 07cc 0022     		movs	r2, #0
 2623 07ce 6D4B     		ldr	r3, .L173
 2624 07d0 FFF7FEFF 		bl	__aeabi_dmul
 2625              	.LVL331:
 2626 07d4 FFF7FEFF 		bl	__aeabi_d2uiz
 2627              	.LVL332:
 2628 07d8 A5F87800 		strh	r0, [r5, #120]	@ movhi
 695:Core/Src/bms.c ****         bms->cellVolt[61] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2629              		.loc 1 695 0
 2630 07dc A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2631 07de 1B02     		lsls	r3, r3, #8
 2632 07e0 03F47063 		and	r3, r3, #3840
 2633 07e4 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2634 07e6 1844     		add	r0, r0, r3
 2635 07e8 FFF7FEFF 		bl	__aeabi_i2d
 2636              	.LVL333:
 2637 07ec 0022     		movs	r2, #0
ARM GAS  /tmp/ccH7Cmgp.s 			page 62


 2638 07ee 654B     		ldr	r3, .L173
 2639 07f0 FFF7FEFF 		bl	__aeabi_dmul
 2640              	.LVL334:
 2641 07f4 FFF7FEFF 		bl	__aeabi_d2uiz
 2642              	.LVL335:
 2643 07f8 A5F87A00 		strh	r0, [r5, #122]	@ movhi
 696:Core/Src/bms.c ****         break;
 2644              		.loc 1 696 0
 2645 07fc 38BD     		pop	{r3, r4, r5, pc}
 2646              	.LVL336:
 2647              	.L150:
 697:Core/Src/bms.c **** 
 698:Core/Src/bms.c ****     case 0x469:
 699:Core/Src/bms.c ****         bms->cellVolt[62] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2648              		.loc 1 699 0
 2649 07fe 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2650 0800 1B02     		lsls	r3, r3, #8
 2651 0802 03F47063 		and	r3, r3, #3840
 2652 0806 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2653              	.LVL337:
 2654 0808 1844     		add	r0, r0, r3
 2655 080a FFF7FEFF 		bl	__aeabi_i2d
 2656              	.LVL338:
 2657 080e 0022     		movs	r2, #0
 2658 0810 5C4B     		ldr	r3, .L173
 2659 0812 FFF7FEFF 		bl	__aeabi_dmul
 2660              	.LVL339:
 2661 0816 FFF7FEFF 		bl	__aeabi_d2uiz
 2662              	.LVL340:
 2663 081a A5F87C00 		strh	r0, [r5, #124]	@ movhi
 700:Core/Src/bms.c ****         bms->cellVolt[63] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2664              		.loc 1 700 0
 2665 081e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2666 0820 1B02     		lsls	r3, r3, #8
 2667 0822 03F47063 		and	r3, r3, #3840
 2668 0826 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2669 0828 1844     		add	r0, r0, r3
 2670 082a FFF7FEFF 		bl	__aeabi_i2d
 2671              	.LVL341:
 2672 082e 0022     		movs	r2, #0
 2673 0830 544B     		ldr	r3, .L173
 2674 0832 FFF7FEFF 		bl	__aeabi_dmul
 2675              	.LVL342:
 2676 0836 FFF7FEFF 		bl	__aeabi_d2uiz
 2677              	.LVL343:
 2678 083a A5F87E00 		strh	r0, [r5, #126]	@ movhi
 701:Core/Src/bms.c ****         bms->cellVolt[64] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2679              		.loc 1 701 0
 2680 083e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2681 0840 1B02     		lsls	r3, r3, #8
 2682 0842 03F47063 		and	r3, r3, #3840
 2683 0846 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2684 0848 1844     		add	r0, r0, r3
 2685 084a FFF7FEFF 		bl	__aeabi_i2d
 2686              	.LVL344:
 2687 084e 0022     		movs	r2, #0
 2688 0850 4C4B     		ldr	r3, .L173
ARM GAS  /tmp/ccH7Cmgp.s 			page 63


 2689 0852 FFF7FEFF 		bl	__aeabi_dmul
 2690              	.LVL345:
 2691 0856 FFF7FEFF 		bl	__aeabi_d2uiz
 2692              	.LVL346:
 2693 085a A5F88000 		strh	r0, [r5, #128]	@ movhi
 702:Core/Src/bms.c ****         bms->cellVolt[65] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2694              		.loc 1 702 0
 2695 085e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2696 0860 1B02     		lsls	r3, r3, #8
 2697 0862 03F47063 		and	r3, r3, #3840
 2698 0866 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2699 0868 1844     		add	r0, r0, r3
 2700 086a FFF7FEFF 		bl	__aeabi_i2d
 2701              	.LVL347:
 2702 086e 0022     		movs	r2, #0
 2703 0870 444B     		ldr	r3, .L173
 2704 0872 FFF7FEFF 		bl	__aeabi_dmul
 2705              	.LVL348:
 2706 0876 FFF7FEFF 		bl	__aeabi_d2uiz
 2707              	.LVL349:
 2708 087a A5F88200 		strh	r0, [r5, #130]	@ movhi
 703:Core/Src/bms.c ****         break;
 2709              		.loc 1 703 0
 2710 087e 38BD     		pop	{r3, r4, r5, pc}
 2711              	.LVL350:
 2712              	.L163:
 704:Core/Src/bms.c **** 
 705:Core/Src/bms.c ****     case 0x479:
 706:Core/Src/bms.c ****         bms->cellVolt[66] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2713              		.loc 1 706 0
 2714 0880 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2715 0882 1B02     		lsls	r3, r3, #8
 2716 0884 03F47063 		and	r3, r3, #3840
 2717 0888 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2718              	.LVL351:
 2719 088a 1844     		add	r0, r0, r3
 2720 088c FFF7FEFF 		bl	__aeabi_i2d
 2721              	.LVL352:
 2722 0890 0022     		movs	r2, #0
 2723 0892 3C4B     		ldr	r3, .L173
 2724 0894 FFF7FEFF 		bl	__aeabi_dmul
 2725              	.LVL353:
 2726 0898 FFF7FEFF 		bl	__aeabi_d2uiz
 2727              	.LVL354:
 2728 089c A5F88400 		strh	r0, [r5, #132]	@ movhi
 707:Core/Src/bms.c ****         bms->cellVolt[67] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2729              		.loc 1 707 0
 2730 08a0 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2731 08a2 1B02     		lsls	r3, r3, #8
 2732 08a4 03F47063 		and	r3, r3, #3840
 2733 08a8 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2734 08aa 1844     		add	r0, r0, r3
 2735 08ac FFF7FEFF 		bl	__aeabi_i2d
 2736              	.LVL355:
 2737 08b0 0022     		movs	r2, #0
 2738 08b2 344B     		ldr	r3, .L173
 2739 08b4 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccH7Cmgp.s 			page 64


 2740              	.LVL356:
 2741 08b8 FFF7FEFF 		bl	__aeabi_d2uiz
 2742              	.LVL357:
 2743 08bc A5F88600 		strh	r0, [r5, #134]	@ movhi
 708:Core/Src/bms.c ****         bms->cellVolt[68] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2744              		.loc 1 708 0
 2745 08c0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2746 08c2 1B02     		lsls	r3, r3, #8
 2747 08c4 03F47063 		and	r3, r3, #3840
 2748 08c8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2749 08ca 1844     		add	r0, r0, r3
 2750 08cc FFF7FEFF 		bl	__aeabi_i2d
 2751              	.LVL358:
 2752 08d0 0022     		movs	r2, #0
 2753 08d2 2C4B     		ldr	r3, .L173
 2754 08d4 FFF7FEFF 		bl	__aeabi_dmul
 2755              	.LVL359:
 2756 08d8 FFF7FEFF 		bl	__aeabi_d2uiz
 2757              	.LVL360:
 2758 08dc A5F88800 		strh	r0, [r5, #136]	@ movhi
 709:Core/Src/bms.c ****         bms->cellVolt[69] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2759              		.loc 1 709 0
 2760 08e0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2761 08e2 1B02     		lsls	r3, r3, #8
 2762 08e4 03F47063 		and	r3, r3, #3840
 2763 08e8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2764 08ea 1844     		add	r0, r0, r3
 2765 08ec FFF7FEFF 		bl	__aeabi_i2d
 2766              	.LVL361:
 2767 08f0 0022     		movs	r2, #0
 2768 08f2 244B     		ldr	r3, .L173
 2769 08f4 FFF7FEFF 		bl	__aeabi_dmul
 2770              	.LVL362:
 2771 08f8 FFF7FEFF 		bl	__aeabi_d2uiz
 2772              	.LVL363:
 2773 08fc A5F88A00 		strh	r0, [r5, #138]	@ movhi
 710:Core/Src/bms.c ****         break;
 2774              		.loc 1 710 0
 2775 0900 38BD     		pop	{r3, r4, r5, pc}
 2776              	.LVL364:
 2777              	.L151:
 711:Core/Src/bms.c **** 
 712:Core/Src/bms.c ****     case 0x46A:
 713:Core/Src/bms.c ****         bms->cellVolt[70] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2778              		.loc 1 713 0
 2779 0902 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2780 0904 1B02     		lsls	r3, r3, #8
 2781 0906 03F47063 		and	r3, r3, #3840
 2782 090a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2783              	.LVL365:
 2784 090c 1844     		add	r0, r0, r3
 2785 090e FFF7FEFF 		bl	__aeabi_i2d
 2786              	.LVL366:
 2787 0912 0022     		movs	r2, #0
 2788 0914 1B4B     		ldr	r3, .L173
 2789 0916 FFF7FEFF 		bl	__aeabi_dmul
 2790              	.LVL367:
ARM GAS  /tmp/ccH7Cmgp.s 			page 65


 2791 091a FFF7FEFF 		bl	__aeabi_d2uiz
 2792              	.LVL368:
 2793 091e A5F88C00 		strh	r0, [r5, #140]	@ movhi
 714:Core/Src/bms.c ****         bms->cellVolt[71] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2794              		.loc 1 714 0
 2795 0922 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2796 0924 1B02     		lsls	r3, r3, #8
 2797 0926 03F47063 		and	r3, r3, #3840
 2798 092a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2799 092c 1844     		add	r0, r0, r3
 2800 092e FFF7FEFF 		bl	__aeabi_i2d
 2801              	.LVL369:
 2802 0932 0022     		movs	r2, #0
 2803 0934 134B     		ldr	r3, .L173
 2804 0936 FFF7FEFF 		bl	__aeabi_dmul
 2805              	.LVL370:
 2806 093a FFF7FEFF 		bl	__aeabi_d2uiz
 2807              	.LVL371:
 2808 093e A5F88E00 		strh	r0, [r5, #142]	@ movhi
 715:Core/Src/bms.c ****         bms->cellVolt[72] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2809              		.loc 1 715 0
 2810 0942 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2811 0944 1B02     		lsls	r3, r3, #8
 2812 0946 03F47063 		and	r3, r3, #3840
 2813 094a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2814 094c 1844     		add	r0, r0, r3
 2815 094e FFF7FEFF 		bl	__aeabi_i2d
 2816              	.LVL372:
 2817 0952 0022     		movs	r2, #0
 2818 0954 0B4B     		ldr	r3, .L173
 2819 0956 FFF7FEFF 		bl	__aeabi_dmul
 2820              	.LVL373:
 2821 095a FFF7FEFF 		bl	__aeabi_d2uiz
 2822              	.LVL374:
 2823 095e A5F89000 		strh	r0, [r5, #144]	@ movhi
 716:Core/Src/bms.c ****         bms->cellVolt[73] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2824              		.loc 1 716 0
 2825 0962 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2826 0964 1B02     		lsls	r3, r3, #8
 2827 0966 03F47063 		and	r3, r3, #3840
 2828 096a E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2829 096c 1844     		add	r0, r0, r3
 2830 096e FFF7FEFF 		bl	__aeabi_i2d
 2831              	.LVL375:
 2832 0972 0022     		movs	r2, #0
 2833 0974 034B     		ldr	r3, .L173
 2834 0976 FFF7FEFF 		bl	__aeabi_dmul
 2835              	.LVL376:
 2836 097a FFF7FEFF 		bl	__aeabi_d2uiz
 2837              	.LVL377:
 2838 097e A5F89200 		strh	r0, [r5, #146]	@ movhi
 717:Core/Src/bms.c ****         break;
 2839              		.loc 1 717 0
 2840 0982 38BD     		pop	{r3, r4, r5, pc}
 2841              	.LVL378:
 2842              	.L174:
 2843              		.align	2
ARM GAS  /tmp/ccH7Cmgp.s 			page 66


 2844              	.L173:
 2845 0984 0000F43F 		.word	1072955392
 2846              	.LVL379:
 2847              	.L164:
 718:Core/Src/bms.c **** 
 719:Core/Src/bms.c ****     case 0x47A:
 720:Core/Src/bms.c ****         bms->cellVolt[74] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2848              		.loc 1 720 0
 2849 0988 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2850 098a 1B02     		lsls	r3, r3, #8
 2851 098c 03F47063 		and	r3, r3, #3840
 2852 0990 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2853              	.LVL380:
 2854 0992 1844     		add	r0, r0, r3
 2855 0994 FFF7FEFF 		bl	__aeabi_i2d
 2856              	.LVL381:
 2857 0998 0022     		movs	r2, #0
 2858 099a AF4B     		ldr	r3, .L175
 2859 099c FFF7FEFF 		bl	__aeabi_dmul
 2860              	.LVL382:
 2861 09a0 FFF7FEFF 		bl	__aeabi_d2uiz
 2862              	.LVL383:
 2863 09a4 A5F89400 		strh	r0, [r5, #148]	@ movhi
 721:Core/Src/bms.c ****         bms->cellVolt[75] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2864              		.loc 1 721 0
 2865 09a8 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2866 09aa 1B02     		lsls	r3, r3, #8
 2867 09ac 03F47063 		and	r3, r3, #3840
 2868 09b0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2869 09b2 1844     		add	r0, r0, r3
 2870 09b4 FFF7FEFF 		bl	__aeabi_i2d
 2871              	.LVL384:
 2872 09b8 0022     		movs	r2, #0
 2873 09ba A74B     		ldr	r3, .L175
 2874 09bc FFF7FEFF 		bl	__aeabi_dmul
 2875              	.LVL385:
 2876 09c0 FFF7FEFF 		bl	__aeabi_d2uiz
 2877              	.LVL386:
 2878 09c4 A5F89600 		strh	r0, [r5, #150]	@ movhi
 722:Core/Src/bms.c ****         bms->cellVolt[76] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2879              		.loc 1 722 0
 2880 09c8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2881 09ca 1B02     		lsls	r3, r3, #8
 2882 09cc 03F47063 		and	r3, r3, #3840
 2883 09d0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2884 09d2 1844     		add	r0, r0, r3
 2885 09d4 FFF7FEFF 		bl	__aeabi_i2d
 2886              	.LVL387:
 2887 09d8 0022     		movs	r2, #0
 2888 09da 9F4B     		ldr	r3, .L175
 2889 09dc FFF7FEFF 		bl	__aeabi_dmul
 2890              	.LVL388:
 2891 09e0 FFF7FEFF 		bl	__aeabi_d2uiz
 2892              	.LVL389:
 2893 09e4 A5F89800 		strh	r0, [r5, #152]	@ movhi
 723:Core/Src/bms.c ****         bms->cellVolt[77] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2894              		.loc 1 723 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 67


 2895 09e8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2896 09ea 1B02     		lsls	r3, r3, #8
 2897 09ec 03F47063 		and	r3, r3, #3840
 2898 09f0 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2899 09f2 1844     		add	r0, r0, r3
 2900 09f4 FFF7FEFF 		bl	__aeabi_i2d
 2901              	.LVL390:
 2902 09f8 0022     		movs	r2, #0
 2903 09fa 974B     		ldr	r3, .L175
 2904 09fc FFF7FEFF 		bl	__aeabi_dmul
 2905              	.LVL391:
 2906 0a00 FFF7FEFF 		bl	__aeabi_d2uiz
 2907              	.LVL392:
 2908 0a04 A5F89A00 		strh	r0, [r5, #154]	@ movhi
 724:Core/Src/bms.c ****         break;
 2909              		.loc 1 724 0
 2910 0a08 38BD     		pop	{r3, r4, r5, pc}
 2911              	.LVL393:
 2912              	.L152:
 725:Core/Src/bms.c **** 
 726:Core/Src/bms.c ****     case 0x46C:
 727:Core/Src/bms.c ****         bms->cellVolt[78] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 4
 2913              		.loc 1 727 0
 2914 0a0a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2915 0a0c 1B02     		lsls	r3, r3, #8
 2916 0a0e 03F47063 		and	r3, r3, #3840
 2917 0a12 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2918              	.LVL394:
 2919 0a14 1844     		add	r0, r0, r3
 2920 0a16 FFF7FEFF 		bl	__aeabi_i2d
 2921              	.LVL395:
 2922 0a1a 0022     		movs	r2, #0
 2923 0a1c 8E4B     		ldr	r3, .L175
 2924 0a1e FFF7FEFF 		bl	__aeabi_dmul
 2925              	.LVL396:
 2926 0a22 FFF7FEFF 		bl	__aeabi_d2uiz
 2927              	.LVL397:
 2928 0a26 A5F89C00 		strh	r0, [r5, #156]	@ movhi
 728:Core/Src/bms.c ****         bms->cellVolt[79] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2929              		.loc 1 728 0
 2930 0a2a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2931 0a2c 1B02     		lsls	r3, r3, #8
 2932 0a2e 03F47063 		and	r3, r3, #3840
 2933 0a32 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2934 0a34 1844     		add	r0, r0, r3
 2935 0a36 FFF7FEFF 		bl	__aeabi_i2d
 2936              	.LVL398:
 2937 0a3a 0022     		movs	r2, #0
 2938 0a3c 864B     		ldr	r3, .L175
 2939 0a3e FFF7FEFF 		bl	__aeabi_dmul
 2940              	.LVL399:
 2941 0a42 FFF7FEFF 		bl	__aeabi_d2uiz
 2942              	.LVL400:
 2943 0a46 A5F89E00 		strh	r0, [r5, #158]	@ movhi
 729:Core/Src/bms.c ****         bms->cellVolt[80] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2944              		.loc 1 729 0
 2945 0a4a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccH7Cmgp.s 			page 68


 2946 0a4c 1B02     		lsls	r3, r3, #8
 2947 0a4e 03F47063 		and	r3, r3, #3840
 2948 0a52 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2949 0a54 1844     		add	r0, r0, r3
 2950 0a56 FFF7FEFF 		bl	__aeabi_i2d
 2951              	.LVL401:
 2952 0a5a 0022     		movs	r2, #0
 2953 0a5c 7E4B     		ldr	r3, .L175
 2954 0a5e FFF7FEFF 		bl	__aeabi_dmul
 2955              	.LVL402:
 2956 0a62 FFF7FEFF 		bl	__aeabi_d2uiz
 2957              	.LVL403:
 2958 0a66 A5F8A000 		strh	r0, [r5, #160]	@ movhi
 730:Core/Src/bms.c ****         break;
 2959              		.loc 1 730 0
 2960 0a6a 38BD     		pop	{r3, r4, r5, pc}
 2961              	.LVL404:
 2962              	.L165:
 731:Core/Src/bms.c **** 
 732:Core/Src/bms.c ****     case 0x47C:
 733:Core/Src/bms.c ****         bms->cellVolt[81] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2963              		.loc 1 733 0
 2964 0a6c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2965 0a6e 1B02     		lsls	r3, r3, #8
 2966 0a70 03F47063 		and	r3, r3, #3840
 2967 0a74 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2968              	.LVL405:
 2969 0a76 1844     		add	r0, r0, r3
 2970 0a78 FFF7FEFF 		bl	__aeabi_i2d
 2971              	.LVL406:
 2972 0a7c 0022     		movs	r2, #0
 2973 0a7e 764B     		ldr	r3, .L175
 2974 0a80 FFF7FEFF 		bl	__aeabi_dmul
 2975              	.LVL407:
 2976 0a84 FFF7FEFF 		bl	__aeabi_d2uiz
 2977              	.LVL408:
 2978 0a88 A5F8A200 		strh	r0, [r5, #162]	@ movhi
 734:Core/Src/bms.c ****         bms->cellVolt[82] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2979              		.loc 1 734 0
 2980 0a8c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2981 0a8e 1B02     		lsls	r3, r3, #8
 2982 0a90 03F47063 		and	r3, r3, #3840
 2983 0a94 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2984 0a96 1844     		add	r0, r0, r3
 2985 0a98 FFF7FEFF 		bl	__aeabi_i2d
 2986              	.LVL409:
 2987 0a9c 0022     		movs	r2, #0
 2988 0a9e 6E4B     		ldr	r3, .L175
 2989 0aa0 FFF7FEFF 		bl	__aeabi_dmul
 2990              	.LVL410:
 2991 0aa4 FFF7FEFF 		bl	__aeabi_d2uiz
 2992              	.LVL411:
 2993 0aa8 A5F8A400 		strh	r0, [r5, #164]	@ movhi
 735:Core/Src/bms.c ****         bms->cellVolt[83] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2994              		.loc 1 735 0
 2995 0aac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2996 0aae 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp/ccH7Cmgp.s 			page 69


 2997 0ab0 03F47063 		and	r3, r3, #3840
 2998 0ab4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2999 0ab6 1844     		add	r0, r0, r3
 3000 0ab8 FFF7FEFF 		bl	__aeabi_i2d
 3001              	.LVL412:
 3002 0abc 0022     		movs	r2, #0
 3003 0abe 664B     		ldr	r3, .L175
 3004 0ac0 FFF7FEFF 		bl	__aeabi_dmul
 3005              	.LVL413:
 3006 0ac4 FFF7FEFF 		bl	__aeabi_d2uiz
 3007              	.LVL414:
 3008 0ac8 A5F8A600 		strh	r0, [r5, #166]	@ movhi
 736:Core/Src/bms.c ****         break;
 3009              		.loc 1 736 0
 3010 0acc 38BD     		pop	{r3, r4, r5, pc}
 3011              	.LVL415:
 3012              	.L153:
 737:Core/Src/bms.c **** 
 738:Core/Src/bms.c ****     case 0x46D:
 739:Core/Src/bms.c ****         bms->cellVolt[84] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3013              		.loc 1 739 0
 3014 0ace 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3015 0ad0 1B02     		lsls	r3, r3, #8
 3016 0ad2 03F47063 		and	r3, r3, #3840
 3017 0ad6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3018              	.LVL416:
 3019 0ad8 1844     		add	r0, r0, r3
 3020 0ada FFF7FEFF 		bl	__aeabi_i2d
 3021              	.LVL417:
 3022 0ade 0022     		movs	r2, #0
 3023 0ae0 5D4B     		ldr	r3, .L175
 3024 0ae2 FFF7FEFF 		bl	__aeabi_dmul
 3025              	.LVL418:
 3026 0ae6 FFF7FEFF 		bl	__aeabi_d2uiz
 3027              	.LVL419:
 3028 0aea A5F8A800 		strh	r0, [r5, #168]	@ movhi
 740:Core/Src/bms.c ****         bms->cellVolt[85] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3029              		.loc 1 740 0
 3030 0aee A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3031 0af0 1B02     		lsls	r3, r3, #8
 3032 0af2 03F47063 		and	r3, r3, #3840
 3033 0af6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3034 0af8 1844     		add	r0, r0, r3
 3035 0afa FFF7FEFF 		bl	__aeabi_i2d
 3036              	.LVL420:
 3037 0afe 0022     		movs	r2, #0
 3038 0b00 554B     		ldr	r3, .L175
 3039 0b02 FFF7FEFF 		bl	__aeabi_dmul
 3040              	.LVL421:
 3041 0b06 FFF7FEFF 		bl	__aeabi_d2uiz
 3042              	.LVL422:
 3043 0b0a A5F8AA00 		strh	r0, [r5, #170]	@ movhi
 741:Core/Src/bms.c ****         bms->cellVolt[86] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3044              		.loc 1 741 0
 3045 0b0e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3046 0b10 1B02     		lsls	r3, r3, #8
 3047 0b12 03F47063 		and	r3, r3, #3840
ARM GAS  /tmp/ccH7Cmgp.s 			page 70


 3048 0b16 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3049 0b18 1844     		add	r0, r0, r3
 3050 0b1a FFF7FEFF 		bl	__aeabi_i2d
 3051              	.LVL423:
 3052 0b1e 0022     		movs	r2, #0
 3053 0b20 4D4B     		ldr	r3, .L175
 3054 0b22 FFF7FEFF 		bl	__aeabi_dmul
 3055              	.LVL424:
 3056 0b26 FFF7FEFF 		bl	__aeabi_d2uiz
 3057              	.LVL425:
 3058 0b2a A5F8AC00 		strh	r0, [r5, #172]	@ movhi
 742:Core/Src/bms.c ****         break;
 3059              		.loc 1 742 0
 3060 0b2e 38BD     		pop	{r3, r4, r5, pc}
 3061              	.LVL426:
 3062              	.L166:
 743:Core/Src/bms.c **** 
 744:Core/Src/bms.c ****     case 0x47D:
 745:Core/Src/bms.c ****         bms->cellVolt[87] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3063              		.loc 1 745 0
 3064 0b30 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3065 0b32 1B02     		lsls	r3, r3, #8
 3066 0b34 03F47063 		and	r3, r3, #3840
 3067 0b38 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3068              	.LVL427:
 3069 0b3a 1844     		add	r0, r0, r3
 3070 0b3c FFF7FEFF 		bl	__aeabi_i2d
 3071              	.LVL428:
 3072 0b40 0022     		movs	r2, #0
 3073 0b42 454B     		ldr	r3, .L175
 3074 0b44 FFF7FEFF 		bl	__aeabi_dmul
 3075              	.LVL429:
 3076 0b48 FFF7FEFF 		bl	__aeabi_d2uiz
 3077              	.LVL430:
 3078 0b4c A5F8AE00 		strh	r0, [r5, #174]	@ movhi
 746:Core/Src/bms.c ****         bms->cellVolt[88] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3079              		.loc 1 746 0
 3080 0b50 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3081 0b52 1B02     		lsls	r3, r3, #8
 3082 0b54 03F47063 		and	r3, r3, #3840
 3083 0b58 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3084 0b5a 1844     		add	r0, r0, r3
 3085 0b5c FFF7FEFF 		bl	__aeabi_i2d
 3086              	.LVL431:
 3087 0b60 0022     		movs	r2, #0
 3088 0b62 3D4B     		ldr	r3, .L175
 3089 0b64 FFF7FEFF 		bl	__aeabi_dmul
 3090              	.LVL432:
 3091 0b68 FFF7FEFF 		bl	__aeabi_d2uiz
 3092              	.LVL433:
 3093 0b6c A5F8B000 		strh	r0, [r5, #176]	@ movhi
 747:Core/Src/bms.c ****         bms->cellVolt[89] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3094              		.loc 1 747 0
 3095 0b70 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3096 0b72 1B02     		lsls	r3, r3, #8
 3097 0b74 03F47063 		and	r3, r3, #3840
 3098 0b78 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
ARM GAS  /tmp/ccH7Cmgp.s 			page 71


 3099 0b7a 1844     		add	r0, r0, r3
 3100 0b7c FFF7FEFF 		bl	__aeabi_i2d
 3101              	.LVL434:
 3102 0b80 0022     		movs	r2, #0
 3103 0b82 354B     		ldr	r3, .L175
 3104 0b84 FFF7FEFF 		bl	__aeabi_dmul
 3105              	.LVL435:
 3106 0b88 FFF7FEFF 		bl	__aeabi_d2uiz
 3107              	.LVL436:
 3108 0b8c A5F8B200 		strh	r0, [r5, #178]	@ movhi
 748:Core/Src/bms.c ****         break;
 3109              		.loc 1 748 0
 3110 0b90 38BD     		pop	{r3, r4, r5, pc}
 3111              	.LVL437:
 3112              	.L154:
 749:Core/Src/bms.c **** 
 750:Core/Src/bms.c ****     case 0x46E:
 751:Core/Src/bms.c ****         bms->cellVolt[90] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3113              		.loc 1 751 0
 3114 0b92 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3115 0b94 1B02     		lsls	r3, r3, #8
 3116 0b96 03F47063 		and	r3, r3, #3840
 3117 0b9a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3118              	.LVL438:
 3119 0b9c 1844     		add	r0, r0, r3
 3120 0b9e FFF7FEFF 		bl	__aeabi_i2d
 3121              	.LVL439:
 3122 0ba2 0022     		movs	r2, #0
 3123 0ba4 2C4B     		ldr	r3, .L175
 3124 0ba6 FFF7FEFF 		bl	__aeabi_dmul
 3125              	.LVL440:
 3126 0baa FFF7FEFF 		bl	__aeabi_d2uiz
 3127              	.LVL441:
 3128 0bae A5F8B400 		strh	r0, [r5, #180]	@ movhi
 752:Core/Src/bms.c ****         bms->cellVolt[91] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3129              		.loc 1 752 0
 3130 0bb2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3131 0bb4 1B02     		lsls	r3, r3, #8
 3132 0bb6 03F47063 		and	r3, r3, #3840
 3133 0bba E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3134 0bbc 1844     		add	r0, r0, r3
 3135 0bbe FFF7FEFF 		bl	__aeabi_i2d
 3136              	.LVL442:
 3137 0bc2 0022     		movs	r2, #0
 3138 0bc4 244B     		ldr	r3, .L175
 3139 0bc6 FFF7FEFF 		bl	__aeabi_dmul
 3140              	.LVL443:
 3141 0bca FFF7FEFF 		bl	__aeabi_d2uiz
 3142              	.LVL444:
 3143 0bce A5F8B600 		strh	r0, [r5, #182]	@ movhi
 753:Core/Src/bms.c ****         bms->cellVolt[92] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3144              		.loc 1 753 0
 3145 0bd2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3146 0bd4 1B02     		lsls	r3, r3, #8
 3147 0bd6 03F47063 		and	r3, r3, #3840
 3148 0bda 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3149 0bdc 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccH7Cmgp.s 			page 72


 3150 0bde FFF7FEFF 		bl	__aeabi_i2d
 3151              	.LVL445:
 3152 0be2 0022     		movs	r2, #0
 3153 0be4 1C4B     		ldr	r3, .L175
 3154 0be6 FFF7FEFF 		bl	__aeabi_dmul
 3155              	.LVL446:
 3156 0bea FFF7FEFF 		bl	__aeabi_d2uiz
 3157              	.LVL447:
 3158 0bee A5F8B800 		strh	r0, [r5, #184]	@ movhi
 754:Core/Src/bms.c ****         break;
 3159              		.loc 1 754 0
 3160 0bf2 38BD     		pop	{r3, r4, r5, pc}
 3161              	.LVL448:
 3162              	.L167:
 755:Core/Src/bms.c **** 
 756:Core/Src/bms.c ****     case 0x47E:
 757:Core/Src/bms.c ****         bms->cellVolt[93] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3163              		.loc 1 757 0
 3164 0bf4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3165 0bf6 1B02     		lsls	r3, r3, #8
 3166 0bf8 03F47063 		and	r3, r3, #3840
 3167 0bfc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3168              	.LVL449:
 3169 0bfe 1844     		add	r0, r0, r3
 3170 0c00 FFF7FEFF 		bl	__aeabi_i2d
 3171              	.LVL450:
 3172 0c04 0022     		movs	r2, #0
 3173 0c06 144B     		ldr	r3, .L175
 3174 0c08 FFF7FEFF 		bl	__aeabi_dmul
 3175              	.LVL451:
 3176 0c0c FFF7FEFF 		bl	__aeabi_d2uiz
 3177              	.LVL452:
 3178 0c10 A5F8BA00 		strh	r0, [r5, #186]	@ movhi
 758:Core/Src/bms.c ****         bms->cellVolt[94] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3179              		.loc 1 758 0
 3180 0c14 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3181 0c16 1B02     		lsls	r3, r3, #8
 3182 0c18 03F47063 		and	r3, r3, #3840
 3183 0c1c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3184 0c1e 1844     		add	r0, r0, r3
 3185 0c20 FFF7FEFF 		bl	__aeabi_i2d
 3186              	.LVL453:
 3187 0c24 0022     		movs	r2, #0
 3188 0c26 0C4B     		ldr	r3, .L175
 3189 0c28 FFF7FEFF 		bl	__aeabi_dmul
 3190              	.LVL454:
 3191 0c2c FFF7FEFF 		bl	__aeabi_d2uiz
 3192              	.LVL455:
 3193 0c30 A5F8BC00 		strh	r0, [r5, #188]	@ movhi
 759:Core/Src/bms.c ****         bms->cellVolt[95] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3194              		.loc 1 759 0
 3195 0c34 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3196 0c36 1B02     		lsls	r3, r3, #8
 3197 0c38 03F47063 		and	r3, r3, #3840
 3198 0c3c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3199 0c3e 1844     		add	r0, r0, r3
 3200 0c40 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccH7Cmgp.s 			page 73


 3201              	.LVL456:
 3202 0c44 0022     		movs	r2, #0
 3203 0c46 044B     		ldr	r3, .L175
 3204 0c48 FFF7FEFF 		bl	__aeabi_dmul
 3205              	.LVL457:
 3206 0c4c FFF7FEFF 		bl	__aeabi_d2uiz
 3207              	.LVL458:
 3208 0c50 A5F8BE00 		strh	r0, [r5, #190]	@ movhi
 3209              	.L139:
 3210 0c54 38BD     		pop	{r3, r4, r5, pc}
 3211              	.LVL459:
 3212              	.L176:
 3213 0c56 00BF     		.align	2
 3214              	.L175:
 3215 0c58 0000F43F 		.word	1072955392
 3216              		.cfi_endproc
 3217              	.LFE151:
 3219              		.section	.text.decodeTemp,"ax",%progbits
 3220              		.align	1
 3221              		.global	decodeTemp
 3222              		.syntax unified
 3223              		.thumb
 3224              		.thumb_func
 3225              		.fpu fpv4-sp-d16
 3227              	decodeTemp:
 3228              	.LFB152:
 760:Core/Src/bms.c ****         break;
 761:Core/Src/bms.c **** 
 762:Core/Src/bms.c ****     default:
 763:Core/Src/bms.c ****         break;
 764:Core/Src/bms.c ****     }
 765:Core/Src/bms.c **** }
 766:Core/Src/bms.c **** 
 767:Core/Src/bms.c **** void decodeTemp(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // in degrees F x 100
 768:Core/Src/bms.c **** {
 3229              		.loc 1 768 0
 3230              		.cfi_startproc
 3231              		@ args = 0, pretend = 0, frame = 0
 3232              		@ frame_needed = 0, uses_anonymous_args = 0
 3233              		@ link register save eliminated.
 3234              	.LVL460:
 769:Core/Src/bms.c ****     switch (rxMsg->StdId)
 3235              		.loc 1 769 0
 3236 0000 0B68     		ldr	r3, [r1]
 3237 0002 A3F5FC63 		sub	r3, r3, #2016
 3238 0006 0E2B     		cmp	r3, #14
 3239 0008 00F28E80 		bhi	.L177
 3240 000c DFE803F0 		tbb	[pc, r3]
 3241              	.LVL461:
 3242              	.L180:
 3243 0010 08       		.byte	(.L179-.L180)/2
 3244 0011 14       		.byte	(.L181-.L180)/2
 3245 0012 20       		.byte	(.L182-.L180)/2
 3246 0013 2F       		.byte	(.L183-.L180)/2
 3247 0014 33       		.byte	(.L184-.L180)/2
 3248 0015 3F       		.byte	(.L185-.L180)/2
 3249 0016 4E       		.byte	(.L186-.L180)/2
ARM GAS  /tmp/ccH7Cmgp.s 			page 74


 3250 0017 8C       		.byte	(.L177-.L180)/2
 3251 0018 52       		.byte	(.L187-.L180)/2
 3252 0019 5E       		.byte	(.L188-.L180)/2
 3253 001a 6D       		.byte	(.L189-.L180)/2
 3254 001b 8C       		.byte	(.L177-.L180)/2
 3255 001c 71       		.byte	(.L190-.L180)/2
 3256 001d 7D       		.byte	(.L191-.L180)/2
 3257 001e 89       		.byte	(.L192-.L180)/2
 3258 001f 00       		.p2align 1
 3259              	.L179:
 770:Core/Src/bms.c ****     {
 771:Core/Src/bms.c ****     case 0x7E0: //Begin module 1 temp sensors
 772:Core/Src/bms.c ****         bms->tempSensor[0] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3260              		.loc 1 772 0
 3261 0020 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3262 0022 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3263 0024 03EB0123 		add	r3, r3, r1, lsl #8
 3264 0028 A3EBC303 		sub	r3, r3, r3, lsl #3
 3265 002c 03F5E043 		add	r3, r3, #28672
 3266 0030 1C33     		adds	r3, r3, #28
 3267 0032 A0F8C030 		strh	r3, [r0, #192]	@ movhi
 773:Core/Src/bms.c ****         break;
 3268              		.loc 1 773 0
 3269 0036 7047     		bx	lr
 3270              	.L181:
 774:Core/Src/bms.c **** 
 775:Core/Src/bms.c ****     case 0x7E1:
 776:Core/Src/bms.c ****         bms->tempSensor[1] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3271              		.loc 1 776 0
 3272 0038 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3273 003a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3274 003c 03EB0123 		add	r3, r3, r1, lsl #8
 3275 0040 A3EBC303 		sub	r3, r3, r3, lsl #3
 3276 0044 03F5E043 		add	r3, r3, #28672
 3277 0048 1C33     		adds	r3, r3, #28
 3278 004a A0F8C230 		strh	r3, [r0, #194]	@ movhi
 777:Core/Src/bms.c ****         break;
 3279              		.loc 1 777 0
 3280 004e 7047     		bx	lr
 3281              	.L182:
 778:Core/Src/bms.c **** 
 779:Core/Src/bms.c ****     case 0x7E2:
 780:Core/Src/bms.c ****         bms->tempSensor[2] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3282              		.loc 1 780 0
 3283 0050 0023     		movs	r3, #0
 3284 0052 A0F8C430 		strh	r3, [r0, #196]	@ movhi
 781:Core/Src/bms.c ****         bms->tempSensor[3] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3285              		.loc 1 781 0
 3286 0056 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3287 0058 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3288 005a 03EB0123 		add	r3, r3, r1, lsl #8
 3289 005e A3EBC303 		sub	r3, r3, r3, lsl #3
 3290 0062 03F5E043 		add	r3, r3, #28672
 3291 0066 1C33     		adds	r3, r3, #28
 3292 0068 A0F8C630 		strh	r3, [r0, #198]	@ movhi
 782:Core/Src/bms.c ****         break;
 3293              		.loc 1 782 0
ARM GAS  /tmp/ccH7Cmgp.s 			page 75


 3294 006c 7047     		bx	lr
 3295              	.L183:
 783:Core/Src/bms.c **** 
 784:Core/Src/bms.c ****     case 0x7E3:
 785:Core/Src/bms.c ****         bms->tempSensor[4] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3296              		.loc 1 785 0
 3297 006e 0023     		movs	r3, #0
 3298 0070 A0F8C830 		strh	r3, [r0, #200]	@ movhi
 786:Core/Src/bms.c ****         break;
 3299              		.loc 1 786 0
 3300 0074 7047     		bx	lr
 3301              	.L184:
 787:Core/Src/bms.c **** 
 788:Core/Src/bms.c ****     case 0x7E4: //Begin module 2 temp sensors
 789:Core/Src/bms.c ****         bms->tempSensor[5] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3302              		.loc 1 789 0
 3303 0076 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3304 0078 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3305 007a 03EB0123 		add	r3, r3, r1, lsl #8
 3306 007e A3EBC303 		sub	r3, r3, r3, lsl #3
 3307 0082 03F5E043 		add	r3, r3, #28672
 3308 0086 1C33     		adds	r3, r3, #28
 3309 0088 A0F8CA30 		strh	r3, [r0, #202]	@ movhi
 790:Core/Src/bms.c ****         break;
 3310              		.loc 1 790 0
 3311 008c 7047     		bx	lr
 3312              	.L185:
 791:Core/Src/bms.c **** 
 792:Core/Src/bms.c ****     case 0x7E5:
 793:Core/Src/bms.c ****         bms->tempSensor[6] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3313              		.loc 1 793 0
 3314 008e 0023     		movs	r3, #0
 3315 0090 A0F8CC30 		strh	r3, [r0, #204]	@ movhi
 794:Core/Src/bms.c ****         bms->tempSensor[7] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3316              		.loc 1 794 0
 3317 0094 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3318 0096 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3319 0098 03EB0123 		add	r3, r3, r1, lsl #8
 3320 009c A3EBC303 		sub	r3, r3, r3, lsl #3
 3321 00a0 03F5E043 		add	r3, r3, #28672
 3322 00a4 1C33     		adds	r3, r3, #28
 3323 00a6 A0F8CE30 		strh	r3, [r0, #206]	@ movhi
 795:Core/Src/bms.c ****         break;
 3324              		.loc 1 795 0
 3325 00aa 7047     		bx	lr
 3326              	.L186:
 796:Core/Src/bms.c **** 
 797:Core/Src/bms.c ****     case 0x7E6:
 798:Core/Src/bms.c ****         bms->tempSensor[8] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3327              		.loc 1 798 0
 3328 00ac 0023     		movs	r3, #0
 3329 00ae A0F8D030 		strh	r3, [r0, #208]	@ movhi
 799:Core/Src/bms.c ****         break;
 3330              		.loc 1 799 0
 3331 00b2 7047     		bx	lr
 3332              	.L187:
 800:Core/Src/bms.c **** 
ARM GAS  /tmp/ccH7Cmgp.s 			page 76


 801:Core/Src/bms.c ****     case 0x7E8: //Begin module 3 temp sensors
 802:Core/Src/bms.c ****         bms->tempSensor[9] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3333              		.loc 1 802 0
 3334 00b4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3335 00b6 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3336 00b8 03EB0123 		add	r3, r3, r1, lsl #8
 3337 00bc A3EBC303 		sub	r3, r3, r3, lsl #3
 3338 00c0 03F5E043 		add	r3, r3, #28672
 3339 00c4 1C33     		adds	r3, r3, #28
 3340 00c6 A0F8D230 		strh	r3, [r0, #210]	@ movhi
 803:Core/Src/bms.c ****         break;
 3341              		.loc 1 803 0
 3342 00ca 7047     		bx	lr
 3343              	.L188:
 804:Core/Src/bms.c **** 
 805:Core/Src/bms.c ****     case 0x7E9:
 806:Core/Src/bms.c ****         bms->tempSensor[10] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3344              		.loc 1 806 0
 3345 00cc 0023     		movs	r3, #0
 3346 00ce A0F8D430 		strh	r3, [r0, #212]	@ movhi
 807:Core/Src/bms.c ****         bms->tempSensor[11] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3347              		.loc 1 807 0
 3348 00d2 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3349 00d4 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3350 00d6 03EB0123 		add	r3, r3, r1, lsl #8
 3351 00da A3EBC303 		sub	r3, r3, r3, lsl #3
 3352 00de 03F5E043 		add	r3, r3, #28672
 3353 00e2 1C33     		adds	r3, r3, #28
 3354 00e4 A0F8D630 		strh	r3, [r0, #214]	@ movhi
 808:Core/Src/bms.c ****         break;
 3355              		.loc 1 808 0
 3356 00e8 7047     		bx	lr
 3357              	.L189:
 809:Core/Src/bms.c **** 
 810:Core/Src/bms.c ****     case 0x7EA:
 811:Core/Src/bms.c ****         bms->tempSensor[12] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3358              		.loc 1 811 0
 3359 00ea 0023     		movs	r3, #0
 3360 00ec A0F8D830 		strh	r3, [r0, #216]	@ movhi
 812:Core/Src/bms.c ****         break;
 3361              		.loc 1 812 0
 3362 00f0 7047     		bx	lr
 3363              	.L190:
 813:Core/Src/bms.c **** 
 814:Core/Src/bms.c ****     case 0x7EC: //Begin module 4 temp sensors
 815:Core/Src/bms.c ****         bms->tempSensor[13] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3364              		.loc 1 815 0
 3365 00f2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3366 00f4 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3367 00f6 03EB0123 		add	r3, r3, r1, lsl #8
 3368 00fa A3EBC303 		sub	r3, r3, r3, lsl #3
 3369 00fe 03F5E043 		add	r3, r3, #28672
 3370 0102 1C33     		adds	r3, r3, #28
 3371 0104 A0F8DA30 		strh	r3, [r0, #218]	@ movhi
 816:Core/Src/bms.c ****         break;
 3372              		.loc 1 816 0
 3373 0108 7047     		bx	lr
ARM GAS  /tmp/ccH7Cmgp.s 			page 77


 3374              	.L191:
 817:Core/Src/bms.c **** 
 818:Core/Src/bms.c ****     case 0x7ED:
 819:Core/Src/bms.c ****         bms->tempSensor[14] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3375              		.loc 1 819 0
 3376 010a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3377 010c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3378 010e 03EB0123 		add	r3, r3, r1, lsl #8
 3379 0112 A3EBC303 		sub	r3, r3, r3, lsl #3
 3380 0116 03F5E043 		add	r3, r3, #28672
 3381 011a 1C33     		adds	r3, r3, #28
 3382 011c A0F8DC30 		strh	r3, [r0, #220]	@ movhi
 820:Core/Src/bms.c ****         break;
 3383              		.loc 1 820 0
 3384 0120 7047     		bx	lr
 3385              	.L192:
 821:Core/Src/bms.c **** 
 822:Core/Src/bms.c ****     case 0x7EE:
 823:Core/Src/bms.c ****         bms->tempSensor[15] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3386              		.loc 1 823 0
 3387 0122 0023     		movs	r3, #0
 3388 0124 A0F8DE30 		strh	r3, [r0, #222]	@ movhi
 3389              	.L177:
 3390 0128 7047     		bx	lr
 3391              		.cfi_endproc
 3392              	.LFE152:
 3394              		.comm	charged,1,1
 3395              		.comm	vechicleState,1,1
 3396              		.comm	BMS,492,4
 3397              		.comm	txCycle3,4,4
 3398              		.comm	txCycle2,4,4
 3399              		.comm	txCycle,4,4
 3400              		.comm	canMailbox3,4,4
 3401              		.comm	canMailbox2,4,4
 3402              		.comm	canMailbox,4,4
 3403              		.comm	canRx3,8,4
 3404              		.comm	canRx2,8,4
 3405              		.comm	canRx,8,4
 3406              		.comm	txMsgExt3,24,4
 3407              		.comm	txMsg3,24,4
 3408              		.comm	rxMsg3,28,4
 3409              		.comm	txMsgExt2,24,4
 3410              		.comm	txMsg2,24,4
 3411              		.comm	rxMsg2,28,4
 3412              		.comm	txMsgExt,24,4
 3413              		.comm	txMsg,24,4
 3414              		.comm	rxMsg,28,4
 3415              		.comm	sf5,40,4
 3416              		.comm	sf4,40,4
 3417              		.comm	sf3,40,4
 3418              		.comm	sf2,40,4
 3419              		.comm	sf,40,4
 3420              		.comm	hcan3,40,4
 3421              		.comm	hcan2,40,4
 3422              		.comm	hcan1,40,4
 3423              		.section	.rodata.balanceByte,"a",%progbits
 3424              		.align	2
ARM GAS  /tmp/ccH7Cmgp.s 			page 78


 3425              		.set	.LANCHOR0,. + 0
 3428              	balanceByte:
 3429 0000 00       		.byte	0
 3430 0001 00       		.byte	0
 3431 0002 00       		.byte	0
 3432 0003 00       		.byte	0
 3433 0004 00       		.byte	0
 3434 0005 00       		.byte	0
 3435 0006 01       		.byte	1
 3436 0007 01       		.byte	1
 3437 0008 01       		.byte	1
 3438 0009 01       		.byte	1
 3439 000a 01       		.byte	1
 3440 000b 01       		.byte	1
 3441 000c 01       		.byte	1
 3442 000d 01       		.byte	1
 3443 000e 02       		.byte	2
 3444 000f 02       		.byte	2
 3445 0010 02       		.byte	2
 3446 0011 02       		.byte	2
 3447 0012 02       		.byte	2
 3448 0013 02       		.byte	2
 3449 0014 02       		.byte	2
 3450 0015 02       		.byte	2
 3451 0016 03       		.byte	3
 3452 0017 03       		.byte	3
 3453 0018 03       		.byte	3
 3454 0019 03       		.byte	3
 3455 001a 03       		.byte	3
 3456 001b 03       		.byte	3
 3457 001c 03       		.byte	3
 3458 001d 03       		.byte	3
 3459 001e 04       		.byte	4
 3460 001f 04       		.byte	4
 3461 0020 04       		.byte	4
 3462 0021 04       		.byte	4
 3463 0022 04       		.byte	4
 3464 0023 04       		.byte	4
 3465 0024 04       		.byte	4
 3466 0025 04       		.byte	4
 3467 0026 05       		.byte	5
 3468 0027 05       		.byte	5
 3469 0028 05       		.byte	5
 3470 0029 05       		.byte	5
 3471 002a 05       		.byte	5
 3472 002b 05       		.byte	5
 3473 002c 05       		.byte	5
 3474 002d 05       		.byte	5
 3475 002e 06       		.byte	6
 3476 002f 06       		.byte	6
 3477 0030 06       		.byte	6
 3478 0031 06       		.byte	6
 3479 0032 06       		.byte	6
 3480 0033 06       		.byte	6
 3481 0034 06       		.byte	6
 3482 0035 06       		.byte	6
 3483 0036 07       		.byte	7
ARM GAS  /tmp/ccH7Cmgp.s 			page 79


 3484 0037 07       		.byte	7
 3485 0038 07       		.byte	7
 3486 0039 07       		.byte	7
 3487 003a 07       		.byte	7
 3488 003b 07       		.byte	7
 3489 003c 07       		.byte	7
 3490 003d 07       		.byte	7
 3491 003e 00       		.byte	0
 3492 003f 00       		.byte	0
 3493 0040 00       		.byte	0
 3494 0041 00       		.byte	0
 3495 0042 00       		.byte	0
 3496 0043 00       		.byte	0
 3497 0044 00       		.byte	0
 3498 0045 00       		.byte	0
 3499 0046 01       		.byte	1
 3500 0047 01       		.byte	1
 3501 0048 01       		.byte	1
 3502 0049 01       		.byte	1
 3503 004a 01       		.byte	1
 3504 004b 01       		.byte	1
 3505 004c 01       		.byte	1
 3506 004d 01       		.byte	1
 3507 004e 02       		.byte	2
 3508 004f 02       		.byte	2
 3509 0050 02       		.byte	2
 3510 0051 02       		.byte	2
 3511 0052 02       		.byte	2
 3512 0053 02       		.byte	2
 3513 0054 03       		.byte	3
 3514 0055 03       		.byte	3
 3515 0056 03       		.byte	3
 3516 0057 03       		.byte	3
 3517 0058 03       		.byte	3
 3518 0059 03       		.byte	3
 3519 005a 04       		.byte	4
 3520 005b 04       		.byte	4
 3521 005c 04       		.byte	4
 3522 005d 04       		.byte	4
 3523 005e 04       		.byte	4
 3524 005f 04       		.byte	4
 3525              		.section	.rodata.balanceShift,"a",%progbits
 3526              		.align	2
 3527              		.set	.LANCHOR1,. + 0
 3530              	balanceShift:
 3531 0000 01       		.byte	1
 3532 0001 02       		.byte	2
 3533 0002 04       		.byte	4
 3534 0003 08       		.byte	8
 3535 0004 10       		.byte	16
 3536 0005 20       		.byte	32
 3537 0006 01       		.byte	1
 3538 0007 02       		.byte	2
 3539 0008 04       		.byte	4
 3540 0009 08       		.byte	8
 3541 000a 10       		.byte	16
 3542 000b 20       		.byte	32
ARM GAS  /tmp/ccH7Cmgp.s 			page 80


 3543 000c 40       		.byte	64
 3544 000d 80       		.byte	-128
 3545 000e 01       		.byte	1
 3546 000f 02       		.byte	2
 3547 0010 04       		.byte	4
 3548 0011 08       		.byte	8
 3549 0012 10       		.byte	16
 3550 0013 20       		.byte	32
 3551 0014 40       		.byte	64
 3552 0015 80       		.byte	-128
 3553 0016 01       		.byte	1
 3554 0017 02       		.byte	2
 3555 0018 04       		.byte	4
 3556 0019 08       		.byte	8
 3557 001a 10       		.byte	16
 3558 001b 20       		.byte	32
 3559 001c 40       		.byte	64
 3560 001d 80       		.byte	-128
 3561 001e 01       		.byte	1
 3562 001f 02       		.byte	2
 3563 0020 04       		.byte	4
 3564 0021 08       		.byte	8
 3565 0022 10       		.byte	16
 3566 0023 20       		.byte	32
 3567 0024 40       		.byte	64
 3568 0025 80       		.byte	-128
 3569 0026 01       		.byte	1
 3570 0027 02       		.byte	2
 3571 0028 04       		.byte	4
 3572 0029 08       		.byte	8
 3573 002a 10       		.byte	16
 3574 002b 20       		.byte	32
 3575 002c 40       		.byte	64
 3576 002d 80       		.byte	-128
 3577 002e 01       		.byte	1
 3578 002f 02       		.byte	2
 3579 0030 04       		.byte	4
 3580 0031 08       		.byte	8
 3581 0032 10       		.byte	16
 3582 0033 20       		.byte	32
 3583 0034 40       		.byte	64
 3584 0035 80       		.byte	-128
 3585 0036 01       		.byte	1
 3586 0037 02       		.byte	2
 3587 0038 04       		.byte	4
 3588 0039 08       		.byte	8
 3589 003a 10       		.byte	16
 3590 003b 20       		.byte	32
 3591 003c 40       		.byte	64
 3592 003d 80       		.byte	-128
 3593 003e 01       		.byte	1
 3594 003f 02       		.byte	2
 3595 0040 04       		.byte	4
 3596 0041 08       		.byte	8
 3597 0042 10       		.byte	16
 3598 0043 20       		.byte	32
 3599 0044 40       		.byte	64
ARM GAS  /tmp/ccH7Cmgp.s 			page 81


 3600 0045 80       		.byte	-128
 3601 0046 01       		.byte	1
 3602 0047 02       		.byte	2
 3603 0048 04       		.byte	4
 3604 0049 08       		.byte	8
 3605 004a 10       		.byte	16
 3606 004b 20       		.byte	32
 3607 004c 40       		.byte	64
 3608 004d 80       		.byte	-128
 3609 004e 01       		.byte	1
 3610 004f 02       		.byte	2
 3611 0050 04       		.byte	4
 3612 0051 08       		.byte	8
 3613 0052 10       		.byte	16
 3614 0053 20       		.byte	32
 3615 0054 01       		.byte	1
 3616 0055 02       		.byte	2
 3617 0056 04       		.byte	4
 3618 0057 08       		.byte	8
 3619 0058 10       		.byte	16
 3620 0059 20       		.byte	32
 3621 005a 01       		.byte	1
 3622 005b 02       		.byte	2
 3623 005c 04       		.byte	4
 3624 005d 08       		.byte	8
 3625 005e 10       		.byte	16
 3626 005f 20       		.byte	32
 3627              		.text
 3628              	.Letext0:
 3629              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3630              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3631              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3632              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3633              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 3634              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3635              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3636              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3637              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3638              		.file 11 "/usr/include/newlib/sys/lock.h"
 3639              		.file 12 "/usr/include/newlib/sys/_types.h"
 3640              		.file 13 "/usr/include/newlib/sys/reent.h"
 3641              		.file 14 "Core/Inc/can_setup.h"
 3642              		.file 15 "Core/Inc/bms.h"
ARM GAS  /tmp/ccH7Cmgp.s 			page 82


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bms.c
     /tmp/ccH7Cmgp.s:18     .text.getSOC:0000000000000000 $t
     /tmp/ccH7Cmgp.s:24     .text.getSOC:0000000000000000 getSOC
     /tmp/ccH7Cmgp.s:48     .text.getSOC:0000000000000024 $d
     /tmp/ccH7Cmgp.s:53     .text.getHighCellVolt:0000000000000000 $t
     /tmp/ccH7Cmgp.s:59     .text.getHighCellVolt:0000000000000000 getHighCellVolt
     /tmp/ccH7Cmgp.s:99     .text.getHighCellTemp:0000000000000000 $t
     /tmp/ccH7Cmgp.s:105    .text.getHighCellTemp:0000000000000000 getHighCellTemp
     /tmp/ccH7Cmgp.s:146    .text.getLowCellTemp:0000000000000000 $t
     /tmp/ccH7Cmgp.s:152    .text.getLowCellTemp:0000000000000000 getLowCellTemp
     /tmp/ccH7Cmgp.s:197    .text.getAvgCellTemp:0000000000000000 $t
     /tmp/ccH7Cmgp.s:203    .text.getAvgCellTemp:0000000000000000 getAvgCellTemp
     /tmp/ccH7Cmgp.s:266    .text.getTempDelta:0000000000000000 $t
     /tmp/ccH7Cmgp.s:272    .text.getTempDelta:0000000000000000 getTempDelta
     /tmp/ccH7Cmgp.s:290    .text.getCellDelta:0000000000000000 $t
     /tmp/ccH7Cmgp.s:296    .text.getCellDelta:0000000000000000 getCellDelta
     /tmp/ccH7Cmgp.s:314    .text.getLowCellVolt:0000000000000000 $t
     /tmp/ccH7Cmgp.s:320    .text.getLowCellVolt:0000000000000000 getLowCellVolt
     /tmp/ccH7Cmgp.s:361    .text.getAvgCellVolt:0000000000000000 $t
     /tmp/ccH7Cmgp.s:367    .text.getAvgCellVolt:0000000000000000 getAvgCellVolt
     /tmp/ccH7Cmgp.s:409    .text.getAvgCellVolt:0000000000000024 $d
     /tmp/ccH7Cmgp.s:414    .text.getPackVolt:0000000000000000 $t
     /tmp/ccH7Cmgp.s:420    .text.getPackVolt:0000000000000000 getPackVolt
     /tmp/ccH7Cmgp.s:462    .text.getPackVolt:0000000000000020 $d
     /tmp/ccH7Cmgp.s:467    .text.getCellCount:0000000000000000 $t
     /tmp/ccH7Cmgp.s:473    .text.getCellCount:0000000000000000 getCellCount
     /tmp/ccH7Cmgp.s:538    .text.getCellCount:0000000000000038 $d
                            *COM*:00000000000001ec BMS
     /tmp/ccH7Cmgp.s:543    .text.initBMS:0000000000000000 $t
     /tmp/ccH7Cmgp.s:550    .text.initBMS:0000000000000000 initBMS
     /tmp/ccH7Cmgp.s:677    .text.initBMS:0000000000000098 $d
                            *COM*:0000000000000001 vechicleState
                            *COM*:0000000000000001 charged
     /tmp/ccH7Cmgp.s:684    .text.bmsStateHandler:0000000000000000 $t
     /tmp/ccH7Cmgp.s:691    .text.bmsStateHandler:0000000000000000 bmsStateHandler
     /tmp/ccH7Cmgp.s:705    .text.bmsStateHandler:000000000000000c $d
     /tmp/ccH7Cmgp.s:835    .text.bmsStateHandler:00000000000000f0 $d
     /tmp/ccH7Cmgp.s:841    .text.acChargeCommand:0000000000000000 $t
     /tmp/ccH7Cmgp.s:848    .text.acChargeCommand:0000000000000000 acChargeCommand
     /tmp/ccH7Cmgp.s:959    .text.acChargeCommand:00000000000000a0 $d
     /tmp/ccH7Cmgp.s:966    .text.tx500kData:0000000000000000 $t
     /tmp/ccH7Cmgp.s:973    .text.tx500kData:0000000000000000 tx500kData
     /tmp/ccH7Cmgp.s:1057   .text.tx500kData:0000000000000090 $d
     /tmp/ccH7Cmgp.s:1062   .text.sendCommand:0000000000000000 $t
     /tmp/ccH7Cmgp.s:1069   .text.sendCommand:0000000000000000 sendCommand
     /tmp/ccH7Cmgp.s:1120   .text.requestBICMdata:0000000000000000 $t
     /tmp/ccH7Cmgp.s:1127   .text.requestBICMdata:0000000000000000 requestBICMdata
     /tmp/ccH7Cmgp.s:1220   .text.refreshData:0000000000000000 $t
     /tmp/ccH7Cmgp.s:1227   .text.refreshData:0000000000000000 refreshData
     /tmp/ccH7Cmgp.s:1316   .text.refreshData:0000000000000064 $d
     /tmp/ccH7Cmgp.s:1321   .text.balanceCommand:0000000000000000 $t
     /tmp/ccH7Cmgp.s:1328   .text.balanceCommand:0000000000000000 balanceCommand
     /tmp/ccH7Cmgp.s:1521   .text.balanceCommand:0000000000000100 $d
     /tmp/ccH7Cmgp.s:1527   .text.vehicleComms:0000000000000000 $t
     /tmp/ccH7Cmgp.s:1534   .text.vehicleComms:0000000000000000 vehicleComms
     /tmp/ccH7Cmgp.s:1556   .text.vehicleComms:0000000000000014 $d
ARM GAS  /tmp/ccH7Cmgp.s 			page 83


     /tmp/ccH7Cmgp.s:1564   .text.decodeVolt:0000000000000000 $t
     /tmp/ccH7Cmgp.s:1571   .text.decodeVolt:0000000000000000 decodeVolt
     /tmp/ccH7Cmgp.s:1595   .text.decodeVolt:0000000000000016 $d
     /tmp/ccH7Cmgp.s:1626   .text.decodeVolt:0000000000000054 $t
     /tmp/ccH7Cmgp.s:2055   .text.decodeVolt:0000000000000370 $d
     /tmp/ccH7Cmgp.s:2059   .text.decodeVolt:0000000000000374 $t
     /tmp/ccH7Cmgp.s:2450   .text.decodeVolt:0000000000000674 $d
     /tmp/ccH7Cmgp.s:2454   .text.decodeVolt:0000000000000678 $t
     /tmp/ccH7Cmgp.s:2845   .text.decodeVolt:0000000000000984 $d
     /tmp/ccH7Cmgp.s:2849   .text.decodeVolt:0000000000000988 $t
     /tmp/ccH7Cmgp.s:3215   .text.decodeVolt:0000000000000c58 $d
     /tmp/ccH7Cmgp.s:3220   .text.decodeTemp:0000000000000000 $t
     /tmp/ccH7Cmgp.s:3227   .text.decodeTemp:0000000000000000 decodeTemp
     /tmp/ccH7Cmgp.s:3243   .text.decodeTemp:0000000000000010 $d
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000004 canMailbox3
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx3
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000018 txMsg3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan3
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
     /tmp/ccH7Cmgp.s:3424   .rodata.balanceByte:0000000000000000 $d
     /tmp/ccH7Cmgp.s:3428   .rodata.balanceByte:0000000000000000 balanceByte
     /tmp/ccH7Cmgp.s:3526   .rodata.balanceShift:0000000000000000 $d
     /tmp/ccH7Cmgp.s:3530   .rodata.balanceShift:0000000000000000 balanceShift
                     .debug_frame:0000000000000010 $d
     /tmp/ccH7Cmgp.s:710    .text.bmsStateHandler:0000000000000011 $d
     /tmp/ccH7Cmgp.s:710    .text.bmsStateHandler:0000000000000012 $t
     /tmp/ccH7Cmgp.s:3258   .text.decodeTemp:000000000000001f $d
     /tmp/ccH7Cmgp.s:3258   .text.decodeTemp:0000000000000020 $t

UNDEFINED SYMBOLS
can2tx
can1tx
can3tx
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
ARM GAS  /tmp/ccH7Cmgp.s 			page 84


