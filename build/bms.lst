ARM GAS  /tmp/ccVfUIOB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bms.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.getSOC,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	getSOC:
  25              	.LFB139:
  26              		.file 1 "Core/Src/bms.c"
   1:Core/Src/bms.c **** #include "bms.h"
   2:Core/Src/bms.c **** #include "settings.h"
   3:Core/Src/bms.c **** #include "my_math.h"
   4:Core/Src/bms.c **** 
   5:Core/Src/bms.c **** static void getPackVolt(bms_t *bms);
   6:Core/Src/bms.c **** static void getAvgCellVolt(bms_t *bms);
   7:Core/Src/bms.c **** static void getLowCellVolt(bms_t *bms);
   8:Core/Src/bms.c **** static void getHighCellVolt(bms_t *bms);
   9:Core/Src/bms.c **** static void getCellDelta(bms_t *bms);
  10:Core/Src/bms.c **** static void getLowCellTemp(bms_t *bms);
  11:Core/Src/bms.c **** static void getHighCellTemp(bms_t *bms);
  12:Core/Src/bms.c **** static void getAvgCellTemp(bms_t *bms);
  13:Core/Src/bms.c **** static void getTempDelta(bms_t *bms);
  14:Core/Src/bms.c **** static void getCellCount(bms_t *bms, int pack);
  15:Core/Src/bms.c **** static void getSOC(bms_t *bms);
  16:Core/Src/bms.c **** 
  17:Core/Src/bms.c **** enum
  18:Core/Src/bms.c **** {
  19:Core/Src/bms.c ****     Boot,
  20:Core/Src/bms.c ****     Ready,
  21:Core/Src/bms.c ****     Drive,
  22:Core/Src/bms.c ****     Charge,
  23:Core/Src/bms.c ****     Error
  24:Core/Src/bms.c **** };
  25:Core/Src/bms.c **** 
  26:Core/Src/bms.c **** enum
  27:Core/Src/bms.c **** {
  28:Core/Src/bms.c ****     off,
  29:Core/Src/bms.c ****     on, //key on, inverter off
  30:Core/Src/bms.c ****     charge_keyOff,
  31:Core/Src/bms.c ****     charge_keyOn, //who even does that
  32:Core/Src/bms.c ****     idle,         //key on, inverter on
ARM GAS  /tmp/ccVfUIOB.s 			page 2


  33:Core/Src/bms.c ****     run,          //key on direction selected
  34:Core/Src/bms.c ****     launchMode,   //break shit
  35:Core/Src/bms.c ****     burnout,      //destroy tires
  36:Core/Src/bms.c **** };
  37:Core/Src/bms.c **** 
  38:Core/Src/bms.c **** /*/SOC filtering
  39:Core/Src/bms.c **** static const int numReadings = 10;
  40:Core/Src/bms.c **** static int readings[10];  // the readings from the analog input
  41:Core/Src/bms.c **** static int readIndex = 0; // the index of the current reading
  42:Core/Src/bms.c **** static int total = 0;     // the running total
  43:Core/Src/bms.c **** static int average = 0;   // the average
  44:Core/Src/bms.c **** */
  45:Core/Src/bms.c **** 
  46:Core/Src/bms.c **** static const uint8_t balanceByte[96] =
  47:Core/Src/bms.c ****     {0, 0, 0, 0, 0, 0,
  48:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  49:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2, 2, 2,
  50:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3, 3, 3,
  51:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4, 4, 4,
  52:Core/Src/bms.c ****      5, 5, 5, 5, 5, 5, 5, 5,
  53:Core/Src/bms.c ****      6, 6, 6, 6, 6, 6, 6, 6,
  54:Core/Src/bms.c ****      7, 7, 7, 7, 7, 7, 7, 7,
  55:Core/Src/bms.c ****      0, 0, 0, 0, 0, 0, 0, 0,
  56:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  57:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2,
  58:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3,
  59:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4};
  60:Core/Src/bms.c **** 
  61:Core/Src/bms.c **** static const uint8_t balanceShift[96] =
  62:Core/Src/bms.c ****     {0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  63:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  64:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  65:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  66:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  67:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  68:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  69:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  70:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  71:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  72:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  73:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  74:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20};
  75:Core/Src/bms.c **** 
  76:Core/Src/bms.c **** static int errorCount;
  77:Core/Src/bms.c **** // Initialize BMS //////////////////////////////////////////////////////////////////
  78:Core/Src/bms.c **** void initBMS(void)
  79:Core/Src/bms.c **** {
  80:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
  81:Core/Src/bms.c ****     {
  82:Core/Src/bms.c ****         BMS[i].state = Boot;
  83:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
  84:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
  85:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
  86:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
  87:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
  88:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
  89:Core/Src/bms.c ****         BMS[i].packVolt = 0;
ARM GAS  /tmp/ccVfUIOB.s 			page 3


  90:Core/Src/bms.c ****         BMS[i].SOC = 0;
  91:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
  92:Core/Src/bms.c **** 
  93:Core/Src/bms.c ****         for (size_t j = 0; j < 96; j++)
  94:Core/Src/bms.c ****         {
  95:Core/Src/bms.c ****             BMS[i].cellVolt[j] = 0;
  96:Core/Src/bms.c ****         }
  97:Core/Src/bms.c **** 
  98:Core/Src/bms.c ****         for (size_t j = 0; j < 16; j++)
  99:Core/Src/bms.c ****         {
 100:Core/Src/bms.c ****             BMS[i].tempSensor[j] = 0;
 101:Core/Src/bms.c ****         }
 102:Core/Src/bms.c ****     }
 103:Core/Src/bms.c ****     //vehicleState = off;
 104:Core/Src/bms.c ****     watchdogBits = 0b0000;
 105:Core/Src/bms.c ****     chargerOn = false;
 106:Core/Src/bms.c ****     errorCount = 0;
 107:Core/Src/bms.c **** 
 108:Core/Src/bms.c **** }
 109:Core/Src/bms.c **** 
 110:Core/Src/bms.c **** // Primary State Machine ///////////////////////////////////////////////////////////////
 111:Core/Src/bms.c **** void bmsStateHandler(bms_t *bms)
 112:Core/Src/bms.c **** {
 113:Core/Src/bms.c ****     switch (bms->state)
 114:Core/Src/bms.c ****     {
 115:Core/Src/bms.c ****     case Boot:
 116:Core/Src/bms.c ****         bms->chargeRequest = 0;
 117:Core/Src/bms.c ****         bms->state = Ready;
 118:Core/Src/bms.c **** 
 119:Core/Src/bms.c ****         break;
 120:Core/Src/bms.c **** 
 121:Core/Src/bms.c ****     case Ready:
 122:Core/Src/bms.c ****         bms->chargeRequest = 0;
 123:Core/Src/bms.c ****         if (bms->avgCellVolt > BALANCE_VOLTAGE)
 124:Core/Src/bms.c ****         {
 125:Core/Src/bms.c ****             if ((bms->highCellVolt - bms->lowCellVolt) > (BALANCE_HYS << 2))
 126:Core/Src/bms.c ****             {
 127:Core/Src/bms.c ****                 bms->balancecells = true;
 128:Core/Src/bms.c ****             }
 129:Core/Src/bms.c **** 
 130:Core/Src/bms.c ****             else if ((bms->highCellVolt - bms->lowCellVolt) <= BALANCE_HYS )
 131:Core/Src/bms.c ****             {
 132:Core/Src/bms.c ****                 bms->balancecells = false;
 133:Core/Src/bms.c ****             }
 134:Core/Src/bms.c ****         }
 135:Core/Src/bms.c ****         else
 136:Core/Src/bms.c ****         {
 137:Core/Src/bms.c ****             bms->balancecells = false;
 138:Core/Src/bms.c ****         }
 139:Core/Src/bms.c **** 
 140:Core/Src/bms.c ****         if ((bms->highCellVolt < (CHARGE_V_SETPOINT - CHARGE_HYS)) && (bms->lowCellVolt > UNDER_V_S
 141:Core/Src/bms.c ****         {
 142:Core/Src/bms.c ****             bms->state = Charge;
 143:Core/Src/bms.c ****         }
 144:Core/Src/bms.c ****         break;
 145:Core/Src/bms.c **** 
 146:Core/Src/bms.c ****     case Charge:
ARM GAS  /tmp/ccVfUIOB.s 			page 4


 147:Core/Src/bms.c ****         bms->balancecells = false;
 148:Core/Src/bms.c ****         bms->chargeRequest = 1;        
 149:Core/Src/bms.c **** 
 150:Core/Src/bms.c ****         if (bms->highCellVolt > CHARGE_V_SETPOINT)// || bms->highCellTemp > OVER_T_SETPOINT)
 151:Core/Src/bms.c ****         {
 152:Core/Src/bms.c ****             bms->state = Ready;
 153:Core/Src/bms.c ****         }
 154:Core/Src/bms.c ****         break;
 155:Core/Src/bms.c **** 
 156:Core/Src/bms.c ****     case Error:
 157:Core/Src/bms.c ****         HAL_NVIC_SystemReset();
 158:Core/Src/bms.c ****         break;
 159:Core/Src/bms.c **** 
 160:Core/Src/bms.c ****     default:
 161:Core/Src/bms.c ****         break;
 162:Core/Src/bms.c ****     }
 163:Core/Src/bms.c **** }
 164:Core/Src/bms.c **** 
 165:Core/Src/bms.c **** // 10kw Tesla Charger /////////////////////////////////////////////////////////////////////
 166:Core/Src/bms.c **** void acChargeCommand(void)
 167:Core/Src/bms.c **** {
 168:Core/Src/bms.c ****     uint8_t canTx2[8];
 169:Core/Src/bms.c ****     if (chargerOn)
 170:Core/Src/bms.c ****     {
 171:Core/Src/bms.c ****         int val = 32;
 172:Core/Src/bms.c ****         canTx2[0] = 0x40;
 173:Core/Src/bms.c ****         canTx2[1] = 0x00;
 174:Core/Src/bms.c ****         canTx2[2] = 0x20;
 175:Core/Src/bms.c ****         canTx2[3] = 9;
 176:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 177:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF; 
 178:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 179:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 180:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2); 
 181:Core/Src/bms.c ****     }
 182:Core/Src/bms.c ****     else
 183:Core/Src/bms.c ****     {
 184:Core/Src/bms.c ****         int val = 0;
 185:Core/Src/bms.c ****         canTx2[0] = 0x40;
 186:Core/Src/bms.c ****         canTx2[1] = 0x00;
 187:Core/Src/bms.c ****         canTx2[2] = 0x20;
 188:Core/Src/bms.c ****         canTx2[3] = 9;
 189:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 190:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 191:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 192:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 193:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2);
 194:Core/Src/bms.c **** 
 195:Core/Src/bms.c ****     }
 196:Core/Src/bms.c ****     HAL_Delay(1);
 197:Core/Src/bms.c **** }
 198:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 199:Core/Src/bms.c **** void tx500kData(void)
 200:Core/Src/bms.c **** {
 201:Core/Src/bms.c **** 
 202:Core/Src/bms.c ****     uint8_t bms0[8];
 203:Core/Src/bms.c ****     bms0[0] = BMS[0].packVolt & 0xFF;
ARM GAS  /tmp/ccVfUIOB.s 			page 5


 204:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 205:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 206:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 207:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 208:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 209:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 210:Core/Src/bms.c ****     bms0[7] = (BMS[0].balancecells);//0;
 211:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 212:Core/Src/bms.c **** 
 213:Core/Src/bms.c **** 
 214:Core/Src/bms.c ****     uint8_t bms1[8];
 215:Core/Src/bms.c ****     bms1[0] = BMS[1].packVolt & 0xFF;
 216:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 217:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 218:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 219:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 220:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 221:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 222:Core/Src/bms.c ****     bms1[7] = (BMS[1].balancecells);//0;
 223:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 224:Core/Src/bms.c **** 
 225:Core/Src/bms.c **** }
 226:Core/Src/bms.c **** 
 227:Core/Src/bms.c **** void refreshData(void)
 228:Core/Src/bms.c **** {
 229:Core/Src/bms.c **** 
 230:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 231:Core/Src/bms.c ****     {
 232:Core/Src/bms.c ****         //requestBICMdata(&BMS[i], i);
 233:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 234:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 235:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 236:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 237:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 238:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 239:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 240:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 241:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 242:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 243:Core/Src/bms.c ****         getSOC(&BMS[i]);
 244:Core/Src/bms.c ****     }
 245:Core/Src/bms.c **** }
 246:Core/Src/bms.c **** 
 247:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 248:Core/Src/bms.c **** void sendCommand(int pack)
 249:Core/Src/bms.c **** {
 250:Core/Src/bms.c ****     uint8_t canTx[3];
 251:Core/Src/bms.c ****     canTx[0] = 0x02;
 252:Core/Src/bms.c ****     canTx[1] = 0x00;
 253:Core/Src/bms.c ****     canTx[2] = 0x00;
 254:Core/Src/bms.c **** 
 255:Core/Src/bms.c ****     switch (pack)
 256:Core/Src/bms.c ****     {
 257:Core/Src/bms.c ****     case 0:
 258:Core/Src/bms.c ****         can1tx(0x200, 3, canTx);
 259:Core/Src/bms.c ****         break;
 260:Core/Src/bms.c **** 
ARM GAS  /tmp/ccVfUIOB.s 			page 6


 261:Core/Src/bms.c ****     case 1:
 262:Core/Src/bms.c ****         can3tx(0x200, 3, canTx);
 263:Core/Src/bms.c ****         break;
 264:Core/Src/bms.c **** 
 265:Core/Src/bms.c ****     default:
 266:Core/Src/bms.c ****         break;
 267:Core/Src/bms.c ****     }
 268:Core/Src/bms.c **** }
 269:Core/Src/bms.c **** 
 270:Core/Src/bms.c **** void requestBICMdata(bms_t *bms, int pack)
 271:Core/Src/bms.c **** {
 272:Core/Src/bms.c **** 
 273:Core/Src/bms.c ****     uint8_t canTx[8];
 274:Core/Src/bms.c ****     if (!bms->balancecells)
 275:Core/Src/bms.c ****     {
 276:Core/Src/bms.c ****         sendCommand(pack);
 277:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 278:Core/Src/bms.c ****         {
 279:Core/Src/bms.c ****             canTx[i] = 0x00;
 280:Core/Src/bms.c ****         }
 281:Core/Src/bms.c ****         switch (pack)
 282:Core/Src/bms.c ****         {
 283:Core/Src/bms.c ****         case 0:
 284:Core/Src/bms.c ****             can1tx(0x300, 8, canTx);
 285:Core/Src/bms.c ****             break;
 286:Core/Src/bms.c **** 
 287:Core/Src/bms.c ****         case 1:
 288:Core/Src/bms.c ****             can3tx(0x300, 8, canTx);
 289:Core/Src/bms.c ****             break;
 290:Core/Src/bms.c **** 
 291:Core/Src/bms.c ****         default:
 292:Core/Src/bms.c ****             break;
 293:Core/Src/bms.c ****         }
 294:Core/Src/bms.c **** 
 295:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 296:Core/Src/bms.c ****         {
 297:Core/Src/bms.c ****             canTx[i] = 0x00;
 298:Core/Src/bms.c ****         }
 299:Core/Src/bms.c **** 
 300:Core/Src/bms.c ****         switch (pack)
 301:Core/Src/bms.c ****         {
 302:Core/Src/bms.c ****         case 0:
 303:Core/Src/bms.c ****             can1tx(0x310, 5, canTx);
 304:Core/Src/bms.c ****             break;
 305:Core/Src/bms.c **** 
 306:Core/Src/bms.c ****         case 1:
 307:Core/Src/bms.c ****             can3tx(0x310, 5, canTx);
 308:Core/Src/bms.c ****             break;
 309:Core/Src/bms.c **** 
 310:Core/Src/bms.c ****         default:
 311:Core/Src/bms.c ****             break;
 312:Core/Src/bms.c ****         }
 313:Core/Src/bms.c ****     }
 314:Core/Src/bms.c **** }
 315:Core/Src/bms.c **** 
 316:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 317:Core/Src/bms.c **** void balanceCommand(bms_t *bms, int pack)
ARM GAS  /tmp/ccVfUIOB.s 			page 7


 318:Core/Src/bms.c **** {
 319:Core/Src/bms.c ****     sendCommand(pack);
 320:Core/Src/bms.c ****     uint8_t balance[8];
 321:Core/Src/bms.c **** 
 322:Core/Src/bms.c ****     switch (pack)
 323:Core/Src/bms.c ****     {
 324:Core/Src/bms.c ****     case 0:
 325:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 326:Core/Src/bms.c ****         {
 327:Core/Src/bms.c ****             balance[i] = 0;
 328:Core/Src/bms.c ****         }
 329:Core/Src/bms.c **** 
 330:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 331:Core/Src/bms.c ****         {
 332:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 333:Core/Src/bms.c ****             {
 334:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 335:Core/Src/bms.c ****             }
 336:Core/Src/bms.c ****         }
 337:Core/Src/bms.c ****         can1tx(0x300, 8, balance);
 338:Core/Src/bms.c **** 
 339:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 340:Core/Src/bms.c ****         {
 341:Core/Src/bms.c ****             balance[i] = 0;
 342:Core/Src/bms.c ****         }
 343:Core/Src/bms.c **** 
 344:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 345:Core/Src/bms.c ****         {
 346:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 347:Core/Src/bms.c ****             {
 348:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 349:Core/Src/bms.c ****             }
 350:Core/Src/bms.c ****         }
 351:Core/Src/bms.c ****         can1tx(0x310, 5, balance);
 352:Core/Src/bms.c ****         break;
 353:Core/Src/bms.c **** 
 354:Core/Src/bms.c ****     case 1:
 355:Core/Src/bms.c **** 
 356:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 357:Core/Src/bms.c ****         {
 358:Core/Src/bms.c ****             balance[i] = 0;
 359:Core/Src/bms.c ****         }
 360:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 361:Core/Src/bms.c ****         {
 362:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 363:Core/Src/bms.c ****             {
 364:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 365:Core/Src/bms.c ****             }
 366:Core/Src/bms.c ****         }
 367:Core/Src/bms.c ****         can3tx(0x300, 8, balance);
 368:Core/Src/bms.c **** 
 369:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 370:Core/Src/bms.c ****         {
 371:Core/Src/bms.c ****             balance[i] = 0;
 372:Core/Src/bms.c ****         }
 373:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 374:Core/Src/bms.c ****         {
ARM GAS  /tmp/ccVfUIOB.s 			page 8


 375:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 376:Core/Src/bms.c ****             {
 377:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 378:Core/Src/bms.c ****             }
 379:Core/Src/bms.c ****         }
 380:Core/Src/bms.c ****         can3tx(0x310, 5, balance);
 381:Core/Src/bms.c ****         break;
 382:Core/Src/bms.c **** 
 383:Core/Src/bms.c ****     default:
 384:Core/Src/bms.c ****         break;
 385:Core/Src/bms.c ****     }
 386:Core/Src/bms.c **** }
 387:Core/Src/bms.c **** 
 388:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 389:Core/Src/bms.c **** void getSOC(bms_t *bms)
 390:Core/Src/bms.c **** {
  27              		.loc 1 390 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 391:Core/Src/bms.c ****     bms->SOC = MAP(bms->avgCellVolt, SOC_VOLT_10, SOC_VOLT_90, 10, 90);
  33              		.loc 1 391 0
  34 0000 B0F8E620 		ldrh	r2, [r0, #230]
  35 0004 92B2     		uxth	r2, r2
  36 0006 A2F64852 		subw	r2, r2, #3400
  37 000a 02EB8202 		add	r2, r2, r2, lsl #2
  38 000e 1301     		lsls	r3, r2, #4
  39 0010 054A     		ldr	r2, .L2
  40 0012 82FB0312 		smull	r1, r2, r2, r3
  41 0016 DB17     		asrs	r3, r3, #31
  42 0018 C3EB2223 		rsb	r3, r3, r2, asr #8
  43 001c 0A33     		adds	r3, r3, #10
  44 001e DBB2     		uxtb	r3, r3
  45 0020 80F8F330 		strb	r3, [r0, #243]
  46 0024 7047     		bx	lr
  47              	.L3:
  48 0026 00BF     		.align	2
  49              	.L2:
  50 0028 91739F5D 		.word	1570730897
  51              		.cfi_endproc
  52              	.LFE139:
  54              		.section	.text.getHighCellVolt,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	getHighCellVolt:
  62              	.LFB140:
 392:Core/Src/bms.c ****     /*
 393:Core/Src/bms.c ****     // subtract the last reading:
 394:Core/Src/bms.c ****     total = total - readings[readIndex];
 395:Core/Src/bms.c ****     // read from the sensor:
 396:Core/Src/bms.c ****     readings[readIndex] = bms->SOC;
 397:Core/Src/bms.c ****     // add the reading to the total:
ARM GAS  /tmp/ccVfUIOB.s 			page 9


 398:Core/Src/bms.c ****     total = total + readings[readIndex];
 399:Core/Src/bms.c ****     // advance to the next position in the array:
 400:Core/Src/bms.c ****     readIndex = readIndex + 1;
 401:Core/Src/bms.c ****     // if we're at the end of the array...
 402:Core/Src/bms.c ****     if (readIndex >= numReadings)
 403:Core/Src/bms.c ****     {
 404:Core/Src/bms.c ****         // ...wrap around to the beginning:
 405:Core/Src/bms.c ****         readIndex = 0;
 406:Core/Src/bms.c ****     }
 407:Core/Src/bms.c ****     // calculate the average:
 408:Core/Src/bms.c ****     average = total / numReadings;
 409:Core/Src/bms.c ****     */
 410:Core/Src/bms.c **** }
 411:Core/Src/bms.c **** 
 412:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 413:Core/Src/bms.c **** void getHighCellVolt(bms_t *bms)
 414:Core/Src/bms.c **** {
  63              		.loc 1 414 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              	.LVL1:
 415:Core/Src/bms.c ****     bms->highCellVolt = 0;
  69              		.loc 1 415 0
  70 0000 0023     		movs	r3, #0
  71 0002 A0F8E430 		strh	r3, [r0, #228]	@ movhi
  72              	.LVL2:
  73              	.LBB2:
 416:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
  74              		.loc 1 416 0
  75 0006 00E0     		b	.L5
  76              	.LVL3:
  77              	.L6:
  78              		.loc 1 416 0 is_stmt 0 discriminator 2
  79 0008 0133     		adds	r3, r3, #1
  80              	.LVL4:
  81              	.L5:
  82              		.loc 1 416 0 discriminator 1
  83 000a 5F2B     		cmp	r3, #95
  84 000c 0DD8     		bhi	.L8
 417:Core/Src/bms.c ****     {
 418:Core/Src/bms.c ****         if (bms->cellVolt[i] > bms->highCellVolt)
  85              		.loc 1 418 0 is_stmt 1
  86 000e 30F81310 		ldrh	r1, [r0, r3, lsl #1]
  87 0012 89B2     		uxth	r1, r1
  88 0014 B0F8E420 		ldrh	r2, [r0, #228]
  89 0018 92B2     		uxth	r2, r2
  90 001a 9142     		cmp	r1, r2
  91 001c F4D9     		bls	.L6
 419:Core/Src/bms.c ****         {
 420:Core/Src/bms.c ****             bms->highCellVolt = bms->cellVolt[i];
  92              		.loc 1 420 0
  93 001e 30F81320 		ldrh	r2, [r0, r3, lsl #1]
  94 0022 92B2     		uxth	r2, r2
  95 0024 A0F8E420 		strh	r2, [r0, #228]	@ movhi
  96 0028 EEE7     		b	.L6
ARM GAS  /tmp/ccVfUIOB.s 			page 10


  97              	.L8:
  98              	.LBE2:
 421:Core/Src/bms.c ****         }
 422:Core/Src/bms.c ****     }
 423:Core/Src/bms.c **** }
  99              		.loc 1 423 0
 100 002a 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE140:
 104              		.section	.text.getHighCellTemp,"ax",%progbits
 105              		.align	1
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv4-sp-d16
 111              	getHighCellTemp:
 112              	.LFB141:
 424:Core/Src/bms.c **** 
 425:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 426:Core/Src/bms.c **** void getHighCellTemp(bms_t *bms)
 427:Core/Src/bms.c **** {
 113              		.loc 1 427 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL5:
 428:Core/Src/bms.c ****     bms->highCellTemp = 0;
 119              		.loc 1 428 0
 120 0000 0023     		movs	r3, #0
 121 0002 A0F8EA30 		strh	r3, [r0, #234]	@ movhi
 122              	.LVL6:
 123              	.LBB3:
 429:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 124              		.loc 1 429 0
 125 0006 00E0     		b	.L10
 126              	.LVL7:
 127              	.L11:
 128              		.loc 1 429 0 is_stmt 0 discriminator 2
 129 0008 0133     		adds	r3, r3, #1
 130              	.LVL8:
 131              	.L10:
 132              		.loc 1 429 0 discriminator 1
 133 000a 0F2B     		cmp	r3, #15
 134 000c 11D8     		bhi	.L13
 430:Core/Src/bms.c ****     {
 431:Core/Src/bms.c ****         if (bms->tempSensor[i] > bms->highCellTemp)
 135              		.loc 1 431 0 is_stmt 1
 136 000e 03F16002 		add	r2, r3, #96
 137 0012 30F81210 		ldrh	r1, [r0, r2, lsl #1]
 138 0016 89B2     		uxth	r1, r1
 139 0018 B0F8EA20 		ldrh	r2, [r0, #234]
 140 001c 92B2     		uxth	r2, r2
 141 001e 9142     		cmp	r1, r2
 142 0020 F2D9     		bls	.L11
 432:Core/Src/bms.c ****         {
 433:Core/Src/bms.c ****             bms->highCellTemp = bms->tempSensor[i];
ARM GAS  /tmp/ccVfUIOB.s 			page 11


 143              		.loc 1 433 0
 144 0022 03F16002 		add	r2, r3, #96
 145 0026 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 146 002a 92B2     		uxth	r2, r2
 147 002c A0F8EA20 		strh	r2, [r0, #234]	@ movhi
 148 0030 EAE7     		b	.L11
 149              	.L13:
 150              	.LBE3:
 434:Core/Src/bms.c ****         }
 435:Core/Src/bms.c ****     }
 436:Core/Src/bms.c **** }
 151              		.loc 1 436 0
 152 0032 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE141:
 156              		.section	.text.getLowCellTemp,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	getLowCellTemp:
 164              	.LFB142:
 437:Core/Src/bms.c **** 
 438:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 439:Core/Src/bms.c **** void getLowCellTemp(bms_t *bms)
 440:Core/Src/bms.c **** {
 165              		.loc 1 440 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              	.LVL9:
 441:Core/Src/bms.c ****     bms->lowCellTemp = 20000;
 171              		.loc 1 441 0
 172 0000 44F62063 		movw	r3, #20000
 173 0004 A0F8EC30 		strh	r3, [r0, #236]	@ movhi
 174              	.LVL10:
 175              	.LBB4:
 442:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 176              		.loc 1 442 0
 177 0008 0023     		movs	r3, #0
 178 000a 00E0     		b	.L15
 179              	.LVL11:
 180              	.L16:
 181              		.loc 1 442 0 is_stmt 0 discriminator 2
 182 000c 0133     		adds	r3, r3, #1
 183              	.LVL12:
 184              	.L15:
 185              		.loc 1 442 0 discriminator 1
 186 000e 0F2B     		cmp	r3, #15
 187 0010 18D8     		bhi	.L18
 443:Core/Src/bms.c ****     {
 444:Core/Src/bms.c ****         if (bms->tempSensor[i] > 0)
 188              		.loc 1 444 0 is_stmt 1
 189 0012 03F16002 		add	r2, r3, #96
 190 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
ARM GAS  /tmp/ccVfUIOB.s 			page 12


 191 001a 92B2     		uxth	r2, r2
 192 001c 002A     		cmp	r2, #0
 193 001e F5D0     		beq	.L16
 445:Core/Src/bms.c ****         {
 446:Core/Src/bms.c ****             if (bms->tempSensor[i] < bms->lowCellTemp)
 194              		.loc 1 446 0
 195 0020 03F16002 		add	r2, r3, #96
 196 0024 30F81210 		ldrh	r1, [r0, r2, lsl #1]
 197 0028 89B2     		uxth	r1, r1
 198 002a B0F8EC20 		ldrh	r2, [r0, #236]
 199 002e 92B2     		uxth	r2, r2
 200 0030 9142     		cmp	r1, r2
 201 0032 EBD2     		bcs	.L16
 447:Core/Src/bms.c ****             {
 448:Core/Src/bms.c ****                 bms->lowCellTemp = bms->tempSensor[i];
 202              		.loc 1 448 0
 203 0034 03F16002 		add	r2, r3, #96
 204 0038 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 205 003c 92B2     		uxth	r2, r2
 206 003e A0F8EC20 		strh	r2, [r0, #236]	@ movhi
 207 0042 E3E7     		b	.L16
 208              	.L18:
 209              	.LBE4:
 449:Core/Src/bms.c ****             }
 450:Core/Src/bms.c ****         }
 451:Core/Src/bms.c ****     }
 452:Core/Src/bms.c **** }
 210              		.loc 1 452 0
 211 0044 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE142:
 215              		.section	.text.getAvgCellTemp,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	getAvgCellTemp:
 223              	.LFB143:
 453:Core/Src/bms.c **** 
 454:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 455:Core/Src/bms.c **** void getAvgCellTemp(bms_t *bms)
 456:Core/Src/bms.c **** {
 224              		.loc 1 456 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL13:
 230 0000 10B4     		push	{r4}
 231              		.cfi_def_cfa_offset 4
 232              		.cfi_offset 4, -4
 233              	.LVL14:
 234              	.LBB5:
 457:Core/Src/bms.c ****     int zeroCounter = 0;
 458:Core/Src/bms.c ****     int sumTemp = 0;
 459:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
ARM GAS  /tmp/ccVfUIOB.s 			page 13


 235              		.loc 1 459 0
 236 0002 0023     		movs	r3, #0
 237              	.LBE5:
 458:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 238              		.loc 1 458 0
 239 0004 1946     		mov	r1, r3
 457:Core/Src/bms.c ****     int zeroCounter = 0;
 240              		.loc 1 457 0
 241 0006 1C46     		mov	r4, r3
 242              	.LBB6:
 243              		.loc 1 459 0
 244 0008 06E0     		b	.L20
 245              	.LVL15:
 246              	.L21:
 460:Core/Src/bms.c ****     {
 461:Core/Src/bms.c ****         if (bms->tempSensor[i] == 0) //IGNORE_TEMP)
 462:Core/Src/bms.c ****         {
 463:Core/Src/bms.c ****             zeroCounter++;
 464:Core/Src/bms.c ****         }
 465:Core/Src/bms.c **** 
 466:Core/Src/bms.c ****         sumTemp += bms->tempSensor[i];
 247              		.loc 1 466 0 discriminator 2
 248 000a 03F16002 		add	r2, r3, #96
 249 000e 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 250 0012 11FA82F1 		uxtah	r1, r1, r2
 251              	.LVL16:
 459:Core/Src/bms.c ****     {
 252              		.loc 1 459 0 discriminator 2
 253 0016 0133     		adds	r3, r3, #1
 254              	.LVL17:
 255              	.L20:
 459:Core/Src/bms.c ****     {
 256              		.loc 1 459 0 is_stmt 0 discriminator 1
 257 0018 0F2B     		cmp	r3, #15
 258 001a 08D8     		bhi	.L24
 461:Core/Src/bms.c ****         {
 259              		.loc 1 461 0 is_stmt 1
 260 001c 03F16002 		add	r2, r3, #96
 261 0020 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 262 0024 92B2     		uxth	r2, r2
 263 0026 002A     		cmp	r2, #0
 264 0028 EFD1     		bne	.L21
 463:Core/Src/bms.c ****         }
 265              		.loc 1 463 0
 266 002a 0134     		adds	r4, r4, #1
 267              	.LVL18:
 268 002c EDE7     		b	.L21
 269              	.L24:
 270              	.LBE6:
 467:Core/Src/bms.c ****     }
 468:Core/Src/bms.c ****     bms->avgCellTemp = (sumTemp / (16 - zeroCounter));
 271              		.loc 1 468 0
 272 002e C4F11004 		rsb	r4, r4, #16
 273              	.LVL19:
 274 0032 91FBF4F1 		sdiv	r1, r1, r4
 275              	.LVL20:
 276 0036 89B2     		uxth	r1, r1
ARM GAS  /tmp/ccVfUIOB.s 			page 14


 277 0038 A0F8EE10 		strh	r1, [r0, #238]	@ movhi
 469:Core/Src/bms.c **** }
 278              		.loc 1 469 0
 279 003c 5DF8044B 		ldr	r4, [sp], #4
 280              		.cfi_restore 4
 281              		.cfi_def_cfa_offset 0
 282 0040 7047     		bx	lr
 283              		.cfi_endproc
 284              	.LFE143:
 286              		.section	.text.getTempDelta,"ax",%progbits
 287              		.align	1
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	getTempDelta:
 294              	.LFB144:
 470:Core/Src/bms.c **** 
 471:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 472:Core/Src/bms.c **** void getTempDelta(bms_t *bms)
 473:Core/Src/bms.c **** {
 295              		.loc 1 473 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300              	.LVL21:
 474:Core/Src/bms.c ****     bms->tempDelta = bms->highCellTemp - bms->lowCellTemp;
 301              		.loc 1 474 0
 302 0000 B0F8EA30 		ldrh	r3, [r0, #234]
 303 0004 9BB2     		uxth	r3, r3
 304 0006 B0F8EC20 		ldrh	r2, [r0, #236]
 305 000a 92B2     		uxth	r2, r2
 306 000c 9B1A     		subs	r3, r3, r2
 307 000e 9BB2     		uxth	r3, r3
 308 0010 A0F8F030 		strh	r3, [r0, #240]	@ movhi
 309 0014 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE144:
 313              		.section	.text.getCellDelta,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	getCellDelta:
 321              	.LFB145:
 475:Core/Src/bms.c **** }
 476:Core/Src/bms.c **** 
 477:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 478:Core/Src/bms.c **** void getCellDelta(bms_t *bms)
 479:Core/Src/bms.c **** {
 322              		.loc 1 479 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
ARM GAS  /tmp/ccVfUIOB.s 			page 15


 327              	.LVL22:
 480:Core/Src/bms.c ****     bms->cellDelta = bms->highCellVolt - bms->lowCellVolt;
 328              		.loc 1 480 0
 329 0000 B0F8E430 		ldrh	r3, [r0, #228]
 330 0004 9BB2     		uxth	r3, r3
 331 0006 B0F8E220 		ldrh	r2, [r0, #226]
 332 000a 92B2     		uxth	r2, r2
 333 000c 9B1A     		subs	r3, r3, r2
 334 000e 9BB2     		uxth	r3, r3
 335 0010 A0F8E830 		strh	r3, [r0, #232]	@ movhi
 336 0014 7047     		bx	lr
 337              		.cfi_endproc
 338              	.LFE145:
 340              		.section	.text.getLowCellVolt,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	getLowCellVolt:
 348              	.LFB146:
 481:Core/Src/bms.c **** }
 482:Core/Src/bms.c **** 
 483:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 484:Core/Src/bms.c **** void getLowCellVolt(bms_t *bms)
 485:Core/Src/bms.c **** {
 349              		.loc 1 485 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LVL23:
 486:Core/Src/bms.c ****     bms->lowCellVolt = 5000;
 355              		.loc 1 486 0
 356 0000 41F28833 		movw	r3, #5000
 357 0004 A0F8E230 		strh	r3, [r0, #226]	@ movhi
 358              	.LVL24:
 359              	.LBB7:
 487:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 360              		.loc 1 487 0
 361 0008 0023     		movs	r3, #0
 362 000a 00E0     		b	.L28
 363              	.LVL25:
 364              	.L29:
 365              		.loc 1 487 0 is_stmt 0 discriminator 2
 366 000c 0133     		adds	r3, r3, #1
 367              	.LVL26:
 368              	.L28:
 369              		.loc 1 487 0 discriminator 1
 370 000e 5F2B     		cmp	r3, #95
 371 0010 0DD8     		bhi	.L31
 488:Core/Src/bms.c ****     {
 489:Core/Src/bms.c ****         if (bms->cellVolt[i] < bms->lowCellVolt)
 372              		.loc 1 489 0 is_stmt 1
 373 0012 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 374 0016 89B2     		uxth	r1, r1
 375 0018 B0F8E220 		ldrh	r2, [r0, #226]
ARM GAS  /tmp/ccVfUIOB.s 			page 16


 376 001c 92B2     		uxth	r2, r2
 377 001e 9142     		cmp	r1, r2
 378 0020 F4D2     		bcs	.L29
 490:Core/Src/bms.c ****         {
 491:Core/Src/bms.c ****             bms->lowCellVolt = bms->cellVolt[i];
 379              		.loc 1 491 0
 380 0022 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 381 0026 92B2     		uxth	r2, r2
 382 0028 A0F8E220 		strh	r2, [r0, #226]	@ movhi
 383 002c EEE7     		b	.L29
 384              	.L31:
 385              	.LBE7:
 492:Core/Src/bms.c ****         }
 493:Core/Src/bms.c ****     }
 494:Core/Src/bms.c **** }
 386              		.loc 1 494 0
 387 002e 7047     		bx	lr
 388              		.cfi_endproc
 389              	.LFE146:
 391              		.section	.text.getAvgCellVolt,"ax",%progbits
 392              		.align	1
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 396              		.fpu fpv4-sp-d16
 398              	getAvgCellVolt:
 399              	.LFB147:
 495:Core/Src/bms.c **** 
 496:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 497:Core/Src/bms.c **** void getAvgCellVolt(bms_t *bms)
 498:Core/Src/bms.c **** {
 400              		.loc 1 498 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		@ link register save eliminated.
 405              	.LVL27:
 406              	.LBB8:
 499:Core/Src/bms.c **** 
 500:Core/Src/bms.c ****     int cellSum = 0;
 501:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 407              		.loc 1 501 0
 408 0000 0023     		movs	r3, #0
 409              	.LBE8:
 500:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 410              		.loc 1 500 0
 411 0002 1A46     		mov	r2, r3
 412              	.LBB9:
 413              		.loc 1 501 0
 414 0004 04E0     		b	.L33
 415              	.LVL28:
 416              	.L34:
 502:Core/Src/bms.c ****     {
 503:Core/Src/bms.c **** 
 504:Core/Src/bms.c ****         cellSum += bms->cellVolt[i];
 417              		.loc 1 504 0 discriminator 3
 418 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
ARM GAS  /tmp/ccVfUIOB.s 			page 17


 419 000a 12FA81F2 		uxtah	r2, r2, r1
 420              	.LVL29:
 501:Core/Src/bms.c ****     {
 421              		.loc 1 501 0 discriminator 3
 422 000e 0133     		adds	r3, r3, #1
 423              	.LVL30:
 424              	.L33:
 501:Core/Src/bms.c ****     {
 425              		.loc 1 501 0 is_stmt 0 discriminator 1
 426 0010 5F2B     		cmp	r3, #95
 427 0012 F8D9     		bls	.L34
 428              	.LBE9:
 505:Core/Src/bms.c ****     }
 506:Core/Src/bms.c ****     bms->avgCellVolt = (cellSum / 96);
 429              		.loc 1 506 0 is_stmt 1
 430 0014 0449     		ldr	r1, .L35
 431 0016 81FB0231 		smull	r3, r1, r1, r2
 432              	.LVL31:
 433 001a D317     		asrs	r3, r2, #31
 434 001c C3EB2113 		rsb	r3, r3, r1, asr #4
 435 0020 9BB2     		uxth	r3, r3
 436 0022 A0F8E630 		strh	r3, [r0, #230]	@ movhi
 437 0026 7047     		bx	lr
 438              	.L36:
 439              		.align	2
 440              	.L35:
 441 0028 ABAAAA2A 		.word	715827883
 442              		.cfi_endproc
 443              	.LFE147:
 445              		.section	.text.getPackVolt,"ax",%progbits
 446              		.align	1
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	getPackVolt:
 453              	.LFB148:
 507:Core/Src/bms.c **** }
 508:Core/Src/bms.c **** 
 509:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 510:Core/Src/bms.c **** void getPackVolt(bms_t *bms)
 511:Core/Src/bms.c **** {
 454              		.loc 1 511 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459              	.LVL32:
 460              	.LBB10:
 512:Core/Src/bms.c ****     uint32_t packSum = 0;
 513:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 461              		.loc 1 513 0
 462 0000 0023     		movs	r3, #0
 463              	.LBE10:
 512:Core/Src/bms.c ****     uint32_t packSum = 0;
 464              		.loc 1 512 0
 465 0002 1A46     		mov	r2, r3
ARM GAS  /tmp/ccVfUIOB.s 			page 18


 466              	.LBB11:
 467              		.loc 1 513 0
 468 0004 04E0     		b	.L38
 469              	.LVL33:
 470              	.L39:
 514:Core/Src/bms.c ****     {
 515:Core/Src/bms.c ****         packSum += bms->cellVolt[i];
 471              		.loc 1 515 0 discriminator 3
 472 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 473 000a 12FA81F2 		uxtah	r2, r2, r1
 474              	.LVL34:
 513:Core/Src/bms.c ****     {
 475              		.loc 1 513 0 discriminator 3
 476 000e 0133     		adds	r3, r3, #1
 477              	.LVL35:
 478              	.L38:
 513:Core/Src/bms.c ****     {
 479              		.loc 1 513 0 is_stmt 0 discriminator 1
 480 0010 5F2B     		cmp	r3, #95
 481 0012 F8D9     		bls	.L39
 482              	.LBE11:
 516:Core/Src/bms.c ****     }
 517:Core/Src/bms.c ****     bms->packVolt = packSum / 10;
 483              		.loc 1 517 0 is_stmt 1
 484 0014 034B     		ldr	r3, .L40
 485              	.LVL36:
 486 0016 A3FB0223 		umull	r2, r3, r3, r2
 487              	.LVL37:
 488 001a C3F3CF03 		ubfx	r3, r3, #3, #16
 489 001e A0F8E030 		strh	r3, [r0, #224]	@ movhi
 490 0022 7047     		bx	lr
 491              	.L41:
 492              		.align	2
 493              	.L40:
 494 0024 CDCCCCCC 		.word	-858993459
 495              		.cfi_endproc
 496              	.LFE148:
 498              		.section	.text.getCellCount,"ax",%progbits
 499              		.align	1
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv4-sp-d16
 505              	getCellCount:
 506              	.LFB149:
 518:Core/Src/bms.c **** }
 519:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 520:Core/Src/bms.c **** void getCellCount(bms_t *bms, int pack)
 521:Core/Src/bms.c **** {
 507              		.loc 1 521 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512              	.LVL38:
 513 0000 10B4     		push	{r4}
 514              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccVfUIOB.s 			page 19


 515              		.cfi_offset 4, -4
 516              	.LVL39:
 517              	.LBB12:
 522:Core/Src/bms.c ****     uint16_t cellCount = 0;
 523:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 518              		.loc 1 523 0
 519 0002 0023     		movs	r3, #0
 520              	.LBE12:
 522:Core/Src/bms.c ****     uint16_t cellCount = 0;
 521              		.loc 1 522 0
 522 0004 1C46     		mov	r4, r3
 523              	.LBB13:
 524              		.loc 1 523 0
 525 0006 00E0     		b	.L43
 526              	.LVL40:
 527              	.L44:
 528              		.loc 1 523 0 is_stmt 0 discriminator 2
 529 0008 0133     		adds	r3, r3, #1
 530              	.LVL41:
 531              	.L43:
 532              		.loc 1 523 0 discriminator 1
 533 000a 5F2B     		cmp	r3, #95
 534 000c 08D8     		bhi	.L48
 524:Core/Src/bms.c ****     {
 525:Core/Src/bms.c ****         if (bms->cellVolt[i] > IGNORE_VOLT)
 535              		.loc 1 525 0 is_stmt 1
 536 000e 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 537 0012 92B2     		uxth	r2, r2
 538 0014 B2F5FA7F 		cmp	r2, #500
 539 0018 F6D9     		bls	.L44
 526:Core/Src/bms.c ****         {
 527:Core/Src/bms.c ****             cellCount++;
 540              		.loc 1 527 0
 541 001a 0134     		adds	r4, r4, #1
 542              	.LVL42:
 543 001c A4B2     		uxth	r4, r4
 544              	.LVL43:
 545 001e F3E7     		b	.L44
 546              	.L48:
 547              	.LBE13:
 528:Core/Src/bms.c ****         }
 529:Core/Src/bms.c ****     }
 530:Core/Src/bms.c ****     if (cellCount != 96)
 548              		.loc 1 530 0
 549 0020 602C     		cmp	r4, #96
 550 0022 0CD0     		beq	.L42
 531:Core/Src/bms.c ****     {
 532:Core/Src/bms.c ****         //BMS[pack].state = Error;
 533:Core/Src/bms.c ****         errorCount++;
 551              		.loc 1 533 0
 552 0024 074A     		ldr	r2, .L49
 553 0026 1368     		ldr	r3, [r2]
 554              	.LVL44:
 555 0028 0133     		adds	r3, r3, #1
 556 002a 1360     		str	r3, [r2]
 534:Core/Src/bms.c ****         if (errorCount > 5)
 557              		.loc 1 534 0
ARM GAS  /tmp/ccVfUIOB.s 			page 20


 558 002c 052B     		cmp	r3, #5
 559 002e 06DD     		ble	.L42
 535:Core/Src/bms.c ****         {
 536:Core/Src/bms.c ****             BMS[pack].state = Error;
 560              		.loc 1 536 0
 561 0030 F622     		movs	r2, #246
 562 0032 054B     		ldr	r3, .L49+4
 563 0034 02FB0131 		mla	r1, r2, r1, r3
 564              	.LVL45:
 565 0038 0423     		movs	r3, #4
 566 003a 81F8F230 		strb	r3, [r1, #242]
 567              	.L42:
 537:Core/Src/bms.c ****         }
 538:Core/Src/bms.c ****     }
 539:Core/Src/bms.c **** }
 568              		.loc 1 539 0
 569 003e 5DF8044B 		ldr	r4, [sp], #4
 570              		.cfi_restore 4
 571              		.cfi_def_cfa_offset 0
 572              	.LVL46:
 573 0042 7047     		bx	lr
 574              	.L50:
 575              		.align	2
 576              	.L49:
 577 0044 00000000 		.word	.LANCHOR0
 578 0048 00000000 		.word	BMS
 579              		.cfi_endproc
 580              	.LFE149:
 582              		.section	.text.initBMS,"ax",%progbits
 583              		.align	1
 584              		.global	initBMS
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	initBMS:
 591              	.LFB131:
  79:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 592              		.loc 1 79 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597 0000 10B4     		push	{r4}
 598              		.cfi_def_cfa_offset 4
 599              		.cfi_offset 4, -4
 600              	.LVL47:
 601              	.LBB14:
  80:Core/Src/bms.c ****     {
 602              		.loc 1 80 0
 603 0002 0021     		movs	r1, #0
 604 0004 1BE0     		b	.L52
 605              	.LVL48:
 606              	.L54:
 607              	.LBB15:
  95:Core/Src/bms.c ****         }
 608              		.loc 1 95 0 discriminator 3
ARM GAS  /tmp/ccVfUIOB.s 			page 21


 609 0006 C1EB4113 		rsb	r3, r1, r1, lsl #5
 610 000a C1EB8303 		rsb	r3, r1, r3, lsl #2
 611 000e 1344     		add	r3, r3, r2
 612 0010 0024     		movs	r4, #0
 613 0012 1E48     		ldr	r0, .L60
 614 0014 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  93:Core/Src/bms.c ****         {
 615              		.loc 1 93 0 discriminator 3
 616 0018 0132     		adds	r2, r2, #1
 617              	.LVL49:
 618              	.L53:
  93:Core/Src/bms.c ****         {
 619              		.loc 1 93 0 is_stmt 0 discriminator 1
 620 001a 5F2A     		cmp	r2, #95
 621 001c F3D9     		bls	.L54
 622 001e 0022     		movs	r2, #0
 623              	.LVL50:
 624 0020 0AE0     		b	.L55
 625              	.LVL51:
 626              	.L56:
 627              	.LBE15:
 628              	.LBB16:
 100:Core/Src/bms.c ****         }
 629              		.loc 1 100 0 is_stmt 1 discriminator 3
 630 0022 C1EB4113 		rsb	r3, r1, r1, lsl #5
 631 0026 C1EB8303 		rsb	r3, r1, r3, lsl #2
 632 002a 1344     		add	r3, r3, r2
 633 002c 6033     		adds	r3, r3, #96
 634 002e 0024     		movs	r4, #0
 635 0030 1648     		ldr	r0, .L60
 636 0032 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  98:Core/Src/bms.c ****         {
 637              		.loc 1 98 0 discriminator 3
 638 0036 0132     		adds	r2, r2, #1
 639              	.LVL52:
 640              	.L55:
  98:Core/Src/bms.c ****         {
 641              		.loc 1 98 0 is_stmt 0 discriminator 1
 642 0038 0F2A     		cmp	r2, #15
 643 003a F2D9     		bls	.L56
 644              	.LBE16:
  80:Core/Src/bms.c ****     {
 645              		.loc 1 80 0 is_stmt 1 discriminator 2
 646 003c 0131     		adds	r1, r1, #1
 647              	.LVL53:
 648              	.L52:
  80:Core/Src/bms.c ****     {
 649              		.loc 1 80 0 is_stmt 0 discriminator 1
 650 003e 0129     		cmp	r1, #1
 651 0040 19D8     		bhi	.L59
  82:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
 652              		.loc 1 82 0 is_stmt 1
 653 0042 F623     		movs	r3, #246
 654 0044 114A     		ldr	r2, .L60
 655 0046 03FB0123 		mla	r3, r3, r1, r2
 656 004a 0022     		movs	r2, #0
 657 004c 83F8F220 		strb	r2, [r3, #242]
ARM GAS  /tmp/ccVfUIOB.s 			page 22


  83:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
 658              		.loc 1 83 0
 659 0050 A3F8E820 		strh	r2, [r3, #232]	@ movhi
  84:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
 660              		.loc 1 84 0
 661 0054 A3F8EA20 		strh	r2, [r3, #234]	@ movhi
  85:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
 662              		.loc 1 85 0
 663 0058 83F8F420 		strb	r2, [r3, #244]
  86:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
 664              		.loc 1 86 0
 665 005c A3F8E420 		strh	r2, [r3, #228]	@ movhi
  87:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
 666              		.loc 1 87 0
 667 0060 A3F8E220 		strh	r2, [r3, #226]	@ movhi
  88:Core/Src/bms.c ****         BMS[i].packVolt = 0;
 668              		.loc 1 88 0
 669 0064 A3F8EC20 		strh	r2, [r3, #236]	@ movhi
  89:Core/Src/bms.c ****         BMS[i].SOC = 0;
 670              		.loc 1 89 0
 671 0068 A3F8E020 		strh	r2, [r3, #224]	@ movhi
  90:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
 672              		.loc 1 90 0
 673 006c 83F8F320 		strb	r2, [r3, #243]
  91:Core/Src/bms.c **** 
 674              		.loc 1 91 0
 675 0070 A3F8F020 		strh	r2, [r3, #240]	@ movhi
 676              	.LVL54:
 677              	.LBB17:
  93:Core/Src/bms.c ****         {
 678              		.loc 1 93 0
 679 0074 D1E7     		b	.L53
 680              	.LVL55:
 681              	.L59:
 682              	.LBE17:
 683              	.LBE14:
 104:Core/Src/bms.c ****     chargerOn = false;
 684              		.loc 1 104 0
 685 0076 0023     		movs	r3, #0
 686 0078 054A     		ldr	r2, .L60+4
 687 007a 1370     		strb	r3, [r2]
 105:Core/Src/bms.c ****     errorCount = 0;
 688              		.loc 1 105 0
 689 007c 054A     		ldr	r2, .L60+8
 690 007e 1370     		strb	r3, [r2]
 106:Core/Src/bms.c **** 
 691              		.loc 1 106 0
 692 0080 054A     		ldr	r2, .L60+12
 693 0082 1360     		str	r3, [r2]
 108:Core/Src/bms.c **** 
 694              		.loc 1 108 0
 695 0084 5DF8044B 		ldr	r4, [sp], #4
 696              		.cfi_restore 4
 697              		.cfi_def_cfa_offset 0
 698 0088 7047     		bx	lr
 699              	.L61:
 700 008a 00BF     		.align	2
ARM GAS  /tmp/ccVfUIOB.s 			page 23


 701              	.L60:
 702 008c 00000000 		.word	BMS
 703 0090 00000000 		.word	watchdogBits
 704 0094 00000000 		.word	chargerOn
 705 0098 00000000 		.word	.LANCHOR0
 706              		.cfi_endproc
 707              	.LFE131:
 709              		.section	.text.bmsStateHandler,"ax",%progbits
 710              		.align	1
 711              		.global	bmsStateHandler
 712              		.syntax unified
 713              		.thumb
 714              		.thumb_func
 715              		.fpu fpv4-sp-d16
 717              	bmsStateHandler:
 718              	.LFB132:
 112:Core/Src/bms.c ****     switch (bms->state)
 719              		.loc 1 112 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              	.LVL56:
 724 0000 08B5     		push	{r3, lr}
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 3, -8
 727              		.cfi_offset 14, -4
 113:Core/Src/bms.c ****     {
 728              		.loc 1 113 0
 729 0002 90F8F230 		ldrb	r3, [r0, #242]	@ zero_extendqisi2
 730 0006 DBB2     		uxtb	r3, r3
 731 0008 042B     		cmp	r3, #4
 732 000a 57D8     		bhi	.L62
 733 000c DFE803F0 		tbb	[pc, r3]
 734              	.L65:
 735 0010 03       		.byte	(.L64-.L65)/2
 736 0011 0A       		.byte	(.L66-.L65)/2
 737 0012 56       		.byte	(.L62-.L65)/2
 738 0013 43       		.byte	(.L67-.L65)/2
 739 0014 54       		.byte	(.L68-.L65)/2
 740 0015 00       		.p2align 1
 741              	.L64:
 116:Core/Src/bms.c ****         bms->state = Ready;
 742              		.loc 1 116 0
 743 0016 0023     		movs	r3, #0
 744 0018 80F8F430 		strb	r3, [r0, #244]
 117:Core/Src/bms.c **** 
 745              		.loc 1 117 0
 746 001c 0123     		movs	r3, #1
 747 001e 80F8F230 		strb	r3, [r0, #242]
 119:Core/Src/bms.c **** 
 748              		.loc 1 119 0
 749 0022 08BD     		pop	{r3, pc}
 750              	.L66:
 122:Core/Src/bms.c ****         if (bms->avgCellVolt > BALANCE_VOLTAGE)
 751              		.loc 1 122 0
 752 0024 0023     		movs	r3, #0
 753 0026 80F8F430 		strb	r3, [r0, #244]
ARM GAS  /tmp/ccVfUIOB.s 			page 24


 123:Core/Src/bms.c ****         {
 754              		.loc 1 123 0
 755 002a B0F8E630 		ldrh	r3, [r0, #230]
 756 002e 9BB2     		uxth	r3, r3
 757 0030 40F60A72 		movw	r2, #3850
 758 0034 9342     		cmp	r3, r2
 759 0036 19D9     		bls	.L69
 125:Core/Src/bms.c ****             {
 760              		.loc 1 125 0
 761 0038 B0F8E430 		ldrh	r3, [r0, #228]
 762 003c 9BB2     		uxth	r3, r3
 763 003e B0F8E220 		ldrh	r2, [r0, #226]
 764 0042 92B2     		uxth	r2, r2
 765 0044 9B1A     		subs	r3, r3, r2
 766 0046 142B     		cmp	r3, #20
 767 0048 03DD     		ble	.L70
 127:Core/Src/bms.c ****             }
 768              		.loc 1 127 0
 769 004a 0123     		movs	r3, #1
 770 004c 80F8F530 		strb	r3, [r0, #245]
 771 0050 0FE0     		b	.L71
 772              	.L70:
 130:Core/Src/bms.c ****             {
 773              		.loc 1 130 0
 774 0052 B0F8E430 		ldrh	r3, [r0, #228]
 775 0056 9BB2     		uxth	r3, r3
 776 0058 B0F8E220 		ldrh	r2, [r0, #226]
 777 005c 92B2     		uxth	r2, r2
 778 005e 9B1A     		subs	r3, r3, r2
 779 0060 052B     		cmp	r3, #5
 780 0062 06DC     		bgt	.L71
 132:Core/Src/bms.c ****             }
 781              		.loc 1 132 0
 782 0064 0023     		movs	r3, #0
 783 0066 80F8F530 		strb	r3, [r0, #245]
 784 006a 02E0     		b	.L71
 785              	.L69:
 137:Core/Src/bms.c ****         }
 786              		.loc 1 137 0
 787 006c 0023     		movs	r3, #0
 788 006e 80F8F530 		strb	r3, [r0, #245]
 789              	.L71:
 140:Core/Src/bms.c ****         {
 790              		.loc 1 140 0
 791 0072 B0F8E430 		ldrh	r3, [r0, #228]
 792 0076 9BB2     		uxth	r3, r3
 793 0078 40F6B372 		movw	r2, #4019
 794 007c 9342     		cmp	r3, r2
 795 007e 1DD8     		bhi	.L62
 140:Core/Src/bms.c ****         {
 796              		.loc 1 140 0 is_stmt 0 discriminator 1
 797 0080 B0F8E230 		ldrh	r3, [r0, #226]
 798 0084 9BB2     		uxth	r3, r3
 799 0086 40F65432 		movw	r2, #2900
 800 008a 9342     		cmp	r3, r2
 801 008c 16D9     		bls	.L62
 142:Core/Src/bms.c ****         }
ARM GAS  /tmp/ccVfUIOB.s 			page 25


 802              		.loc 1 142 0 is_stmt 1
 803 008e 0323     		movs	r3, #3
 804 0090 80F8F230 		strb	r3, [r0, #242]
 805 0094 08BD     		pop	{r3, pc}
 806              	.L67:
 147:Core/Src/bms.c ****         bms->chargeRequest = 1;        
 807              		.loc 1 147 0
 808 0096 0023     		movs	r3, #0
 809 0098 80F8F530 		strb	r3, [r0, #245]
 148:Core/Src/bms.c **** 
 810              		.loc 1 148 0
 811 009c 0123     		movs	r3, #1
 812 009e 80F8F430 		strb	r3, [r0, #244]
 150:Core/Src/bms.c ****         {
 813              		.loc 1 150 0
 814 00a2 B0F8E430 		ldrh	r3, [r0, #228]
 815 00a6 9BB2     		uxth	r3, r3
 816 00a8 41F25402 		movw	r2, #4180
 817 00ac 9342     		cmp	r3, r2
 818 00ae 05D9     		bls	.L62
 152:Core/Src/bms.c ****         }
 819              		.loc 1 152 0
 820 00b0 0123     		movs	r3, #1
 821 00b2 80F8F230 		strb	r3, [r0, #242]
 822 00b6 08BD     		pop	{r3, pc}
 823              	.L68:
 157:Core/Src/bms.c ****         break;
 824              		.loc 1 157 0
 825 00b8 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 826              	.LVL57:
 827              	.L62:
 828 00bc 08BD     		pop	{r3, pc}
 829              		.cfi_endproc
 830              	.LFE132:
 832              		.section	.text.acChargeCommand,"ax",%progbits
 833              		.align	1
 834              		.global	acChargeCommand
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 838              		.fpu fpv4-sp-d16
 840              	acChargeCommand:
 841              	.LFB133:
 167:Core/Src/bms.c ****     uint8_t canTx2[8];
 842              		.loc 1 167 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 8
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846 0000 00B5     		push	{lr}
 847              		.cfi_def_cfa_offset 4
 848              		.cfi_offset 14, -4
 849 0002 83B0     		sub	sp, sp, #12
 850              		.cfi_def_cfa_offset 16
 169:Core/Src/bms.c ****     {
 851              		.loc 1 169 0
 852 0004 1E4B     		ldr	r3, .L78
 853 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccVfUIOB.s 			page 26


 854 0008 FBB9     		cbnz	r3, .L77
 855              	.LVL58:
 856              	.LBB18:
 185:Core/Src/bms.c ****         canTx2[1] = 0x00;
 857              		.loc 1 185 0
 858 000a 4023     		movs	r3, #64
 859 000c 8DF80030 		strb	r3, [sp]
 186:Core/Src/bms.c ****         canTx2[2] = 0x20;
 860              		.loc 1 186 0
 861 0010 0023     		movs	r3, #0
 862 0012 8DF80130 		strb	r3, [sp, #1]
 187:Core/Src/bms.c ****         canTx2[3] = 9;
 863              		.loc 1 187 0
 864 0016 2022     		movs	r2, #32
 865 0018 8DF80220 		strb	r2, [sp, #2]
 188:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 866              		.loc 1 188 0
 867 001c 0922     		movs	r2, #9
 868 001e 8DF80320 		strb	r2, [sp, #3]
 189:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 869              		.loc 1 189 0
 870 0022 8DF80430 		strb	r3, [sp, #4]
 190:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 871              		.loc 1 190 0
 872 0026 8DF80530 		strb	r3, [sp, #5]
 191:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 873              		.loc 1 191 0
 874 002a 8DF80630 		strb	r3, [sp, #6]
 192:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2);
 875              		.loc 1 192 0
 876 002e 8DF80730 		strb	r3, [sp, #7]
 193:Core/Src/bms.c **** 
 877              		.loc 1 193 0
 878 0032 6A46     		mov	r2, sp
 879 0034 0821     		movs	r1, #8
 880 0036 40F20560 		movw	r0, #1541
 881 003a FFF7FEFF 		bl	can2tx
 882              	.LVL59:
 883              	.L75:
 884              	.LBE18:
 196:Core/Src/bms.c **** }
 885              		.loc 1 196 0
 886 003e 0120     		movs	r0, #1
 887 0040 FFF7FEFF 		bl	HAL_Delay
 888              	.LVL60:
 197:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 889              		.loc 1 197 0
 890 0044 03B0     		add	sp, sp, #12
 891              		.cfi_remember_state
 892              		.cfi_def_cfa_offset 4
 893              		@ sp needed
 894 0046 5DF804FB 		ldr	pc, [sp], #4
 895              	.L77:
 896              		.cfi_restore_state
 897              	.LVL61:
 898              	.LBB19:
 172:Core/Src/bms.c ****         canTx2[1] = 0x00;
ARM GAS  /tmp/ccVfUIOB.s 			page 27


 899              		.loc 1 172 0
 900 004a 4023     		movs	r3, #64
 901 004c 8DF80030 		strb	r3, [sp]
 173:Core/Src/bms.c ****         canTx2[2] = 0x20;
 902              		.loc 1 173 0
 903 0050 0023     		movs	r3, #0
 904 0052 8DF80130 		strb	r3, [sp, #1]
 174:Core/Src/bms.c ****         canTx2[3] = 9;
 905              		.loc 1 174 0
 906 0056 2022     		movs	r2, #32
 907 0058 8DF80220 		strb	r2, [sp, #2]
 175:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 908              		.loc 1 175 0
 909 005c 0921     		movs	r1, #9
 910 005e 8DF80310 		strb	r1, [sp, #3]
 176:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF; 
 911              		.loc 1 176 0
 912 0062 8DF80420 		strb	r2, [sp, #4]
 177:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 913              		.loc 1 177 0
 914 0066 8DF80530 		strb	r3, [sp, #5]
 178:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 915              		.loc 1 178 0
 916 006a 8DF80630 		strb	r3, [sp, #6]
 179:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2); 
 917              		.loc 1 179 0
 918 006e 8DF80730 		strb	r3, [sp, #7]
 180:Core/Src/bms.c ****     }
 919              		.loc 1 180 0
 920 0072 6A46     		mov	r2, sp
 921 0074 0821     		movs	r1, #8
 922 0076 40F20560 		movw	r0, #1541
 923 007a FFF7FEFF 		bl	can2tx
 924              	.LVL62:
 925              	.LBE19:
 926 007e DEE7     		b	.L75
 927              	.L79:
 928              		.align	2
 929              	.L78:
 930 0080 00000000 		.word	chargerOn
 931              		.cfi_endproc
 932              	.LFE133:
 934              		.section	.text.tx500kData,"ax",%progbits
 935              		.align	1
 936              		.global	tx500kData
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 940              		.fpu fpv4-sp-d16
 942              	tx500kData:
 943              	.LFB134:
 200:Core/Src/bms.c **** 
 944              		.loc 1 200 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 16
 947              		@ frame_needed = 0, uses_anonymous_args = 0
 948 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccVfUIOB.s 			page 28


 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 4, -8
 951              		.cfi_offset 14, -4
 952 0002 84B0     		sub	sp, sp, #16
 953              		.cfi_def_cfa_offset 24
 203:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 954              		.loc 1 203 0
 955 0004 2D4C     		ldr	r4, .L82
 956 0006 B4F8E030 		ldrh	r3, [r4, #224]
 957 000a 8DF80830 		strb	r3, [sp, #8]
 204:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 958              		.loc 1 204 0
 959 000e B4F8E030 		ldrh	r3, [r4, #224]
 960 0012 C3F30723 		ubfx	r3, r3, #8, #8
 961 0016 8DF80930 		strb	r3, [sp, #9]
 205:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 962              		.loc 1 205 0
 963 001a B4F8EE30 		ldrh	r3, [r4, #238]
 964 001e 8DF80A30 		strb	r3, [sp, #10]
 206:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 965              		.loc 1 206 0
 966 0022 B4F8EE30 		ldrh	r3, [r4, #238]
 967 0026 C3F30723 		ubfx	r3, r3, #8, #8
 968 002a 8DF80B30 		strb	r3, [sp, #11]
 207:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 969              		.loc 1 207 0
 970 002e B4F8E830 		ldrh	r3, [r4, #232]
 971 0032 8DF80C30 		strb	r3, [sp, #12]
 208:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 972              		.loc 1 208 0
 973 0036 B4F8E830 		ldrh	r3, [r4, #232]
 974 003a C3F30723 		ubfx	r3, r3, #8, #8
 975 003e 8DF80D30 		strb	r3, [sp, #13]
 209:Core/Src/bms.c ****     bms0[7] = (BMS[0].balancecells);//0;
 976              		.loc 1 209 0
 977 0042 94F8F330 		ldrb	r3, [r4, #243]	@ zero_extendqisi2
 978 0046 8DF80E30 		strb	r3, [sp, #14]
 210:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 979              		.loc 1 210 0
 980 004a 94F8F530 		ldrb	r3, [r4, #245]	@ zero_extendqisi2
 981 004e 8DF80F30 		strb	r3, [sp, #15]
 211:Core/Src/bms.c **** 
 982              		.loc 1 211 0
 983 0052 02AA     		add	r2, sp, #8
 984 0054 0821     		movs	r1, #8
 985 0056 4FF49C70 		mov	r0, #312
 986 005a FFF7FEFF 		bl	can2tx
 987              	.LVL63:
 215:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 988              		.loc 1 215 0
 989 005e B4F8D631 		ldrh	r3, [r4, #470]
 990 0062 8DF80030 		strb	r3, [sp]
 216:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 991              		.loc 1 216 0
 992 0066 B4F8D631 		ldrh	r3, [r4, #470]
 993 006a C3F30723 		ubfx	r3, r3, #8, #8
 994 006e 8DF80130 		strb	r3, [sp, #1]
ARM GAS  /tmp/ccVfUIOB.s 			page 29


 217:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 995              		.loc 1 217 0
 996 0072 B4F8E431 		ldrh	r3, [r4, #484]
 997 0076 8DF80230 		strb	r3, [sp, #2]
 218:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 998              		.loc 1 218 0
 999 007a B4F8E431 		ldrh	r3, [r4, #484]
 1000 007e C3F30723 		ubfx	r3, r3, #8, #8
 1001 0082 8DF80330 		strb	r3, [sp, #3]
 219:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 1002              		.loc 1 219 0
 1003 0086 B4F8DE31 		ldrh	r3, [r4, #478]
 1004 008a 8DF80430 		strb	r3, [sp, #4]
 220:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 1005              		.loc 1 220 0
 1006 008e B4F8DE31 		ldrh	r3, [r4, #478]
 1007 0092 C3F30723 		ubfx	r3, r3, #8, #8
 1008 0096 8DF80530 		strb	r3, [sp, #5]
 221:Core/Src/bms.c ****     bms1[7] = (BMS[1].balancecells);//0;
 1009              		.loc 1 221 0
 1010 009a 94F8E931 		ldrb	r3, [r4, #489]	@ zero_extendqisi2
 1011 009e 8DF80630 		strb	r3, [sp, #6]
 222:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 1012              		.loc 1 222 0
 1013 00a2 94F8EB31 		ldrb	r3, [r4, #491]	@ zero_extendqisi2
 1014 00a6 8DF80730 		strb	r3, [sp, #7]
 223:Core/Src/bms.c **** 
 1015              		.loc 1 223 0
 1016 00aa 6A46     		mov	r2, sp
 1017 00ac 0821     		movs	r1, #8
 1018 00ae 40F23910 		movw	r0, #313
 1019 00b2 FFF7FEFF 		bl	can2tx
 1020              	.LVL64:
 225:Core/Src/bms.c **** 
 1021              		.loc 1 225 0
 1022 00b6 04B0     		add	sp, sp, #16
 1023              		.cfi_def_cfa_offset 8
 1024              		@ sp needed
 1025 00b8 10BD     		pop	{r4, pc}
 1026              	.L83:
 1027 00ba 00BF     		.align	2
 1028              	.L82:
 1029 00bc 00000000 		.word	BMS
 1030              		.cfi_endproc
 1031              	.LFE134:
 1033              		.section	.text.refreshData,"ax",%progbits
 1034              		.align	1
 1035              		.global	refreshData
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1039              		.fpu fpv4-sp-d16
 1041              	refreshData:
 1042              	.LFB135:
 228:Core/Src/bms.c **** 
 1043              		.loc 1 228 0
 1044              		.cfi_startproc
ARM GAS  /tmp/ccVfUIOB.s 			page 30


 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047 0000 38B5     		push	{r3, r4, r5, lr}
 1048              		.cfi_def_cfa_offset 16
 1049              		.cfi_offset 3, -16
 1050              		.cfi_offset 4, -12
 1051              		.cfi_offset 5, -8
 1052              		.cfi_offset 14, -4
 1053              	.LVL65:
 1054              	.LBB20:
 230:Core/Src/bms.c ****     {
 1055              		.loc 1 230 0
 1056 0002 0025     		movs	r5, #0
 1057 0004 26E0     		b	.L85
 1058              	.LVL66:
 1059              	.L86:
 233:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 1060              		.loc 1 233 0 discriminator 3
 1061 0006 154B     		ldr	r3, .L88
 1062 0008 F624     		movs	r4, #246
 1063 000a 04FB0534 		mla	r4, r4, r5, r3
 1064 000e 2046     		mov	r0, r4
 1065 0010 FFF7FEFF 		bl	getPackVolt
 1066              	.LVL67:
 234:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 1067              		.loc 1 234 0 discriminator 3
 1068 0014 2046     		mov	r0, r4
 1069 0016 FFF7FEFF 		bl	getAvgCellVolt
 1070              	.LVL68:
 235:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 1071              		.loc 1 235 0 discriminator 3
 1072 001a 2046     		mov	r0, r4
 1073 001c FFF7FEFF 		bl	getLowCellVolt
 1074              	.LVL69:
 236:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 1075              		.loc 1 236 0 discriminator 3
 1076 0020 2046     		mov	r0, r4
 1077 0022 FFF7FEFF 		bl	getHighCellVolt
 1078              	.LVL70:
 237:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 1079              		.loc 1 237 0 discriminator 3
 1080 0026 2046     		mov	r0, r4
 1081 0028 FFF7FEFF 		bl	getCellDelta
 1082              	.LVL71:
 238:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 1083              		.loc 1 238 0 discriminator 3
 1084 002c 2046     		mov	r0, r4
 1085 002e FFF7FEFF 		bl	getLowCellTemp
 1086              	.LVL72:
 239:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 1087              		.loc 1 239 0 discriminator 3
 1088 0032 2046     		mov	r0, r4
 1089 0034 FFF7FEFF 		bl	getHighCellTemp
 1090              	.LVL73:
 240:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 1091              		.loc 1 240 0 discriminator 3
 1092 0038 2046     		mov	r0, r4
ARM GAS  /tmp/ccVfUIOB.s 			page 31


 1093 003a FFF7FEFF 		bl	getAvgCellTemp
 1094              	.LVL74:
 241:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 1095              		.loc 1 241 0 discriminator 3
 1096 003e 2046     		mov	r0, r4
 1097 0040 FFF7FEFF 		bl	getTempDelta
 1098              	.LVL75:
 242:Core/Src/bms.c ****         getSOC(&BMS[i]);
 1099              		.loc 1 242 0 discriminator 3
 1100 0044 2946     		mov	r1, r5
 1101 0046 2046     		mov	r0, r4
 1102 0048 FFF7FEFF 		bl	getCellCount
 1103              	.LVL76:
 243:Core/Src/bms.c ****     }
 1104              		.loc 1 243 0 discriminator 3
 1105 004c 2046     		mov	r0, r4
 1106 004e FFF7FEFF 		bl	getSOC
 1107              	.LVL77:
 230:Core/Src/bms.c ****     {
 1108              		.loc 1 230 0 discriminator 3
 1109 0052 0135     		adds	r5, r5, #1
 1110              	.LVL78:
 1111              	.L85:
 230:Core/Src/bms.c ****     {
 1112              		.loc 1 230 0 is_stmt 0 discriminator 1
 1113 0054 012D     		cmp	r5, #1
 1114 0056 D6D9     		bls	.L86
 1115              	.LBE20:
 245:Core/Src/bms.c **** 
 1116              		.loc 1 245 0 is_stmt 1
 1117 0058 38BD     		pop	{r3, r4, r5, pc}
 1118              	.LVL79:
 1119              	.L89:
 1120 005a 00BF     		.align	2
 1121              	.L88:
 1122 005c 00000000 		.word	BMS
 1123              		.cfi_endproc
 1124              	.LFE135:
 1126              		.section	.text.sendCommand,"ax",%progbits
 1127              		.align	1
 1128              		.global	sendCommand
 1129              		.syntax unified
 1130              		.thumb
 1131              		.thumb_func
 1132              		.fpu fpv4-sp-d16
 1134              	sendCommand:
 1135              	.LFB136:
 249:Core/Src/bms.c ****     uint8_t canTx[3];
 1136              		.loc 1 249 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 8
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              	.LVL80:
 1141 0000 00B5     		push	{lr}
 1142              		.cfi_def_cfa_offset 4
 1143              		.cfi_offset 14, -4
 1144 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccVfUIOB.s 			page 32


 1145              		.cfi_def_cfa_offset 16
 251:Core/Src/bms.c ****     canTx[1] = 0x00;
 1146              		.loc 1 251 0
 1147 0004 0223     		movs	r3, #2
 1148 0006 8DF80430 		strb	r3, [sp, #4]
 252:Core/Src/bms.c ****     canTx[2] = 0x00;
 1149              		.loc 1 252 0
 1150 000a 0023     		movs	r3, #0
 1151 000c 8DF80530 		strb	r3, [sp, #5]
 253:Core/Src/bms.c **** 
 1152              		.loc 1 253 0
 1153 0010 8DF80630 		strb	r3, [sp, #6]
 255:Core/Src/bms.c ****     {
 1154              		.loc 1 255 0
 1155 0014 20B1     		cbz	r0, .L92
 1156 0016 0128     		cmp	r0, #1
 1157 0018 09D0     		beq	.L93
 1158              	.LVL81:
 1159              	.L90:
 268:Core/Src/bms.c **** 
 1160              		.loc 1 268 0
 1161 001a 03B0     		add	sp, sp, #12
 1162              		.cfi_remember_state
 1163              		.cfi_def_cfa_offset 4
 1164              		@ sp needed
 1165 001c 5DF804FB 		ldr	pc, [sp], #4
 1166              	.LVL82:
 1167              	.L92:
 1168              		.cfi_restore_state
 258:Core/Src/bms.c ****         break;
 1169              		.loc 1 258 0
 1170 0020 01AA     		add	r2, sp, #4
 1171 0022 0321     		movs	r1, #3
 1172 0024 4FF40070 		mov	r0, #512
 1173              	.LVL83:
 1174 0028 FFF7FEFF 		bl	can1tx
 1175              	.LVL84:
 259:Core/Src/bms.c **** 
 1176              		.loc 1 259 0
 1177 002c F5E7     		b	.L90
 1178              	.LVL85:
 1179              	.L93:
 262:Core/Src/bms.c ****         break;
 1180              		.loc 1 262 0
 1181 002e 01AA     		add	r2, sp, #4
 1182 0030 0321     		movs	r1, #3
 1183 0032 4FF40070 		mov	r0, #512
 1184              	.LVL86:
 1185 0036 FFF7FEFF 		bl	can3tx
 1186              	.LVL87:
 268:Core/Src/bms.c **** 
 1187              		.loc 1 268 0
 1188 003a EEE7     		b	.L90
 1189              		.cfi_endproc
 1190              	.LFE136:
 1192              		.section	.text.requestBICMdata,"ax",%progbits
 1193              		.align	1
ARM GAS  /tmp/ccVfUIOB.s 			page 33


 1194              		.global	requestBICMdata
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1198              		.fpu fpv4-sp-d16
 1200              	requestBICMdata:
 1201              	.LFB137:
 271:Core/Src/bms.c **** 
 1202              		.loc 1 271 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 8
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206              	.LVL88:
 274:Core/Src/bms.c ****     {
 1207              		.loc 1 274 0
 1208 0000 90F8F530 		ldrb	r3, [r0, #245]	@ zero_extendqisi2
 1209 0004 03B1     		cbz	r3, .L110
 1210 0006 7047     		bx	lr
 1211              	.L110:
 271:Core/Src/bms.c **** 
 1212              		.loc 1 271 0
 1213 0008 10B5     		push	{r4, lr}
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 4, -8
 1216              		.cfi_offset 14, -4
 1217 000a 82B0     		sub	sp, sp, #8
 1218              		.cfi_def_cfa_offset 16
 1219 000c 0C46     		mov	r4, r1
 276:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 1220              		.loc 1 276 0
 1221 000e 0846     		mov	r0, r1
 1222              	.LVL89:
 1223 0010 FFF7FEFF 		bl	sendCommand
 1224              	.LVL90:
 1225              	.LBB21:
 277:Core/Src/bms.c ****         {
 1226              		.loc 1 277 0
 1227 0014 0023     		movs	r3, #0
 1228 0016 05E0     		b	.L97
 1229              	.LVL91:
 1230              	.L98:
 279:Core/Src/bms.c ****         }
 1231              		.loc 1 279 0 discriminator 3
 1232 0018 02AA     		add	r2, sp, #8
 1233 001a 1A44     		add	r2, r2, r3
 1234 001c 0020     		movs	r0, #0
 1235 001e 02F8080C 		strb	r0, [r2, #-8]
 277:Core/Src/bms.c ****         {
 1236              		.loc 1 277 0 discriminator 3
 1237 0022 0133     		adds	r3, r3, #1
 1238              	.LVL92:
 1239              	.L97:
 277:Core/Src/bms.c ****         {
 1240              		.loc 1 277 0 is_stmt 0 discriminator 1
 1241 0024 072B     		cmp	r3, #7
 1242 0026 F7D9     		bls	.L98
 1243              	.LBE21:
ARM GAS  /tmp/ccVfUIOB.s 			page 34


 281:Core/Src/bms.c ****         {
 1244              		.loc 1 281 0 is_stmt 1
 1245 0028 1CB1     		cbz	r4, .L100
 1246 002a 012C     		cmp	r4, #1
 1247 002c 08D0     		beq	.L101
 1248              	.LVL93:
 1249              	.L99:
 1250              	.LBB22:
 277:Core/Src/bms.c ****         {
 1251              		.loc 1 277 0 discriminator 1
 1252 002e 0023     		movs	r3, #0
 1253 0030 13E0     		b	.L102
 1254              	.LVL94:
 1255              	.L100:
 1256              	.LBE22:
 284:Core/Src/bms.c ****             break;
 1257              		.loc 1 284 0
 1258 0032 6A46     		mov	r2, sp
 1259 0034 0821     		movs	r1, #8
 1260 0036 4FF44070 		mov	r0, #768
 1261 003a FFF7FEFF 		bl	can1tx
 1262              	.LVL95:
 285:Core/Src/bms.c **** 
 1263              		.loc 1 285 0
 1264 003e F6E7     		b	.L99
 1265              	.LVL96:
 1266              	.L101:
 288:Core/Src/bms.c ****             break;
 1267              		.loc 1 288 0
 1268 0040 6A46     		mov	r2, sp
 1269 0042 0821     		movs	r1, #8
 1270 0044 4FF44070 		mov	r0, #768
 1271 0048 FFF7FEFF 		bl	can3tx
 1272              	.LVL97:
 289:Core/Src/bms.c **** 
 1273              		.loc 1 289 0
 1274 004c EFE7     		b	.L99
 1275              	.LVL98:
 1276              	.L103:
 1277              	.LBB23:
 297:Core/Src/bms.c ****         }
 1278              		.loc 1 297 0 discriminator 3
 1279 004e 02AA     		add	r2, sp, #8
 1280 0050 1A44     		add	r2, r2, r3
 1281 0052 0020     		movs	r0, #0
 1282 0054 02F8080C 		strb	r0, [r2, #-8]
 295:Core/Src/bms.c ****         {
 1283              		.loc 1 295 0 discriminator 3
 1284 0058 0133     		adds	r3, r3, #1
 1285              	.LVL99:
 1286              	.L102:
 295:Core/Src/bms.c ****         {
 1287              		.loc 1 295 0 is_stmt 0 discriminator 1
 1288 005a 042B     		cmp	r3, #4
 1289 005c F7D9     		bls	.L103
 1290              	.LBE23:
 300:Core/Src/bms.c ****         {
ARM GAS  /tmp/ccVfUIOB.s 			page 35


 1291              		.loc 1 300 0 is_stmt 1
 1292 005e 1CB1     		cbz	r4, .L104
 1293 0060 012C     		cmp	r4, #1
 1294 0062 08D0     		beq	.L105
 1295              	.LVL100:
 1296              	.L95:
 314:Core/Src/bms.c **** 
 1297              		.loc 1 314 0
 1298 0064 02B0     		add	sp, sp, #8
 1299              		.cfi_remember_state
 1300              		.cfi_def_cfa_offset 8
 1301              		@ sp needed
 1302 0066 10BD     		pop	{r4, pc}
 1303              	.LVL101:
 1304              	.L104:
 1305              		.cfi_restore_state
 303:Core/Src/bms.c ****             break;
 1306              		.loc 1 303 0
 1307 0068 6A46     		mov	r2, sp
 1308 006a 0521     		movs	r1, #5
 1309 006c 4FF44470 		mov	r0, #784
 1310 0070 FFF7FEFF 		bl	can1tx
 1311              	.LVL102:
 304:Core/Src/bms.c **** 
 1312              		.loc 1 304 0
 1313 0074 F6E7     		b	.L95
 1314              	.LVL103:
 1315              	.L105:
 307:Core/Src/bms.c ****             break;
 1316              		.loc 1 307 0
 1317 0076 6A46     		mov	r2, sp
 1318 0078 0521     		movs	r1, #5
 1319 007a 4FF44470 		mov	r0, #784
 1320 007e FFF7FEFF 		bl	can3tx
 1321              	.LVL104:
 314:Core/Src/bms.c **** 
 1322              		.loc 1 314 0
 1323 0082 EFE7     		b	.L95
 1324              		.cfi_endproc
 1325              	.LFE137:
 1327              		.section	.text.balanceCommand,"ax",%progbits
 1328              		.align	1
 1329              		.global	balanceCommand
 1330              		.syntax unified
 1331              		.thumb
 1332              		.thumb_func
 1333              		.fpu fpv4-sp-d16
 1335              	balanceCommand:
 1336              	.LFB138:
 318:Core/Src/bms.c ****     sendCommand(pack);
 1337              		.loc 1 318 0
 1338              		.cfi_startproc
 1339              		@ args = 0, pretend = 0, frame = 8
 1340              		@ frame_needed = 0, uses_anonymous_args = 0
 1341              	.LVL105:
 1342 0000 30B5     		push	{r4, r5, lr}
 1343              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccVfUIOB.s 			page 36


 1344              		.cfi_offset 4, -12
 1345              		.cfi_offset 5, -8
 1346              		.cfi_offset 14, -4
 1347 0002 83B0     		sub	sp, sp, #12
 1348              		.cfi_def_cfa_offset 24
 1349 0004 0446     		mov	r4, r0
 1350 0006 0D46     		mov	r5, r1
 319:Core/Src/bms.c ****     uint8_t balance[8];
 1351              		.loc 1 319 0
 1352 0008 0846     		mov	r0, r1
 1353              	.LVL106:
 1354 000a FFF7FEFF 		bl	sendCommand
 1355              	.LVL107:
 322:Core/Src/bms.c ****     {
 1356              		.loc 1 322 0
 1357 000e 6DB1     		cbz	r5, .L133
 1358 0010 012D     		cmp	r5, #1
 1359 0012 5ED0     		beq	.L134
 1360              	.L111:
 386:Core/Src/bms.c **** 
 1361              		.loc 1 386 0
 1362 0014 03B0     		add	sp, sp, #12
 1363              		.cfi_remember_state
 1364              		.cfi_def_cfa_offset 12
 1365              		@ sp needed
 1366 0016 30BD     		pop	{r4, r5, pc}
 1367              	.LVL108:
 1368              	.L115:
 1369              		.cfi_restore_state
 1370              	.LBB24:
 327:Core/Src/bms.c ****         }
 1371              		.loc 1 327 0 discriminator 3
 1372 0018 02AA     		add	r2, sp, #8
 1373 001a 1A44     		add	r2, r2, r3
 1374 001c 0021     		movs	r1, #0
 1375 001e 02F8081C 		strb	r1, [r2, #-8]
 325:Core/Src/bms.c ****         {
 1376              		.loc 1 325 0 discriminator 3
 1377 0022 0133     		adds	r3, r3, #1
 1378              	.LVL109:
 1379              	.L113:
 325:Core/Src/bms.c ****         {
 1380              		.loc 1 325 0 is_stmt 0 discriminator 1
 1381 0024 072B     		cmp	r3, #7
 1382 0026 F7D9     		bls	.L115
 1383 0028 0023     		movs	r3, #0
 1384              	.LVL110:
 1385 002a 02E0     		b	.L116
 1386              	.L133:
 1387              	.LBE24:
 322:Core/Src/bms.c ****     {
 1388              		.loc 1 322 0 is_stmt 1
 1389 002c 0023     		movs	r3, #0
 1390 002e F9E7     		b	.L113
 1391              	.LVL111:
 1392              	.L117:
 1393              	.LBB25:
ARM GAS  /tmp/ccVfUIOB.s 			page 37


 330:Core/Src/bms.c ****         {
 1394              		.loc 1 330 0 discriminator 2
 1395 0030 0133     		adds	r3, r3, #1
 1396              	.LVL112:
 1397              	.L116:
 330:Core/Src/bms.c ****         {
 1398              		.loc 1 330 0 is_stmt 0 discriminator 1
 1399 0032 3D2B     		cmp	r3, #61
 1400 0034 13D8     		bhi	.L136
 332:Core/Src/bms.c ****             {
 1401              		.loc 1 332 0 is_stmt 1
 1402 0036 B4F8E610 		ldrh	r1, [r4, #230]
 1403 003a 89B2     		uxth	r1, r1
 1404 003c 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1405 0040 92B2     		uxth	r2, r2
 1406 0042 9142     		cmp	r1, r2
 1407 0044 F4D2     		bcs	.L117
 334:Core/Src/bms.c ****             }
 1408              		.loc 1 334 0
 1409 0046 474A     		ldr	r2, .L140
 1410 0048 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1411 004a 4749     		ldr	r1, .L140+4
 1412 004c C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1413 004e 02A8     		add	r0, sp, #8
 1414 0050 0244     		add	r2, r2, r0
 1415 0052 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1416 0056 0143     		orrs	r1, r1, r0
 1417 0058 02F8081C 		strb	r1, [r2, #-8]
 1418 005c E8E7     		b	.L117
 1419              	.L136:
 1420              	.LBE25:
 337:Core/Src/bms.c **** 
 1421              		.loc 1 337 0
 1422 005e 6A46     		mov	r2, sp
 1423 0060 0821     		movs	r1, #8
 1424 0062 4FF44070 		mov	r0, #768
 1425 0066 FFF7FEFF 		bl	can1tx
 1426              	.LVL113:
 1427              	.LBB26:
 339:Core/Src/bms.c ****         {
 1428              		.loc 1 339 0
 1429 006a 0023     		movs	r3, #0
 1430 006c 05E0     		b	.L119
 1431              	.LVL114:
 1432              	.L120:
 341:Core/Src/bms.c ****         }
 1433              		.loc 1 341 0 discriminator 3
 1434 006e 02AA     		add	r2, sp, #8
 1435 0070 1A44     		add	r2, r2, r3
 1436 0072 0021     		movs	r1, #0
 1437 0074 02F8081C 		strb	r1, [r2, #-8]
 339:Core/Src/bms.c ****         {
 1438              		.loc 1 339 0 discriminator 3
 1439 0078 0133     		adds	r3, r3, #1
 1440              	.LVL115:
 1441              	.L119:
 339:Core/Src/bms.c ****         {
ARM GAS  /tmp/ccVfUIOB.s 			page 38


 1442              		.loc 1 339 0 is_stmt 0 discriminator 1
 1443 007a 072B     		cmp	r3, #7
 1444 007c F7D9     		bls	.L120
 1445 007e 3E23     		movs	r3, #62
 1446              	.LVL116:
 1447 0080 00E0     		b	.L121
 1448              	.LVL117:
 1449              	.L122:
 1450              	.LBE26:
 1451              	.LBB27:
 344:Core/Src/bms.c ****         {
 1452              		.loc 1 344 0 is_stmt 1 discriminator 2
 1453 0082 0133     		adds	r3, r3, #1
 1454              	.LVL118:
 1455              	.L121:
 344:Core/Src/bms.c ****         {
 1456              		.loc 1 344 0 is_stmt 0 discriminator 1
 1457 0084 5F2B     		cmp	r3, #95
 1458 0086 13D8     		bhi	.L137
 346:Core/Src/bms.c ****             {
 1459              		.loc 1 346 0 is_stmt 1
 1460 0088 B4F8E610 		ldrh	r1, [r4, #230]
 1461 008c 89B2     		uxth	r1, r1
 1462 008e 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1463 0092 92B2     		uxth	r2, r2
 1464 0094 9142     		cmp	r1, r2
 1465 0096 F4D2     		bcs	.L122
 348:Core/Src/bms.c ****             }
 1466              		.loc 1 348 0
 1467 0098 324A     		ldr	r2, .L140
 1468 009a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1469 009c 3249     		ldr	r1, .L140+4
 1470 009e C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1471 00a0 02A8     		add	r0, sp, #8
 1472 00a2 0244     		add	r2, r2, r0
 1473 00a4 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1474 00a8 0143     		orrs	r1, r1, r0
 1475 00aa 02F8081C 		strb	r1, [r2, #-8]
 1476 00ae E8E7     		b	.L122
 1477              	.L137:
 1478              	.LBE27:
 351:Core/Src/bms.c ****         break;
 1479              		.loc 1 351 0
 1480 00b0 6A46     		mov	r2, sp
 1481 00b2 0521     		movs	r1, #5
 1482 00b4 4FF44470 		mov	r0, #784
 1483 00b8 FFF7FEFF 		bl	can1tx
 1484              	.LVL119:
 352:Core/Src/bms.c **** 
 1485              		.loc 1 352 0
 1486 00bc AAE7     		b	.L111
 1487              	.LVL120:
 1488              	.L124:
 1489              	.LBB28:
 358:Core/Src/bms.c ****         }
 1490              		.loc 1 358 0 discriminator 3
 1491 00be 02AA     		add	r2, sp, #8
ARM GAS  /tmp/ccVfUIOB.s 			page 39


 1492 00c0 1A44     		add	r2, r2, r3
 1493 00c2 0021     		movs	r1, #0
 1494 00c4 02F8081C 		strb	r1, [r2, #-8]
 356:Core/Src/bms.c ****         {
 1495              		.loc 1 356 0 discriminator 3
 1496 00c8 0133     		adds	r3, r3, #1
 1497              	.LVL121:
 1498              	.L114:
 356:Core/Src/bms.c ****         {
 1499              		.loc 1 356 0 is_stmt 0 discriminator 1
 1500 00ca 072B     		cmp	r3, #7
 1501 00cc F7D9     		bls	.L124
 1502 00ce 0023     		movs	r3, #0
 1503              	.LVL122:
 1504 00d0 02E0     		b	.L125
 1505              	.L134:
 1506              	.LBE28:
 322:Core/Src/bms.c ****     {
 1507              		.loc 1 322 0 is_stmt 1
 1508 00d2 0023     		movs	r3, #0
 1509 00d4 F9E7     		b	.L114
 1510              	.LVL123:
 1511              	.L126:
 1512              	.LBB29:
 360:Core/Src/bms.c ****         {
 1513              		.loc 1 360 0 discriminator 2
 1514 00d6 0133     		adds	r3, r3, #1
 1515              	.LVL124:
 1516              	.L125:
 360:Core/Src/bms.c ****         {
 1517              		.loc 1 360 0 is_stmt 0 discriminator 1
 1518 00d8 3D2B     		cmp	r3, #61
 1519 00da 13D8     		bhi	.L138
 362:Core/Src/bms.c ****             {
 1520              		.loc 1 362 0 is_stmt 1
 1521 00dc B4F8E610 		ldrh	r1, [r4, #230]
 1522 00e0 89B2     		uxth	r1, r1
 1523 00e2 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1524 00e6 92B2     		uxth	r2, r2
 1525 00e8 9142     		cmp	r1, r2
 1526 00ea F4D2     		bcs	.L126
 364:Core/Src/bms.c ****             }
 1527              		.loc 1 364 0
 1528 00ec 1D4A     		ldr	r2, .L140
 1529 00ee D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1530 00f0 1D49     		ldr	r1, .L140+4
 1531 00f2 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1532 00f4 02A8     		add	r0, sp, #8
 1533 00f6 0244     		add	r2, r2, r0
 1534 00f8 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1535 00fc 0143     		orrs	r1, r1, r0
 1536 00fe 02F8081C 		strb	r1, [r2, #-8]
 1537 0102 E8E7     		b	.L126
 1538              	.L138:
 1539              	.LBE29:
 367:Core/Src/bms.c **** 
 1540              		.loc 1 367 0
ARM GAS  /tmp/ccVfUIOB.s 			page 40


 1541 0104 6A46     		mov	r2, sp
 1542 0106 0821     		movs	r1, #8
 1543 0108 4FF44070 		mov	r0, #768
 1544 010c FFF7FEFF 		bl	can3tx
 1545              	.LVL125:
 1546              	.LBB30:
 369:Core/Src/bms.c ****         {
 1547              		.loc 1 369 0
 1548 0110 0023     		movs	r3, #0
 1549 0112 05E0     		b	.L128
 1550              	.LVL126:
 1551              	.L129:
 371:Core/Src/bms.c ****         }
 1552              		.loc 1 371 0 discriminator 3
 1553 0114 02AA     		add	r2, sp, #8
 1554 0116 1A44     		add	r2, r2, r3
 1555 0118 0021     		movs	r1, #0
 1556 011a 02F8081C 		strb	r1, [r2, #-8]
 369:Core/Src/bms.c ****         {
 1557              		.loc 1 369 0 discriminator 3
 1558 011e 0133     		adds	r3, r3, #1
 1559              	.LVL127:
 1560              	.L128:
 369:Core/Src/bms.c ****         {
 1561              		.loc 1 369 0 is_stmt 0 discriminator 1
 1562 0120 072B     		cmp	r3, #7
 1563 0122 F7D9     		bls	.L129
 1564 0124 3E23     		movs	r3, #62
 1565              	.LVL128:
 1566 0126 00E0     		b	.L130
 1567              	.LVL129:
 1568              	.L131:
 1569              	.LBE30:
 1570              	.LBB31:
 373:Core/Src/bms.c ****         {
 1571              		.loc 1 373 0 is_stmt 1 discriminator 2
 1572 0128 0133     		adds	r3, r3, #1
 1573              	.LVL130:
 1574              	.L130:
 373:Core/Src/bms.c ****         {
 1575              		.loc 1 373 0 is_stmt 0 discriminator 1
 1576 012a 5F2B     		cmp	r3, #95
 1577 012c 13D8     		bhi	.L139
 375:Core/Src/bms.c ****             {
 1578              		.loc 1 375 0 is_stmt 1
 1579 012e B4F8E610 		ldrh	r1, [r4, #230]
 1580 0132 89B2     		uxth	r1, r1
 1581 0134 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1582 0138 92B2     		uxth	r2, r2
 1583 013a 9142     		cmp	r1, r2
 1584 013c F4D2     		bcs	.L131
 377:Core/Src/bms.c ****             }
 1585              		.loc 1 377 0
 1586 013e 094A     		ldr	r2, .L140
 1587 0140 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1588 0142 0949     		ldr	r1, .L140+4
 1589 0144 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccVfUIOB.s 			page 41


 1590 0146 02A8     		add	r0, sp, #8
 1591 0148 0244     		add	r2, r2, r0
 1592 014a 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1593 014e 0143     		orrs	r1, r1, r0
 1594 0150 02F8081C 		strb	r1, [r2, #-8]
 1595 0154 E8E7     		b	.L131
 1596              	.L139:
 1597              	.LBE31:
 380:Core/Src/bms.c ****         break;
 1598              		.loc 1 380 0
 1599 0156 6A46     		mov	r2, sp
 1600 0158 0521     		movs	r1, #5
 1601 015a 4FF44470 		mov	r0, #784
 1602 015e FFF7FEFF 		bl	can3tx
 1603              	.LVL131:
 386:Core/Src/bms.c **** 
 1604              		.loc 1 386 0
 1605 0162 57E7     		b	.L111
 1606              	.L141:
 1607              		.align	2
 1608              	.L140:
 1609 0164 00000000 		.word	.LANCHOR1
 1610 0168 00000000 		.word	.LANCHOR2
 1611              		.cfi_endproc
 1612              	.LFE138:
 1614              		.section	.text.vehicleComms,"ax",%progbits
 1615              		.align	1
 1616              		.global	vehicleComms
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1620              		.fpu fpv4-sp-d16
 1622              	vehicleComms:
 1623              	.LFB150:
 540:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 541:Core/Src/bms.c **** void vehicleComms(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 542:Core/Src/bms.c **** {
 1624              		.loc 1 542 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628              		@ link register save eliminated.
 1629              	.LVL132:
 1630 0000 7047     		bx	lr
 1631              		.cfi_endproc
 1632              	.LFE150:
 1634              		.section	.text.synchChargers,"ax",%progbits
 1635              		.align	1
 1636              		.global	synchChargers
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
 1640              		.fpu fpv4-sp-d16
 1642              	synchChargers:
 1643              	.LFB151:
 543:Core/Src/bms.c ****     switch (rxMsg->StdId)
 544:Core/Src/bms.c ****     {
ARM GAS  /tmp/ccVfUIOB.s 			page 42


 545:Core/Src/bms.c ****     case 0x313:
 546:Core/Src/bms.c ****         //vehicleState = canRx[0];
 547:Core/Src/bms.c ****         break;
 548:Core/Src/bms.c **** 
 549:Core/Src/bms.c ****     default:
 550:Core/Src/bms.c ****         break;
 551:Core/Src/bms.c ****     }
 552:Core/Src/bms.c **** }
 553:Core/Src/bms.c **** 
 554:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 555:Core/Src/bms.c **** void synchChargers(void)
 556:Core/Src/bms.c **** {
 1644              		.loc 1 556 0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
 1648              		@ link register save eliminated.
 557:Core/Src/bms.c **** 
 558:Core/Src/bms.c ****     if (BMS[0].chargeRequest && BMS[1].chargeRequest)
 1649              		.loc 1 558 0
 1650 0000 0F4B     		ldr	r3, .L147
 1651 0002 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 1652 0006 33B1     		cbz	r3, .L144
 1653              		.loc 1 558 0 is_stmt 0 discriminator 1
 1654 0008 0D4B     		ldr	r3, .L147
 1655 000a 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 1656 000e 13B1     		cbz	r3, .L144
 559:Core/Src/bms.c ****     {
 560:Core/Src/bms.c ****         chargerOn = true;
 1657              		.loc 1 560 0 is_stmt 1
 1658 0010 0122     		movs	r2, #1
 1659 0012 0C4B     		ldr	r3, .L147+4
 1660 0014 1A70     		strb	r2, [r3]
 1661              	.L144:
 561:Core/Src/bms.c ****     }
 562:Core/Src/bms.c **** 
 563:Core/Src/bms.c ****     if (chargerOn)
 1662              		.loc 1 563 0
 1663 0016 0B4B     		ldr	r3, .L147+4
 1664 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1665 001a 83B1     		cbz	r3, .L143
 564:Core/Src/bms.c ****     {
 565:Core/Src/bms.c ****         if ((!BMS[0].chargeRequest) || (!BMS[1].chargeRequest))
 1666              		.loc 1 565 0
 1667 001c 084B     		ldr	r3, .L147
 1668 001e 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 1669 0022 1BB1     		cbz	r3, .L146
 1670              		.loc 1 565 0 is_stmt 0 discriminator 1
 1671 0024 064B     		ldr	r3, .L147
 1672 0026 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 1673 002a 43B9     		cbnz	r3, .L143
 1674              	.L146:
 566:Core/Src/bms.c ****         {
 567:Core/Src/bms.c ****             chargerOn = false;
 1675              		.loc 1 567 0 is_stmt 1
 1676 002c 0022     		movs	r2, #0
 1677 002e 054B     		ldr	r3, .L147+4
ARM GAS  /tmp/ccVfUIOB.s 			page 43


 1678 0030 1A70     		strb	r2, [r3]
 568:Core/Src/bms.c ****             BMS[0].state = Ready;
 1679              		.loc 1 568 0
 1680 0032 034B     		ldr	r3, .L147
 1681 0034 0122     		movs	r2, #1
 1682 0036 83F8F220 		strb	r2, [r3, #242]
 569:Core/Src/bms.c ****             BMS[1].state = Ready;
 1683              		.loc 1 569 0
 1684 003a 83F8E821 		strb	r2, [r3, #488]
 1685              	.L143:
 1686 003e 7047     		bx	lr
 1687              	.L148:
 1688              		.align	2
 1689              	.L147:
 1690 0040 00000000 		.word	BMS
 1691 0044 00000000 		.word	chargerOn
 1692              		.cfi_endproc
 1693              	.LFE151:
 1695              		.global	__aeabi_i2d
 1696              		.global	__aeabi_dmul
 1697              		.global	__aeabi_d2uiz
 1698              		.section	.text.decodeVolt,"ax",%progbits
 1699              		.align	1
 1700              		.global	decodeVolt
 1701              		.syntax unified
 1702              		.thumb
 1703              		.thumb_func
 1704              		.fpu fpv4-sp-d16
 1706              	decodeVolt:
 1707              	.LFB152:
 570:Core/Src/bms.c ****         }
 571:Core/Src/bms.c ****     }
 572:Core/Src/bms.c **** }
 573:Core/Src/bms.c **** 
 574:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 575:Core/Src/bms.c **** void decodeVolt(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // cell voltage in millivol
 576:Core/Src/bms.c **** {
 1708              		.loc 1 576 0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 1712              	.LVL133:
 1713 0000 38B5     		push	{r3, r4, r5, lr}
 1714              		.cfi_def_cfa_offset 16
 1715              		.cfi_offset 3, -16
 1716              		.cfi_offset 4, -12
 1717              		.cfi_offset 5, -8
 1718              		.cfi_offset 14, -4
 1719 0002 0546     		mov	r5, r0
 1720 0004 1446     		mov	r4, r2
 577:Core/Src/bms.c ****     switch (rxMsg->StdId)
 1721              		.loc 1 577 0
 1722 0006 0B68     		ldr	r3, [r1]
 1723 0008 A3F58C63 		sub	r3, r3, #1120
 1724 000c 1E2B     		cmp	r3, #30
 1725 000e 00F28286 		bhi	.L149
 1726 0012 DFE813F0 		tbh	[pc, r3, lsl #1]
ARM GAS  /tmp/ccVfUIOB.s 			page 44


 1727              	.LVL134:
 1728              	.L152:
 1729 0016 1F00     		.2byte	(.L151-.L152)/2
 1730 0018 8100     		.2byte	(.L153-.L152)/2
 1731 001a 0301     		.2byte	(.L154-.L152)/2
 1732 001c 8701     		.2byte	(.L155-.L152)/2
 1733 001e 0902     		.2byte	(.L156-.L152)/2
 1734 0020 9102     		.2byte	(.L157-.L152)/2
 1735 0022 1D03     		.2byte	(.L158-.L152)/2
 1736 0024 8006     		.2byte	(.L149-.L152)/2
 1737 0026 A703     		.2byte	(.L159-.L152)/2
 1738 0028 3104     		.2byte	(.L160-.L152)/2
 1739 002a BD04     		.2byte	(.L161-.L152)/2
 1740 002c 8006     		.2byte	(.L149-.L152)/2
 1741 002e 4705     		.2byte	(.L162-.L152)/2
 1742 0030 AF05     		.2byte	(.L163-.L152)/2
 1743 0032 1706     		.2byte	(.L164-.L152)/2
 1744 0034 8006     		.2byte	(.L149-.L152)/2
 1745 0036 5000     		.2byte	(.L165-.L152)/2
 1746 0038 C200     		.2byte	(.L166-.L152)/2
 1747 003a 4401     		.2byte	(.L167-.L152)/2
 1748 003c C801     		.2byte	(.L168-.L152)/2
 1749 003e 4C02     		.2byte	(.L169-.L152)/2
 1750 0040 D602     		.2byte	(.L170-.L152)/2
 1751 0042 6203     		.2byte	(.L171-.L152)/2
 1752 0044 8006     		.2byte	(.L149-.L152)/2
 1753 0046 EC03     		.2byte	(.L172-.L152)/2
 1754 0048 7604     		.2byte	(.L173-.L152)/2
 1755 004a 0205     		.2byte	(.L174-.L152)/2
 1756 004c 8006     		.2byte	(.L149-.L152)/2
 1757 004e 7B05     		.2byte	(.L175-.L152)/2
 1758 0050 E305     		.2byte	(.L176-.L152)/2
 1759 0052 4D06     		.2byte	(.L177-.L152)/2
 1760              		.p2align 1
 1761              	.L151:
 578:Core/Src/bms.c ****     {
 579:Core/Src/bms.c ****     case 0x460: // Begin module 1
 580:Core/Src/bms.c ****         bms->cellVolt[0] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1762              		.loc 1 580 0
 1763 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1764 0056 1B02     		lsls	r3, r3, #8
 1765 0058 03F47063 		and	r3, r3, #3840
 1766 005c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1767              	.LVL135:
 1768 005e 1844     		add	r0, r0, r3
 1769 0060 FFF7FEFF 		bl	__aeabi_i2d
 1770              	.LVL136:
 1771 0064 0022     		movs	r2, #0
 1772 0066 AE4B     		ldr	r3, .L179
 1773 0068 FFF7FEFF 		bl	__aeabi_dmul
 1774              	.LVL137:
 1775 006c FFF7FEFF 		bl	__aeabi_d2uiz
 1776              	.LVL138:
 1777 0070 80B2     		uxth	r0, r0
 1778 0072 2880     		strh	r0, [r5]	@ movhi
 581:Core/Src/bms.c ****         bms->cellVolt[1] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1779              		.loc 1 581 0
ARM GAS  /tmp/ccVfUIOB.s 			page 45


 1780 0074 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1781 0076 1B02     		lsls	r3, r3, #8
 1782 0078 03F47063 		and	r3, r3, #3840
 1783 007c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1784 007e 1844     		add	r0, r0, r3
 1785 0080 FFF7FEFF 		bl	__aeabi_i2d
 1786              	.LVL139:
 1787 0084 0022     		movs	r2, #0
 1788 0086 A64B     		ldr	r3, .L179
 1789 0088 FFF7FEFF 		bl	__aeabi_dmul
 1790              	.LVL140:
 1791 008c FFF7FEFF 		bl	__aeabi_d2uiz
 1792              	.LVL141:
 1793 0090 80B2     		uxth	r0, r0
 1794 0092 6880     		strh	r0, [r5, #2]	@ movhi
 582:Core/Src/bms.c ****         bms->cellVolt[2] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1795              		.loc 1 582 0
 1796 0094 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1797 0096 1B02     		lsls	r3, r3, #8
 1798 0098 03F47063 		and	r3, r3, #3840
 1799 009c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1800 009e 1844     		add	r0, r0, r3
 1801 00a0 FFF7FEFF 		bl	__aeabi_i2d
 1802              	.LVL142:
 1803 00a4 0022     		movs	r2, #0
 1804 00a6 9E4B     		ldr	r3, .L179
 1805 00a8 FFF7FEFF 		bl	__aeabi_dmul
 1806              	.LVL143:
 1807 00ac FFF7FEFF 		bl	__aeabi_d2uiz
 1808              	.LVL144:
 1809 00b0 80B2     		uxth	r0, r0
 1810 00b2 A880     		strh	r0, [r5, #4]	@ movhi
 583:Core/Src/bms.c ****         break;
 1811              		.loc 1 583 0
 1812 00b4 38BD     		pop	{r3, r4, r5, pc}
 1813              	.LVL145:
 1814              	.L165:
 584:Core/Src/bms.c **** 
 585:Core/Src/bms.c ****     case 0x470:
 586:Core/Src/bms.c ****         bms->cellVolt[3] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1815              		.loc 1 586 0
 1816 00b6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1817 00b8 1B02     		lsls	r3, r3, #8
 1818 00ba 03F47063 		and	r3, r3, #3840
 1819 00be 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1820              	.LVL146:
 1821 00c0 1844     		add	r0, r0, r3
 1822 00c2 FFF7FEFF 		bl	__aeabi_i2d
 1823              	.LVL147:
 1824 00c6 0022     		movs	r2, #0
 1825 00c8 954B     		ldr	r3, .L179
 1826 00ca FFF7FEFF 		bl	__aeabi_dmul
 1827              	.LVL148:
 1828 00ce FFF7FEFF 		bl	__aeabi_d2uiz
 1829              	.LVL149:
 1830 00d2 80B2     		uxth	r0, r0
 1831 00d4 E880     		strh	r0, [r5, #6]	@ movhi
ARM GAS  /tmp/ccVfUIOB.s 			page 46


 587:Core/Src/bms.c ****         bms->cellVolt[4] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1832              		.loc 1 587 0
 1833 00d6 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1834 00d8 1B02     		lsls	r3, r3, #8
 1835 00da 03F47063 		and	r3, r3, #3840
 1836 00de E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1837 00e0 1844     		add	r0, r0, r3
 1838 00e2 FFF7FEFF 		bl	__aeabi_i2d
 1839              	.LVL150:
 1840 00e6 0022     		movs	r2, #0
 1841 00e8 8D4B     		ldr	r3, .L179
 1842 00ea FFF7FEFF 		bl	__aeabi_dmul
 1843              	.LVL151:
 1844 00ee FFF7FEFF 		bl	__aeabi_d2uiz
 1845              	.LVL152:
 1846 00f2 80B2     		uxth	r0, r0
 1847 00f4 2881     		strh	r0, [r5, #8]	@ movhi
 588:Core/Src/bms.c ****         bms->cellVolt[5] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1848              		.loc 1 588 0
 1849 00f6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1850 00f8 1B02     		lsls	r3, r3, #8
 1851 00fa 03F47063 		and	r3, r3, #3840
 1852 00fe 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1853 0100 1844     		add	r0, r0, r3
 1854 0102 FFF7FEFF 		bl	__aeabi_i2d
 1855              	.LVL153:
 1856 0106 0022     		movs	r2, #0
 1857 0108 854B     		ldr	r3, .L179
 1858 010a FFF7FEFF 		bl	__aeabi_dmul
 1859              	.LVL154:
 1860 010e FFF7FEFF 		bl	__aeabi_d2uiz
 1861              	.LVL155:
 1862 0112 80B2     		uxth	r0, r0
 1863 0114 6881     		strh	r0, [r5, #10]	@ movhi
 589:Core/Src/bms.c ****         break;
 1864              		.loc 1 589 0
 1865 0116 38BD     		pop	{r3, r4, r5, pc}
 1866              	.LVL156:
 1867              	.L153:
 590:Core/Src/bms.c **** 
 591:Core/Src/bms.c ****     case 0x461:
 592:Core/Src/bms.c ****         bms->cellVolt[6] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1868              		.loc 1 592 0
 1869 0118 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1870 011a 1B02     		lsls	r3, r3, #8
 1871 011c 03F47063 		and	r3, r3, #3840
 1872 0120 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1873              	.LVL157:
 1874 0122 1844     		add	r0, r0, r3
 1875 0124 FFF7FEFF 		bl	__aeabi_i2d
 1876              	.LVL158:
 1877 0128 0022     		movs	r2, #0
 1878 012a 7D4B     		ldr	r3, .L179
 1879 012c FFF7FEFF 		bl	__aeabi_dmul
 1880              	.LVL159:
 1881 0130 FFF7FEFF 		bl	__aeabi_d2uiz
 1882              	.LVL160:
ARM GAS  /tmp/ccVfUIOB.s 			page 47


 1883 0134 80B2     		uxth	r0, r0
 1884 0136 A881     		strh	r0, [r5, #12]	@ movhi
 593:Core/Src/bms.c ****         bms->cellVolt[7] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1885              		.loc 1 593 0
 1886 0138 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1887 013a 1B02     		lsls	r3, r3, #8
 1888 013c 03F47063 		and	r3, r3, #3840
 1889 0140 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1890 0142 1844     		add	r0, r0, r3
 1891 0144 FFF7FEFF 		bl	__aeabi_i2d
 1892              	.LVL161:
 1893 0148 0022     		movs	r2, #0
 1894 014a 754B     		ldr	r3, .L179
 1895 014c FFF7FEFF 		bl	__aeabi_dmul
 1896              	.LVL162:
 1897 0150 FFF7FEFF 		bl	__aeabi_d2uiz
 1898              	.LVL163:
 1899 0154 80B2     		uxth	r0, r0
 1900 0156 E881     		strh	r0, [r5, #14]	@ movhi
 594:Core/Src/bms.c ****         bms->cellVolt[8] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1901              		.loc 1 594 0
 1902 0158 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1903 015a 1B02     		lsls	r3, r3, #8
 1904 015c 03F47063 		and	r3, r3, #3840
 1905 0160 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1906 0162 1844     		add	r0, r0, r3
 1907 0164 FFF7FEFF 		bl	__aeabi_i2d
 1908              	.LVL164:
 1909 0168 0022     		movs	r2, #0
 1910 016a 6D4B     		ldr	r3, .L179
 1911 016c FFF7FEFF 		bl	__aeabi_dmul
 1912              	.LVL165:
 1913 0170 FFF7FEFF 		bl	__aeabi_d2uiz
 1914              	.LVL166:
 1915 0174 80B2     		uxth	r0, r0
 1916 0176 2882     		strh	r0, [r5, #16]	@ movhi
 595:Core/Src/bms.c ****         bms->cellVolt[9] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1917              		.loc 1 595 0
 1918 0178 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1919 017a 1B02     		lsls	r3, r3, #8
 1920 017c 03F47063 		and	r3, r3, #3840
 1921 0180 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1922 0182 1844     		add	r0, r0, r3
 1923 0184 FFF7FEFF 		bl	__aeabi_i2d
 1924              	.LVL167:
 1925 0188 0022     		movs	r2, #0
 1926 018a 654B     		ldr	r3, .L179
 1927 018c FFF7FEFF 		bl	__aeabi_dmul
 1928              	.LVL168:
 1929 0190 FFF7FEFF 		bl	__aeabi_d2uiz
 1930              	.LVL169:
 1931 0194 80B2     		uxth	r0, r0
 1932 0196 6882     		strh	r0, [r5, #18]	@ movhi
 596:Core/Src/bms.c ****         break;
 1933              		.loc 1 596 0
 1934 0198 38BD     		pop	{r3, r4, r5, pc}
 1935              	.LVL170:
ARM GAS  /tmp/ccVfUIOB.s 			page 48


 1936              	.L166:
 597:Core/Src/bms.c **** 
 598:Core/Src/bms.c ****     case 0x471:
 599:Core/Src/bms.c ****         bms->cellVolt[10] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1937              		.loc 1 599 0
 1938 019a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1939 019c 1B02     		lsls	r3, r3, #8
 1940 019e 03F47063 		and	r3, r3, #3840
 1941 01a2 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1942              	.LVL171:
 1943 01a4 1844     		add	r0, r0, r3
 1944 01a6 FFF7FEFF 		bl	__aeabi_i2d
 1945              	.LVL172:
 1946 01aa 0022     		movs	r2, #0
 1947 01ac 5C4B     		ldr	r3, .L179
 1948 01ae FFF7FEFF 		bl	__aeabi_dmul
 1949              	.LVL173:
 1950 01b2 FFF7FEFF 		bl	__aeabi_d2uiz
 1951              	.LVL174:
 1952 01b6 80B2     		uxth	r0, r0
 1953 01b8 A882     		strh	r0, [r5, #20]	@ movhi
 600:Core/Src/bms.c ****         bms->cellVolt[11] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1954              		.loc 1 600 0
 1955 01ba A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1956 01bc 1B02     		lsls	r3, r3, #8
 1957 01be 03F47063 		and	r3, r3, #3840
 1958 01c2 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1959 01c4 1844     		add	r0, r0, r3
 1960 01c6 FFF7FEFF 		bl	__aeabi_i2d
 1961              	.LVL175:
 1962 01ca 0022     		movs	r2, #0
 1963 01cc 544B     		ldr	r3, .L179
 1964 01ce FFF7FEFF 		bl	__aeabi_dmul
 1965              	.LVL176:
 1966 01d2 FFF7FEFF 		bl	__aeabi_d2uiz
 1967              	.LVL177:
 1968 01d6 80B2     		uxth	r0, r0
 1969 01d8 E882     		strh	r0, [r5, #22]	@ movhi
 601:Core/Src/bms.c ****         bms->cellVolt[12] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1970              		.loc 1 601 0
 1971 01da 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1972 01dc 1B02     		lsls	r3, r3, #8
 1973 01de 03F47063 		and	r3, r3, #3840
 1974 01e2 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1975 01e4 1844     		add	r0, r0, r3
 1976 01e6 FFF7FEFF 		bl	__aeabi_i2d
 1977              	.LVL178:
 1978 01ea 0022     		movs	r2, #0
 1979 01ec 4C4B     		ldr	r3, .L179
 1980 01ee FFF7FEFF 		bl	__aeabi_dmul
 1981              	.LVL179:
 1982 01f2 FFF7FEFF 		bl	__aeabi_d2uiz
 1983              	.LVL180:
 1984 01f6 80B2     		uxth	r0, r0
 1985 01f8 2883     		strh	r0, [r5, #24]	@ movhi
 602:Core/Src/bms.c ****         bms->cellVolt[13] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1986              		.loc 1 602 0
ARM GAS  /tmp/ccVfUIOB.s 			page 49


 1987 01fa A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1988 01fc 1B02     		lsls	r3, r3, #8
 1989 01fe 03F47063 		and	r3, r3, #3840
 1990 0202 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1991 0204 1844     		add	r0, r0, r3
 1992 0206 FFF7FEFF 		bl	__aeabi_i2d
 1993              	.LVL181:
 1994 020a 0022     		movs	r2, #0
 1995 020c 444B     		ldr	r3, .L179
 1996 020e FFF7FEFF 		bl	__aeabi_dmul
 1997              	.LVL182:
 1998 0212 FFF7FEFF 		bl	__aeabi_d2uiz
 1999              	.LVL183:
 2000 0216 80B2     		uxth	r0, r0
 2001 0218 6883     		strh	r0, [r5, #26]	@ movhi
 603:Core/Src/bms.c ****         break;
 2002              		.loc 1 603 0
 2003 021a 38BD     		pop	{r3, r4, r5, pc}
 2004              	.LVL184:
 2005              	.L154:
 604:Core/Src/bms.c **** 
 605:Core/Src/bms.c ****     case 0x462:
 606:Core/Src/bms.c ****         bms->cellVolt[14] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2006              		.loc 1 606 0
 2007 021c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2008 021e 1B02     		lsls	r3, r3, #8
 2009 0220 03F47063 		and	r3, r3, #3840
 2010 0224 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2011              	.LVL185:
 2012 0226 1844     		add	r0, r0, r3
 2013 0228 FFF7FEFF 		bl	__aeabi_i2d
 2014              	.LVL186:
 2015 022c 0022     		movs	r2, #0
 2016 022e 3C4B     		ldr	r3, .L179
 2017 0230 FFF7FEFF 		bl	__aeabi_dmul
 2018              	.LVL187:
 2019 0234 FFF7FEFF 		bl	__aeabi_d2uiz
 2020              	.LVL188:
 2021 0238 80B2     		uxth	r0, r0
 2022 023a A883     		strh	r0, [r5, #28]	@ movhi
 607:Core/Src/bms.c ****         bms->cellVolt[15] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2023              		.loc 1 607 0
 2024 023c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2025 023e 1B02     		lsls	r3, r3, #8
 2026 0240 03F47063 		and	r3, r3, #3840
 2027 0244 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2028 0246 1844     		add	r0, r0, r3
 2029 0248 FFF7FEFF 		bl	__aeabi_i2d
 2030              	.LVL189:
 2031 024c 0022     		movs	r2, #0
 2032 024e 344B     		ldr	r3, .L179
 2033 0250 FFF7FEFF 		bl	__aeabi_dmul
 2034              	.LVL190:
 2035 0254 FFF7FEFF 		bl	__aeabi_d2uiz
 2036              	.LVL191:
 2037 0258 80B2     		uxth	r0, r0
 2038 025a E883     		strh	r0, [r5, #30]	@ movhi
ARM GAS  /tmp/ccVfUIOB.s 			page 50


 608:Core/Src/bms.c ****         bms->cellVolt[16] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2039              		.loc 1 608 0
 2040 025c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2041 025e 1B02     		lsls	r3, r3, #8
 2042 0260 03F47063 		and	r3, r3, #3840
 2043 0264 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2044 0266 1844     		add	r0, r0, r3
 2045 0268 FFF7FEFF 		bl	__aeabi_i2d
 2046              	.LVL192:
 2047 026c 0022     		movs	r2, #0
 2048 026e 2C4B     		ldr	r3, .L179
 2049 0270 FFF7FEFF 		bl	__aeabi_dmul
 2050              	.LVL193:
 2051 0274 FFF7FEFF 		bl	__aeabi_d2uiz
 2052              	.LVL194:
 2053 0278 80B2     		uxth	r0, r0
 2054 027a 2884     		strh	r0, [r5, #32]	@ movhi
 609:Core/Src/bms.c ****         bms->cellVolt[17] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2055              		.loc 1 609 0
 2056 027c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2057 027e 1B02     		lsls	r3, r3, #8
 2058 0280 03F47063 		and	r3, r3, #3840
 2059 0284 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2060 0286 1844     		add	r0, r0, r3
 2061 0288 FFF7FEFF 		bl	__aeabi_i2d
 2062              	.LVL195:
 2063 028c 0022     		movs	r2, #0
 2064 028e 244B     		ldr	r3, .L179
 2065 0290 FFF7FEFF 		bl	__aeabi_dmul
 2066              	.LVL196:
 2067 0294 FFF7FEFF 		bl	__aeabi_d2uiz
 2068              	.LVL197:
 2069 0298 80B2     		uxth	r0, r0
 2070 029a 6884     		strh	r0, [r5, #34]	@ movhi
 610:Core/Src/bms.c ****         break;
 2071              		.loc 1 610 0
 2072 029c 38BD     		pop	{r3, r4, r5, pc}
 2073              	.LVL198:
 2074              	.L167:
 611:Core/Src/bms.c **** 
 612:Core/Src/bms.c ****     case 0x472:
 613:Core/Src/bms.c ****         bms->cellVolt[18] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2075              		.loc 1 613 0
 2076 029e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2077 02a0 1B02     		lsls	r3, r3, #8
 2078 02a2 03F47063 		and	r3, r3, #3840
 2079 02a6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2080              	.LVL199:
 2081 02a8 1844     		add	r0, r0, r3
 2082 02aa FFF7FEFF 		bl	__aeabi_i2d
 2083              	.LVL200:
 2084 02ae 0022     		movs	r2, #0
 2085 02b0 1B4B     		ldr	r3, .L179
 2086 02b2 FFF7FEFF 		bl	__aeabi_dmul
 2087              	.LVL201:
 2088 02b6 FFF7FEFF 		bl	__aeabi_d2uiz
 2089              	.LVL202:
ARM GAS  /tmp/ccVfUIOB.s 			page 51


 2090 02ba 80B2     		uxth	r0, r0
 2091 02bc A884     		strh	r0, [r5, #36]	@ movhi
 614:Core/Src/bms.c ****         bms->cellVolt[19] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2092              		.loc 1 614 0
 2093 02be A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2094 02c0 1B02     		lsls	r3, r3, #8
 2095 02c2 03F47063 		and	r3, r3, #3840
 2096 02c6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2097 02c8 1844     		add	r0, r0, r3
 2098 02ca FFF7FEFF 		bl	__aeabi_i2d
 2099              	.LVL203:
 2100 02ce 0022     		movs	r2, #0
 2101 02d0 134B     		ldr	r3, .L179
 2102 02d2 FFF7FEFF 		bl	__aeabi_dmul
 2103              	.LVL204:
 2104 02d6 FFF7FEFF 		bl	__aeabi_d2uiz
 2105              	.LVL205:
 2106 02da 80B2     		uxth	r0, r0
 2107 02dc E884     		strh	r0, [r5, #38]	@ movhi
 615:Core/Src/bms.c ****         bms->cellVolt[20] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2108              		.loc 1 615 0
 2109 02de 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2110 02e0 1B02     		lsls	r3, r3, #8
 2111 02e2 03F47063 		and	r3, r3, #3840
 2112 02e6 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2113 02e8 1844     		add	r0, r0, r3
 2114 02ea FFF7FEFF 		bl	__aeabi_i2d
 2115              	.LVL206:
 2116 02ee 0022     		movs	r2, #0
 2117 02f0 0B4B     		ldr	r3, .L179
 2118 02f2 FFF7FEFF 		bl	__aeabi_dmul
 2119              	.LVL207:
 2120 02f6 FFF7FEFF 		bl	__aeabi_d2uiz
 2121              	.LVL208:
 2122 02fa 80B2     		uxth	r0, r0
 2123 02fc 2885     		strh	r0, [r5, #40]	@ movhi
 616:Core/Src/bms.c ****         bms->cellVolt[21] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2124              		.loc 1 616 0
 2125 02fe A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2126 0300 1B02     		lsls	r3, r3, #8
 2127 0302 03F47063 		and	r3, r3, #3840
 2128 0306 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2129 0308 1844     		add	r0, r0, r3
 2130 030a FFF7FEFF 		bl	__aeabi_i2d
 2131              	.LVL209:
 2132 030e 0022     		movs	r2, #0
 2133 0310 034B     		ldr	r3, .L179
 2134 0312 FFF7FEFF 		bl	__aeabi_dmul
 2135              	.LVL210:
 2136 0316 FFF7FEFF 		bl	__aeabi_d2uiz
 2137              	.LVL211:
 2138 031a 80B2     		uxth	r0, r0
 2139 031c 6885     		strh	r0, [r5, #42]	@ movhi
 617:Core/Src/bms.c ****         break;
 2140              		.loc 1 617 0
 2141 031e 38BD     		pop	{r3, r4, r5, pc}
 2142              	.LVL212:
ARM GAS  /tmp/ccVfUIOB.s 			page 52


 2143              	.L180:
 2144              		.align	2
 2145              	.L179:
 2146 0320 0000F43F 		.word	1072955392
 2147              	.LVL213:
 2148              	.L155:
 618:Core/Src/bms.c ****     case 0x463:
 619:Core/Src/bms.c ****         bms->cellVolt[22] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2149              		.loc 1 619 0
 2150 0324 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2151 0326 1B02     		lsls	r3, r3, #8
 2152 0328 03F47063 		and	r3, r3, #3840
 2153 032c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2154              	.LVL214:
 2155 032e 1844     		add	r0, r0, r3
 2156 0330 FFF7FEFF 		bl	__aeabi_i2d
 2157              	.LVL215:
 2158 0334 0022     		movs	r2, #0
 2159 0336 C54B     		ldr	r3, .L181
 2160 0338 FFF7FEFF 		bl	__aeabi_dmul
 2161              	.LVL216:
 2162 033c FFF7FEFF 		bl	__aeabi_d2uiz
 2163              	.LVL217:
 2164 0340 80B2     		uxth	r0, r0
 2165 0342 A885     		strh	r0, [r5, #44]	@ movhi
 620:Core/Src/bms.c ****         bms->cellVolt[23] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2166              		.loc 1 620 0
 2167 0344 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2168 0346 1B02     		lsls	r3, r3, #8
 2169 0348 03F47063 		and	r3, r3, #3840
 2170 034c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2171 034e 1844     		add	r0, r0, r3
 2172 0350 FFF7FEFF 		bl	__aeabi_i2d
 2173              	.LVL218:
 2174 0354 0022     		movs	r2, #0
 2175 0356 BD4B     		ldr	r3, .L181
 2176 0358 FFF7FEFF 		bl	__aeabi_dmul
 2177              	.LVL219:
 2178 035c FFF7FEFF 		bl	__aeabi_d2uiz
 2179              	.LVL220:
 2180 0360 80B2     		uxth	r0, r0
 2181 0362 E885     		strh	r0, [r5, #46]	@ movhi
 621:Core/Src/bms.c ****         bms->cellVolt[24] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2182              		.loc 1 621 0
 2183 0364 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2184 0366 1B02     		lsls	r3, r3, #8
 2185 0368 03F47063 		and	r3, r3, #3840
 2186 036c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2187 036e 1844     		add	r0, r0, r3
 2188 0370 FFF7FEFF 		bl	__aeabi_i2d
 2189              	.LVL221:
 2190 0374 0022     		movs	r2, #0
 2191 0376 B54B     		ldr	r3, .L181
 2192 0378 FFF7FEFF 		bl	__aeabi_dmul
 2193              	.LVL222:
 2194 037c FFF7FEFF 		bl	__aeabi_d2uiz
 2195              	.LVL223:
ARM GAS  /tmp/ccVfUIOB.s 			page 53


 2196 0380 80B2     		uxth	r0, r0
 2197 0382 2886     		strh	r0, [r5, #48]	@ movhi
 622:Core/Src/bms.c ****         bms->cellVolt[25] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2198              		.loc 1 622 0
 2199 0384 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2200 0386 1B02     		lsls	r3, r3, #8
 2201 0388 03F47063 		and	r3, r3, #3840
 2202 038c E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2203 038e 1844     		add	r0, r0, r3
 2204 0390 FFF7FEFF 		bl	__aeabi_i2d
 2205              	.LVL224:
 2206 0394 0022     		movs	r2, #0
 2207 0396 AD4B     		ldr	r3, .L181
 2208 0398 FFF7FEFF 		bl	__aeabi_dmul
 2209              	.LVL225:
 2210 039c FFF7FEFF 		bl	__aeabi_d2uiz
 2211              	.LVL226:
 2212 03a0 80B2     		uxth	r0, r0
 2213 03a2 6886     		strh	r0, [r5, #50]	@ movhi
 623:Core/Src/bms.c ****         break;
 2214              		.loc 1 623 0
 2215 03a4 38BD     		pop	{r3, r4, r5, pc}
 2216              	.LVL227:
 2217              	.L168:
 624:Core/Src/bms.c **** 
 625:Core/Src/bms.c ****     case 0x473:
 626:Core/Src/bms.c ****         bms->cellVolt[26] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2218              		.loc 1 626 0
 2219 03a6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2220 03a8 1B02     		lsls	r3, r3, #8
 2221 03aa 03F47063 		and	r3, r3, #3840
 2222 03ae 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2223              	.LVL228:
 2224 03b0 1844     		add	r0, r0, r3
 2225 03b2 FFF7FEFF 		bl	__aeabi_i2d
 2226              	.LVL229:
 2227 03b6 0022     		movs	r2, #0
 2228 03b8 A44B     		ldr	r3, .L181
 2229 03ba FFF7FEFF 		bl	__aeabi_dmul
 2230              	.LVL230:
 2231 03be FFF7FEFF 		bl	__aeabi_d2uiz
 2232              	.LVL231:
 2233 03c2 80B2     		uxth	r0, r0
 2234 03c4 A886     		strh	r0, [r5, #52]	@ movhi
 627:Core/Src/bms.c ****         bms->cellVolt[27] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2235              		.loc 1 627 0
 2236 03c6 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2237 03c8 1B02     		lsls	r3, r3, #8
 2238 03ca 03F47063 		and	r3, r3, #3840
 2239 03ce E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2240 03d0 1844     		add	r0, r0, r3
 2241 03d2 FFF7FEFF 		bl	__aeabi_i2d
 2242              	.LVL232:
 2243 03d6 0022     		movs	r2, #0
 2244 03d8 9C4B     		ldr	r3, .L181
 2245 03da FFF7FEFF 		bl	__aeabi_dmul
 2246              	.LVL233:
ARM GAS  /tmp/ccVfUIOB.s 			page 54


 2247 03de FFF7FEFF 		bl	__aeabi_d2uiz
 2248              	.LVL234:
 2249 03e2 80B2     		uxth	r0, r0
 2250 03e4 E886     		strh	r0, [r5, #54]	@ movhi
 628:Core/Src/bms.c ****         bms->cellVolt[28] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2251              		.loc 1 628 0
 2252 03e6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2253 03e8 1B02     		lsls	r3, r3, #8
 2254 03ea 03F47063 		and	r3, r3, #3840
 2255 03ee 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2256 03f0 1844     		add	r0, r0, r3
 2257 03f2 FFF7FEFF 		bl	__aeabi_i2d
 2258              	.LVL235:
 2259 03f6 0022     		movs	r2, #0
 2260 03f8 944B     		ldr	r3, .L181
 2261 03fa FFF7FEFF 		bl	__aeabi_dmul
 2262              	.LVL236:
 2263 03fe FFF7FEFF 		bl	__aeabi_d2uiz
 2264              	.LVL237:
 2265 0402 80B2     		uxth	r0, r0
 2266 0404 2887     		strh	r0, [r5, #56]	@ movhi
 629:Core/Src/bms.c ****         bms->cellVolt[29] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2267              		.loc 1 629 0
 2268 0406 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2269 0408 1B02     		lsls	r3, r3, #8
 2270 040a 03F47063 		and	r3, r3, #3840
 2271 040e E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2272 0410 1844     		add	r0, r0, r3
 2273 0412 FFF7FEFF 		bl	__aeabi_i2d
 2274              	.LVL238:
 2275 0416 0022     		movs	r2, #0
 2276 0418 8C4B     		ldr	r3, .L181
 2277 041a FFF7FEFF 		bl	__aeabi_dmul
 2278              	.LVL239:
 2279 041e FFF7FEFF 		bl	__aeabi_d2uiz
 2280              	.LVL240:
 2281 0422 80B2     		uxth	r0, r0
 2282 0424 6887     		strh	r0, [r5, #58]	@ movhi
 630:Core/Src/bms.c ****         break;
 2283              		.loc 1 630 0
 2284 0426 38BD     		pop	{r3, r4, r5, pc}
 2285              	.LVL241:
 2286              	.L156:
 631:Core/Src/bms.c **** 
 632:Core/Src/bms.c ****     case 0x464:
 633:Core/Src/bms.c ****         bms->cellVolt[30] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); // Begin module 2
 2287              		.loc 1 633 0
 2288 0428 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2289 042a 1B02     		lsls	r3, r3, #8
 2290 042c 03F47063 		and	r3, r3, #3840
 2291 0430 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2292              	.LVL242:
 2293 0432 1844     		add	r0, r0, r3
 2294 0434 FFF7FEFF 		bl	__aeabi_i2d
 2295              	.LVL243:
 2296 0438 0022     		movs	r2, #0
 2297 043a 844B     		ldr	r3, .L181
ARM GAS  /tmp/ccVfUIOB.s 			page 55


 2298 043c FFF7FEFF 		bl	__aeabi_dmul
 2299              	.LVL244:
 2300 0440 FFF7FEFF 		bl	__aeabi_d2uiz
 2301              	.LVL245:
 2302 0444 80B2     		uxth	r0, r0
 2303 0446 A887     		strh	r0, [r5, #60]	@ movhi
 634:Core/Src/bms.c ****         bms->cellVolt[31] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2304              		.loc 1 634 0
 2305 0448 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2306 044a 1B02     		lsls	r3, r3, #8
 2307 044c 03F47063 		and	r3, r3, #3840
 2308 0450 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2309 0452 1844     		add	r0, r0, r3
 2310 0454 FFF7FEFF 		bl	__aeabi_i2d
 2311              	.LVL246:
 2312 0458 0022     		movs	r2, #0
 2313 045a 7C4B     		ldr	r3, .L181
 2314 045c FFF7FEFF 		bl	__aeabi_dmul
 2315              	.LVL247:
 2316 0460 FFF7FEFF 		bl	__aeabi_d2uiz
 2317              	.LVL248:
 2318 0464 80B2     		uxth	r0, r0
 2319 0466 E887     		strh	r0, [r5, #62]	@ movhi
 635:Core/Src/bms.c ****         bms->cellVolt[32] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2320              		.loc 1 635 0
 2321 0468 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2322 046a 1B02     		lsls	r3, r3, #8
 2323 046c 03F47063 		and	r3, r3, #3840
 2324 0470 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2325 0472 1844     		add	r0, r0, r3
 2326 0474 FFF7FEFF 		bl	__aeabi_i2d
 2327              	.LVL249:
 2328 0478 0022     		movs	r2, #0
 2329 047a 744B     		ldr	r3, .L181
 2330 047c FFF7FEFF 		bl	__aeabi_dmul
 2331              	.LVL250:
 2332 0480 FFF7FEFF 		bl	__aeabi_d2uiz
 2333              	.LVL251:
 2334 0484 80B2     		uxth	r0, r0
 2335 0486 A5F84000 		strh	r0, [r5, #64]	@ movhi
 636:Core/Src/bms.c ****         bms->cellVolt[33] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2336              		.loc 1 636 0
 2337 048a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2338 048c 1B02     		lsls	r3, r3, #8
 2339 048e 03F47063 		and	r3, r3, #3840
 2340 0492 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2341 0494 1844     		add	r0, r0, r3
 2342 0496 FFF7FEFF 		bl	__aeabi_i2d
 2343              	.LVL252:
 2344 049a 0022     		movs	r2, #0
 2345 049c 6B4B     		ldr	r3, .L181
 2346 049e FFF7FEFF 		bl	__aeabi_dmul
 2347              	.LVL253:
 2348 04a2 FFF7FEFF 		bl	__aeabi_d2uiz
 2349              	.LVL254:
 2350 04a6 80B2     		uxth	r0, r0
 2351 04a8 A5F84200 		strh	r0, [r5, #66]	@ movhi
ARM GAS  /tmp/ccVfUIOB.s 			page 56


 637:Core/Src/bms.c ****         break;
 2352              		.loc 1 637 0
 2353 04ac 38BD     		pop	{r3, r4, r5, pc}
 2354              	.LVL255:
 2355              	.L169:
 638:Core/Src/bms.c **** 
 639:Core/Src/bms.c ****     case 0x474:
 640:Core/Src/bms.c ****         bms->cellVolt[34] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2356              		.loc 1 640 0
 2357 04ae 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2358 04b0 1B02     		lsls	r3, r3, #8
 2359 04b2 03F47063 		and	r3, r3, #3840
 2360 04b6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2361              	.LVL256:
 2362 04b8 1844     		add	r0, r0, r3
 2363 04ba FFF7FEFF 		bl	__aeabi_i2d
 2364              	.LVL257:
 2365 04be 0022     		movs	r2, #0
 2366 04c0 624B     		ldr	r3, .L181
 2367 04c2 FFF7FEFF 		bl	__aeabi_dmul
 2368              	.LVL258:
 2369 04c6 FFF7FEFF 		bl	__aeabi_d2uiz
 2370              	.LVL259:
 2371 04ca 80B2     		uxth	r0, r0
 2372 04cc A5F84400 		strh	r0, [r5, #68]	@ movhi
 641:Core/Src/bms.c ****         bms->cellVolt[35] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2373              		.loc 1 641 0
 2374 04d0 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2375 04d2 1B02     		lsls	r3, r3, #8
 2376 04d4 03F47063 		and	r3, r3, #3840
 2377 04d8 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2378 04da 1844     		add	r0, r0, r3
 2379 04dc FFF7FEFF 		bl	__aeabi_i2d
 2380              	.LVL260:
 2381 04e0 0022     		movs	r2, #0
 2382 04e2 5A4B     		ldr	r3, .L181
 2383 04e4 FFF7FEFF 		bl	__aeabi_dmul
 2384              	.LVL261:
 2385 04e8 FFF7FEFF 		bl	__aeabi_d2uiz
 2386              	.LVL262:
 2387 04ec 80B2     		uxth	r0, r0
 2388 04ee A5F84600 		strh	r0, [r5, #70]	@ movhi
 642:Core/Src/bms.c ****         bms->cellVolt[36] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2389              		.loc 1 642 0
 2390 04f2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2391 04f4 1B02     		lsls	r3, r3, #8
 2392 04f6 03F47063 		and	r3, r3, #3840
 2393 04fa 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2394 04fc 1844     		add	r0, r0, r3
 2395 04fe FFF7FEFF 		bl	__aeabi_i2d
 2396              	.LVL263:
 2397 0502 0022     		movs	r2, #0
 2398 0504 514B     		ldr	r3, .L181
 2399 0506 FFF7FEFF 		bl	__aeabi_dmul
 2400              	.LVL264:
 2401 050a FFF7FEFF 		bl	__aeabi_d2uiz
 2402              	.LVL265:
ARM GAS  /tmp/ccVfUIOB.s 			page 57


 2403 050e 80B2     		uxth	r0, r0
 2404 0510 A5F84800 		strh	r0, [r5, #72]	@ movhi
 643:Core/Src/bms.c ****         bms->cellVolt[37] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2405              		.loc 1 643 0
 2406 0514 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2407 0516 1B02     		lsls	r3, r3, #8
 2408 0518 03F47063 		and	r3, r3, #3840
 2409 051c E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2410 051e 1844     		add	r0, r0, r3
 2411 0520 FFF7FEFF 		bl	__aeabi_i2d
 2412              	.LVL266:
 2413 0524 0022     		movs	r2, #0
 2414 0526 494B     		ldr	r3, .L181
 2415 0528 FFF7FEFF 		bl	__aeabi_dmul
 2416              	.LVL267:
 2417 052c FFF7FEFF 		bl	__aeabi_d2uiz
 2418              	.LVL268:
 2419 0530 80B2     		uxth	r0, r0
 2420 0532 A5F84A00 		strh	r0, [r5, #74]	@ movhi
 644:Core/Src/bms.c ****         break;
 2421              		.loc 1 644 0
 2422 0536 38BD     		pop	{r3, r4, r5, pc}
 2423              	.LVL269:
 2424              	.L157:
 645:Core/Src/bms.c **** 
 646:Core/Src/bms.c ****     case 0x465:
 647:Core/Src/bms.c ****         bms->cellVolt[38] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2425              		.loc 1 647 0
 2426 0538 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2427 053a 1B02     		lsls	r3, r3, #8
 2428 053c 03F47063 		and	r3, r3, #3840
 2429 0540 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2430              	.LVL270:
 2431 0542 1844     		add	r0, r0, r3
 2432 0544 FFF7FEFF 		bl	__aeabi_i2d
 2433              	.LVL271:
 2434 0548 0022     		movs	r2, #0
 2435 054a 404B     		ldr	r3, .L181
 2436 054c FFF7FEFF 		bl	__aeabi_dmul
 2437              	.LVL272:
 2438 0550 FFF7FEFF 		bl	__aeabi_d2uiz
 2439              	.LVL273:
 2440 0554 80B2     		uxth	r0, r0
 2441 0556 A5F84C00 		strh	r0, [r5, #76]	@ movhi
 648:Core/Src/bms.c ****         bms->cellVolt[39] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2442              		.loc 1 648 0
 2443 055a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2444 055c 1B02     		lsls	r3, r3, #8
 2445 055e 03F47063 		and	r3, r3, #3840
 2446 0562 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2447 0564 1844     		add	r0, r0, r3
 2448 0566 FFF7FEFF 		bl	__aeabi_i2d
 2449              	.LVL274:
 2450 056a 0022     		movs	r2, #0
 2451 056c 374B     		ldr	r3, .L181
 2452 056e FFF7FEFF 		bl	__aeabi_dmul
 2453              	.LVL275:
ARM GAS  /tmp/ccVfUIOB.s 			page 58


 2454 0572 FFF7FEFF 		bl	__aeabi_d2uiz
 2455              	.LVL276:
 2456 0576 80B2     		uxth	r0, r0
 2457 0578 A5F84E00 		strh	r0, [r5, #78]	@ movhi
 649:Core/Src/bms.c ****         bms->cellVolt[40] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2458              		.loc 1 649 0
 2459 057c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2460 057e 1B02     		lsls	r3, r3, #8
 2461 0580 03F47063 		and	r3, r3, #3840
 2462 0584 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2463 0586 1844     		add	r0, r0, r3
 2464 0588 FFF7FEFF 		bl	__aeabi_i2d
 2465              	.LVL277:
 2466 058c 0022     		movs	r2, #0
 2467 058e 2F4B     		ldr	r3, .L181
 2468 0590 FFF7FEFF 		bl	__aeabi_dmul
 2469              	.LVL278:
 2470 0594 FFF7FEFF 		bl	__aeabi_d2uiz
 2471              	.LVL279:
 2472 0598 80B2     		uxth	r0, r0
 2473 059a A5F85000 		strh	r0, [r5, #80]	@ movhi
 650:Core/Src/bms.c ****         bms->cellVolt[41] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2474              		.loc 1 650 0
 2475 059e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2476 05a0 1B02     		lsls	r3, r3, #8
 2477 05a2 03F47063 		and	r3, r3, #3840
 2478 05a6 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2479 05a8 1844     		add	r0, r0, r3
 2480 05aa FFF7FEFF 		bl	__aeabi_i2d
 2481              	.LVL280:
 2482 05ae 0022     		movs	r2, #0
 2483 05b0 264B     		ldr	r3, .L181
 2484 05b2 FFF7FEFF 		bl	__aeabi_dmul
 2485              	.LVL281:
 2486 05b6 FFF7FEFF 		bl	__aeabi_d2uiz
 2487              	.LVL282:
 2488 05ba 80B2     		uxth	r0, r0
 2489 05bc A5F85200 		strh	r0, [r5, #82]	@ movhi
 651:Core/Src/bms.c ****         break;
 2490              		.loc 1 651 0
 2491 05c0 38BD     		pop	{r3, r4, r5, pc}
 2492              	.LVL283:
 2493              	.L170:
 652:Core/Src/bms.c **** 
 653:Core/Src/bms.c ****     case 0x475:
 654:Core/Src/bms.c ****         bms->cellVolt[42] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2494              		.loc 1 654 0
 2495 05c2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2496 05c4 1B02     		lsls	r3, r3, #8
 2497 05c6 03F47063 		and	r3, r3, #3840
 2498 05ca 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2499              	.LVL284:
 2500 05cc 1844     		add	r0, r0, r3
 2501 05ce FFF7FEFF 		bl	__aeabi_i2d
 2502              	.LVL285:
 2503 05d2 0022     		movs	r2, #0
 2504 05d4 1D4B     		ldr	r3, .L181
ARM GAS  /tmp/ccVfUIOB.s 			page 59


 2505 05d6 FFF7FEFF 		bl	__aeabi_dmul
 2506              	.LVL286:
 2507 05da FFF7FEFF 		bl	__aeabi_d2uiz
 2508              	.LVL287:
 2509 05de 80B2     		uxth	r0, r0
 2510 05e0 A5F85400 		strh	r0, [r5, #84]	@ movhi
 655:Core/Src/bms.c ****         bms->cellVolt[43] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2511              		.loc 1 655 0
 2512 05e4 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2513 05e6 1B02     		lsls	r3, r3, #8
 2514 05e8 03F47063 		and	r3, r3, #3840
 2515 05ec E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2516 05ee 1844     		add	r0, r0, r3
 2517 05f0 FFF7FEFF 		bl	__aeabi_i2d
 2518              	.LVL288:
 2519 05f4 0022     		movs	r2, #0
 2520 05f6 154B     		ldr	r3, .L181
 2521 05f8 FFF7FEFF 		bl	__aeabi_dmul
 2522              	.LVL289:
 2523 05fc FFF7FEFF 		bl	__aeabi_d2uiz
 2524              	.LVL290:
 2525 0600 80B2     		uxth	r0, r0
 2526 0602 A5F85600 		strh	r0, [r5, #86]	@ movhi
 656:Core/Src/bms.c ****         bms->cellVolt[44] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2527              		.loc 1 656 0
 2528 0606 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2529 0608 1B02     		lsls	r3, r3, #8
 2530 060a 03F47063 		and	r3, r3, #3840
 2531 060e 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2532 0610 1844     		add	r0, r0, r3
 2533 0612 FFF7FEFF 		bl	__aeabi_i2d
 2534              	.LVL291:
 2535 0616 0022     		movs	r2, #0
 2536 0618 0C4B     		ldr	r3, .L181
 2537 061a FFF7FEFF 		bl	__aeabi_dmul
 2538              	.LVL292:
 2539 061e FFF7FEFF 		bl	__aeabi_d2uiz
 2540              	.LVL293:
 2541 0622 80B2     		uxth	r0, r0
 2542 0624 A5F85800 		strh	r0, [r5, #88]	@ movhi
 657:Core/Src/bms.c ****         bms->cellVolt[45] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2543              		.loc 1 657 0
 2544 0628 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2545 062a 1B02     		lsls	r3, r3, #8
 2546 062c 03F47063 		and	r3, r3, #3840
 2547 0630 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2548 0632 1844     		add	r0, r0, r3
 2549 0634 FFF7FEFF 		bl	__aeabi_i2d
 2550              	.LVL294:
 2551 0638 0022     		movs	r2, #0
 2552 063a 044B     		ldr	r3, .L181
 2553 063c FFF7FEFF 		bl	__aeabi_dmul
 2554              	.LVL295:
 2555 0640 FFF7FEFF 		bl	__aeabi_d2uiz
 2556              	.LVL296:
 2557 0644 80B2     		uxth	r0, r0
 2558 0646 A5F85A00 		strh	r0, [r5, #90]	@ movhi
ARM GAS  /tmp/ccVfUIOB.s 			page 60


 658:Core/Src/bms.c ****         break;
 2559              		.loc 1 658 0
 2560 064a 38BD     		pop	{r3, r4, r5, pc}
 2561              	.LVL297:
 2562              	.L182:
 2563              		.align	2
 2564              	.L181:
 2565 064c 0000F43F 		.word	1072955392
 2566              	.LVL298:
 2567              	.L158:
 659:Core/Src/bms.c **** 
 660:Core/Src/bms.c ****     case 0x466:
 661:Core/Src/bms.c ****         bms->cellVolt[46] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2568              		.loc 1 661 0
 2569 0650 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2570 0652 1B02     		lsls	r3, r3, #8
 2571 0654 03F47063 		and	r3, r3, #3840
 2572 0658 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2573              	.LVL299:
 2574 065a 1844     		add	r0, r0, r3
 2575 065c FFF7FEFF 		bl	__aeabi_i2d
 2576              	.LVL300:
 2577 0660 0022     		movs	r2, #0
 2578 0662 CA4B     		ldr	r3, .L183
 2579 0664 FFF7FEFF 		bl	__aeabi_dmul
 2580              	.LVL301:
 2581 0668 FFF7FEFF 		bl	__aeabi_d2uiz
 2582              	.LVL302:
 2583 066c 80B2     		uxth	r0, r0
 2584 066e A5F85C00 		strh	r0, [r5, #92]	@ movhi
 662:Core/Src/bms.c ****         bms->cellVolt[47] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2585              		.loc 1 662 0
 2586 0672 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2587 0674 1B02     		lsls	r3, r3, #8
 2588 0676 03F47063 		and	r3, r3, #3840
 2589 067a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2590 067c 1844     		add	r0, r0, r3
 2591 067e FFF7FEFF 		bl	__aeabi_i2d
 2592              	.LVL303:
 2593 0682 0022     		movs	r2, #0
 2594 0684 C14B     		ldr	r3, .L183
 2595 0686 FFF7FEFF 		bl	__aeabi_dmul
 2596              	.LVL304:
 2597 068a FFF7FEFF 		bl	__aeabi_d2uiz
 2598              	.LVL305:
 2599 068e 80B2     		uxth	r0, r0
 2600 0690 A5F85E00 		strh	r0, [r5, #94]	@ movhi
 663:Core/Src/bms.c ****         bms->cellVolt[48] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2601              		.loc 1 663 0
 2602 0694 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2603 0696 1B02     		lsls	r3, r3, #8
 2604 0698 03F47063 		and	r3, r3, #3840
 2605 069c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2606 069e 1844     		add	r0, r0, r3
 2607 06a0 FFF7FEFF 		bl	__aeabi_i2d
 2608              	.LVL306:
 2609 06a4 0022     		movs	r2, #0
ARM GAS  /tmp/ccVfUIOB.s 			page 61


 2610 06a6 B94B     		ldr	r3, .L183
 2611 06a8 FFF7FEFF 		bl	__aeabi_dmul
 2612              	.LVL307:
 2613 06ac FFF7FEFF 		bl	__aeabi_d2uiz
 2614              	.LVL308:
 2615 06b0 80B2     		uxth	r0, r0
 2616 06b2 A5F86000 		strh	r0, [r5, #96]	@ movhi
 664:Core/Src/bms.c ****         bms->cellVolt[49] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2617              		.loc 1 664 0
 2618 06b6 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2619 06b8 1B02     		lsls	r3, r3, #8
 2620 06ba 03F47063 		and	r3, r3, #3840
 2621 06be E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2622 06c0 1844     		add	r0, r0, r3
 2623 06c2 FFF7FEFF 		bl	__aeabi_i2d
 2624              	.LVL309:
 2625 06c6 0022     		movs	r2, #0
 2626 06c8 B04B     		ldr	r3, .L183
 2627 06ca FFF7FEFF 		bl	__aeabi_dmul
 2628              	.LVL310:
 2629 06ce FFF7FEFF 		bl	__aeabi_d2uiz
 2630              	.LVL311:
 2631 06d2 80B2     		uxth	r0, r0
 2632 06d4 A5F86200 		strh	r0, [r5, #98]	@ movhi
 665:Core/Src/bms.c ****         break;
 2633              		.loc 1 665 0
 2634 06d8 38BD     		pop	{r3, r4, r5, pc}
 2635              	.LVL312:
 2636              	.L171:
 666:Core/Src/bms.c **** 
 667:Core/Src/bms.c ****     case 0x476:
 668:Core/Src/bms.c ****         bms->cellVolt[50] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2637              		.loc 1 668 0
 2638 06da 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2639 06dc 1B02     		lsls	r3, r3, #8
 2640 06de 03F47063 		and	r3, r3, #3840
 2641 06e2 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2642              	.LVL313:
 2643 06e4 1844     		add	r0, r0, r3
 2644 06e6 FFF7FEFF 		bl	__aeabi_i2d
 2645              	.LVL314:
 2646 06ea 0022     		movs	r2, #0
 2647 06ec A74B     		ldr	r3, .L183
 2648 06ee FFF7FEFF 		bl	__aeabi_dmul
 2649              	.LVL315:
 2650 06f2 FFF7FEFF 		bl	__aeabi_d2uiz
 2651              	.LVL316:
 2652 06f6 80B2     		uxth	r0, r0
 2653 06f8 A5F86400 		strh	r0, [r5, #100]	@ movhi
 669:Core/Src/bms.c ****         bms->cellVolt[51] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2654              		.loc 1 669 0
 2655 06fc A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2656 06fe 1B02     		lsls	r3, r3, #8
 2657 0700 03F47063 		and	r3, r3, #3840
 2658 0704 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2659 0706 1844     		add	r0, r0, r3
 2660 0708 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccVfUIOB.s 			page 62


 2661              	.LVL317:
 2662 070c 0022     		movs	r2, #0
 2663 070e 9F4B     		ldr	r3, .L183
 2664 0710 FFF7FEFF 		bl	__aeabi_dmul
 2665              	.LVL318:
 2666 0714 FFF7FEFF 		bl	__aeabi_d2uiz
 2667              	.LVL319:
 2668 0718 80B2     		uxth	r0, r0
 2669 071a A5F86600 		strh	r0, [r5, #102]	@ movhi
 670:Core/Src/bms.c ****         bms->cellVolt[52] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2670              		.loc 1 670 0
 2671 071e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2672 0720 1B02     		lsls	r3, r3, #8
 2673 0722 03F47063 		and	r3, r3, #3840
 2674 0726 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2675 0728 1844     		add	r0, r0, r3
 2676 072a FFF7FEFF 		bl	__aeabi_i2d
 2677              	.LVL320:
 2678 072e 0022     		movs	r2, #0
 2679 0730 964B     		ldr	r3, .L183
 2680 0732 FFF7FEFF 		bl	__aeabi_dmul
 2681              	.LVL321:
 2682 0736 FFF7FEFF 		bl	__aeabi_d2uiz
 2683              	.LVL322:
 2684 073a 80B2     		uxth	r0, r0
 2685 073c A5F86800 		strh	r0, [r5, #104]	@ movhi
 671:Core/Src/bms.c ****         bms->cellVolt[53] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2686              		.loc 1 671 0
 2687 0740 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2688 0742 1B02     		lsls	r3, r3, #8
 2689 0744 03F47063 		and	r3, r3, #3840
 2690 0748 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2691 074a 1844     		add	r0, r0, r3
 2692 074c FFF7FEFF 		bl	__aeabi_i2d
 2693              	.LVL323:
 2694 0750 0022     		movs	r2, #0
 2695 0752 8E4B     		ldr	r3, .L183
 2696 0754 FFF7FEFF 		bl	__aeabi_dmul
 2697              	.LVL324:
 2698 0758 FFF7FEFF 		bl	__aeabi_d2uiz
 2699              	.LVL325:
 2700 075c 80B2     		uxth	r0, r0
 2701 075e A5F86A00 		strh	r0, [r5, #106]	@ movhi
 672:Core/Src/bms.c ****         break;
 2702              		.loc 1 672 0
 2703 0762 38BD     		pop	{r3, r4, r5, pc}
 2704              	.LVL326:
 2705              	.L159:
 673:Core/Src/bms.c **** 
 674:Core/Src/bms.c ****     case 0x468:
 675:Core/Src/bms.c ****         bms->cellVolt[54] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 3
 2706              		.loc 1 675 0
 2707 0764 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2708 0766 1B02     		lsls	r3, r3, #8
 2709 0768 03F47063 		and	r3, r3, #3840
 2710 076c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2711              	.LVL327:
ARM GAS  /tmp/ccVfUIOB.s 			page 63


 2712 076e 1844     		add	r0, r0, r3
 2713 0770 FFF7FEFF 		bl	__aeabi_i2d
 2714              	.LVL328:
 2715 0774 0022     		movs	r2, #0
 2716 0776 854B     		ldr	r3, .L183
 2717 0778 FFF7FEFF 		bl	__aeabi_dmul
 2718              	.LVL329:
 2719 077c FFF7FEFF 		bl	__aeabi_d2uiz
 2720              	.LVL330:
 2721 0780 80B2     		uxth	r0, r0
 2722 0782 A5F86C00 		strh	r0, [r5, #108]	@ movhi
 676:Core/Src/bms.c ****         bms->cellVolt[55] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2723              		.loc 1 676 0
 2724 0786 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2725 0788 1B02     		lsls	r3, r3, #8
 2726 078a 03F47063 		and	r3, r3, #3840
 2727 078e E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2728 0790 1844     		add	r0, r0, r3
 2729 0792 FFF7FEFF 		bl	__aeabi_i2d
 2730              	.LVL331:
 2731 0796 0022     		movs	r2, #0
 2732 0798 7C4B     		ldr	r3, .L183
 2733 079a FFF7FEFF 		bl	__aeabi_dmul
 2734              	.LVL332:
 2735 079e FFF7FEFF 		bl	__aeabi_d2uiz
 2736              	.LVL333:
 2737 07a2 80B2     		uxth	r0, r0
 2738 07a4 A5F86E00 		strh	r0, [r5, #110]	@ movhi
 677:Core/Src/bms.c ****         bms->cellVolt[56] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2739              		.loc 1 677 0
 2740 07a8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2741 07aa 1B02     		lsls	r3, r3, #8
 2742 07ac 03F47063 		and	r3, r3, #3840
 2743 07b0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2744 07b2 1844     		add	r0, r0, r3
 2745 07b4 FFF7FEFF 		bl	__aeabi_i2d
 2746              	.LVL334:
 2747 07b8 0022     		movs	r2, #0
 2748 07ba 744B     		ldr	r3, .L183
 2749 07bc FFF7FEFF 		bl	__aeabi_dmul
 2750              	.LVL335:
 2751 07c0 FFF7FEFF 		bl	__aeabi_d2uiz
 2752              	.LVL336:
 2753 07c4 80B2     		uxth	r0, r0
 2754 07c6 A5F87000 		strh	r0, [r5, #112]	@ movhi
 678:Core/Src/bms.c ****         bms->cellVolt[57] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2755              		.loc 1 678 0
 2756 07ca A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2757 07cc 1B02     		lsls	r3, r3, #8
 2758 07ce 03F47063 		and	r3, r3, #3840
 2759 07d2 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2760 07d4 1844     		add	r0, r0, r3
 2761 07d6 FFF7FEFF 		bl	__aeabi_i2d
 2762              	.LVL337:
 2763 07da 0022     		movs	r2, #0
 2764 07dc 6B4B     		ldr	r3, .L183
 2765 07de FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccVfUIOB.s 			page 64


 2766              	.LVL338:
 2767 07e2 FFF7FEFF 		bl	__aeabi_d2uiz
 2768              	.LVL339:
 2769 07e6 80B2     		uxth	r0, r0
 2770 07e8 A5F87200 		strh	r0, [r5, #114]	@ movhi
 679:Core/Src/bms.c ****         break;
 2771              		.loc 1 679 0
 2772 07ec 38BD     		pop	{r3, r4, r5, pc}
 2773              	.LVL340:
 2774              	.L172:
 680:Core/Src/bms.c **** 
 681:Core/Src/bms.c ****     case 0x478:
 682:Core/Src/bms.c ****         bms->cellVolt[58] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2775              		.loc 1 682 0
 2776 07ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2777 07f0 1B02     		lsls	r3, r3, #8
 2778 07f2 03F47063 		and	r3, r3, #3840
 2779 07f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2780              	.LVL341:
 2781 07f8 1844     		add	r0, r0, r3
 2782 07fa FFF7FEFF 		bl	__aeabi_i2d
 2783              	.LVL342:
 2784 07fe 0022     		movs	r2, #0
 2785 0800 624B     		ldr	r3, .L183
 2786 0802 FFF7FEFF 		bl	__aeabi_dmul
 2787              	.LVL343:
 2788 0806 FFF7FEFF 		bl	__aeabi_d2uiz
 2789              	.LVL344:
 2790 080a 80B2     		uxth	r0, r0
 2791 080c A5F87400 		strh	r0, [r5, #116]	@ movhi
 683:Core/Src/bms.c ****         bms->cellVolt[59] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2792              		.loc 1 683 0
 2793 0810 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2794 0812 1B02     		lsls	r3, r3, #8
 2795 0814 03F47063 		and	r3, r3, #3840
 2796 0818 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2797 081a 1844     		add	r0, r0, r3
 2798 081c FFF7FEFF 		bl	__aeabi_i2d
 2799              	.LVL345:
 2800 0820 0022     		movs	r2, #0
 2801 0822 5A4B     		ldr	r3, .L183
 2802 0824 FFF7FEFF 		bl	__aeabi_dmul
 2803              	.LVL346:
 2804 0828 FFF7FEFF 		bl	__aeabi_d2uiz
 2805              	.LVL347:
 2806 082c 80B2     		uxth	r0, r0
 2807 082e A5F87600 		strh	r0, [r5, #118]	@ movhi
 684:Core/Src/bms.c ****         bms->cellVolt[60] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2808              		.loc 1 684 0
 2809 0832 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2810 0834 1B02     		lsls	r3, r3, #8
 2811 0836 03F47063 		and	r3, r3, #3840
 2812 083a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2813 083c 1844     		add	r0, r0, r3
 2814 083e FFF7FEFF 		bl	__aeabi_i2d
 2815              	.LVL348:
 2816 0842 0022     		movs	r2, #0
ARM GAS  /tmp/ccVfUIOB.s 			page 65


 2817 0844 514B     		ldr	r3, .L183
 2818 0846 FFF7FEFF 		bl	__aeabi_dmul
 2819              	.LVL349:
 2820 084a FFF7FEFF 		bl	__aeabi_d2uiz
 2821              	.LVL350:
 2822 084e 80B2     		uxth	r0, r0
 2823 0850 A5F87800 		strh	r0, [r5, #120]	@ movhi
 685:Core/Src/bms.c ****         bms->cellVolt[61] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2824              		.loc 1 685 0
 2825 0854 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2826 0856 1B02     		lsls	r3, r3, #8
 2827 0858 03F47063 		and	r3, r3, #3840
 2828 085c E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2829 085e 1844     		add	r0, r0, r3
 2830 0860 FFF7FEFF 		bl	__aeabi_i2d
 2831              	.LVL351:
 2832 0864 0022     		movs	r2, #0
 2833 0866 494B     		ldr	r3, .L183
 2834 0868 FFF7FEFF 		bl	__aeabi_dmul
 2835              	.LVL352:
 2836 086c FFF7FEFF 		bl	__aeabi_d2uiz
 2837              	.LVL353:
 2838 0870 80B2     		uxth	r0, r0
 2839 0872 A5F87A00 		strh	r0, [r5, #122]	@ movhi
 686:Core/Src/bms.c ****         break;
 2840              		.loc 1 686 0
 2841 0876 38BD     		pop	{r3, r4, r5, pc}
 2842              	.LVL354:
 2843              	.L160:
 687:Core/Src/bms.c **** 
 688:Core/Src/bms.c ****     case 0x469:
 689:Core/Src/bms.c ****         bms->cellVolt[62] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2844              		.loc 1 689 0
 2845 0878 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2846 087a 1B02     		lsls	r3, r3, #8
 2847 087c 03F47063 		and	r3, r3, #3840
 2848 0880 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2849              	.LVL355:
 2850 0882 1844     		add	r0, r0, r3
 2851 0884 FFF7FEFF 		bl	__aeabi_i2d
 2852              	.LVL356:
 2853 0888 0022     		movs	r2, #0
 2854 088a 404B     		ldr	r3, .L183
 2855 088c FFF7FEFF 		bl	__aeabi_dmul
 2856              	.LVL357:
 2857 0890 FFF7FEFF 		bl	__aeabi_d2uiz
 2858              	.LVL358:
 2859 0894 80B2     		uxth	r0, r0
 2860 0896 A5F87C00 		strh	r0, [r5, #124]	@ movhi
 690:Core/Src/bms.c ****         bms->cellVolt[63] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2861              		.loc 1 690 0
 2862 089a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2863 089c 1B02     		lsls	r3, r3, #8
 2864 089e 03F47063 		and	r3, r3, #3840
 2865 08a2 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2866 08a4 1844     		add	r0, r0, r3
 2867 08a6 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccVfUIOB.s 			page 66


 2868              	.LVL359:
 2869 08aa 0022     		movs	r2, #0
 2870 08ac 374B     		ldr	r3, .L183
 2871 08ae FFF7FEFF 		bl	__aeabi_dmul
 2872              	.LVL360:
 2873 08b2 FFF7FEFF 		bl	__aeabi_d2uiz
 2874              	.LVL361:
 2875 08b6 80B2     		uxth	r0, r0
 2876 08b8 A5F87E00 		strh	r0, [r5, #126]	@ movhi
 691:Core/Src/bms.c ****         bms->cellVolt[64] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2877              		.loc 1 691 0
 2878 08bc 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2879 08be 1B02     		lsls	r3, r3, #8
 2880 08c0 03F47063 		and	r3, r3, #3840
 2881 08c4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2882 08c6 1844     		add	r0, r0, r3
 2883 08c8 FFF7FEFF 		bl	__aeabi_i2d
 2884              	.LVL362:
 2885 08cc 0022     		movs	r2, #0
 2886 08ce 2F4B     		ldr	r3, .L183
 2887 08d0 FFF7FEFF 		bl	__aeabi_dmul
 2888              	.LVL363:
 2889 08d4 FFF7FEFF 		bl	__aeabi_d2uiz
 2890              	.LVL364:
 2891 08d8 80B2     		uxth	r0, r0
 2892 08da A5F88000 		strh	r0, [r5, #128]	@ movhi
 692:Core/Src/bms.c ****         bms->cellVolt[65] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2893              		.loc 1 692 0
 2894 08de A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2895 08e0 1B02     		lsls	r3, r3, #8
 2896 08e2 03F47063 		and	r3, r3, #3840
 2897 08e6 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2898 08e8 1844     		add	r0, r0, r3
 2899 08ea FFF7FEFF 		bl	__aeabi_i2d
 2900              	.LVL365:
 2901 08ee 0022     		movs	r2, #0
 2902 08f0 264B     		ldr	r3, .L183
 2903 08f2 FFF7FEFF 		bl	__aeabi_dmul
 2904              	.LVL366:
 2905 08f6 FFF7FEFF 		bl	__aeabi_d2uiz
 2906              	.LVL367:
 2907 08fa 80B2     		uxth	r0, r0
 2908 08fc A5F88200 		strh	r0, [r5, #130]	@ movhi
 693:Core/Src/bms.c ****         break;
 2909              		.loc 1 693 0
 2910 0900 38BD     		pop	{r3, r4, r5, pc}
 2911              	.LVL368:
 2912              	.L173:
 694:Core/Src/bms.c **** 
 695:Core/Src/bms.c ****     case 0x479:
 696:Core/Src/bms.c ****         bms->cellVolt[66] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2913              		.loc 1 696 0
 2914 0902 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2915 0904 1B02     		lsls	r3, r3, #8
 2916 0906 03F47063 		and	r3, r3, #3840
 2917 090a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2918              	.LVL369:
ARM GAS  /tmp/ccVfUIOB.s 			page 67


 2919 090c 1844     		add	r0, r0, r3
 2920 090e FFF7FEFF 		bl	__aeabi_i2d
 2921              	.LVL370:
 2922 0912 0022     		movs	r2, #0
 2923 0914 1D4B     		ldr	r3, .L183
 2924 0916 FFF7FEFF 		bl	__aeabi_dmul
 2925              	.LVL371:
 2926 091a FFF7FEFF 		bl	__aeabi_d2uiz
 2927              	.LVL372:
 2928 091e 80B2     		uxth	r0, r0
 2929 0920 A5F88400 		strh	r0, [r5, #132]	@ movhi
 697:Core/Src/bms.c ****         bms->cellVolt[67] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2930              		.loc 1 697 0
 2931 0924 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2932 0926 1B02     		lsls	r3, r3, #8
 2933 0928 03F47063 		and	r3, r3, #3840
 2934 092c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2935 092e 1844     		add	r0, r0, r3
 2936 0930 FFF7FEFF 		bl	__aeabi_i2d
 2937              	.LVL373:
 2938 0934 0022     		movs	r2, #0
 2939 0936 154B     		ldr	r3, .L183
 2940 0938 FFF7FEFF 		bl	__aeabi_dmul
 2941              	.LVL374:
 2942 093c FFF7FEFF 		bl	__aeabi_d2uiz
 2943              	.LVL375:
 2944 0940 80B2     		uxth	r0, r0
 2945 0942 A5F88600 		strh	r0, [r5, #134]	@ movhi
 698:Core/Src/bms.c ****         bms->cellVolt[68] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2946              		.loc 1 698 0
 2947 0946 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2948 0948 1B02     		lsls	r3, r3, #8
 2949 094a 03F47063 		and	r3, r3, #3840
 2950 094e 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2951 0950 1844     		add	r0, r0, r3
 2952 0952 FFF7FEFF 		bl	__aeabi_i2d
 2953              	.LVL376:
 2954 0956 0022     		movs	r2, #0
 2955 0958 0C4B     		ldr	r3, .L183
 2956 095a FFF7FEFF 		bl	__aeabi_dmul
 2957              	.LVL377:
 2958 095e FFF7FEFF 		bl	__aeabi_d2uiz
 2959              	.LVL378:
 2960 0962 80B2     		uxth	r0, r0
 2961 0964 A5F88800 		strh	r0, [r5, #136]	@ movhi
 699:Core/Src/bms.c ****         bms->cellVolt[69] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2962              		.loc 1 699 0
 2963 0968 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2964 096a 1B02     		lsls	r3, r3, #8
 2965 096c 03F47063 		and	r3, r3, #3840
 2966 0970 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2967 0972 1844     		add	r0, r0, r3
 2968 0974 FFF7FEFF 		bl	__aeabi_i2d
 2969              	.LVL379:
 2970 0978 0022     		movs	r2, #0
 2971 097a 044B     		ldr	r3, .L183
 2972 097c FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccVfUIOB.s 			page 68


 2973              	.LVL380:
 2974 0980 FFF7FEFF 		bl	__aeabi_d2uiz
 2975              	.LVL381:
 2976 0984 80B2     		uxth	r0, r0
 2977 0986 A5F88A00 		strh	r0, [r5, #138]	@ movhi
 700:Core/Src/bms.c ****         break;
 2978              		.loc 1 700 0
 2979 098a 38BD     		pop	{r3, r4, r5, pc}
 2980              	.LVL382:
 2981              	.L184:
 2982              		.align	2
 2983              	.L183:
 2984 098c 0000F43F 		.word	1072955392
 2985              	.LVL383:
 2986              	.L161:
 701:Core/Src/bms.c **** 
 702:Core/Src/bms.c ****     case 0x46A:
 703:Core/Src/bms.c ****         bms->cellVolt[70] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2987              		.loc 1 703 0
 2988 0990 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2989 0992 1B02     		lsls	r3, r3, #8
 2990 0994 03F47063 		and	r3, r3, #3840
 2991 0998 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2992              	.LVL384:
 2993 099a 1844     		add	r0, r0, r3
 2994 099c FFF7FEFF 		bl	__aeabi_i2d
 2995              	.LVL385:
 2996 09a0 0022     		movs	r2, #0
 2997 09a2 C24B     		ldr	r3, .L185
 2998 09a4 FFF7FEFF 		bl	__aeabi_dmul
 2999              	.LVL386:
 3000 09a8 FFF7FEFF 		bl	__aeabi_d2uiz
 3001              	.LVL387:
 3002 09ac 80B2     		uxth	r0, r0
 3003 09ae A5F88C00 		strh	r0, [r5, #140]	@ movhi
 704:Core/Src/bms.c ****         bms->cellVolt[71] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3004              		.loc 1 704 0
 3005 09b2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3006 09b4 1B02     		lsls	r3, r3, #8
 3007 09b6 03F47063 		and	r3, r3, #3840
 3008 09ba E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3009 09bc 1844     		add	r0, r0, r3
 3010 09be FFF7FEFF 		bl	__aeabi_i2d
 3011              	.LVL388:
 3012 09c2 0022     		movs	r2, #0
 3013 09c4 B94B     		ldr	r3, .L185
 3014 09c6 FFF7FEFF 		bl	__aeabi_dmul
 3015              	.LVL389:
 3016 09ca FFF7FEFF 		bl	__aeabi_d2uiz
 3017              	.LVL390:
 3018 09ce 80B2     		uxth	r0, r0
 3019 09d0 A5F88E00 		strh	r0, [r5, #142]	@ movhi
 705:Core/Src/bms.c ****         bms->cellVolt[72] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3020              		.loc 1 705 0
 3021 09d4 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3022 09d6 1B02     		lsls	r3, r3, #8
 3023 09d8 03F47063 		and	r3, r3, #3840
ARM GAS  /tmp/ccVfUIOB.s 			page 69


 3024 09dc 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3025 09de 1844     		add	r0, r0, r3
 3026 09e0 FFF7FEFF 		bl	__aeabi_i2d
 3027              	.LVL391:
 3028 09e4 0022     		movs	r2, #0
 3029 09e6 B14B     		ldr	r3, .L185
 3030 09e8 FFF7FEFF 		bl	__aeabi_dmul
 3031              	.LVL392:
 3032 09ec FFF7FEFF 		bl	__aeabi_d2uiz
 3033              	.LVL393:
 3034 09f0 80B2     		uxth	r0, r0
 3035 09f2 A5F89000 		strh	r0, [r5, #144]	@ movhi
 706:Core/Src/bms.c ****         bms->cellVolt[73] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 3036              		.loc 1 706 0
 3037 09f6 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3038 09f8 1B02     		lsls	r3, r3, #8
 3039 09fa 03F47063 		and	r3, r3, #3840
 3040 09fe E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 3041 0a00 1844     		add	r0, r0, r3
 3042 0a02 FFF7FEFF 		bl	__aeabi_i2d
 3043              	.LVL394:
 3044 0a06 0022     		movs	r2, #0
 3045 0a08 A84B     		ldr	r3, .L185
 3046 0a0a FFF7FEFF 		bl	__aeabi_dmul
 3047              	.LVL395:
 3048 0a0e FFF7FEFF 		bl	__aeabi_d2uiz
 3049              	.LVL396:
 3050 0a12 80B2     		uxth	r0, r0
 3051 0a14 A5F89200 		strh	r0, [r5, #146]	@ movhi
 707:Core/Src/bms.c ****         break;
 3052              		.loc 1 707 0
 3053 0a18 38BD     		pop	{r3, r4, r5, pc}
 3054              	.LVL397:
 3055              	.L174:
 708:Core/Src/bms.c **** 
 709:Core/Src/bms.c ****     case 0x47A:
 710:Core/Src/bms.c ****         bms->cellVolt[74] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3056              		.loc 1 710 0
 3057 0a1a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3058 0a1c 1B02     		lsls	r3, r3, #8
 3059 0a1e 03F47063 		and	r3, r3, #3840
 3060 0a22 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3061              	.LVL398:
 3062 0a24 1844     		add	r0, r0, r3
 3063 0a26 FFF7FEFF 		bl	__aeabi_i2d
 3064              	.LVL399:
 3065 0a2a 0022     		movs	r2, #0
 3066 0a2c 9F4B     		ldr	r3, .L185
 3067 0a2e FFF7FEFF 		bl	__aeabi_dmul
 3068              	.LVL400:
 3069 0a32 FFF7FEFF 		bl	__aeabi_d2uiz
 3070              	.LVL401:
 3071 0a36 80B2     		uxth	r0, r0
 3072 0a38 A5F89400 		strh	r0, [r5, #148]	@ movhi
 711:Core/Src/bms.c ****         bms->cellVolt[75] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3073              		.loc 1 711 0
 3074 0a3c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
ARM GAS  /tmp/ccVfUIOB.s 			page 70


 3075 0a3e 1B02     		lsls	r3, r3, #8
 3076 0a40 03F47063 		and	r3, r3, #3840
 3077 0a44 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3078 0a46 1844     		add	r0, r0, r3
 3079 0a48 FFF7FEFF 		bl	__aeabi_i2d
 3080              	.LVL402:
 3081 0a4c 0022     		movs	r2, #0
 3082 0a4e 974B     		ldr	r3, .L185
 3083 0a50 FFF7FEFF 		bl	__aeabi_dmul
 3084              	.LVL403:
 3085 0a54 FFF7FEFF 		bl	__aeabi_d2uiz
 3086              	.LVL404:
 3087 0a58 80B2     		uxth	r0, r0
 3088 0a5a A5F89600 		strh	r0, [r5, #150]	@ movhi
 712:Core/Src/bms.c ****         bms->cellVolt[76] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3089              		.loc 1 712 0
 3090 0a5e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3091 0a60 1B02     		lsls	r3, r3, #8
 3092 0a62 03F47063 		and	r3, r3, #3840
 3093 0a66 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3094 0a68 1844     		add	r0, r0, r3
 3095 0a6a FFF7FEFF 		bl	__aeabi_i2d
 3096              	.LVL405:
 3097 0a6e 0022     		movs	r2, #0
 3098 0a70 8E4B     		ldr	r3, .L185
 3099 0a72 FFF7FEFF 		bl	__aeabi_dmul
 3100              	.LVL406:
 3101 0a76 FFF7FEFF 		bl	__aeabi_d2uiz
 3102              	.LVL407:
 3103 0a7a 80B2     		uxth	r0, r0
 3104 0a7c A5F89800 		strh	r0, [r5, #152]	@ movhi
 713:Core/Src/bms.c ****         bms->cellVolt[77] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 3105              		.loc 1 713 0
 3106 0a80 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3107 0a82 1B02     		lsls	r3, r3, #8
 3108 0a84 03F47063 		and	r3, r3, #3840
 3109 0a88 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 3110 0a8a 1844     		add	r0, r0, r3
 3111 0a8c FFF7FEFF 		bl	__aeabi_i2d
 3112              	.LVL408:
 3113 0a90 0022     		movs	r2, #0
 3114 0a92 864B     		ldr	r3, .L185
 3115 0a94 FFF7FEFF 		bl	__aeabi_dmul
 3116              	.LVL409:
 3117 0a98 FFF7FEFF 		bl	__aeabi_d2uiz
 3118              	.LVL410:
 3119 0a9c 80B2     		uxth	r0, r0
 3120 0a9e A5F89A00 		strh	r0, [r5, #154]	@ movhi
 714:Core/Src/bms.c ****         break;
 3121              		.loc 1 714 0
 3122 0aa2 38BD     		pop	{r3, r4, r5, pc}
 3123              	.LVL411:
 3124              	.L162:
 715:Core/Src/bms.c **** 
 716:Core/Src/bms.c ****     case 0x46C:
 717:Core/Src/bms.c ****         bms->cellVolt[78] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 4
 3125              		.loc 1 717 0
ARM GAS  /tmp/ccVfUIOB.s 			page 71


 3126 0aa4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3127 0aa6 1B02     		lsls	r3, r3, #8
 3128 0aa8 03F47063 		and	r3, r3, #3840
 3129 0aac 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3130              	.LVL412:
 3131 0aae 1844     		add	r0, r0, r3
 3132 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 3133              	.LVL413:
 3134 0ab4 0022     		movs	r2, #0
 3135 0ab6 7D4B     		ldr	r3, .L185
 3136 0ab8 FFF7FEFF 		bl	__aeabi_dmul
 3137              	.LVL414:
 3138 0abc FFF7FEFF 		bl	__aeabi_d2uiz
 3139              	.LVL415:
 3140 0ac0 80B2     		uxth	r0, r0
 3141 0ac2 A5F89C00 		strh	r0, [r5, #156]	@ movhi
 718:Core/Src/bms.c ****         bms->cellVolt[79] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3142              		.loc 1 718 0
 3143 0ac6 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3144 0ac8 1B02     		lsls	r3, r3, #8
 3145 0aca 03F47063 		and	r3, r3, #3840
 3146 0ace E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3147 0ad0 1844     		add	r0, r0, r3
 3148 0ad2 FFF7FEFF 		bl	__aeabi_i2d
 3149              	.LVL416:
 3150 0ad6 0022     		movs	r2, #0
 3151 0ad8 744B     		ldr	r3, .L185
 3152 0ada FFF7FEFF 		bl	__aeabi_dmul
 3153              	.LVL417:
 3154 0ade FFF7FEFF 		bl	__aeabi_d2uiz
 3155              	.LVL418:
 3156 0ae2 80B2     		uxth	r0, r0
 3157 0ae4 A5F89E00 		strh	r0, [r5, #158]	@ movhi
 719:Core/Src/bms.c ****         bms->cellVolt[80] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3158              		.loc 1 719 0
 3159 0ae8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3160 0aea 1B02     		lsls	r3, r3, #8
 3161 0aec 03F47063 		and	r3, r3, #3840
 3162 0af0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3163 0af2 1844     		add	r0, r0, r3
 3164 0af4 FFF7FEFF 		bl	__aeabi_i2d
 3165              	.LVL419:
 3166 0af8 0022     		movs	r2, #0
 3167 0afa 6C4B     		ldr	r3, .L185
 3168 0afc FFF7FEFF 		bl	__aeabi_dmul
 3169              	.LVL420:
 3170 0b00 FFF7FEFF 		bl	__aeabi_d2uiz
 3171              	.LVL421:
 3172 0b04 80B2     		uxth	r0, r0
 3173 0b06 A5F8A000 		strh	r0, [r5, #160]	@ movhi
 720:Core/Src/bms.c ****         break;
 3174              		.loc 1 720 0
 3175 0b0a 38BD     		pop	{r3, r4, r5, pc}
 3176              	.LVL422:
 3177              	.L175:
 721:Core/Src/bms.c **** 
 722:Core/Src/bms.c ****     case 0x47C:
ARM GAS  /tmp/ccVfUIOB.s 			page 72


 723:Core/Src/bms.c ****         bms->cellVolt[81] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3178              		.loc 1 723 0
 3179 0b0c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3180 0b0e 1B02     		lsls	r3, r3, #8
 3181 0b10 03F47063 		and	r3, r3, #3840
 3182 0b14 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3183              	.LVL423:
 3184 0b16 1844     		add	r0, r0, r3
 3185 0b18 FFF7FEFF 		bl	__aeabi_i2d
 3186              	.LVL424:
 3187 0b1c 0022     		movs	r2, #0
 3188 0b1e 634B     		ldr	r3, .L185
 3189 0b20 FFF7FEFF 		bl	__aeabi_dmul
 3190              	.LVL425:
 3191 0b24 FFF7FEFF 		bl	__aeabi_d2uiz
 3192              	.LVL426:
 3193 0b28 80B2     		uxth	r0, r0
 3194 0b2a A5F8A200 		strh	r0, [r5, #162]	@ movhi
 724:Core/Src/bms.c ****         bms->cellVolt[82] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3195              		.loc 1 724 0
 3196 0b2e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3197 0b30 1B02     		lsls	r3, r3, #8
 3198 0b32 03F47063 		and	r3, r3, #3840
 3199 0b36 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3200 0b38 1844     		add	r0, r0, r3
 3201 0b3a FFF7FEFF 		bl	__aeabi_i2d
 3202              	.LVL427:
 3203 0b3e 0022     		movs	r2, #0
 3204 0b40 5A4B     		ldr	r3, .L185
 3205 0b42 FFF7FEFF 		bl	__aeabi_dmul
 3206              	.LVL428:
 3207 0b46 FFF7FEFF 		bl	__aeabi_d2uiz
 3208              	.LVL429:
 3209 0b4a 80B2     		uxth	r0, r0
 3210 0b4c A5F8A400 		strh	r0, [r5, #164]	@ movhi
 725:Core/Src/bms.c ****         bms->cellVolt[83] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3211              		.loc 1 725 0
 3212 0b50 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3213 0b52 1B02     		lsls	r3, r3, #8
 3214 0b54 03F47063 		and	r3, r3, #3840
 3215 0b58 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3216 0b5a 1844     		add	r0, r0, r3
 3217 0b5c FFF7FEFF 		bl	__aeabi_i2d
 3218              	.LVL430:
 3219 0b60 0022     		movs	r2, #0
 3220 0b62 524B     		ldr	r3, .L185
 3221 0b64 FFF7FEFF 		bl	__aeabi_dmul
 3222              	.LVL431:
 3223 0b68 FFF7FEFF 		bl	__aeabi_d2uiz
 3224              	.LVL432:
 3225 0b6c 80B2     		uxth	r0, r0
 3226 0b6e A5F8A600 		strh	r0, [r5, #166]	@ movhi
 726:Core/Src/bms.c ****         break;
 3227              		.loc 1 726 0
 3228 0b72 38BD     		pop	{r3, r4, r5, pc}
 3229              	.LVL433:
 3230              	.L163:
ARM GAS  /tmp/ccVfUIOB.s 			page 73


 727:Core/Src/bms.c **** 
 728:Core/Src/bms.c ****     case 0x46D:
 729:Core/Src/bms.c ****         bms->cellVolt[84] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3231              		.loc 1 729 0
 3232 0b74 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3233 0b76 1B02     		lsls	r3, r3, #8
 3234 0b78 03F47063 		and	r3, r3, #3840
 3235 0b7c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3236              	.LVL434:
 3237 0b7e 1844     		add	r0, r0, r3
 3238 0b80 FFF7FEFF 		bl	__aeabi_i2d
 3239              	.LVL435:
 3240 0b84 0022     		movs	r2, #0
 3241 0b86 494B     		ldr	r3, .L185
 3242 0b88 FFF7FEFF 		bl	__aeabi_dmul
 3243              	.LVL436:
 3244 0b8c FFF7FEFF 		bl	__aeabi_d2uiz
 3245              	.LVL437:
 3246 0b90 80B2     		uxth	r0, r0
 3247 0b92 A5F8A800 		strh	r0, [r5, #168]	@ movhi
 730:Core/Src/bms.c ****         bms->cellVolt[85] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3248              		.loc 1 730 0
 3249 0b96 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3250 0b98 1B02     		lsls	r3, r3, #8
 3251 0b9a 03F47063 		and	r3, r3, #3840
 3252 0b9e E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3253 0ba0 1844     		add	r0, r0, r3
 3254 0ba2 FFF7FEFF 		bl	__aeabi_i2d
 3255              	.LVL438:
 3256 0ba6 0022     		movs	r2, #0
 3257 0ba8 404B     		ldr	r3, .L185
 3258 0baa FFF7FEFF 		bl	__aeabi_dmul
 3259              	.LVL439:
 3260 0bae FFF7FEFF 		bl	__aeabi_d2uiz
 3261              	.LVL440:
 3262 0bb2 80B2     		uxth	r0, r0
 3263 0bb4 A5F8AA00 		strh	r0, [r5, #170]	@ movhi
 731:Core/Src/bms.c ****         bms->cellVolt[86] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3264              		.loc 1 731 0
 3265 0bb8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3266 0bba 1B02     		lsls	r3, r3, #8
 3267 0bbc 03F47063 		and	r3, r3, #3840
 3268 0bc0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3269 0bc2 1844     		add	r0, r0, r3
 3270 0bc4 FFF7FEFF 		bl	__aeabi_i2d
 3271              	.LVL441:
 3272 0bc8 0022     		movs	r2, #0
 3273 0bca 384B     		ldr	r3, .L185
 3274 0bcc FFF7FEFF 		bl	__aeabi_dmul
 3275              	.LVL442:
 3276 0bd0 FFF7FEFF 		bl	__aeabi_d2uiz
 3277              	.LVL443:
 3278 0bd4 80B2     		uxth	r0, r0
 3279 0bd6 A5F8AC00 		strh	r0, [r5, #172]	@ movhi
 732:Core/Src/bms.c ****         break;
 3280              		.loc 1 732 0
 3281 0bda 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/ccVfUIOB.s 			page 74


 3282              	.LVL444:
 3283              	.L176:
 733:Core/Src/bms.c **** 
 734:Core/Src/bms.c ****     case 0x47D:
 735:Core/Src/bms.c ****         bms->cellVolt[87] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3284              		.loc 1 735 0
 3285 0bdc 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3286 0bde 1B02     		lsls	r3, r3, #8
 3287 0be0 03F47063 		and	r3, r3, #3840
 3288 0be4 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3289              	.LVL445:
 3290 0be6 1844     		add	r0, r0, r3
 3291 0be8 FFF7FEFF 		bl	__aeabi_i2d
 3292              	.LVL446:
 3293 0bec 0022     		movs	r2, #0
 3294 0bee 2F4B     		ldr	r3, .L185
 3295 0bf0 FFF7FEFF 		bl	__aeabi_dmul
 3296              	.LVL447:
 3297 0bf4 FFF7FEFF 		bl	__aeabi_d2uiz
 3298              	.LVL448:
 3299 0bf8 80B2     		uxth	r0, r0
 3300 0bfa A5F8AE00 		strh	r0, [r5, #174]	@ movhi
 736:Core/Src/bms.c ****         bms->cellVolt[88] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3301              		.loc 1 736 0
 3302 0bfe A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3303 0c00 1B02     		lsls	r3, r3, #8
 3304 0c02 03F47063 		and	r3, r3, #3840
 3305 0c06 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3306 0c08 1844     		add	r0, r0, r3
 3307 0c0a FFF7FEFF 		bl	__aeabi_i2d
 3308              	.LVL449:
 3309 0c0e 0022     		movs	r2, #0
 3310 0c10 264B     		ldr	r3, .L185
 3311 0c12 FFF7FEFF 		bl	__aeabi_dmul
 3312              	.LVL450:
 3313 0c16 FFF7FEFF 		bl	__aeabi_d2uiz
 3314              	.LVL451:
 3315 0c1a 80B2     		uxth	r0, r0
 3316 0c1c A5F8B000 		strh	r0, [r5, #176]	@ movhi
 737:Core/Src/bms.c ****         bms->cellVolt[89] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3317              		.loc 1 737 0
 3318 0c20 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3319 0c22 1B02     		lsls	r3, r3, #8
 3320 0c24 03F47063 		and	r3, r3, #3840
 3321 0c28 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3322 0c2a 1844     		add	r0, r0, r3
 3323 0c2c FFF7FEFF 		bl	__aeabi_i2d
 3324              	.LVL452:
 3325 0c30 0022     		movs	r2, #0
 3326 0c32 1E4B     		ldr	r3, .L185
 3327 0c34 FFF7FEFF 		bl	__aeabi_dmul
 3328              	.LVL453:
 3329 0c38 FFF7FEFF 		bl	__aeabi_d2uiz
 3330              	.LVL454:
 3331 0c3c 80B2     		uxth	r0, r0
 3332 0c3e A5F8B200 		strh	r0, [r5, #178]	@ movhi
 738:Core/Src/bms.c ****         break;
ARM GAS  /tmp/ccVfUIOB.s 			page 75


 3333              		.loc 1 738 0
 3334 0c42 38BD     		pop	{r3, r4, r5, pc}
 3335              	.LVL455:
 3336              	.L164:
 739:Core/Src/bms.c **** 
 740:Core/Src/bms.c ****     case 0x46E:
 741:Core/Src/bms.c ****         bms->cellVolt[90] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3337              		.loc 1 741 0
 3338 0c44 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3339 0c46 1B02     		lsls	r3, r3, #8
 3340 0c48 03F47063 		and	r3, r3, #3840
 3341 0c4c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3342              	.LVL456:
 3343 0c4e 1844     		add	r0, r0, r3
 3344 0c50 FFF7FEFF 		bl	__aeabi_i2d
 3345              	.LVL457:
 3346 0c54 0022     		movs	r2, #0
 3347 0c56 154B     		ldr	r3, .L185
 3348 0c58 FFF7FEFF 		bl	__aeabi_dmul
 3349              	.LVL458:
 3350 0c5c FFF7FEFF 		bl	__aeabi_d2uiz
 3351              	.LVL459:
 3352 0c60 80B2     		uxth	r0, r0
 3353 0c62 A5F8B400 		strh	r0, [r5, #180]	@ movhi
 742:Core/Src/bms.c ****         bms->cellVolt[91] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3354              		.loc 1 742 0
 3355 0c66 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3356 0c68 1B02     		lsls	r3, r3, #8
 3357 0c6a 03F47063 		and	r3, r3, #3840
 3358 0c6e E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3359 0c70 1844     		add	r0, r0, r3
 3360 0c72 FFF7FEFF 		bl	__aeabi_i2d
 3361              	.LVL460:
 3362 0c76 0022     		movs	r2, #0
 3363 0c78 0C4B     		ldr	r3, .L185
 3364 0c7a FFF7FEFF 		bl	__aeabi_dmul
 3365              	.LVL461:
 3366 0c7e FFF7FEFF 		bl	__aeabi_d2uiz
 3367              	.LVL462:
 3368 0c82 80B2     		uxth	r0, r0
 3369 0c84 A5F8B600 		strh	r0, [r5, #182]	@ movhi
 743:Core/Src/bms.c ****         bms->cellVolt[92] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3370              		.loc 1 743 0
 3371 0c88 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3372 0c8a 1B02     		lsls	r3, r3, #8
 3373 0c8c 03F47063 		and	r3, r3, #3840
 3374 0c90 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3375 0c92 1844     		add	r0, r0, r3
 3376 0c94 FFF7FEFF 		bl	__aeabi_i2d
 3377              	.LVL463:
 3378 0c98 0022     		movs	r2, #0
 3379 0c9a 044B     		ldr	r3, .L185
 3380 0c9c FFF7FEFF 		bl	__aeabi_dmul
 3381              	.LVL464:
 3382 0ca0 FFF7FEFF 		bl	__aeabi_d2uiz
 3383              	.LVL465:
 3384 0ca4 80B2     		uxth	r0, r0
ARM GAS  /tmp/ccVfUIOB.s 			page 76


 3385 0ca6 A5F8B800 		strh	r0, [r5, #184]	@ movhi
 744:Core/Src/bms.c ****         break;
 3386              		.loc 1 744 0
 3387 0caa 38BD     		pop	{r3, r4, r5, pc}
 3388              	.LVL466:
 3389              	.L186:
 3390              		.align	2
 3391              	.L185:
 3392 0cac 0000F43F 		.word	1072955392
 3393              	.LVL467:
 3394              	.L177:
 745:Core/Src/bms.c **** 
 746:Core/Src/bms.c ****     case 0x47E:
 747:Core/Src/bms.c ****         bms->cellVolt[93] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3395              		.loc 1 747 0
 3396 0cb0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3397 0cb2 1B02     		lsls	r3, r3, #8
 3398 0cb4 03F47063 		and	r3, r3, #3840
 3399 0cb8 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3400              	.LVL468:
 3401 0cba 1844     		add	r0, r0, r3
 3402 0cbc FFF7FEFF 		bl	__aeabi_i2d
 3403              	.LVL469:
 3404 0cc0 0022     		movs	r2, #0
 3405 0cc2 154B     		ldr	r3, .L187
 3406 0cc4 FFF7FEFF 		bl	__aeabi_dmul
 3407              	.LVL470:
 3408 0cc8 FFF7FEFF 		bl	__aeabi_d2uiz
 3409              	.LVL471:
 3410 0ccc 80B2     		uxth	r0, r0
 3411 0cce A5F8BA00 		strh	r0, [r5, #186]	@ movhi
 748:Core/Src/bms.c ****         bms->cellVolt[94] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3412              		.loc 1 748 0
 3413 0cd2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3414 0cd4 1B02     		lsls	r3, r3, #8
 3415 0cd6 03F47063 		and	r3, r3, #3840
 3416 0cda E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3417 0cdc 1844     		add	r0, r0, r3
 3418 0cde FFF7FEFF 		bl	__aeabi_i2d
 3419              	.LVL472:
 3420 0ce2 0022     		movs	r2, #0
 3421 0ce4 0C4B     		ldr	r3, .L187
 3422 0ce6 FFF7FEFF 		bl	__aeabi_dmul
 3423              	.LVL473:
 3424 0cea FFF7FEFF 		bl	__aeabi_d2uiz
 3425              	.LVL474:
 3426 0cee 80B2     		uxth	r0, r0
 3427 0cf0 A5F8BC00 		strh	r0, [r5, #188]	@ movhi
 749:Core/Src/bms.c ****         bms->cellVolt[95] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3428              		.loc 1 749 0
 3429 0cf4 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3430 0cf6 1B02     		lsls	r3, r3, #8
 3431 0cf8 03F47063 		and	r3, r3, #3840
 3432 0cfc 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3433 0cfe 1844     		add	r0, r0, r3
 3434 0d00 FFF7FEFF 		bl	__aeabi_i2d
 3435              	.LVL475:
ARM GAS  /tmp/ccVfUIOB.s 			page 77


 3436 0d04 0022     		movs	r2, #0
 3437 0d06 044B     		ldr	r3, .L187
 3438 0d08 FFF7FEFF 		bl	__aeabi_dmul
 3439              	.LVL476:
 3440 0d0c FFF7FEFF 		bl	__aeabi_d2uiz
 3441              	.LVL477:
 3442 0d10 80B2     		uxth	r0, r0
 3443 0d12 A5F8BE00 		strh	r0, [r5, #190]	@ movhi
 3444              	.L149:
 3445 0d16 38BD     		pop	{r3, r4, r5, pc}
 3446              	.LVL478:
 3447              	.L188:
 3448              		.align	2
 3449              	.L187:
 3450 0d18 0000F43F 		.word	1072955392
 3451              		.cfi_endproc
 3452              	.LFE152:
 3454              		.section	.text.decodeTemp,"ax",%progbits
 3455              		.align	1
 3456              		.global	decodeTemp
 3457              		.syntax unified
 3458              		.thumb
 3459              		.thumb_func
 3460              		.fpu fpv4-sp-d16
 3462              	decodeTemp:
 3463              	.LFB153:
 750:Core/Src/bms.c ****         break;
 751:Core/Src/bms.c **** 
 752:Core/Src/bms.c ****     default:
 753:Core/Src/bms.c ****         break;
 754:Core/Src/bms.c ****     }
 755:Core/Src/bms.c **** }
 756:Core/Src/bms.c **** 
 757:Core/Src/bms.c **** void decodeTemp(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // in degrees F x 100
 758:Core/Src/bms.c **** {
 3464              		.loc 1 758 0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 0
 3467              		@ frame_needed = 0, uses_anonymous_args = 0
 3468              		@ link register save eliminated.
 3469              	.LVL479:
 759:Core/Src/bms.c ****     switch (rxMsg->StdId)
 3470              		.loc 1 759 0
 3471 0000 0B68     		ldr	r3, [r1]
 3472 0002 A3F5FC63 		sub	r3, r3, #2016
 3473 0006 0E2B     		cmp	r3, #14
 3474 0008 00F29780 		bhi	.L189
 3475 000c DFE803F0 		tbb	[pc, r3]
 3476              	.LVL480:
 3477              	.L192:
 3478 0010 08       		.byte	(.L191-.L192)/2
 3479 0011 15       		.byte	(.L193-.L192)/2
 3480 0012 22       		.byte	(.L194-.L192)/2
 3481 0013 32       		.byte	(.L195-.L192)/2
 3482 0014 36       		.byte	(.L196-.L192)/2
 3483 0015 43       		.byte	(.L197-.L192)/2
 3484 0016 53       		.byte	(.L198-.L192)/2
ARM GAS  /tmp/ccVfUIOB.s 			page 78


 3485 0017 95       		.byte	(.L189-.L192)/2
 3486 0018 57       		.byte	(.L199-.L192)/2
 3487 0019 64       		.byte	(.L200-.L192)/2
 3488 001a 74       		.byte	(.L201-.L192)/2
 3489 001b 95       		.byte	(.L189-.L192)/2
 3490 001c 78       		.byte	(.L202-.L192)/2
 3491 001d 85       		.byte	(.L203-.L192)/2
 3492 001e 92       		.byte	(.L204-.L192)/2
 3493 001f 00       		.p2align 1
 3494              	.L191:
 760:Core/Src/bms.c ****     {
 761:Core/Src/bms.c ****     case 0x7E0: //Begin module 1 temp sensors
 762:Core/Src/bms.c ****         bms->tempSensor[0] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3495              		.loc 1 762 0
 3496 0020 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3497 0022 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3498 0024 03EB0123 		add	r3, r3, r1, lsl #8
 3499 0028 A3EBC303 		sub	r3, r3, r3, lsl #3
 3500 002c 03F5E043 		add	r3, r3, #28672
 3501 0030 1C33     		adds	r3, r3, #28
 3502 0032 9BB2     		uxth	r3, r3
 3503 0034 A0F8C030 		strh	r3, [r0, #192]	@ movhi
 763:Core/Src/bms.c ****         break;
 3504              		.loc 1 763 0
 3505 0038 7047     		bx	lr
 3506              	.L193:
 764:Core/Src/bms.c **** 
 765:Core/Src/bms.c ****     case 0x7E1:
 766:Core/Src/bms.c ****         bms->tempSensor[1] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3507              		.loc 1 766 0
 3508 003a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3509 003c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3510 003e 03EB0123 		add	r3, r3, r1, lsl #8
 3511 0042 A3EBC303 		sub	r3, r3, r3, lsl #3
 3512 0046 03F5E043 		add	r3, r3, #28672
 3513 004a 1C33     		adds	r3, r3, #28
 3514 004c 9BB2     		uxth	r3, r3
 3515 004e A0F8C230 		strh	r3, [r0, #194]	@ movhi
 767:Core/Src/bms.c ****         break;
 3516              		.loc 1 767 0
 3517 0052 7047     		bx	lr
 3518              	.L194:
 768:Core/Src/bms.c **** 
 769:Core/Src/bms.c ****     case 0x7E2:
 770:Core/Src/bms.c ****         bms->tempSensor[2] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3519              		.loc 1 770 0
 3520 0054 0023     		movs	r3, #0
 3521 0056 A0F8C430 		strh	r3, [r0, #196]	@ movhi
 771:Core/Src/bms.c ****         bms->tempSensor[3] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3522              		.loc 1 771 0
 3523 005a 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3524 005c D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3525 005e 03EB0123 		add	r3, r3, r1, lsl #8
 3526 0062 A3EBC303 		sub	r3, r3, r3, lsl #3
 3527 0066 03F5E043 		add	r3, r3, #28672
 3528 006a 1C33     		adds	r3, r3, #28
 3529 006c 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccVfUIOB.s 			page 79


 3530 006e A0F8C630 		strh	r3, [r0, #198]	@ movhi
 772:Core/Src/bms.c ****         break;
 3531              		.loc 1 772 0
 3532 0072 7047     		bx	lr
 3533              	.L195:
 773:Core/Src/bms.c **** 
 774:Core/Src/bms.c ****     case 0x7E3:
 775:Core/Src/bms.c ****         bms->tempSensor[4] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3534              		.loc 1 775 0
 3535 0074 0023     		movs	r3, #0
 3536 0076 A0F8C830 		strh	r3, [r0, #200]	@ movhi
 776:Core/Src/bms.c ****         break;
 3537              		.loc 1 776 0
 3538 007a 7047     		bx	lr
 3539              	.L196:
 777:Core/Src/bms.c **** 
 778:Core/Src/bms.c ****     case 0x7E4: //Begin module 2 temp sensors
 779:Core/Src/bms.c ****         bms->tempSensor[5] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3540              		.loc 1 779 0
 3541 007c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3542 007e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3543 0080 03EB0123 		add	r3, r3, r1, lsl #8
 3544 0084 A3EBC303 		sub	r3, r3, r3, lsl #3
 3545 0088 03F5E043 		add	r3, r3, #28672
 3546 008c 1C33     		adds	r3, r3, #28
 3547 008e 9BB2     		uxth	r3, r3
 3548 0090 A0F8CA30 		strh	r3, [r0, #202]	@ movhi
 780:Core/Src/bms.c ****         break;
 3549              		.loc 1 780 0
 3550 0094 7047     		bx	lr
 3551              	.L197:
 781:Core/Src/bms.c **** 
 782:Core/Src/bms.c ****     case 0x7E5:
 783:Core/Src/bms.c ****         bms->tempSensor[6] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3552              		.loc 1 783 0
 3553 0096 0023     		movs	r3, #0
 3554 0098 A0F8CC30 		strh	r3, [r0, #204]	@ movhi
 784:Core/Src/bms.c ****         bms->tempSensor[7] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3555              		.loc 1 784 0
 3556 009c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3557 009e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3558 00a0 03EB0123 		add	r3, r3, r1, lsl #8
 3559 00a4 A3EBC303 		sub	r3, r3, r3, lsl #3
 3560 00a8 03F5E043 		add	r3, r3, #28672
 3561 00ac 1C33     		adds	r3, r3, #28
 3562 00ae 9BB2     		uxth	r3, r3
 3563 00b0 A0F8CE30 		strh	r3, [r0, #206]	@ movhi
 785:Core/Src/bms.c ****         break;
 3564              		.loc 1 785 0
 3565 00b4 7047     		bx	lr
 3566              	.L198:
 786:Core/Src/bms.c **** 
 787:Core/Src/bms.c ****     case 0x7E6:
 788:Core/Src/bms.c ****         bms->tempSensor[8] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3567              		.loc 1 788 0
 3568 00b6 0023     		movs	r3, #0
 3569 00b8 A0F8D030 		strh	r3, [r0, #208]	@ movhi
ARM GAS  /tmp/ccVfUIOB.s 			page 80


 789:Core/Src/bms.c ****         break;
 3570              		.loc 1 789 0
 3571 00bc 7047     		bx	lr
 3572              	.L199:
 790:Core/Src/bms.c **** 
 791:Core/Src/bms.c ****     case 0x7E8: //Begin module 3 temp sensors
 792:Core/Src/bms.c ****         bms->tempSensor[9] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3573              		.loc 1 792 0
 3574 00be 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3575 00c0 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3576 00c2 03EB0123 		add	r3, r3, r1, lsl #8
 3577 00c6 A3EBC303 		sub	r3, r3, r3, lsl #3
 3578 00ca 03F5E043 		add	r3, r3, #28672
 3579 00ce 1C33     		adds	r3, r3, #28
 3580 00d0 9BB2     		uxth	r3, r3
 3581 00d2 A0F8D230 		strh	r3, [r0, #210]	@ movhi
 793:Core/Src/bms.c ****         break;
 3582              		.loc 1 793 0
 3583 00d6 7047     		bx	lr
 3584              	.L200:
 794:Core/Src/bms.c **** 
 795:Core/Src/bms.c ****     case 0x7E9:
 796:Core/Src/bms.c ****         bms->tempSensor[10] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3585              		.loc 1 796 0
 3586 00d8 0023     		movs	r3, #0
 3587 00da A0F8D430 		strh	r3, [r0, #212]	@ movhi
 797:Core/Src/bms.c ****         bms->tempSensor[11] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3588              		.loc 1 797 0
 3589 00de 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3590 00e0 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3591 00e2 03EB0123 		add	r3, r3, r1, lsl #8
 3592 00e6 A3EBC303 		sub	r3, r3, r3, lsl #3
 3593 00ea 03F5E043 		add	r3, r3, #28672
 3594 00ee 1C33     		adds	r3, r3, #28
 3595 00f0 9BB2     		uxth	r3, r3
 3596 00f2 A0F8D630 		strh	r3, [r0, #214]	@ movhi
 798:Core/Src/bms.c ****         break;
 3597              		.loc 1 798 0
 3598 00f6 7047     		bx	lr
 3599              	.L201:
 799:Core/Src/bms.c **** 
 800:Core/Src/bms.c ****     case 0x7EA:
 801:Core/Src/bms.c ****         bms->tempSensor[12] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3600              		.loc 1 801 0
 3601 00f8 0023     		movs	r3, #0
 3602 00fa A0F8D830 		strh	r3, [r0, #216]	@ movhi
 802:Core/Src/bms.c ****         break;
 3603              		.loc 1 802 0
 3604 00fe 7047     		bx	lr
 3605              	.L202:
 803:Core/Src/bms.c **** 
 804:Core/Src/bms.c ****     case 0x7EC: //Begin module 4 temp sensors
 805:Core/Src/bms.c ****         bms->tempSensor[13] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3606              		.loc 1 805 0
 3607 0100 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3608 0102 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3609 0104 03EB0123 		add	r3, r3, r1, lsl #8
ARM GAS  /tmp/ccVfUIOB.s 			page 81


 3610 0108 A3EBC303 		sub	r3, r3, r3, lsl #3
 3611 010c 03F5E043 		add	r3, r3, #28672
 3612 0110 1C33     		adds	r3, r3, #28
 3613 0112 9BB2     		uxth	r3, r3
 3614 0114 A0F8DA30 		strh	r3, [r0, #218]	@ movhi
 806:Core/Src/bms.c ****         break;
 3615              		.loc 1 806 0
 3616 0118 7047     		bx	lr
 3617              	.L203:
 807:Core/Src/bms.c **** 
 808:Core/Src/bms.c ****     case 0x7ED:
 809:Core/Src/bms.c ****         bms->tempSensor[14] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3618              		.loc 1 809 0
 3619 011a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3620 011c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3621 011e 03EB0123 		add	r3, r3, r1, lsl #8
 3622 0122 A3EBC303 		sub	r3, r3, r3, lsl #3
 3623 0126 03F5E043 		add	r3, r3, #28672
 3624 012a 1C33     		adds	r3, r3, #28
 3625 012c 9BB2     		uxth	r3, r3
 3626 012e A0F8DC30 		strh	r3, [r0, #220]	@ movhi
 810:Core/Src/bms.c ****         break;
 3627              		.loc 1 810 0
 3628 0132 7047     		bx	lr
 3629              	.L204:
 811:Core/Src/bms.c **** 
 812:Core/Src/bms.c ****     case 0x7EE:
 813:Core/Src/bms.c ****         bms->tempSensor[15] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3630              		.loc 1 813 0
 3631 0134 0023     		movs	r3, #0
 3632 0136 A0F8DE30 		strh	r3, [r0, #222]	@ movhi
 3633              	.L189:
 3634 013a 7047     		bx	lr
 3635              		.cfi_endproc
 3636              	.LFE153:
 3638              		.comm	watchdogBits,1,1
 3639              		.comm	chargerOn,1,1
 3640              		.comm	BMS,492,4
 3641              		.comm	busFault,4,4
 3642              		.comm	txCycle3,4,4
 3643              		.comm	txCycle2,4,4
 3644              		.comm	txCycle,4,4
 3645              		.comm	canMailbox3,4,4
 3646              		.comm	canMailbox2,4,4
 3647              		.comm	canMailbox,4,4
 3648              		.comm	canRx3,8,4
 3649              		.comm	canRx2,8,4
 3650              		.comm	canRx,8,4
 3651              		.comm	txMsgExt3,24,4
 3652              		.comm	txMsg3,24,4
 3653              		.comm	rxMsg3,28,4
 3654              		.comm	txMsgExt2,24,4
 3655              		.comm	txMsg2,24,4
 3656              		.comm	rxMsg2,28,4
 3657              		.comm	txMsgExt,24,4
 3658              		.comm	txMsg,24,4
 3659              		.comm	rxMsg,28,4
ARM GAS  /tmp/ccVfUIOB.s 			page 82


 3660              		.comm	sf5,40,4
 3661              		.comm	sf4,40,4
 3662              		.comm	sf3,40,4
 3663              		.comm	sf2,40,4
 3664              		.comm	sf,40,4
 3665              		.comm	hcan3,40,4
 3666              		.comm	hcan2,40,4
 3667              		.comm	hcan1,40,4
 3668              		.section	.bss.errorCount,"aw",%nobits
 3669              		.align	2
 3670              		.set	.LANCHOR0,. + 0
 3673              	errorCount:
 3674 0000 00000000 		.space	4
 3675              		.section	.rodata.balanceByte,"a",%progbits
 3676              		.align	2
 3677              		.set	.LANCHOR1,. + 0
 3680              	balanceByte:
 3681 0000 00       		.byte	0
 3682 0001 00       		.byte	0
 3683 0002 00       		.byte	0
 3684 0003 00       		.byte	0
 3685 0004 00       		.byte	0
 3686 0005 00       		.byte	0
 3687 0006 01       		.byte	1
 3688 0007 01       		.byte	1
 3689 0008 01       		.byte	1
 3690 0009 01       		.byte	1
 3691 000a 01       		.byte	1
 3692 000b 01       		.byte	1
 3693 000c 01       		.byte	1
 3694 000d 01       		.byte	1
 3695 000e 02       		.byte	2
 3696 000f 02       		.byte	2
 3697 0010 02       		.byte	2
 3698 0011 02       		.byte	2
 3699 0012 02       		.byte	2
 3700 0013 02       		.byte	2
 3701 0014 02       		.byte	2
 3702 0015 02       		.byte	2
 3703 0016 03       		.byte	3
 3704 0017 03       		.byte	3
 3705 0018 03       		.byte	3
 3706 0019 03       		.byte	3
 3707 001a 03       		.byte	3
 3708 001b 03       		.byte	3
 3709 001c 03       		.byte	3
 3710 001d 03       		.byte	3
 3711 001e 04       		.byte	4
 3712 001f 04       		.byte	4
 3713 0020 04       		.byte	4
 3714 0021 04       		.byte	4
 3715 0022 04       		.byte	4
 3716 0023 04       		.byte	4
 3717 0024 04       		.byte	4
 3718 0025 04       		.byte	4
 3719 0026 05       		.byte	5
 3720 0027 05       		.byte	5
ARM GAS  /tmp/ccVfUIOB.s 			page 83


 3721 0028 05       		.byte	5
 3722 0029 05       		.byte	5
 3723 002a 05       		.byte	5
 3724 002b 05       		.byte	5
 3725 002c 05       		.byte	5
 3726 002d 05       		.byte	5
 3727 002e 06       		.byte	6
 3728 002f 06       		.byte	6
 3729 0030 06       		.byte	6
 3730 0031 06       		.byte	6
 3731 0032 06       		.byte	6
 3732 0033 06       		.byte	6
 3733 0034 06       		.byte	6
 3734 0035 06       		.byte	6
 3735 0036 07       		.byte	7
 3736 0037 07       		.byte	7
 3737 0038 07       		.byte	7
 3738 0039 07       		.byte	7
 3739 003a 07       		.byte	7
 3740 003b 07       		.byte	7
 3741 003c 07       		.byte	7
 3742 003d 07       		.byte	7
 3743 003e 00       		.byte	0
 3744 003f 00       		.byte	0
 3745 0040 00       		.byte	0
 3746 0041 00       		.byte	0
 3747 0042 00       		.byte	0
 3748 0043 00       		.byte	0
 3749 0044 00       		.byte	0
 3750 0045 00       		.byte	0
 3751 0046 01       		.byte	1
 3752 0047 01       		.byte	1
 3753 0048 01       		.byte	1
 3754 0049 01       		.byte	1
 3755 004a 01       		.byte	1
 3756 004b 01       		.byte	1
 3757 004c 01       		.byte	1
 3758 004d 01       		.byte	1
 3759 004e 02       		.byte	2
 3760 004f 02       		.byte	2
 3761 0050 02       		.byte	2
 3762 0051 02       		.byte	2
 3763 0052 02       		.byte	2
 3764 0053 02       		.byte	2
 3765 0054 03       		.byte	3
 3766 0055 03       		.byte	3
 3767 0056 03       		.byte	3
 3768 0057 03       		.byte	3
 3769 0058 03       		.byte	3
 3770 0059 03       		.byte	3
 3771 005a 04       		.byte	4
 3772 005b 04       		.byte	4
 3773 005c 04       		.byte	4
 3774 005d 04       		.byte	4
 3775 005e 04       		.byte	4
 3776 005f 04       		.byte	4
 3777              		.section	.rodata.balanceShift,"a",%progbits
ARM GAS  /tmp/ccVfUIOB.s 			page 84


 3778              		.align	2
 3779              		.set	.LANCHOR2,. + 0
 3782              	balanceShift:
 3783 0000 01       		.byte	1
 3784 0001 02       		.byte	2
 3785 0002 04       		.byte	4
 3786 0003 08       		.byte	8
 3787 0004 10       		.byte	16
 3788 0005 20       		.byte	32
 3789 0006 01       		.byte	1
 3790 0007 02       		.byte	2
 3791 0008 04       		.byte	4
 3792 0009 08       		.byte	8
 3793 000a 10       		.byte	16
 3794 000b 20       		.byte	32
 3795 000c 40       		.byte	64
 3796 000d 80       		.byte	-128
 3797 000e 01       		.byte	1
 3798 000f 02       		.byte	2
 3799 0010 04       		.byte	4
 3800 0011 08       		.byte	8
 3801 0012 10       		.byte	16
 3802 0013 20       		.byte	32
 3803 0014 40       		.byte	64
 3804 0015 80       		.byte	-128
 3805 0016 01       		.byte	1
 3806 0017 02       		.byte	2
 3807 0018 04       		.byte	4
 3808 0019 08       		.byte	8
 3809 001a 10       		.byte	16
 3810 001b 20       		.byte	32
 3811 001c 40       		.byte	64
 3812 001d 80       		.byte	-128
 3813 001e 01       		.byte	1
 3814 001f 02       		.byte	2
 3815 0020 04       		.byte	4
 3816 0021 08       		.byte	8
 3817 0022 10       		.byte	16
 3818 0023 20       		.byte	32
 3819 0024 40       		.byte	64
 3820 0025 80       		.byte	-128
 3821 0026 01       		.byte	1
 3822 0027 02       		.byte	2
 3823 0028 04       		.byte	4
 3824 0029 08       		.byte	8
 3825 002a 10       		.byte	16
 3826 002b 20       		.byte	32
 3827 002c 40       		.byte	64
 3828 002d 80       		.byte	-128
 3829 002e 01       		.byte	1
 3830 002f 02       		.byte	2
 3831 0030 04       		.byte	4
 3832 0031 08       		.byte	8
 3833 0032 10       		.byte	16
 3834 0033 20       		.byte	32
 3835 0034 40       		.byte	64
 3836 0035 80       		.byte	-128
ARM GAS  /tmp/ccVfUIOB.s 			page 85


 3837 0036 01       		.byte	1
 3838 0037 02       		.byte	2
 3839 0038 04       		.byte	4
 3840 0039 08       		.byte	8
 3841 003a 10       		.byte	16
 3842 003b 20       		.byte	32
 3843 003c 40       		.byte	64
 3844 003d 80       		.byte	-128
 3845 003e 01       		.byte	1
 3846 003f 02       		.byte	2
 3847 0040 04       		.byte	4
 3848 0041 08       		.byte	8
 3849 0042 10       		.byte	16
 3850 0043 20       		.byte	32
 3851 0044 40       		.byte	64
 3852 0045 80       		.byte	-128
 3853 0046 01       		.byte	1
 3854 0047 02       		.byte	2
 3855 0048 04       		.byte	4
 3856 0049 08       		.byte	8
 3857 004a 10       		.byte	16
 3858 004b 20       		.byte	32
 3859 004c 40       		.byte	64
 3860 004d 80       		.byte	-128
 3861 004e 01       		.byte	1
 3862 004f 02       		.byte	2
 3863 0050 04       		.byte	4
 3864 0051 08       		.byte	8
 3865 0052 10       		.byte	16
 3866 0053 20       		.byte	32
 3867 0054 01       		.byte	1
 3868 0055 02       		.byte	2
 3869 0056 04       		.byte	4
 3870 0057 08       		.byte	8
 3871 0058 10       		.byte	16
 3872 0059 20       		.byte	32
 3873 005a 01       		.byte	1
 3874 005b 02       		.byte	2
 3875 005c 04       		.byte	4
 3876 005d 08       		.byte	8
 3877 005e 10       		.byte	16
 3878 005f 20       		.byte	32
 3879              		.text
 3880              	.Letext0:
 3881              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3882              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3883              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3884              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3885              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 3886              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3887              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3888              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3889              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3890              		.file 11 "/usr/include/newlib/sys/lock.h"
 3891              		.file 12 "/usr/include/newlib/sys/_types.h"
 3892              		.file 13 "/usr/include/newlib/sys/reent.h"
 3893              		.file 14 "Core/Inc/can_setup.h"
ARM GAS  /tmp/ccVfUIOB.s 			page 86


 3894              		.file 15 "Core/Inc/bms.h"
 3895              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccVfUIOB.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bms.c
     /tmp/ccVfUIOB.s:18     .text.getSOC:0000000000000000 $t
     /tmp/ccVfUIOB.s:24     .text.getSOC:0000000000000000 getSOC
     /tmp/ccVfUIOB.s:50     .text.getSOC:0000000000000028 $d
     /tmp/ccVfUIOB.s:55     .text.getHighCellVolt:0000000000000000 $t
     /tmp/ccVfUIOB.s:61     .text.getHighCellVolt:0000000000000000 getHighCellVolt
     /tmp/ccVfUIOB.s:105    .text.getHighCellTemp:0000000000000000 $t
     /tmp/ccVfUIOB.s:111    .text.getHighCellTemp:0000000000000000 getHighCellTemp
     /tmp/ccVfUIOB.s:157    .text.getLowCellTemp:0000000000000000 $t
     /tmp/ccVfUIOB.s:163    .text.getLowCellTemp:0000000000000000 getLowCellTemp
     /tmp/ccVfUIOB.s:216    .text.getAvgCellTemp:0000000000000000 $t
     /tmp/ccVfUIOB.s:222    .text.getAvgCellTemp:0000000000000000 getAvgCellTemp
     /tmp/ccVfUIOB.s:287    .text.getTempDelta:0000000000000000 $t
     /tmp/ccVfUIOB.s:293    .text.getTempDelta:0000000000000000 getTempDelta
     /tmp/ccVfUIOB.s:314    .text.getCellDelta:0000000000000000 $t
     /tmp/ccVfUIOB.s:320    .text.getCellDelta:0000000000000000 getCellDelta
     /tmp/ccVfUIOB.s:341    .text.getLowCellVolt:0000000000000000 $t
     /tmp/ccVfUIOB.s:347    .text.getLowCellVolt:0000000000000000 getLowCellVolt
     /tmp/ccVfUIOB.s:392    .text.getAvgCellVolt:0000000000000000 $t
     /tmp/ccVfUIOB.s:398    .text.getAvgCellVolt:0000000000000000 getAvgCellVolt
     /tmp/ccVfUIOB.s:441    .text.getAvgCellVolt:0000000000000028 $d
     /tmp/ccVfUIOB.s:446    .text.getPackVolt:0000000000000000 $t
     /tmp/ccVfUIOB.s:452    .text.getPackVolt:0000000000000000 getPackVolt
     /tmp/ccVfUIOB.s:494    .text.getPackVolt:0000000000000024 $d
     /tmp/ccVfUIOB.s:499    .text.getCellCount:0000000000000000 $t
     /tmp/ccVfUIOB.s:505    .text.getCellCount:0000000000000000 getCellCount
     /tmp/ccVfUIOB.s:577    .text.getCellCount:0000000000000044 $d
                            *COM*:00000000000001ec BMS
     /tmp/ccVfUIOB.s:583    .text.initBMS:0000000000000000 $t
     /tmp/ccVfUIOB.s:590    .text.initBMS:0000000000000000 initBMS
     /tmp/ccVfUIOB.s:702    .text.initBMS:000000000000008c $d
                            *COM*:0000000000000001 watchdogBits
                            *COM*:0000000000000001 chargerOn
     /tmp/ccVfUIOB.s:710    .text.bmsStateHandler:0000000000000000 $t
     /tmp/ccVfUIOB.s:717    .text.bmsStateHandler:0000000000000000 bmsStateHandler
     /tmp/ccVfUIOB.s:735    .text.bmsStateHandler:0000000000000010 $d
     /tmp/ccVfUIOB.s:833    .text.acChargeCommand:0000000000000000 $t
     /tmp/ccVfUIOB.s:840    .text.acChargeCommand:0000000000000000 acChargeCommand
     /tmp/ccVfUIOB.s:930    .text.acChargeCommand:0000000000000080 $d
     /tmp/ccVfUIOB.s:935    .text.tx500kData:0000000000000000 $t
     /tmp/ccVfUIOB.s:942    .text.tx500kData:0000000000000000 tx500kData
     /tmp/ccVfUIOB.s:1029   .text.tx500kData:00000000000000bc $d
     /tmp/ccVfUIOB.s:1034   .text.refreshData:0000000000000000 $t
     /tmp/ccVfUIOB.s:1041   .text.refreshData:0000000000000000 refreshData
     /tmp/ccVfUIOB.s:1122   .text.refreshData:000000000000005c $d
     /tmp/ccVfUIOB.s:1127   .text.sendCommand:0000000000000000 $t
     /tmp/ccVfUIOB.s:1134   .text.sendCommand:0000000000000000 sendCommand
     /tmp/ccVfUIOB.s:1193   .text.requestBICMdata:0000000000000000 $t
     /tmp/ccVfUIOB.s:1200   .text.requestBICMdata:0000000000000000 requestBICMdata
     /tmp/ccVfUIOB.s:1328   .text.balanceCommand:0000000000000000 $t
     /tmp/ccVfUIOB.s:1335   .text.balanceCommand:0000000000000000 balanceCommand
     /tmp/ccVfUIOB.s:1609   .text.balanceCommand:0000000000000164 $d
     /tmp/ccVfUIOB.s:1615   .text.vehicleComms:0000000000000000 $t
     /tmp/ccVfUIOB.s:1622   .text.vehicleComms:0000000000000000 vehicleComms
     /tmp/ccVfUIOB.s:1635   .text.synchChargers:0000000000000000 $t
     /tmp/ccVfUIOB.s:1642   .text.synchChargers:0000000000000000 synchChargers
ARM GAS  /tmp/ccVfUIOB.s 			page 88


     /tmp/ccVfUIOB.s:1690   .text.synchChargers:0000000000000040 $d
     /tmp/ccVfUIOB.s:1699   .text.decodeVolt:0000000000000000 $t
     /tmp/ccVfUIOB.s:1706   .text.decodeVolt:0000000000000000 decodeVolt
     /tmp/ccVfUIOB.s:1729   .text.decodeVolt:0000000000000016 $d
     /tmp/ccVfUIOB.s:1760   .text.decodeVolt:0000000000000054 $t
     /tmp/ccVfUIOB.s:2146   .text.decodeVolt:0000000000000320 $d
     /tmp/ccVfUIOB.s:2150   .text.decodeVolt:0000000000000324 $t
     /tmp/ccVfUIOB.s:2565   .text.decodeVolt:000000000000064c $d
     /tmp/ccVfUIOB.s:2569   .text.decodeVolt:0000000000000650 $t
     /tmp/ccVfUIOB.s:2984   .text.decodeVolt:000000000000098c $d
     /tmp/ccVfUIOB.s:2988   .text.decodeVolt:0000000000000990 $t
     /tmp/ccVfUIOB.s:3392   .text.decodeVolt:0000000000000cac $d
     /tmp/ccVfUIOB.s:3396   .text.decodeVolt:0000000000000cb0 $t
     /tmp/ccVfUIOB.s:3450   .text.decodeVolt:0000000000000d18 $d
     /tmp/ccVfUIOB.s:3455   .text.decodeTemp:0000000000000000 $t
     /tmp/ccVfUIOB.s:3462   .text.decodeTemp:0000000000000000 decodeTemp
     /tmp/ccVfUIOB.s:3478   .text.decodeTemp:0000000000000010 $d
                            *COM*:0000000000000004 busFault
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000004 canMailbox3
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx3
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000018 txMsg3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan3
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
     /tmp/ccVfUIOB.s:3669   .bss.errorCount:0000000000000000 $d
     /tmp/ccVfUIOB.s:3673   .bss.errorCount:0000000000000000 errorCount
     /tmp/ccVfUIOB.s:3676   .rodata.balanceByte:0000000000000000 $d
     /tmp/ccVfUIOB.s:3680   .rodata.balanceByte:0000000000000000 balanceByte
     /tmp/ccVfUIOB.s:3778   .rodata.balanceShift:0000000000000000 $d
     /tmp/ccVfUIOB.s:3782   .rodata.balanceShift:0000000000000000 balanceShift
                     .debug_frame:0000000000000010 $d
     /tmp/ccVfUIOB.s:740    .text.bmsStateHandler:0000000000000015 $d
     /tmp/ccVfUIOB.s:740    .text.bmsStateHandler:0000000000000016 $t
     /tmp/ccVfUIOB.s:3493   .text.decodeTemp:000000000000001f $d
     /tmp/ccVfUIOB.s:3493   .text.decodeTemp:0000000000000020 $t

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccVfUIOB.s 			page 89


HAL_NVIC_SystemReset
can2tx
HAL_Delay
can1tx
can3tx
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
