ARM GAS  /tmp/cctRGGbR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bms.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.getSOC,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	getSOC:
  25              	.LFB139:
  26              		.file 1 "Core/Src/bms.c"
   1:Core/Src/bms.c **** #include "bms.h"
   2:Core/Src/bms.c **** #include "settings.h"
   3:Core/Src/bms.c **** #include "my_math.h"
   4:Core/Src/bms.c **** 
   5:Core/Src/bms.c **** static void getPackVolt(bms_t *bms);
   6:Core/Src/bms.c **** static void getAvgCellVolt(bms_t *bms);
   7:Core/Src/bms.c **** static void getLowCellVolt(bms_t *bms);
   8:Core/Src/bms.c **** static void getHighCellVolt(bms_t *bms);
   9:Core/Src/bms.c **** static void getCellDelta(bms_t *bms);
  10:Core/Src/bms.c **** static void getLowCellTemp(bms_t *bms);
  11:Core/Src/bms.c **** static void getHighCellTemp(bms_t *bms);
  12:Core/Src/bms.c **** static void getAvgCellTemp(bms_t *bms);
  13:Core/Src/bms.c **** static void getTempDelta(bms_t *bms);
  14:Core/Src/bms.c **** static void getCellCount(bms_t *bms, int pack);
  15:Core/Src/bms.c **** static void getSOC(bms_t *bms);
  16:Core/Src/bms.c **** 
  17:Core/Src/bms.c **** enum
  18:Core/Src/bms.c **** {
  19:Core/Src/bms.c ****     Boot,
  20:Core/Src/bms.c ****     Ready,
  21:Core/Src/bms.c ****     Drive,
  22:Core/Src/bms.c ****     Charge,
  23:Core/Src/bms.c ****     Error
  24:Core/Src/bms.c **** };
  25:Core/Src/bms.c **** 
  26:Core/Src/bms.c **** enum
  27:Core/Src/bms.c **** {
  28:Core/Src/bms.c ****     off,
  29:Core/Src/bms.c ****     on, //key on, inverter off
  30:Core/Src/bms.c ****     charge_keyOff,
  31:Core/Src/bms.c ****     charge_keyOn, //who even does that
  32:Core/Src/bms.c ****     idle,         //key on, inverter on
ARM GAS  /tmp/cctRGGbR.s 			page 2


  33:Core/Src/bms.c ****     run,          //key on direction selected
  34:Core/Src/bms.c ****     launchMode,   //break shit
  35:Core/Src/bms.c ****     burnout,      //destroy tires
  36:Core/Src/bms.c **** };
  37:Core/Src/bms.c **** 
  38:Core/Src/bms.c **** /*/SOC filtering
  39:Core/Src/bms.c **** static const int numReadings = 10;
  40:Core/Src/bms.c **** static int readings[10];  // the readings from the analog input
  41:Core/Src/bms.c **** static int readIndex = 0; // the index of the current reading
  42:Core/Src/bms.c **** static int total = 0;     // the running total
  43:Core/Src/bms.c **** static int average = 0;   // the average
  44:Core/Src/bms.c **** */
  45:Core/Src/bms.c **** 
  46:Core/Src/bms.c **** static const uint8_t balanceByte[96] =
  47:Core/Src/bms.c ****     {0, 0, 0, 0, 0, 0,
  48:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  49:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2, 2, 2,
  50:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3, 3, 3,
  51:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4, 4, 4,
  52:Core/Src/bms.c ****      5, 5, 5, 5, 5, 5, 5, 5,
  53:Core/Src/bms.c ****      6, 6, 6, 6, 6, 6, 6, 6,
  54:Core/Src/bms.c ****      7, 7, 7, 7, 7, 7, 7, 7,
  55:Core/Src/bms.c ****      0, 0, 0, 0, 0, 0, 0, 0,
  56:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  57:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2,
  58:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3,
  59:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4};
  60:Core/Src/bms.c **** 
  61:Core/Src/bms.c **** static const uint8_t balanceShift[96] =
  62:Core/Src/bms.c ****     {0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  63:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  64:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  65:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  66:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  67:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  68:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  69:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  70:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  71:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  72:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  73:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  74:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20};
  75:Core/Src/bms.c **** 
  76:Core/Src/bms.c **** static int errorCount;
  77:Core/Src/bms.c **** // Initialize BMS //////////////////////////////////////////////////////////////////
  78:Core/Src/bms.c **** void initBMS(void)
  79:Core/Src/bms.c **** {
  80:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
  81:Core/Src/bms.c ****     {
  82:Core/Src/bms.c ****         BMS[i].state = Boot;
  83:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
  84:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
  85:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
  86:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
  87:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
  88:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
  89:Core/Src/bms.c ****         BMS[i].packVolt = 0;
ARM GAS  /tmp/cctRGGbR.s 			page 3


  90:Core/Src/bms.c ****         BMS[i].SOC = 0;
  91:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
  92:Core/Src/bms.c **** 
  93:Core/Src/bms.c ****         for (size_t j = 0; j < 96; j++)
  94:Core/Src/bms.c ****         {
  95:Core/Src/bms.c ****             BMS[i].cellVolt[j] = 0;
  96:Core/Src/bms.c ****         }
  97:Core/Src/bms.c **** 
  98:Core/Src/bms.c ****         for (size_t j = 0; j < 16; j++)
  99:Core/Src/bms.c ****         {
 100:Core/Src/bms.c ****             BMS[i].tempSensor[j] = 0;
 101:Core/Src/bms.c ****         }
 102:Core/Src/bms.c ****     }
 103:Core/Src/bms.c ****     //vehicleState = off;
 104:Core/Src/bms.c ****     watchdogBits = 0b0000;
 105:Core/Src/bms.c ****     chargerOn = false;
 106:Core/Src/bms.c ****     errorCount = 0;
 107:Core/Src/bms.c **** 
 108:Core/Src/bms.c **** }
 109:Core/Src/bms.c **** 
 110:Core/Src/bms.c **** // Primary State Machine ///////////////////////////////////////////////////////////////
 111:Core/Src/bms.c **** void bmsStateHandler(bms_t *bms)
 112:Core/Src/bms.c **** {
 113:Core/Src/bms.c ****     switch (bms->state)
 114:Core/Src/bms.c ****     {
 115:Core/Src/bms.c ****     case Boot:
 116:Core/Src/bms.c ****         bms->chargeRequest = 0;
 117:Core/Src/bms.c ****         bms->state = Ready;
 118:Core/Src/bms.c **** 
 119:Core/Src/bms.c ****         break;
 120:Core/Src/bms.c **** 
 121:Core/Src/bms.c ****     case Ready:
 122:Core/Src/bms.c ****         bms->chargeRequest = 0;
 123:Core/Src/bms.c ****         if (bms->avgCellVolt > BALANCE_VOLTAGE)
 124:Core/Src/bms.c ****         {
 125:Core/Src/bms.c ****             if ((bms->highCellVolt - bms->lowCellVolt) > (BALANCE_HYS << 2))
 126:Core/Src/bms.c ****             {
 127:Core/Src/bms.c ****                 bms->balancecells = true;
 128:Core/Src/bms.c ****             }
 129:Core/Src/bms.c **** 
 130:Core/Src/bms.c ****             else if ((bms->highCellVolt - bms->lowCellVolt) <= BALANCE_HYS )
 131:Core/Src/bms.c ****             {
 132:Core/Src/bms.c ****                 bms->balancecells = false;
 133:Core/Src/bms.c ****             }
 134:Core/Src/bms.c ****         }
 135:Core/Src/bms.c ****         else
 136:Core/Src/bms.c ****         {
 137:Core/Src/bms.c ****             bms->balancecells = false;
 138:Core/Src/bms.c ****         }
 139:Core/Src/bms.c **** 
 140:Core/Src/bms.c ****         if ((bms->highCellVolt < (CHARGE_V_SETPOINT - CHARGE_HYS)) && (bms->lowCellVolt > UNDER_V_S
 141:Core/Src/bms.c ****         {
 142:Core/Src/bms.c ****             bms->state = Charge;
 143:Core/Src/bms.c ****         }
 144:Core/Src/bms.c ****         break;
 145:Core/Src/bms.c **** 
 146:Core/Src/bms.c ****     case Charge:
ARM GAS  /tmp/cctRGGbR.s 			page 4


 147:Core/Src/bms.c ****         bms->balancecells = false;
 148:Core/Src/bms.c ****         bms->chargeRequest = 1;        
 149:Core/Src/bms.c **** 
 150:Core/Src/bms.c ****         if (bms->highCellVolt > CHARGE_V_SETPOINT)// || bms->highCellTemp > OVER_T_SETPOINT)
 151:Core/Src/bms.c ****         {
 152:Core/Src/bms.c ****             bms->state = Ready;
 153:Core/Src/bms.c ****         }
 154:Core/Src/bms.c ****         break;
 155:Core/Src/bms.c **** 
 156:Core/Src/bms.c ****     case Error:
 157:Core/Src/bms.c ****         HAL_NVIC_SystemReset();
 158:Core/Src/bms.c ****         break;
 159:Core/Src/bms.c **** 
 160:Core/Src/bms.c ****     default:
 161:Core/Src/bms.c ****         break;
 162:Core/Src/bms.c ****     }
 163:Core/Src/bms.c **** }
 164:Core/Src/bms.c **** 
 165:Core/Src/bms.c **** // 10kw Tesla Charger /////////////////////////////////////////////////////////////////////
 166:Core/Src/bms.c **** void acChargeCommand(void)
 167:Core/Src/bms.c **** {
 168:Core/Src/bms.c ****     uint8_t canTx2[8];
 169:Core/Src/bms.c ****     if (chargerOn)
 170:Core/Src/bms.c ****     {
 171:Core/Src/bms.c ****         int val = 32;
 172:Core/Src/bms.c ****         canTx2[0] = 0x40;
 173:Core/Src/bms.c ****         canTx2[1] = 0x00;
 174:Core/Src/bms.c ****         canTx2[2] = 0x20;
 175:Core/Src/bms.c ****         canTx2[3] = 9;
 176:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 177:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF; 
 178:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 179:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 180:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2); 
 181:Core/Src/bms.c ****     }
 182:Core/Src/bms.c ****     else
 183:Core/Src/bms.c ****     {
 184:Core/Src/bms.c ****         int val = 0;
 185:Core/Src/bms.c ****         canTx2[0] = 0x40;
 186:Core/Src/bms.c ****         canTx2[1] = 0x00;
 187:Core/Src/bms.c ****         canTx2[2] = 0x20;
 188:Core/Src/bms.c ****         canTx2[3] = 9;
 189:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 190:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 191:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 192:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 193:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2);
 194:Core/Src/bms.c **** 
 195:Core/Src/bms.c ****     }
 196:Core/Src/bms.c ****     HAL_Delay(1);
 197:Core/Src/bms.c **** }
 198:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 199:Core/Src/bms.c **** void tx500kData(void)
 200:Core/Src/bms.c **** {
 201:Core/Src/bms.c **** 
 202:Core/Src/bms.c ****     uint8_t bms0[8];
 203:Core/Src/bms.c ****     bms0[0] = BMS[0].packVolt & 0xFF;
ARM GAS  /tmp/cctRGGbR.s 			page 5


 204:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 205:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 206:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 207:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 208:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 209:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 210:Core/Src/bms.c ****     bms0[7] = (BMS[0].balancecells);//0;
 211:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 212:Core/Src/bms.c **** 
 213:Core/Src/bms.c **** 
 214:Core/Src/bms.c ****     uint8_t bms1[8];
 215:Core/Src/bms.c ****     bms1[0] = BMS[1].packVolt & 0xFF;
 216:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 217:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 218:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 219:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 220:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 221:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 222:Core/Src/bms.c ****     bms1[7] = (BMS[1].balancecells);//0;
 223:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 224:Core/Src/bms.c **** 
 225:Core/Src/bms.c **** }
 226:Core/Src/bms.c **** 
 227:Core/Src/bms.c **** void refreshData(void)
 228:Core/Src/bms.c **** {
 229:Core/Src/bms.c **** 
 230:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 231:Core/Src/bms.c ****     {
 232:Core/Src/bms.c ****         //requestBICMdata(&BMS[i], i);
 233:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 234:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 235:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 236:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 237:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 238:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 239:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 240:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 241:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 242:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 243:Core/Src/bms.c ****         getSOC(&BMS[i]);
 244:Core/Src/bms.c ****     }
 245:Core/Src/bms.c **** }
 246:Core/Src/bms.c **** 
 247:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 248:Core/Src/bms.c **** void sendCommand(int pack)
 249:Core/Src/bms.c **** {
 250:Core/Src/bms.c ****     uint8_t canTx[3];
 251:Core/Src/bms.c ****     canTx[0] = 0x02;
 252:Core/Src/bms.c ****     canTx[1] = 0x00;
 253:Core/Src/bms.c ****     canTx[2] = 0x00;
 254:Core/Src/bms.c **** 
 255:Core/Src/bms.c ****     switch (pack)
 256:Core/Src/bms.c ****     {
 257:Core/Src/bms.c ****     case 0:
 258:Core/Src/bms.c ****         can1tx(0x200, 3, canTx);
 259:Core/Src/bms.c ****         break;
 260:Core/Src/bms.c **** 
ARM GAS  /tmp/cctRGGbR.s 			page 6


 261:Core/Src/bms.c ****     case 1:
 262:Core/Src/bms.c ****         can3tx(0x200, 3, canTx);
 263:Core/Src/bms.c ****         break;
 264:Core/Src/bms.c **** 
 265:Core/Src/bms.c ****     default:
 266:Core/Src/bms.c ****         break;
 267:Core/Src/bms.c ****     }
 268:Core/Src/bms.c **** }
 269:Core/Src/bms.c **** 
 270:Core/Src/bms.c **** void requestBICMdata(bms_t *bms, int pack)
 271:Core/Src/bms.c **** {
 272:Core/Src/bms.c **** 
 273:Core/Src/bms.c ****     uint8_t canTx[8];
 274:Core/Src/bms.c ****     if (!bms->balancecells)
 275:Core/Src/bms.c ****     {
 276:Core/Src/bms.c ****         sendCommand(pack);
 277:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 278:Core/Src/bms.c ****         {
 279:Core/Src/bms.c ****             canTx[i] = 0x00;
 280:Core/Src/bms.c ****         }
 281:Core/Src/bms.c ****         switch (pack)
 282:Core/Src/bms.c ****         {
 283:Core/Src/bms.c ****         case 0:
 284:Core/Src/bms.c ****             can1tx(0x300, 8, canTx);
 285:Core/Src/bms.c ****             break;
 286:Core/Src/bms.c **** 
 287:Core/Src/bms.c ****         case 1:
 288:Core/Src/bms.c ****             can3tx(0x300, 8, canTx);
 289:Core/Src/bms.c ****             break;
 290:Core/Src/bms.c **** 
 291:Core/Src/bms.c ****         default:
 292:Core/Src/bms.c ****             break;
 293:Core/Src/bms.c ****         }
 294:Core/Src/bms.c **** 
 295:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 296:Core/Src/bms.c ****         {
 297:Core/Src/bms.c ****             canTx[i] = 0x00;
 298:Core/Src/bms.c ****         }
 299:Core/Src/bms.c **** 
 300:Core/Src/bms.c ****         switch (pack)
 301:Core/Src/bms.c ****         {
 302:Core/Src/bms.c ****         case 0:
 303:Core/Src/bms.c ****             can1tx(0x310, 5, canTx);
 304:Core/Src/bms.c ****             break;
 305:Core/Src/bms.c **** 
 306:Core/Src/bms.c ****         case 1:
 307:Core/Src/bms.c ****             can3tx(0x310, 5, canTx);
 308:Core/Src/bms.c ****             break;
 309:Core/Src/bms.c **** 
 310:Core/Src/bms.c ****         default:
 311:Core/Src/bms.c ****             break;
 312:Core/Src/bms.c ****         }
 313:Core/Src/bms.c ****     }
 314:Core/Src/bms.c **** }
 315:Core/Src/bms.c **** 
 316:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 317:Core/Src/bms.c **** void balanceCommand(bms_t *bms, int pack)
ARM GAS  /tmp/cctRGGbR.s 			page 7


 318:Core/Src/bms.c **** {
 319:Core/Src/bms.c ****     sendCommand(pack);
 320:Core/Src/bms.c ****     uint8_t balance[8];
 321:Core/Src/bms.c **** 
 322:Core/Src/bms.c ****     switch (pack)
 323:Core/Src/bms.c ****     {
 324:Core/Src/bms.c ****     case 0:
 325:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 326:Core/Src/bms.c ****         {
 327:Core/Src/bms.c ****             balance[i] = 0;
 328:Core/Src/bms.c ****         }
 329:Core/Src/bms.c **** 
 330:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 331:Core/Src/bms.c ****         {
 332:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 333:Core/Src/bms.c ****             {
 334:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 335:Core/Src/bms.c ****             }
 336:Core/Src/bms.c ****         }
 337:Core/Src/bms.c ****         can1tx(0x300, 8, balance);
 338:Core/Src/bms.c **** 
 339:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 340:Core/Src/bms.c ****         {
 341:Core/Src/bms.c ****             balance[i] = 0;
 342:Core/Src/bms.c ****         }
 343:Core/Src/bms.c **** 
 344:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 345:Core/Src/bms.c ****         {
 346:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 347:Core/Src/bms.c ****             {
 348:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 349:Core/Src/bms.c ****             }
 350:Core/Src/bms.c ****         }
 351:Core/Src/bms.c ****         can1tx(0x310, 5, balance);
 352:Core/Src/bms.c ****         break;
 353:Core/Src/bms.c **** 
 354:Core/Src/bms.c ****     case 1:
 355:Core/Src/bms.c **** 
 356:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 357:Core/Src/bms.c ****         {
 358:Core/Src/bms.c ****             balance[i] = 0;
 359:Core/Src/bms.c ****         }
 360:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 361:Core/Src/bms.c ****         {
 362:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 363:Core/Src/bms.c ****             {
 364:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 365:Core/Src/bms.c ****             }
 366:Core/Src/bms.c ****         }
 367:Core/Src/bms.c ****         can3tx(0x300, 8, balance);
 368:Core/Src/bms.c **** 
 369:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 370:Core/Src/bms.c ****         {
 371:Core/Src/bms.c ****             balance[i] = 0;
 372:Core/Src/bms.c ****         }
 373:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 374:Core/Src/bms.c ****         {
ARM GAS  /tmp/cctRGGbR.s 			page 8


 375:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 376:Core/Src/bms.c ****             {
 377:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 378:Core/Src/bms.c ****             }
 379:Core/Src/bms.c ****         }
 380:Core/Src/bms.c ****         can3tx(0x310, 5, balance);
 381:Core/Src/bms.c ****         break;
 382:Core/Src/bms.c **** 
 383:Core/Src/bms.c ****     default:
 384:Core/Src/bms.c ****         break;
 385:Core/Src/bms.c ****     }
 386:Core/Src/bms.c **** }
 387:Core/Src/bms.c **** 
 388:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 389:Core/Src/bms.c **** void getSOC(bms_t *bms)
 390:Core/Src/bms.c **** {
  27              		.loc 1 390 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 391:Core/Src/bms.c ****     bms->SOC = MAP(bms->avgCellVolt, SOC_VOLT_10, SOC_VOLT_90, 10, 90);
  33              		.loc 1 391 0
  34 0000 B0F8E620 		ldrh	r2, [r0, #230]
  35 0004 92B2     		uxth	r2, r2
  36 0006 A2F64852 		subw	r2, r2, #3400
  37 000a 02EB8202 		add	r2, r2, r2, lsl #2
  38 000e 1301     		lsls	r3, r2, #4
  39 0010 054A     		ldr	r2, .L2
  40 0012 82FB0312 		smull	r1, r2, r2, r3
  41 0016 DB17     		asrs	r3, r3, #31
  42 0018 C3EB2223 		rsb	r3, r3, r2, asr #8
  43 001c 0A33     		adds	r3, r3, #10
  44 001e DBB2     		uxtb	r3, r3
  45 0020 80F8F330 		strb	r3, [r0, #243]
  46 0024 7047     		bx	lr
  47              	.L3:
  48 0026 00BF     		.align	2
  49              	.L2:
  50 0028 91739F5D 		.word	1570730897
  51              		.cfi_endproc
  52              	.LFE139:
  54              		.section	.text.getHighCellVolt,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	getHighCellVolt:
  62              	.LFB140:
 392:Core/Src/bms.c ****     /*
 393:Core/Src/bms.c ****     // subtract the last reading:
 394:Core/Src/bms.c ****     total = total - readings[readIndex];
 395:Core/Src/bms.c ****     // read from the sensor:
 396:Core/Src/bms.c ****     readings[readIndex] = bms->SOC;
 397:Core/Src/bms.c ****     // add the reading to the total:
ARM GAS  /tmp/cctRGGbR.s 			page 9


 398:Core/Src/bms.c ****     total = total + readings[readIndex];
 399:Core/Src/bms.c ****     // advance to the next position in the array:
 400:Core/Src/bms.c ****     readIndex = readIndex + 1;
 401:Core/Src/bms.c ****     // if we're at the end of the array...
 402:Core/Src/bms.c ****     if (readIndex >= numReadings)
 403:Core/Src/bms.c ****     {
 404:Core/Src/bms.c ****         // ...wrap around to the beginning:
 405:Core/Src/bms.c ****         readIndex = 0;
 406:Core/Src/bms.c ****     }
 407:Core/Src/bms.c ****     // calculate the average:
 408:Core/Src/bms.c ****     average = total / numReadings;
 409:Core/Src/bms.c ****     */
 410:Core/Src/bms.c **** }
 411:Core/Src/bms.c **** 
 412:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 413:Core/Src/bms.c **** void getHighCellVolt(bms_t *bms)
 414:Core/Src/bms.c **** {
  63              		.loc 1 414 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68              	.LVL1:
 415:Core/Src/bms.c ****     bms->highCellVolt = 0;
  69              		.loc 1 415 0
  70 0000 0023     		movs	r3, #0
  71 0002 A0F8E430 		strh	r3, [r0, #228]	@ movhi
  72              	.LVL2:
  73              	.LBB2:
 416:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
  74              		.loc 1 416 0
  75 0006 00E0     		b	.L5
  76              	.LVL3:
  77              	.L6:
  78              		.loc 1 416 0 is_stmt 0 discriminator 2
  79 0008 0133     		adds	r3, r3, #1
  80              	.LVL4:
  81              	.L5:
  82              		.loc 1 416 0 discriminator 1
  83 000a 5F2B     		cmp	r3, #95
  84 000c 0DD8     		bhi	.L8
 417:Core/Src/bms.c ****     {
 418:Core/Src/bms.c ****         if (bms->cellVolt[i] > bms->highCellVolt)
  85              		.loc 1 418 0 is_stmt 1
  86 000e 30F81310 		ldrh	r1, [r0, r3, lsl #1]
  87 0012 89B2     		uxth	r1, r1
  88 0014 B0F8E420 		ldrh	r2, [r0, #228]
  89 0018 92B2     		uxth	r2, r2
  90 001a 9142     		cmp	r1, r2
  91 001c F4D9     		bls	.L6
 419:Core/Src/bms.c ****         {
 420:Core/Src/bms.c ****             bms->highCellVolt = bms->cellVolt[i];
  92              		.loc 1 420 0
  93 001e 30F81320 		ldrh	r2, [r0, r3, lsl #1]
  94 0022 92B2     		uxth	r2, r2
  95 0024 A0F8E420 		strh	r2, [r0, #228]	@ movhi
  96 0028 EEE7     		b	.L6
ARM GAS  /tmp/cctRGGbR.s 			page 10


  97              	.L8:
  98              	.LBE2:
 421:Core/Src/bms.c ****         }
 422:Core/Src/bms.c ****     }
 423:Core/Src/bms.c **** }
  99              		.loc 1 423 0
 100 002a 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE140:
 104              		.section	.text.getHighCellTemp,"ax",%progbits
 105              		.align	1
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 109              		.fpu fpv4-sp-d16
 111              	getHighCellTemp:
 112              	.LFB141:
 424:Core/Src/bms.c **** 
 425:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 426:Core/Src/bms.c **** void getHighCellTemp(bms_t *bms)
 427:Core/Src/bms.c **** {
 113              		.loc 1 427 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL5:
 428:Core/Src/bms.c ****     bms->highCellTemp = 0;
 119              		.loc 1 428 0
 120 0000 0023     		movs	r3, #0
 121 0002 A0F8EA30 		strh	r3, [r0, #234]	@ movhi
 122              	.LVL6:
 123              	.LBB3:
 429:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 124              		.loc 1 429 0
 125 0006 00E0     		b	.L10
 126              	.LVL7:
 127              	.L11:
 128              		.loc 1 429 0 is_stmt 0 discriminator 2
 129 0008 0133     		adds	r3, r3, #1
 130              	.LVL8:
 131              	.L10:
 132              		.loc 1 429 0 discriminator 1
 133 000a 0F2B     		cmp	r3, #15
 134 000c 11D8     		bhi	.L13
 430:Core/Src/bms.c ****     {
 431:Core/Src/bms.c ****         if (bms->tempSensor[i] > bms->highCellTemp)
 135              		.loc 1 431 0 is_stmt 1
 136 000e 03F16002 		add	r2, r3, #96
 137 0012 30F81210 		ldrh	r1, [r0, r2, lsl #1]
 138 0016 89B2     		uxth	r1, r1
 139 0018 B0F8EA20 		ldrh	r2, [r0, #234]
 140 001c 92B2     		uxth	r2, r2
 141 001e 9142     		cmp	r1, r2
 142 0020 F2D9     		bls	.L11
 432:Core/Src/bms.c ****         {
 433:Core/Src/bms.c ****             bms->highCellTemp = bms->tempSensor[i];
ARM GAS  /tmp/cctRGGbR.s 			page 11


 143              		.loc 1 433 0
 144 0022 03F16002 		add	r2, r3, #96
 145 0026 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 146 002a 92B2     		uxth	r2, r2
 147 002c A0F8EA20 		strh	r2, [r0, #234]	@ movhi
 148 0030 EAE7     		b	.L11
 149              	.L13:
 150              	.LBE3:
 434:Core/Src/bms.c ****         }
 435:Core/Src/bms.c ****     }
 436:Core/Src/bms.c **** }
 151              		.loc 1 436 0
 152 0032 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE141:
 156              		.section	.text.getLowCellTemp,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	getLowCellTemp:
 164              	.LFB142:
 437:Core/Src/bms.c **** 
 438:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 439:Core/Src/bms.c **** void getLowCellTemp(bms_t *bms)
 440:Core/Src/bms.c **** {
 165              		.loc 1 440 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              	.LVL9:
 441:Core/Src/bms.c ****     bms->lowCellTemp = 20000;
 171              		.loc 1 441 0
 172 0000 44F62063 		movw	r3, #20000
 173 0004 A0F8EC30 		strh	r3, [r0, #236]	@ movhi
 174              	.LVL10:
 175              	.LBB4:
 442:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 176              		.loc 1 442 0
 177 0008 0023     		movs	r3, #0
 178 000a 00E0     		b	.L15
 179              	.LVL11:
 180              	.L16:
 181              		.loc 1 442 0 is_stmt 0 discriminator 2
 182 000c 0133     		adds	r3, r3, #1
 183              	.LVL12:
 184              	.L15:
 185              		.loc 1 442 0 discriminator 1
 186 000e 0F2B     		cmp	r3, #15
 187 0010 18D8     		bhi	.L18
 443:Core/Src/bms.c ****     {
 444:Core/Src/bms.c ****         if (bms->tempSensor[i] > 0)
 188              		.loc 1 444 0 is_stmt 1
 189 0012 03F16002 		add	r2, r3, #96
 190 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
ARM GAS  /tmp/cctRGGbR.s 			page 12


 191 001a 92B2     		uxth	r2, r2
 192 001c 002A     		cmp	r2, #0
 193 001e F5D0     		beq	.L16
 445:Core/Src/bms.c ****         {
 446:Core/Src/bms.c ****             if (bms->tempSensor[i] < bms->lowCellTemp)
 194              		.loc 1 446 0
 195 0020 03F16002 		add	r2, r3, #96
 196 0024 30F81210 		ldrh	r1, [r0, r2, lsl #1]
 197 0028 89B2     		uxth	r1, r1
 198 002a B0F8EC20 		ldrh	r2, [r0, #236]
 199 002e 92B2     		uxth	r2, r2
 200 0030 9142     		cmp	r1, r2
 201 0032 EBD2     		bcs	.L16
 447:Core/Src/bms.c ****             {
 448:Core/Src/bms.c ****                 bms->lowCellTemp = bms->tempSensor[i];
 202              		.loc 1 448 0
 203 0034 03F16002 		add	r2, r3, #96
 204 0038 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 205 003c 92B2     		uxth	r2, r2
 206 003e A0F8EC20 		strh	r2, [r0, #236]	@ movhi
 207 0042 E3E7     		b	.L16
 208              	.L18:
 209              	.LBE4:
 449:Core/Src/bms.c ****             }
 450:Core/Src/bms.c ****         }
 451:Core/Src/bms.c ****     }
 452:Core/Src/bms.c **** }
 210              		.loc 1 452 0
 211 0044 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE142:
 215              		.section	.text.getAvgCellTemp,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu fpv4-sp-d16
 222              	getAvgCellTemp:
 223              	.LFB143:
 453:Core/Src/bms.c **** 
 454:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 455:Core/Src/bms.c **** void getAvgCellTemp(bms_t *bms)
 456:Core/Src/bms.c **** {
 224              		.loc 1 456 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL13:
 230 0000 10B4     		push	{r4}
 231              	.LCFI0:
 232              		.cfi_def_cfa_offset 4
 233              		.cfi_offset 4, -4
 234              	.LVL14:
 235              	.LBB5:
 457:Core/Src/bms.c ****     int zeroCounter = 0;
 458:Core/Src/bms.c ****     int sumTemp = 0;
ARM GAS  /tmp/cctRGGbR.s 			page 13


 459:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 236              		.loc 1 459 0
 237 0002 0023     		movs	r3, #0
 238              	.LBE5:
 458:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 239              		.loc 1 458 0
 240 0004 1946     		mov	r1, r3
 457:Core/Src/bms.c ****     int zeroCounter = 0;
 241              		.loc 1 457 0
 242 0006 1C46     		mov	r4, r3
 243              	.LBB6:
 244              		.loc 1 459 0
 245 0008 06E0     		b	.L20
 246              	.LVL15:
 247              	.L21:
 460:Core/Src/bms.c ****     {
 461:Core/Src/bms.c ****         if (bms->tempSensor[i] == 0) //IGNORE_TEMP)
 462:Core/Src/bms.c ****         {
 463:Core/Src/bms.c ****             zeroCounter++;
 464:Core/Src/bms.c ****         }
 465:Core/Src/bms.c **** 
 466:Core/Src/bms.c ****         sumTemp += bms->tempSensor[i];
 248              		.loc 1 466 0 discriminator 2
 249 000a 03F16002 		add	r2, r3, #96
 250 000e 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 251 0012 11FA82F1 		uxtah	r1, r1, r2
 252              	.LVL16:
 459:Core/Src/bms.c ****     {
 253              		.loc 1 459 0 discriminator 2
 254 0016 0133     		adds	r3, r3, #1
 255              	.LVL17:
 256              	.L20:
 459:Core/Src/bms.c ****     {
 257              		.loc 1 459 0 is_stmt 0 discriminator 1
 258 0018 0F2B     		cmp	r3, #15
 259 001a 08D8     		bhi	.L24
 461:Core/Src/bms.c ****         {
 260              		.loc 1 461 0 is_stmt 1
 261 001c 03F16002 		add	r2, r3, #96
 262 0020 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 263 0024 92B2     		uxth	r2, r2
 264 0026 002A     		cmp	r2, #0
 265 0028 EFD1     		bne	.L21
 463:Core/Src/bms.c ****         }
 266              		.loc 1 463 0
 267 002a 0134     		adds	r4, r4, #1
 268              	.LVL18:
 269 002c EDE7     		b	.L21
 270              	.L24:
 271              	.LBE6:
 467:Core/Src/bms.c ****     }
 468:Core/Src/bms.c ****     bms->avgCellTemp = (sumTemp / (16 - zeroCounter));
 272              		.loc 1 468 0
 273 002e C4F11004 		rsb	r4, r4, #16
 274              	.LVL19:
 275 0032 91FBF4F1 		sdiv	r1, r1, r4
 276              	.LVL20:
ARM GAS  /tmp/cctRGGbR.s 			page 14


 277 0036 89B2     		uxth	r1, r1
 278 0038 A0F8EE10 		strh	r1, [r0, #238]	@ movhi
 469:Core/Src/bms.c **** }
 279              		.loc 1 469 0
 280 003c 5DF8044B 		ldr	r4, [sp], #4
 281              	.LCFI1:
 282              		.cfi_restore 4
 283              		.cfi_def_cfa_offset 0
 284 0040 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE143:
 288              		.section	.text.getTempDelta,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	getTempDelta:
 296              	.LFB144:
 470:Core/Src/bms.c **** 
 471:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 472:Core/Src/bms.c **** void getTempDelta(bms_t *bms)
 473:Core/Src/bms.c **** {
 297              		.loc 1 473 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL21:
 474:Core/Src/bms.c ****     bms->tempDelta = bms->highCellTemp - bms->lowCellTemp;
 303              		.loc 1 474 0
 304 0000 B0F8EA30 		ldrh	r3, [r0, #234]
 305 0004 9BB2     		uxth	r3, r3
 306 0006 B0F8EC20 		ldrh	r2, [r0, #236]
 307 000a 92B2     		uxth	r2, r2
 308 000c 9B1A     		subs	r3, r3, r2
 309 000e 9BB2     		uxth	r3, r3
 310 0010 A0F8F030 		strh	r3, [r0, #240]	@ movhi
 311 0014 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE144:
 315              		.section	.text.getCellDelta,"ax",%progbits
 316              		.align	1
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	getCellDelta:
 323              	.LFB145:
 475:Core/Src/bms.c **** }
 476:Core/Src/bms.c **** 
 477:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 478:Core/Src/bms.c **** void getCellDelta(bms_t *bms)
 479:Core/Src/bms.c **** {
 324              		.loc 1 479 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cctRGGbR.s 			page 15


 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329              	.LVL22:
 480:Core/Src/bms.c ****     bms->cellDelta = bms->highCellVolt - bms->lowCellVolt;
 330              		.loc 1 480 0
 331 0000 B0F8E430 		ldrh	r3, [r0, #228]
 332 0004 9BB2     		uxth	r3, r3
 333 0006 B0F8E220 		ldrh	r2, [r0, #226]
 334 000a 92B2     		uxth	r2, r2
 335 000c 9B1A     		subs	r3, r3, r2
 336 000e 9BB2     		uxth	r3, r3
 337 0010 A0F8E830 		strh	r3, [r0, #232]	@ movhi
 338 0014 7047     		bx	lr
 339              		.cfi_endproc
 340              	.LFE145:
 342              		.section	.text.getLowCellVolt,"ax",%progbits
 343              		.align	1
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	getLowCellVolt:
 350              	.LFB146:
 481:Core/Src/bms.c **** }
 482:Core/Src/bms.c **** 
 483:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 484:Core/Src/bms.c **** void getLowCellVolt(bms_t *bms)
 485:Core/Src/bms.c **** {
 351              		.loc 1 485 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356              	.LVL23:
 486:Core/Src/bms.c ****     bms->lowCellVolt = 5000;
 357              		.loc 1 486 0
 358 0000 41F28833 		movw	r3, #5000
 359 0004 A0F8E230 		strh	r3, [r0, #226]	@ movhi
 360              	.LVL24:
 361              	.LBB7:
 487:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 362              		.loc 1 487 0
 363 0008 0023     		movs	r3, #0
 364 000a 00E0     		b	.L28
 365              	.LVL25:
 366              	.L29:
 367              		.loc 1 487 0 is_stmt 0 discriminator 2
 368 000c 0133     		adds	r3, r3, #1
 369              	.LVL26:
 370              	.L28:
 371              		.loc 1 487 0 discriminator 1
 372 000e 5F2B     		cmp	r3, #95
 373 0010 0DD8     		bhi	.L31
 488:Core/Src/bms.c ****     {
 489:Core/Src/bms.c ****         if (bms->cellVolt[i] < bms->lowCellVolt)
 374              		.loc 1 489 0 is_stmt 1
 375 0012 30F81310 		ldrh	r1, [r0, r3, lsl #1]
ARM GAS  /tmp/cctRGGbR.s 			page 16


 376 0016 89B2     		uxth	r1, r1
 377 0018 B0F8E220 		ldrh	r2, [r0, #226]
 378 001c 92B2     		uxth	r2, r2
 379 001e 9142     		cmp	r1, r2
 380 0020 F4D2     		bcs	.L29
 490:Core/Src/bms.c ****         {
 491:Core/Src/bms.c ****             bms->lowCellVolt = bms->cellVolt[i];
 381              		.loc 1 491 0
 382 0022 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 383 0026 92B2     		uxth	r2, r2
 384 0028 A0F8E220 		strh	r2, [r0, #226]	@ movhi
 385 002c EEE7     		b	.L29
 386              	.L31:
 387              	.LBE7:
 492:Core/Src/bms.c ****         }
 493:Core/Src/bms.c ****     }
 494:Core/Src/bms.c **** }
 388              		.loc 1 494 0
 389 002e 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE146:
 393              		.section	.text.getAvgCellVolt,"ax",%progbits
 394              		.align	1
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 398              		.fpu fpv4-sp-d16
 400              	getAvgCellVolt:
 401              	.LFB147:
 495:Core/Src/bms.c **** 
 496:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 497:Core/Src/bms.c **** void getAvgCellVolt(bms_t *bms)
 498:Core/Src/bms.c **** {
 402              		.loc 1 498 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407              	.LVL27:
 408              	.LBB8:
 499:Core/Src/bms.c **** 
 500:Core/Src/bms.c ****     int cellSum = 0;
 501:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 409              		.loc 1 501 0
 410 0000 0023     		movs	r3, #0
 411              	.LBE8:
 500:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 412              		.loc 1 500 0
 413 0002 1A46     		mov	r2, r3
 414              	.LBB9:
 415              		.loc 1 501 0
 416 0004 04E0     		b	.L33
 417              	.LVL28:
 418              	.L34:
 502:Core/Src/bms.c ****     {
 503:Core/Src/bms.c **** 
 504:Core/Src/bms.c ****         cellSum += bms->cellVolt[i];
ARM GAS  /tmp/cctRGGbR.s 			page 17


 419              		.loc 1 504 0 discriminator 3
 420 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 421 000a 12FA81F2 		uxtah	r2, r2, r1
 422              	.LVL29:
 501:Core/Src/bms.c ****     {
 423              		.loc 1 501 0 discriminator 3
 424 000e 0133     		adds	r3, r3, #1
 425              	.LVL30:
 426              	.L33:
 501:Core/Src/bms.c ****     {
 427              		.loc 1 501 0 is_stmt 0 discriminator 1
 428 0010 5F2B     		cmp	r3, #95
 429 0012 F8D9     		bls	.L34
 430              	.LBE9:
 505:Core/Src/bms.c ****     }
 506:Core/Src/bms.c ****     bms->avgCellVolt = (cellSum / 96);
 431              		.loc 1 506 0 is_stmt 1
 432 0014 0449     		ldr	r1, .L35
 433 0016 81FB0231 		smull	r3, r1, r1, r2
 434              	.LVL31:
 435 001a D317     		asrs	r3, r2, #31
 436 001c C3EB2113 		rsb	r3, r3, r1, asr #4
 437 0020 9BB2     		uxth	r3, r3
 438 0022 A0F8E630 		strh	r3, [r0, #230]	@ movhi
 439 0026 7047     		bx	lr
 440              	.L36:
 441              		.align	2
 442              	.L35:
 443 0028 ABAAAA2A 		.word	715827883
 444              		.cfi_endproc
 445              	.LFE147:
 447              		.section	.text.getPackVolt,"ax",%progbits
 448              		.align	1
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv4-sp-d16
 454              	getPackVolt:
 455              	.LFB148:
 507:Core/Src/bms.c **** }
 508:Core/Src/bms.c **** 
 509:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 510:Core/Src/bms.c **** void getPackVolt(bms_t *bms)
 511:Core/Src/bms.c **** {
 456              		.loc 1 511 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461              	.LVL32:
 462              	.LBB10:
 512:Core/Src/bms.c ****     uint32_t packSum = 0;
 513:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 463              		.loc 1 513 0
 464 0000 0023     		movs	r3, #0
 465              	.LBE10:
 512:Core/Src/bms.c ****     uint32_t packSum = 0;
ARM GAS  /tmp/cctRGGbR.s 			page 18


 466              		.loc 1 512 0
 467 0002 1A46     		mov	r2, r3
 468              	.LBB11:
 469              		.loc 1 513 0
 470 0004 04E0     		b	.L38
 471              	.LVL33:
 472              	.L39:
 514:Core/Src/bms.c ****     {
 515:Core/Src/bms.c ****         packSum += bms->cellVolt[i];
 473              		.loc 1 515 0 discriminator 3
 474 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 475 000a 12FA81F2 		uxtah	r2, r2, r1
 476              	.LVL34:
 513:Core/Src/bms.c ****     {
 477              		.loc 1 513 0 discriminator 3
 478 000e 0133     		adds	r3, r3, #1
 479              	.LVL35:
 480              	.L38:
 513:Core/Src/bms.c ****     {
 481              		.loc 1 513 0 is_stmt 0 discriminator 1
 482 0010 5F2B     		cmp	r3, #95
 483 0012 F8D9     		bls	.L39
 484              	.LBE11:
 516:Core/Src/bms.c ****     }
 517:Core/Src/bms.c ****     bms->packVolt = packSum / 10;
 485              		.loc 1 517 0 is_stmt 1
 486 0014 034B     		ldr	r3, .L40
 487              	.LVL36:
 488 0016 A3FB0223 		umull	r2, r3, r3, r2
 489              	.LVL37:
 490 001a C3F3CF03 		ubfx	r3, r3, #3, #16
 491 001e A0F8E030 		strh	r3, [r0, #224]	@ movhi
 492 0022 7047     		bx	lr
 493              	.L41:
 494              		.align	2
 495              	.L40:
 496 0024 CDCCCCCC 		.word	-858993459
 497              		.cfi_endproc
 498              	.LFE148:
 500              		.section	.text.getCellCount,"ax",%progbits
 501              		.align	1
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 505              		.fpu fpv4-sp-d16
 507              	getCellCount:
 508              	.LFB149:
 518:Core/Src/bms.c **** }
 519:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 520:Core/Src/bms.c **** void getCellCount(bms_t *bms, int pack)
 521:Core/Src/bms.c **** {
 509              		.loc 1 521 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514              	.LVL38:
ARM GAS  /tmp/cctRGGbR.s 			page 19


 515 0000 10B4     		push	{r4}
 516              	.LCFI2:
 517              		.cfi_def_cfa_offset 4
 518              		.cfi_offset 4, -4
 519              	.LVL39:
 520              	.LBB12:
 522:Core/Src/bms.c ****     uint16_t cellCount = 0;
 523:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 521              		.loc 1 523 0
 522 0002 0023     		movs	r3, #0
 523              	.LBE12:
 522:Core/Src/bms.c ****     uint16_t cellCount = 0;
 524              		.loc 1 522 0
 525 0004 1C46     		mov	r4, r3
 526              	.LBB13:
 527              		.loc 1 523 0
 528 0006 00E0     		b	.L43
 529              	.LVL40:
 530              	.L44:
 531              		.loc 1 523 0 is_stmt 0 discriminator 2
 532 0008 0133     		adds	r3, r3, #1
 533              	.LVL41:
 534              	.L43:
 535              		.loc 1 523 0 discriminator 1
 536 000a 5F2B     		cmp	r3, #95
 537 000c 08D8     		bhi	.L48
 524:Core/Src/bms.c ****     {
 525:Core/Src/bms.c ****         if (bms->cellVolt[i] > IGNORE_VOLT)
 538              		.loc 1 525 0 is_stmt 1
 539 000e 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 540 0012 92B2     		uxth	r2, r2
 541 0014 B2F5FA7F 		cmp	r2, #500
 542 0018 F6D9     		bls	.L44
 526:Core/Src/bms.c ****         {
 527:Core/Src/bms.c ****             cellCount++;
 543              		.loc 1 527 0
 544 001a 0134     		adds	r4, r4, #1
 545              	.LVL42:
 546 001c A4B2     		uxth	r4, r4
 547              	.LVL43:
 548 001e F3E7     		b	.L44
 549              	.L48:
 550              	.LBE13:
 528:Core/Src/bms.c ****         }
 529:Core/Src/bms.c ****     }
 530:Core/Src/bms.c ****     if (cellCount != 96)
 551              		.loc 1 530 0
 552 0020 602C     		cmp	r4, #96
 553 0022 0CD0     		beq	.L42
 531:Core/Src/bms.c ****     {
 532:Core/Src/bms.c ****         //BMS[pack].state = Error;
 533:Core/Src/bms.c ****         errorCount++;
 554              		.loc 1 533 0
 555 0024 074A     		ldr	r2, .L49
 556 0026 1368     		ldr	r3, [r2]
 557              	.LVL44:
 558 0028 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cctRGGbR.s 			page 20


 559 002a 1360     		str	r3, [r2]
 534:Core/Src/bms.c ****         if (errorCount > 5)
 560              		.loc 1 534 0
 561 002c 052B     		cmp	r3, #5
 562 002e 06DD     		ble	.L42
 535:Core/Src/bms.c ****         {
 536:Core/Src/bms.c ****             BMS[pack].state = Error;
 563              		.loc 1 536 0
 564 0030 F622     		movs	r2, #246
 565 0032 054B     		ldr	r3, .L49+4
 566 0034 02FB0131 		mla	r1, r2, r1, r3
 567              	.LVL45:
 568 0038 0423     		movs	r3, #4
 569 003a 81F8F230 		strb	r3, [r1, #242]
 570              	.L42:
 537:Core/Src/bms.c ****         }
 538:Core/Src/bms.c ****     }
 539:Core/Src/bms.c **** }
 571              		.loc 1 539 0
 572 003e 5DF8044B 		ldr	r4, [sp], #4
 573              	.LCFI3:
 574              		.cfi_restore 4
 575              		.cfi_def_cfa_offset 0
 576              	.LVL46:
 577 0042 7047     		bx	lr
 578              	.L50:
 579              		.align	2
 580              	.L49:
 581 0044 00000000 		.word	.LANCHOR0
 582 0048 00000000 		.word	BMS
 583              		.cfi_endproc
 584              	.LFE149:
 586              		.section	.text.initBMS,"ax",%progbits
 587              		.align	1
 588              		.global	initBMS
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv4-sp-d16
 594              	initBMS:
 595              	.LFB131:
  79:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 596              		.loc 1 79 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              		@ link register save eliminated.
 601 0000 10B4     		push	{r4}
 602              	.LCFI4:
 603              		.cfi_def_cfa_offset 4
 604              		.cfi_offset 4, -4
 605              	.LVL47:
 606              	.LBB14:
  80:Core/Src/bms.c ****     {
 607              		.loc 1 80 0
 608 0002 0021     		movs	r1, #0
 609 0004 1BE0     		b	.L52
ARM GAS  /tmp/cctRGGbR.s 			page 21


 610              	.LVL48:
 611              	.L54:
 612              	.LBB15:
  95:Core/Src/bms.c ****         }
 613              		.loc 1 95 0 discriminator 3
 614 0006 C1EB4113 		rsb	r3, r1, r1, lsl #5
 615 000a C1EB8303 		rsb	r3, r1, r3, lsl #2
 616 000e 1344     		add	r3, r3, r2
 617 0010 0024     		movs	r4, #0
 618 0012 1E48     		ldr	r0, .L60
 619 0014 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  93:Core/Src/bms.c ****         {
 620              		.loc 1 93 0 discriminator 3
 621 0018 0132     		adds	r2, r2, #1
 622              	.LVL49:
 623              	.L53:
  93:Core/Src/bms.c ****         {
 624              		.loc 1 93 0 is_stmt 0 discriminator 1
 625 001a 5F2A     		cmp	r2, #95
 626 001c F3D9     		bls	.L54
 627 001e 0022     		movs	r2, #0
 628              	.LVL50:
 629 0020 0AE0     		b	.L55
 630              	.LVL51:
 631              	.L56:
 632              	.LBE15:
 633              	.LBB16:
 100:Core/Src/bms.c ****         }
 634              		.loc 1 100 0 is_stmt 1 discriminator 3
 635 0022 C1EB4113 		rsb	r3, r1, r1, lsl #5
 636 0026 C1EB8303 		rsb	r3, r1, r3, lsl #2
 637 002a 1344     		add	r3, r3, r2
 638 002c 6033     		adds	r3, r3, #96
 639 002e 0024     		movs	r4, #0
 640 0030 1648     		ldr	r0, .L60
 641 0032 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  98:Core/Src/bms.c ****         {
 642              		.loc 1 98 0 discriminator 3
 643 0036 0132     		adds	r2, r2, #1
 644              	.LVL52:
 645              	.L55:
  98:Core/Src/bms.c ****         {
 646              		.loc 1 98 0 is_stmt 0 discriminator 1
 647 0038 0F2A     		cmp	r2, #15
 648 003a F2D9     		bls	.L56
 649              	.LBE16:
  80:Core/Src/bms.c ****     {
 650              		.loc 1 80 0 is_stmt 1 discriminator 2
 651 003c 0131     		adds	r1, r1, #1
 652              	.LVL53:
 653              	.L52:
  80:Core/Src/bms.c ****     {
 654              		.loc 1 80 0 is_stmt 0 discriminator 1
 655 003e 0129     		cmp	r1, #1
 656 0040 19D8     		bhi	.L59
  82:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
 657              		.loc 1 82 0 is_stmt 1
ARM GAS  /tmp/cctRGGbR.s 			page 22


 658 0042 F623     		movs	r3, #246
 659 0044 114A     		ldr	r2, .L60
 660 0046 03FB0123 		mla	r3, r3, r1, r2
 661 004a 0022     		movs	r2, #0
 662 004c 83F8F220 		strb	r2, [r3, #242]
  83:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
 663              		.loc 1 83 0
 664 0050 A3F8E820 		strh	r2, [r3, #232]	@ movhi
  84:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
 665              		.loc 1 84 0
 666 0054 A3F8EA20 		strh	r2, [r3, #234]	@ movhi
  85:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
 667              		.loc 1 85 0
 668 0058 83F8F420 		strb	r2, [r3, #244]
  86:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
 669              		.loc 1 86 0
 670 005c A3F8E420 		strh	r2, [r3, #228]	@ movhi
  87:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
 671              		.loc 1 87 0
 672 0060 A3F8E220 		strh	r2, [r3, #226]	@ movhi
  88:Core/Src/bms.c ****         BMS[i].packVolt = 0;
 673              		.loc 1 88 0
 674 0064 A3F8EC20 		strh	r2, [r3, #236]	@ movhi
  89:Core/Src/bms.c ****         BMS[i].SOC = 0;
 675              		.loc 1 89 0
 676 0068 A3F8E020 		strh	r2, [r3, #224]	@ movhi
  90:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
 677              		.loc 1 90 0
 678 006c 83F8F320 		strb	r2, [r3, #243]
  91:Core/Src/bms.c **** 
 679              		.loc 1 91 0
 680 0070 A3F8F020 		strh	r2, [r3, #240]	@ movhi
 681              	.LVL54:
 682              	.LBB17:
  93:Core/Src/bms.c ****         {
 683              		.loc 1 93 0
 684 0074 D1E7     		b	.L53
 685              	.LVL55:
 686              	.L59:
 687              	.LBE17:
 688              	.LBE14:
 104:Core/Src/bms.c ****     chargerOn = false;
 689              		.loc 1 104 0
 690 0076 0023     		movs	r3, #0
 691 0078 054A     		ldr	r2, .L60+4
 692 007a 1370     		strb	r3, [r2]
 105:Core/Src/bms.c ****     errorCount = 0;
 693              		.loc 1 105 0
 694 007c 054A     		ldr	r2, .L60+8
 695 007e 1370     		strb	r3, [r2]
 106:Core/Src/bms.c **** 
 696              		.loc 1 106 0
 697 0080 054A     		ldr	r2, .L60+12
 698 0082 1360     		str	r3, [r2]
 108:Core/Src/bms.c **** 
 699              		.loc 1 108 0
 700 0084 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  /tmp/cctRGGbR.s 			page 23


 701              	.LCFI5:
 702              		.cfi_restore 4
 703              		.cfi_def_cfa_offset 0
 704 0088 7047     		bx	lr
 705              	.L61:
 706 008a 00BF     		.align	2
 707              	.L60:
 708 008c 00000000 		.word	BMS
 709 0090 00000000 		.word	watchdogBits
 710 0094 00000000 		.word	chargerOn
 711 0098 00000000 		.word	.LANCHOR0
 712              		.cfi_endproc
 713              	.LFE131:
 715              		.section	.text.bmsStateHandler,"ax",%progbits
 716              		.align	1
 717              		.global	bmsStateHandler
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	bmsStateHandler:
 724              	.LFB132:
 112:Core/Src/bms.c ****     switch (bms->state)
 725              		.loc 1 112 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              	.LVL56:
 730 0000 08B5     		push	{r3, lr}
 731              	.LCFI6:
 732              		.cfi_def_cfa_offset 8
 733              		.cfi_offset 3, -8
 734              		.cfi_offset 14, -4
 113:Core/Src/bms.c ****     {
 735              		.loc 1 113 0
 736 0002 90F8F230 		ldrb	r3, [r0, #242]	@ zero_extendqisi2
 737 0006 DBB2     		uxtb	r3, r3
 738 0008 042B     		cmp	r3, #4
 739 000a 57D8     		bhi	.L62
 740 000c DFE803F0 		tbb	[pc, r3]
 741              	.L65:
 742 0010 03       		.byte	(.L64-.L65)/2
 743 0011 0A       		.byte	(.L66-.L65)/2
 744 0012 56       		.byte	(.L62-.L65)/2
 745 0013 43       		.byte	(.L67-.L65)/2
 746 0014 54       		.byte	(.L68-.L65)/2
 747 0015 00       		.p2align 1
 748              	.L64:
 116:Core/Src/bms.c ****         bms->state = Ready;
 749              		.loc 1 116 0
 750 0016 0023     		movs	r3, #0
 751 0018 80F8F430 		strb	r3, [r0, #244]
 117:Core/Src/bms.c **** 
 752              		.loc 1 117 0
 753 001c 0123     		movs	r3, #1
 754 001e 80F8F230 		strb	r3, [r0, #242]
 119:Core/Src/bms.c **** 
ARM GAS  /tmp/cctRGGbR.s 			page 24


 755              		.loc 1 119 0
 756 0022 08BD     		pop	{r3, pc}
 757              	.L66:
 122:Core/Src/bms.c ****         if (bms->avgCellVolt > BALANCE_VOLTAGE)
 758              		.loc 1 122 0
 759 0024 0023     		movs	r3, #0
 760 0026 80F8F430 		strb	r3, [r0, #244]
 123:Core/Src/bms.c ****         {
 761              		.loc 1 123 0
 762 002a B0F8E630 		ldrh	r3, [r0, #230]
 763 002e 9BB2     		uxth	r3, r3
 764 0030 40F60A72 		movw	r2, #3850
 765 0034 9342     		cmp	r3, r2
 766 0036 19D9     		bls	.L69
 125:Core/Src/bms.c ****             {
 767              		.loc 1 125 0
 768 0038 B0F8E430 		ldrh	r3, [r0, #228]
 769 003c 9BB2     		uxth	r3, r3
 770 003e B0F8E220 		ldrh	r2, [r0, #226]
 771 0042 92B2     		uxth	r2, r2
 772 0044 9B1A     		subs	r3, r3, r2
 773 0046 142B     		cmp	r3, #20
 774 0048 03DD     		ble	.L70
 127:Core/Src/bms.c ****             }
 775              		.loc 1 127 0
 776 004a 0123     		movs	r3, #1
 777 004c 80F8F530 		strb	r3, [r0, #245]
 778 0050 0FE0     		b	.L71
 779              	.L70:
 130:Core/Src/bms.c ****             {
 780              		.loc 1 130 0
 781 0052 B0F8E430 		ldrh	r3, [r0, #228]
 782 0056 9BB2     		uxth	r3, r3
 783 0058 B0F8E220 		ldrh	r2, [r0, #226]
 784 005c 92B2     		uxth	r2, r2
 785 005e 9B1A     		subs	r3, r3, r2
 786 0060 052B     		cmp	r3, #5
 787 0062 06DC     		bgt	.L71
 132:Core/Src/bms.c ****             }
 788              		.loc 1 132 0
 789 0064 0023     		movs	r3, #0
 790 0066 80F8F530 		strb	r3, [r0, #245]
 791 006a 02E0     		b	.L71
 792              	.L69:
 137:Core/Src/bms.c ****         }
 793              		.loc 1 137 0
 794 006c 0023     		movs	r3, #0
 795 006e 80F8F530 		strb	r3, [r0, #245]
 796              	.L71:
 140:Core/Src/bms.c ****         {
 797              		.loc 1 140 0
 798 0072 B0F8E430 		ldrh	r3, [r0, #228]
 799 0076 9BB2     		uxth	r3, r3
 800 0078 40F6B372 		movw	r2, #4019
 801 007c 9342     		cmp	r3, r2
 802 007e 1DD8     		bhi	.L62
 140:Core/Src/bms.c ****         {
ARM GAS  /tmp/cctRGGbR.s 			page 25


 803              		.loc 1 140 0 is_stmt 0 discriminator 1
 804 0080 B0F8E230 		ldrh	r3, [r0, #226]
 805 0084 9BB2     		uxth	r3, r3
 806 0086 40F65432 		movw	r2, #2900
 807 008a 9342     		cmp	r3, r2
 808 008c 16D9     		bls	.L62
 142:Core/Src/bms.c ****         }
 809              		.loc 1 142 0 is_stmt 1
 810 008e 0323     		movs	r3, #3
 811 0090 80F8F230 		strb	r3, [r0, #242]
 812 0094 08BD     		pop	{r3, pc}
 813              	.L67:
 147:Core/Src/bms.c ****         bms->chargeRequest = 1;        
 814              		.loc 1 147 0
 815 0096 0023     		movs	r3, #0
 816 0098 80F8F530 		strb	r3, [r0, #245]
 148:Core/Src/bms.c **** 
 817              		.loc 1 148 0
 818 009c 0123     		movs	r3, #1
 819 009e 80F8F430 		strb	r3, [r0, #244]
 150:Core/Src/bms.c ****         {
 820              		.loc 1 150 0
 821 00a2 B0F8E430 		ldrh	r3, [r0, #228]
 822 00a6 9BB2     		uxth	r3, r3
 823 00a8 41F25402 		movw	r2, #4180
 824 00ac 9342     		cmp	r3, r2
 825 00ae 05D9     		bls	.L62
 152:Core/Src/bms.c ****         }
 826              		.loc 1 152 0
 827 00b0 0123     		movs	r3, #1
 828 00b2 80F8F230 		strb	r3, [r0, #242]
 829 00b6 08BD     		pop	{r3, pc}
 830              	.L68:
 157:Core/Src/bms.c ****         break;
 831              		.loc 1 157 0
 832 00b8 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 833              	.LVL57:
 834              	.L62:
 835 00bc 08BD     		pop	{r3, pc}
 836              		.cfi_endproc
 837              	.LFE132:
 839              		.section	.text.acChargeCommand,"ax",%progbits
 840              		.align	1
 841              		.global	acChargeCommand
 842              		.syntax unified
 843              		.thumb
 844              		.thumb_func
 845              		.fpu fpv4-sp-d16
 847              	acChargeCommand:
 848              	.LFB133:
 167:Core/Src/bms.c ****     uint8_t canTx2[8];
 849              		.loc 1 167 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 8
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853 0000 00B5     		push	{lr}
 854              	.LCFI7:
ARM GAS  /tmp/cctRGGbR.s 			page 26


 855              		.cfi_def_cfa_offset 4
 856              		.cfi_offset 14, -4
 857 0002 83B0     		sub	sp, sp, #12
 858              	.LCFI8:
 859              		.cfi_def_cfa_offset 16
 169:Core/Src/bms.c ****     {
 860              		.loc 1 169 0
 861 0004 1E4B     		ldr	r3, .L78
 862 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 863 0008 FBB9     		cbnz	r3, .L77
 864              	.LVL58:
 865              	.LBB18:
 185:Core/Src/bms.c ****         canTx2[1] = 0x00;
 866              		.loc 1 185 0
 867 000a 4023     		movs	r3, #64
 868 000c 8DF80030 		strb	r3, [sp]
 186:Core/Src/bms.c ****         canTx2[2] = 0x20;
 869              		.loc 1 186 0
 870 0010 0023     		movs	r3, #0
 871 0012 8DF80130 		strb	r3, [sp, #1]
 187:Core/Src/bms.c ****         canTx2[3] = 9;
 872              		.loc 1 187 0
 873 0016 2022     		movs	r2, #32
 874 0018 8DF80220 		strb	r2, [sp, #2]
 188:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 875              		.loc 1 188 0
 876 001c 0922     		movs	r2, #9
 877 001e 8DF80320 		strb	r2, [sp, #3]
 189:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 878              		.loc 1 189 0
 879 0022 8DF80430 		strb	r3, [sp, #4]
 190:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 880              		.loc 1 190 0
 881 0026 8DF80530 		strb	r3, [sp, #5]
 191:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 882              		.loc 1 191 0
 883 002a 8DF80630 		strb	r3, [sp, #6]
 192:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2);
 884              		.loc 1 192 0
 885 002e 8DF80730 		strb	r3, [sp, #7]
 193:Core/Src/bms.c **** 
 886              		.loc 1 193 0
 887 0032 6A46     		mov	r2, sp
 888 0034 0821     		movs	r1, #8
 889 0036 40F20560 		movw	r0, #1541
 890 003a FFF7FEFF 		bl	can2tx
 891              	.LVL59:
 892              	.L75:
 893              	.LBE18:
 196:Core/Src/bms.c **** }
 894              		.loc 1 196 0
 895 003e 0120     		movs	r0, #1
 896 0040 FFF7FEFF 		bl	HAL_Delay
 897              	.LVL60:
 197:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 898              		.loc 1 197 0
 899 0044 03B0     		add	sp, sp, #12
ARM GAS  /tmp/cctRGGbR.s 			page 27


 900              	.LCFI9:
 901              		.cfi_remember_state
 902              		.cfi_def_cfa_offset 4
 903              		@ sp needed
 904 0046 5DF804FB 		ldr	pc, [sp], #4
 905              	.L77:
 906              	.LCFI10:
 907              		.cfi_restore_state
 908              	.LVL61:
 909              	.LBB19:
 172:Core/Src/bms.c ****         canTx2[1] = 0x00;
 910              		.loc 1 172 0
 911 004a 4023     		movs	r3, #64
 912 004c 8DF80030 		strb	r3, [sp]
 173:Core/Src/bms.c ****         canTx2[2] = 0x20;
 913              		.loc 1 173 0
 914 0050 0023     		movs	r3, #0
 915 0052 8DF80130 		strb	r3, [sp, #1]
 174:Core/Src/bms.c ****         canTx2[3] = 9;
 916              		.loc 1 174 0
 917 0056 2022     		movs	r2, #32
 918 0058 8DF80220 		strb	r2, [sp, #2]
 175:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 919              		.loc 1 175 0
 920 005c 0921     		movs	r1, #9
 921 005e 8DF80310 		strb	r1, [sp, #3]
 176:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF; 
 922              		.loc 1 176 0
 923 0062 8DF80420 		strb	r2, [sp, #4]
 177:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 924              		.loc 1 177 0
 925 0066 8DF80530 		strb	r3, [sp, #5]
 178:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 926              		.loc 1 178 0
 927 006a 8DF80630 		strb	r3, [sp, #6]
 179:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2); 
 928              		.loc 1 179 0
 929 006e 8DF80730 		strb	r3, [sp, #7]
 180:Core/Src/bms.c ****     }
 930              		.loc 1 180 0
 931 0072 6A46     		mov	r2, sp
 932 0074 0821     		movs	r1, #8
 933 0076 40F20560 		movw	r0, #1541
 934 007a FFF7FEFF 		bl	can2tx
 935              	.LVL62:
 936              	.LBE19:
 937 007e DEE7     		b	.L75
 938              	.L79:
 939              		.align	2
 940              	.L78:
 941 0080 00000000 		.word	chargerOn
 942              		.cfi_endproc
 943              	.LFE133:
 945              		.section	.text.tx500kData,"ax",%progbits
 946              		.align	1
 947              		.global	tx500kData
 948              		.syntax unified
ARM GAS  /tmp/cctRGGbR.s 			page 28


 949              		.thumb
 950              		.thumb_func
 951              		.fpu fpv4-sp-d16
 953              	tx500kData:
 954              	.LFB134:
 200:Core/Src/bms.c **** 
 955              		.loc 1 200 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 16
 958              		@ frame_needed = 0, uses_anonymous_args = 0
 959 0000 10B5     		push	{r4, lr}
 960              	.LCFI11:
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 4, -8
 963              		.cfi_offset 14, -4
 964 0002 84B0     		sub	sp, sp, #16
 965              	.LCFI12:
 966              		.cfi_def_cfa_offset 24
 203:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 967              		.loc 1 203 0
 968 0004 2D4C     		ldr	r4, .L82
 969 0006 B4F8E030 		ldrh	r3, [r4, #224]
 970 000a 8DF80830 		strb	r3, [sp, #8]
 204:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 971              		.loc 1 204 0
 972 000e B4F8E030 		ldrh	r3, [r4, #224]
 973 0012 C3F30723 		ubfx	r3, r3, #8, #8
 974 0016 8DF80930 		strb	r3, [sp, #9]
 205:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 975              		.loc 1 205 0
 976 001a B4F8EE30 		ldrh	r3, [r4, #238]
 977 001e 8DF80A30 		strb	r3, [sp, #10]
 206:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 978              		.loc 1 206 0
 979 0022 B4F8EE30 		ldrh	r3, [r4, #238]
 980 0026 C3F30723 		ubfx	r3, r3, #8, #8
 981 002a 8DF80B30 		strb	r3, [sp, #11]
 207:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 982              		.loc 1 207 0
 983 002e B4F8E830 		ldrh	r3, [r4, #232]
 984 0032 8DF80C30 		strb	r3, [sp, #12]
 208:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 985              		.loc 1 208 0
 986 0036 B4F8E830 		ldrh	r3, [r4, #232]
 987 003a C3F30723 		ubfx	r3, r3, #8, #8
 988 003e 8DF80D30 		strb	r3, [sp, #13]
 209:Core/Src/bms.c ****     bms0[7] = (BMS[0].balancecells);//0;
 989              		.loc 1 209 0
 990 0042 94F8F330 		ldrb	r3, [r4, #243]	@ zero_extendqisi2
 991 0046 8DF80E30 		strb	r3, [sp, #14]
 210:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 992              		.loc 1 210 0
 993 004a 94F8F530 		ldrb	r3, [r4, #245]	@ zero_extendqisi2
 994 004e 8DF80F30 		strb	r3, [sp, #15]
 211:Core/Src/bms.c **** 
 995              		.loc 1 211 0
 996 0052 02AA     		add	r2, sp, #8
ARM GAS  /tmp/cctRGGbR.s 			page 29


 997 0054 0821     		movs	r1, #8
 998 0056 4FF49C70 		mov	r0, #312
 999 005a FFF7FEFF 		bl	can2tx
 1000              	.LVL63:
 215:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 1001              		.loc 1 215 0
 1002 005e B4F8D631 		ldrh	r3, [r4, #470]
 1003 0062 8DF80030 		strb	r3, [sp]
 216:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 1004              		.loc 1 216 0
 1005 0066 B4F8D631 		ldrh	r3, [r4, #470]
 1006 006a C3F30723 		ubfx	r3, r3, #8, #8
 1007 006e 8DF80130 		strb	r3, [sp, #1]
 217:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 1008              		.loc 1 217 0
 1009 0072 B4F8E431 		ldrh	r3, [r4, #484]
 1010 0076 8DF80230 		strb	r3, [sp, #2]
 218:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 1011              		.loc 1 218 0
 1012 007a B4F8E431 		ldrh	r3, [r4, #484]
 1013 007e C3F30723 		ubfx	r3, r3, #8, #8
 1014 0082 8DF80330 		strb	r3, [sp, #3]
 219:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 1015              		.loc 1 219 0
 1016 0086 B4F8DE31 		ldrh	r3, [r4, #478]
 1017 008a 8DF80430 		strb	r3, [sp, #4]
 220:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 1018              		.loc 1 220 0
 1019 008e B4F8DE31 		ldrh	r3, [r4, #478]
 1020 0092 C3F30723 		ubfx	r3, r3, #8, #8
 1021 0096 8DF80530 		strb	r3, [sp, #5]
 221:Core/Src/bms.c ****     bms1[7] = (BMS[1].balancecells);//0;
 1022              		.loc 1 221 0
 1023 009a 94F8E931 		ldrb	r3, [r4, #489]	@ zero_extendqisi2
 1024 009e 8DF80630 		strb	r3, [sp, #6]
 222:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 1025              		.loc 1 222 0
 1026 00a2 94F8EB31 		ldrb	r3, [r4, #491]	@ zero_extendqisi2
 1027 00a6 8DF80730 		strb	r3, [sp, #7]
 223:Core/Src/bms.c **** 
 1028              		.loc 1 223 0
 1029 00aa 6A46     		mov	r2, sp
 1030 00ac 0821     		movs	r1, #8
 1031 00ae 40F23910 		movw	r0, #313
 1032 00b2 FFF7FEFF 		bl	can2tx
 1033              	.LVL64:
 225:Core/Src/bms.c **** 
 1034              		.loc 1 225 0
 1035 00b6 04B0     		add	sp, sp, #16
 1036              	.LCFI13:
 1037              		.cfi_def_cfa_offset 8
 1038              		@ sp needed
 1039 00b8 10BD     		pop	{r4, pc}
 1040              	.L83:
 1041 00ba 00BF     		.align	2
 1042              	.L82:
 1043 00bc 00000000 		.word	BMS
ARM GAS  /tmp/cctRGGbR.s 			page 30


 1044              		.cfi_endproc
 1045              	.LFE134:
 1047              		.section	.text.refreshData,"ax",%progbits
 1048              		.align	1
 1049              		.global	refreshData
 1050              		.syntax unified
 1051              		.thumb
 1052              		.thumb_func
 1053              		.fpu fpv4-sp-d16
 1055              	refreshData:
 1056              	.LFB135:
 228:Core/Src/bms.c **** 
 1057              		.loc 1 228 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061 0000 38B5     		push	{r3, r4, r5, lr}
 1062              	.LCFI14:
 1063              		.cfi_def_cfa_offset 16
 1064              		.cfi_offset 3, -16
 1065              		.cfi_offset 4, -12
 1066              		.cfi_offset 5, -8
 1067              		.cfi_offset 14, -4
 1068              	.LVL65:
 1069              	.LBB20:
 230:Core/Src/bms.c ****     {
 1070              		.loc 1 230 0
 1071 0002 0025     		movs	r5, #0
 1072 0004 26E0     		b	.L85
 1073              	.LVL66:
 1074              	.L86:
 233:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 1075              		.loc 1 233 0 discriminator 3
 1076 0006 154B     		ldr	r3, .L88
 1077 0008 F624     		movs	r4, #246
 1078 000a 04FB0534 		mla	r4, r4, r5, r3
 1079 000e 2046     		mov	r0, r4
 1080 0010 FFF7FEFF 		bl	getPackVolt
 1081              	.LVL67:
 234:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 1082              		.loc 1 234 0 discriminator 3
 1083 0014 2046     		mov	r0, r4
 1084 0016 FFF7FEFF 		bl	getAvgCellVolt
 1085              	.LVL68:
 235:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 1086              		.loc 1 235 0 discriminator 3
 1087 001a 2046     		mov	r0, r4
 1088 001c FFF7FEFF 		bl	getLowCellVolt
 1089              	.LVL69:
 236:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 1090              		.loc 1 236 0 discriminator 3
 1091 0020 2046     		mov	r0, r4
 1092 0022 FFF7FEFF 		bl	getHighCellVolt
 1093              	.LVL70:
 237:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 1094              		.loc 1 237 0 discriminator 3
 1095 0026 2046     		mov	r0, r4
ARM GAS  /tmp/cctRGGbR.s 			page 31


 1096 0028 FFF7FEFF 		bl	getCellDelta
 1097              	.LVL71:
 238:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 1098              		.loc 1 238 0 discriminator 3
 1099 002c 2046     		mov	r0, r4
 1100 002e FFF7FEFF 		bl	getLowCellTemp
 1101              	.LVL72:
 239:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 1102              		.loc 1 239 0 discriminator 3
 1103 0032 2046     		mov	r0, r4
 1104 0034 FFF7FEFF 		bl	getHighCellTemp
 1105              	.LVL73:
 240:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 1106              		.loc 1 240 0 discriminator 3
 1107 0038 2046     		mov	r0, r4
 1108 003a FFF7FEFF 		bl	getAvgCellTemp
 1109              	.LVL74:
 241:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 1110              		.loc 1 241 0 discriminator 3
 1111 003e 2046     		mov	r0, r4
 1112 0040 FFF7FEFF 		bl	getTempDelta
 1113              	.LVL75:
 242:Core/Src/bms.c ****         getSOC(&BMS[i]);
 1114              		.loc 1 242 0 discriminator 3
 1115 0044 2946     		mov	r1, r5
 1116 0046 2046     		mov	r0, r4
 1117 0048 FFF7FEFF 		bl	getCellCount
 1118              	.LVL76:
 243:Core/Src/bms.c ****     }
 1119              		.loc 1 243 0 discriminator 3
 1120 004c 2046     		mov	r0, r4
 1121 004e FFF7FEFF 		bl	getSOC
 1122              	.LVL77:
 230:Core/Src/bms.c ****     {
 1123              		.loc 1 230 0 discriminator 3
 1124 0052 0135     		adds	r5, r5, #1
 1125              	.LVL78:
 1126              	.L85:
 230:Core/Src/bms.c ****     {
 1127              		.loc 1 230 0 is_stmt 0 discriminator 1
 1128 0054 012D     		cmp	r5, #1
 1129 0056 D6D9     		bls	.L86
 1130              	.LBE20:
 245:Core/Src/bms.c **** 
 1131              		.loc 1 245 0 is_stmt 1
 1132 0058 38BD     		pop	{r3, r4, r5, pc}
 1133              	.LVL79:
 1134              	.L89:
 1135 005a 00BF     		.align	2
 1136              	.L88:
 1137 005c 00000000 		.word	BMS
 1138              		.cfi_endproc
 1139              	.LFE135:
 1141              		.section	.text.sendCommand,"ax",%progbits
 1142              		.align	1
 1143              		.global	sendCommand
 1144              		.syntax unified
ARM GAS  /tmp/cctRGGbR.s 			page 32


 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
 1149              	sendCommand:
 1150              	.LFB136:
 249:Core/Src/bms.c ****     uint8_t canTx[3];
 1151              		.loc 1 249 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 8
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155              	.LVL80:
 1156 0000 00B5     		push	{lr}
 1157              	.LCFI15:
 1158              		.cfi_def_cfa_offset 4
 1159              		.cfi_offset 14, -4
 1160 0002 83B0     		sub	sp, sp, #12
 1161              	.LCFI16:
 1162              		.cfi_def_cfa_offset 16
 251:Core/Src/bms.c ****     canTx[1] = 0x00;
 1163              		.loc 1 251 0
 1164 0004 0223     		movs	r3, #2
 1165 0006 8DF80430 		strb	r3, [sp, #4]
 252:Core/Src/bms.c ****     canTx[2] = 0x00;
 1166              		.loc 1 252 0
 1167 000a 0023     		movs	r3, #0
 1168 000c 8DF80530 		strb	r3, [sp, #5]
 253:Core/Src/bms.c **** 
 1169              		.loc 1 253 0
 1170 0010 8DF80630 		strb	r3, [sp, #6]
 255:Core/Src/bms.c ****     {
 1171              		.loc 1 255 0
 1172 0014 20B1     		cbz	r0, .L92
 1173 0016 0128     		cmp	r0, #1
 1174 0018 09D0     		beq	.L93
 1175              	.LVL81:
 1176              	.L90:
 268:Core/Src/bms.c **** 
 1177              		.loc 1 268 0
 1178 001a 03B0     		add	sp, sp, #12
 1179              	.LCFI17:
 1180              		.cfi_remember_state
 1181              		.cfi_def_cfa_offset 4
 1182              		@ sp needed
 1183 001c 5DF804FB 		ldr	pc, [sp], #4
 1184              	.LVL82:
 1185              	.L92:
 1186              	.LCFI18:
 1187              		.cfi_restore_state
 258:Core/Src/bms.c ****         break;
 1188              		.loc 1 258 0
 1189 0020 01AA     		add	r2, sp, #4
 1190 0022 0321     		movs	r1, #3
 1191 0024 4FF40070 		mov	r0, #512
 1192              	.LVL83:
 1193 0028 FFF7FEFF 		bl	can1tx
 1194              	.LVL84:
 259:Core/Src/bms.c **** 
ARM GAS  /tmp/cctRGGbR.s 			page 33


 1195              		.loc 1 259 0
 1196 002c F5E7     		b	.L90
 1197              	.LVL85:
 1198              	.L93:
 262:Core/Src/bms.c ****         break;
 1199              		.loc 1 262 0
 1200 002e 01AA     		add	r2, sp, #4
 1201 0030 0321     		movs	r1, #3
 1202 0032 4FF40070 		mov	r0, #512
 1203              	.LVL86:
 1204 0036 FFF7FEFF 		bl	can3tx
 1205              	.LVL87:
 268:Core/Src/bms.c **** 
 1206              		.loc 1 268 0
 1207 003a EEE7     		b	.L90
 1208              		.cfi_endproc
 1209              	.LFE136:
 1211              		.section	.text.requestBICMdata,"ax",%progbits
 1212              		.align	1
 1213              		.global	requestBICMdata
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv4-sp-d16
 1219              	requestBICMdata:
 1220              	.LFB137:
 271:Core/Src/bms.c **** 
 1221              		.loc 1 271 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 8
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              	.LVL88:
 274:Core/Src/bms.c ****     {
 1226              		.loc 1 274 0
 1227 0000 90F8F530 		ldrb	r3, [r0, #245]	@ zero_extendqisi2
 1228 0004 03B1     		cbz	r3, .L110
 1229 0006 7047     		bx	lr
 1230              	.L110:
 271:Core/Src/bms.c **** 
 1231              		.loc 1 271 0
 1232 0008 10B5     		push	{r4, lr}
 1233              	.LCFI19:
 1234              		.cfi_def_cfa_offset 8
 1235              		.cfi_offset 4, -8
 1236              		.cfi_offset 14, -4
 1237 000a 82B0     		sub	sp, sp, #8
 1238              	.LCFI20:
 1239              		.cfi_def_cfa_offset 16
 1240 000c 0C46     		mov	r4, r1
 276:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 1241              		.loc 1 276 0
 1242 000e 0846     		mov	r0, r1
 1243              	.LVL89:
 1244 0010 FFF7FEFF 		bl	sendCommand
 1245              	.LVL90:
 1246              	.LBB21:
 277:Core/Src/bms.c ****         {
ARM GAS  /tmp/cctRGGbR.s 			page 34


 1247              		.loc 1 277 0
 1248 0014 0023     		movs	r3, #0
 1249 0016 05E0     		b	.L97
 1250              	.LVL91:
 1251              	.L98:
 279:Core/Src/bms.c ****         }
 1252              		.loc 1 279 0 discriminator 3
 1253 0018 02AA     		add	r2, sp, #8
 1254 001a 1A44     		add	r2, r2, r3
 1255 001c 0020     		movs	r0, #0
 1256 001e 02F8080C 		strb	r0, [r2, #-8]
 277:Core/Src/bms.c ****         {
 1257              		.loc 1 277 0 discriminator 3
 1258 0022 0133     		adds	r3, r3, #1
 1259              	.LVL92:
 1260              	.L97:
 277:Core/Src/bms.c ****         {
 1261              		.loc 1 277 0 is_stmt 0 discriminator 1
 1262 0024 072B     		cmp	r3, #7
 1263 0026 F7D9     		bls	.L98
 1264              	.LBE21:
 281:Core/Src/bms.c ****         {
 1265              		.loc 1 281 0 is_stmt 1
 1266 0028 1CB1     		cbz	r4, .L100
 1267 002a 012C     		cmp	r4, #1
 1268 002c 08D0     		beq	.L101
 1269              	.LVL93:
 1270              	.L99:
 1271              	.LBB22:
 277:Core/Src/bms.c ****         {
 1272              		.loc 1 277 0 discriminator 1
 1273 002e 0023     		movs	r3, #0
 1274 0030 13E0     		b	.L102
 1275              	.LVL94:
 1276              	.L100:
 1277              	.LBE22:
 284:Core/Src/bms.c ****             break;
 1278              		.loc 1 284 0
 1279 0032 6A46     		mov	r2, sp
 1280 0034 0821     		movs	r1, #8
 1281 0036 4FF44070 		mov	r0, #768
 1282 003a FFF7FEFF 		bl	can1tx
 1283              	.LVL95:
 285:Core/Src/bms.c **** 
 1284              		.loc 1 285 0
 1285 003e F6E7     		b	.L99
 1286              	.LVL96:
 1287              	.L101:
 288:Core/Src/bms.c ****             break;
 1288              		.loc 1 288 0
 1289 0040 6A46     		mov	r2, sp
 1290 0042 0821     		movs	r1, #8
 1291 0044 4FF44070 		mov	r0, #768
 1292 0048 FFF7FEFF 		bl	can3tx
 1293              	.LVL97:
 289:Core/Src/bms.c **** 
 1294              		.loc 1 289 0
ARM GAS  /tmp/cctRGGbR.s 			page 35


 1295 004c EFE7     		b	.L99
 1296              	.LVL98:
 1297              	.L103:
 1298              	.LBB23:
 297:Core/Src/bms.c ****         }
 1299              		.loc 1 297 0 discriminator 3
 1300 004e 02AA     		add	r2, sp, #8
 1301 0050 1A44     		add	r2, r2, r3
 1302 0052 0020     		movs	r0, #0
 1303 0054 02F8080C 		strb	r0, [r2, #-8]
 295:Core/Src/bms.c ****         {
 1304              		.loc 1 295 0 discriminator 3
 1305 0058 0133     		adds	r3, r3, #1
 1306              	.LVL99:
 1307              	.L102:
 295:Core/Src/bms.c ****         {
 1308              		.loc 1 295 0 is_stmt 0 discriminator 1
 1309 005a 042B     		cmp	r3, #4
 1310 005c F7D9     		bls	.L103
 1311              	.LBE23:
 300:Core/Src/bms.c ****         {
 1312              		.loc 1 300 0 is_stmt 1
 1313 005e 1CB1     		cbz	r4, .L104
 1314 0060 012C     		cmp	r4, #1
 1315 0062 08D0     		beq	.L105
 1316              	.LVL100:
 1317              	.L95:
 314:Core/Src/bms.c **** 
 1318              		.loc 1 314 0
 1319 0064 02B0     		add	sp, sp, #8
 1320              	.LCFI21:
 1321              		.cfi_remember_state
 1322              		.cfi_def_cfa_offset 8
 1323              		@ sp needed
 1324 0066 10BD     		pop	{r4, pc}
 1325              	.LVL101:
 1326              	.L104:
 1327              	.LCFI22:
 1328              		.cfi_restore_state
 303:Core/Src/bms.c ****             break;
 1329              		.loc 1 303 0
 1330 0068 6A46     		mov	r2, sp
 1331 006a 0521     		movs	r1, #5
 1332 006c 4FF44470 		mov	r0, #784
 1333 0070 FFF7FEFF 		bl	can1tx
 1334              	.LVL102:
 304:Core/Src/bms.c **** 
 1335              		.loc 1 304 0
 1336 0074 F6E7     		b	.L95
 1337              	.LVL103:
 1338              	.L105:
 307:Core/Src/bms.c ****             break;
 1339              		.loc 1 307 0
 1340 0076 6A46     		mov	r2, sp
 1341 0078 0521     		movs	r1, #5
 1342 007a 4FF44470 		mov	r0, #784
 1343 007e FFF7FEFF 		bl	can3tx
ARM GAS  /tmp/cctRGGbR.s 			page 36


 1344              	.LVL104:
 314:Core/Src/bms.c **** 
 1345              		.loc 1 314 0
 1346 0082 EFE7     		b	.L95
 1347              		.cfi_endproc
 1348              	.LFE137:
 1350              		.section	.text.balanceCommand,"ax",%progbits
 1351              		.align	1
 1352              		.global	balanceCommand
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1356              		.fpu fpv4-sp-d16
 1358              	balanceCommand:
 1359              	.LFB138:
 318:Core/Src/bms.c ****     sendCommand(pack);
 1360              		.loc 1 318 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 8
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364              	.LVL105:
 1365 0000 30B5     		push	{r4, r5, lr}
 1366              	.LCFI23:
 1367              		.cfi_def_cfa_offset 12
 1368              		.cfi_offset 4, -12
 1369              		.cfi_offset 5, -8
 1370              		.cfi_offset 14, -4
 1371 0002 83B0     		sub	sp, sp, #12
 1372              	.LCFI24:
 1373              		.cfi_def_cfa_offset 24
 1374 0004 0446     		mov	r4, r0
 1375 0006 0D46     		mov	r5, r1
 319:Core/Src/bms.c ****     uint8_t balance[8];
 1376              		.loc 1 319 0
 1377 0008 0846     		mov	r0, r1
 1378              	.LVL106:
 1379 000a FFF7FEFF 		bl	sendCommand
 1380              	.LVL107:
 322:Core/Src/bms.c ****     {
 1381              		.loc 1 322 0
 1382 000e 6DB1     		cbz	r5, .L133
 1383 0010 012D     		cmp	r5, #1
 1384 0012 5ED0     		beq	.L134
 1385              	.L111:
 386:Core/Src/bms.c **** 
 1386              		.loc 1 386 0
 1387 0014 03B0     		add	sp, sp, #12
 1388              	.LCFI25:
 1389              		.cfi_remember_state
 1390              		.cfi_def_cfa_offset 12
 1391              		@ sp needed
 1392 0016 30BD     		pop	{r4, r5, pc}
 1393              	.LVL108:
 1394              	.L115:
 1395              	.LCFI26:
 1396              		.cfi_restore_state
 1397              	.LBB24:
ARM GAS  /tmp/cctRGGbR.s 			page 37


 327:Core/Src/bms.c ****         }
 1398              		.loc 1 327 0 discriminator 3
 1399 0018 02AA     		add	r2, sp, #8
 1400 001a 1A44     		add	r2, r2, r3
 1401 001c 0021     		movs	r1, #0
 1402 001e 02F8081C 		strb	r1, [r2, #-8]
 325:Core/Src/bms.c ****         {
 1403              		.loc 1 325 0 discriminator 3
 1404 0022 0133     		adds	r3, r3, #1
 1405              	.LVL109:
 1406              	.L113:
 325:Core/Src/bms.c ****         {
 1407              		.loc 1 325 0 is_stmt 0 discriminator 1
 1408 0024 072B     		cmp	r3, #7
 1409 0026 F7D9     		bls	.L115
 1410 0028 0023     		movs	r3, #0
 1411              	.LVL110:
 1412 002a 02E0     		b	.L116
 1413              	.L133:
 1414              	.LBE24:
 322:Core/Src/bms.c ****     {
 1415              		.loc 1 322 0 is_stmt 1
 1416 002c 0023     		movs	r3, #0
 1417 002e F9E7     		b	.L113
 1418              	.LVL111:
 1419              	.L117:
 1420              	.LBB25:
 330:Core/Src/bms.c ****         {
 1421              		.loc 1 330 0 discriminator 2
 1422 0030 0133     		adds	r3, r3, #1
 1423              	.LVL112:
 1424              	.L116:
 330:Core/Src/bms.c ****         {
 1425              		.loc 1 330 0 is_stmt 0 discriminator 1
 1426 0032 3D2B     		cmp	r3, #61
 1427 0034 13D8     		bhi	.L136
 332:Core/Src/bms.c ****             {
 1428              		.loc 1 332 0 is_stmt 1
 1429 0036 B4F8E610 		ldrh	r1, [r4, #230]
 1430 003a 89B2     		uxth	r1, r1
 1431 003c 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1432 0040 92B2     		uxth	r2, r2
 1433 0042 9142     		cmp	r1, r2
 1434 0044 F4D2     		bcs	.L117
 334:Core/Src/bms.c ****             }
 1435              		.loc 1 334 0
 1436 0046 474A     		ldr	r2, .L140
 1437 0048 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1438 004a 4749     		ldr	r1, .L140+4
 1439 004c C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1440 004e 02A8     		add	r0, sp, #8
 1441 0050 0244     		add	r2, r2, r0
 1442 0052 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1443 0056 0143     		orrs	r1, r1, r0
 1444 0058 02F8081C 		strb	r1, [r2, #-8]
 1445 005c E8E7     		b	.L117
 1446              	.L136:
ARM GAS  /tmp/cctRGGbR.s 			page 38


 1447              	.LBE25:
 337:Core/Src/bms.c **** 
 1448              		.loc 1 337 0
 1449 005e 6A46     		mov	r2, sp
 1450 0060 0821     		movs	r1, #8
 1451 0062 4FF44070 		mov	r0, #768
 1452 0066 FFF7FEFF 		bl	can1tx
 1453              	.LVL113:
 1454              	.LBB26:
 339:Core/Src/bms.c ****         {
 1455              		.loc 1 339 0
 1456 006a 0023     		movs	r3, #0
 1457 006c 05E0     		b	.L119
 1458              	.LVL114:
 1459              	.L120:
 341:Core/Src/bms.c ****         }
 1460              		.loc 1 341 0 discriminator 3
 1461 006e 02AA     		add	r2, sp, #8
 1462 0070 1A44     		add	r2, r2, r3
 1463 0072 0021     		movs	r1, #0
 1464 0074 02F8081C 		strb	r1, [r2, #-8]
 339:Core/Src/bms.c ****         {
 1465              		.loc 1 339 0 discriminator 3
 1466 0078 0133     		adds	r3, r3, #1
 1467              	.LVL115:
 1468              	.L119:
 339:Core/Src/bms.c ****         {
 1469              		.loc 1 339 0 is_stmt 0 discriminator 1
 1470 007a 072B     		cmp	r3, #7
 1471 007c F7D9     		bls	.L120
 1472 007e 3E23     		movs	r3, #62
 1473              	.LVL116:
 1474 0080 00E0     		b	.L121
 1475              	.LVL117:
 1476              	.L122:
 1477              	.LBE26:
 1478              	.LBB27:
 344:Core/Src/bms.c ****         {
 1479              		.loc 1 344 0 is_stmt 1 discriminator 2
 1480 0082 0133     		adds	r3, r3, #1
 1481              	.LVL118:
 1482              	.L121:
 344:Core/Src/bms.c ****         {
 1483              		.loc 1 344 0 is_stmt 0 discriminator 1
 1484 0084 5F2B     		cmp	r3, #95
 1485 0086 13D8     		bhi	.L137
 346:Core/Src/bms.c ****             {
 1486              		.loc 1 346 0 is_stmt 1
 1487 0088 B4F8E610 		ldrh	r1, [r4, #230]
 1488 008c 89B2     		uxth	r1, r1
 1489 008e 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1490 0092 92B2     		uxth	r2, r2
 1491 0094 9142     		cmp	r1, r2
 1492 0096 F4D2     		bcs	.L122
 348:Core/Src/bms.c ****             }
 1493              		.loc 1 348 0
 1494 0098 324A     		ldr	r2, .L140
ARM GAS  /tmp/cctRGGbR.s 			page 39


 1495 009a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1496 009c 3249     		ldr	r1, .L140+4
 1497 009e C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1498 00a0 02A8     		add	r0, sp, #8
 1499 00a2 0244     		add	r2, r2, r0
 1500 00a4 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1501 00a8 0143     		orrs	r1, r1, r0
 1502 00aa 02F8081C 		strb	r1, [r2, #-8]
 1503 00ae E8E7     		b	.L122
 1504              	.L137:
 1505              	.LBE27:
 351:Core/Src/bms.c ****         break;
 1506              		.loc 1 351 0
 1507 00b0 6A46     		mov	r2, sp
 1508 00b2 0521     		movs	r1, #5
 1509 00b4 4FF44470 		mov	r0, #784
 1510 00b8 FFF7FEFF 		bl	can1tx
 1511              	.LVL119:
 352:Core/Src/bms.c **** 
 1512              		.loc 1 352 0
 1513 00bc AAE7     		b	.L111
 1514              	.LVL120:
 1515              	.L124:
 1516              	.LBB28:
 358:Core/Src/bms.c ****         }
 1517              		.loc 1 358 0 discriminator 3
 1518 00be 02AA     		add	r2, sp, #8
 1519 00c0 1A44     		add	r2, r2, r3
 1520 00c2 0021     		movs	r1, #0
 1521 00c4 02F8081C 		strb	r1, [r2, #-8]
 356:Core/Src/bms.c ****         {
 1522              		.loc 1 356 0 discriminator 3
 1523 00c8 0133     		adds	r3, r3, #1
 1524              	.LVL121:
 1525              	.L114:
 356:Core/Src/bms.c ****         {
 1526              		.loc 1 356 0 is_stmt 0 discriminator 1
 1527 00ca 072B     		cmp	r3, #7
 1528 00cc F7D9     		bls	.L124
 1529 00ce 0023     		movs	r3, #0
 1530              	.LVL122:
 1531 00d0 02E0     		b	.L125
 1532              	.L134:
 1533              	.LBE28:
 322:Core/Src/bms.c ****     {
 1534              		.loc 1 322 0 is_stmt 1
 1535 00d2 0023     		movs	r3, #0
 1536 00d4 F9E7     		b	.L114
 1537              	.LVL123:
 1538              	.L126:
 1539              	.LBB29:
 360:Core/Src/bms.c ****         {
 1540              		.loc 1 360 0 discriminator 2
 1541 00d6 0133     		adds	r3, r3, #1
 1542              	.LVL124:
 1543              	.L125:
 360:Core/Src/bms.c ****         {
ARM GAS  /tmp/cctRGGbR.s 			page 40


 1544              		.loc 1 360 0 is_stmt 0 discriminator 1
 1545 00d8 3D2B     		cmp	r3, #61
 1546 00da 13D8     		bhi	.L138
 362:Core/Src/bms.c ****             {
 1547              		.loc 1 362 0 is_stmt 1
 1548 00dc B4F8E610 		ldrh	r1, [r4, #230]
 1549 00e0 89B2     		uxth	r1, r1
 1550 00e2 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1551 00e6 92B2     		uxth	r2, r2
 1552 00e8 9142     		cmp	r1, r2
 1553 00ea F4D2     		bcs	.L126
 364:Core/Src/bms.c ****             }
 1554              		.loc 1 364 0
 1555 00ec 1D4A     		ldr	r2, .L140
 1556 00ee D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1557 00f0 1D49     		ldr	r1, .L140+4
 1558 00f2 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1559 00f4 02A8     		add	r0, sp, #8
 1560 00f6 0244     		add	r2, r2, r0
 1561 00f8 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1562 00fc 0143     		orrs	r1, r1, r0
 1563 00fe 02F8081C 		strb	r1, [r2, #-8]
 1564 0102 E8E7     		b	.L126
 1565              	.L138:
 1566              	.LBE29:
 367:Core/Src/bms.c **** 
 1567              		.loc 1 367 0
 1568 0104 6A46     		mov	r2, sp
 1569 0106 0821     		movs	r1, #8
 1570 0108 4FF44070 		mov	r0, #768
 1571 010c FFF7FEFF 		bl	can3tx
 1572              	.LVL125:
 1573              	.LBB30:
 369:Core/Src/bms.c ****         {
 1574              		.loc 1 369 0
 1575 0110 0023     		movs	r3, #0
 1576 0112 05E0     		b	.L128
 1577              	.LVL126:
 1578              	.L129:
 371:Core/Src/bms.c ****         }
 1579              		.loc 1 371 0 discriminator 3
 1580 0114 02AA     		add	r2, sp, #8
 1581 0116 1A44     		add	r2, r2, r3
 1582 0118 0021     		movs	r1, #0
 1583 011a 02F8081C 		strb	r1, [r2, #-8]
 369:Core/Src/bms.c ****         {
 1584              		.loc 1 369 0 discriminator 3
 1585 011e 0133     		adds	r3, r3, #1
 1586              	.LVL127:
 1587              	.L128:
 369:Core/Src/bms.c ****         {
 1588              		.loc 1 369 0 is_stmt 0 discriminator 1
 1589 0120 072B     		cmp	r3, #7
 1590 0122 F7D9     		bls	.L129
 1591 0124 3E23     		movs	r3, #62
 1592              	.LVL128:
 1593 0126 00E0     		b	.L130
ARM GAS  /tmp/cctRGGbR.s 			page 41


 1594              	.LVL129:
 1595              	.L131:
 1596              	.LBE30:
 1597              	.LBB31:
 373:Core/Src/bms.c ****         {
 1598              		.loc 1 373 0 is_stmt 1 discriminator 2
 1599 0128 0133     		adds	r3, r3, #1
 1600              	.LVL130:
 1601              	.L130:
 373:Core/Src/bms.c ****         {
 1602              		.loc 1 373 0 is_stmt 0 discriminator 1
 1603 012a 5F2B     		cmp	r3, #95
 1604 012c 13D8     		bhi	.L139
 375:Core/Src/bms.c ****             {
 1605              		.loc 1 375 0 is_stmt 1
 1606 012e B4F8E610 		ldrh	r1, [r4, #230]
 1607 0132 89B2     		uxth	r1, r1
 1608 0134 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1609 0138 92B2     		uxth	r2, r2
 1610 013a 9142     		cmp	r1, r2
 1611 013c F4D2     		bcs	.L131
 377:Core/Src/bms.c ****             }
 1612              		.loc 1 377 0
 1613 013e 094A     		ldr	r2, .L140
 1614 0140 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1615 0142 0949     		ldr	r1, .L140+4
 1616 0144 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1617 0146 02A8     		add	r0, sp, #8
 1618 0148 0244     		add	r2, r2, r0
 1619 014a 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1620 014e 0143     		orrs	r1, r1, r0
 1621 0150 02F8081C 		strb	r1, [r2, #-8]
 1622 0154 E8E7     		b	.L131
 1623              	.L139:
 1624              	.LBE31:
 380:Core/Src/bms.c ****         break;
 1625              		.loc 1 380 0
 1626 0156 6A46     		mov	r2, sp
 1627 0158 0521     		movs	r1, #5
 1628 015a 4FF44470 		mov	r0, #784
 1629 015e FFF7FEFF 		bl	can3tx
 1630              	.LVL131:
 386:Core/Src/bms.c **** 
 1631              		.loc 1 386 0
 1632 0162 57E7     		b	.L111
 1633              	.L141:
 1634              		.align	2
 1635              	.L140:
 1636 0164 00000000 		.word	.LANCHOR1
 1637 0168 00000000 		.word	.LANCHOR2
 1638              		.cfi_endproc
 1639              	.LFE138:
 1641              		.section	.text.vehicleComms,"ax",%progbits
 1642              		.align	1
 1643              		.global	vehicleComms
 1644              		.syntax unified
 1645              		.thumb
ARM GAS  /tmp/cctRGGbR.s 			page 42


 1646              		.thumb_func
 1647              		.fpu fpv4-sp-d16
 1649              	vehicleComms:
 1650              	.LFB150:
 540:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 541:Core/Src/bms.c **** void vehicleComms(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 542:Core/Src/bms.c **** {
 1651              		.loc 1 542 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 0
 1654              		@ frame_needed = 0, uses_anonymous_args = 0
 1655              		@ link register save eliminated.
 1656              	.LVL132:
 1657 0000 7047     		bx	lr
 1658              		.cfi_endproc
 1659              	.LFE150:
 1661              		.section	.text.synchChargers,"ax",%progbits
 1662              		.align	1
 1663              		.global	synchChargers
 1664              		.syntax unified
 1665              		.thumb
 1666              		.thumb_func
 1667              		.fpu fpv4-sp-d16
 1669              	synchChargers:
 1670              	.LFB151:
 543:Core/Src/bms.c ****     switch (rxMsg->StdId)
 544:Core/Src/bms.c ****     {
 545:Core/Src/bms.c ****     case 0x313:
 546:Core/Src/bms.c ****         //vehicleState = canRx[0];
 547:Core/Src/bms.c ****         break;
 548:Core/Src/bms.c **** 
 549:Core/Src/bms.c ****     default:
 550:Core/Src/bms.c ****         break;
 551:Core/Src/bms.c ****     }
 552:Core/Src/bms.c **** }
 553:Core/Src/bms.c **** 
 554:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 555:Core/Src/bms.c **** void synchChargers(void)
 556:Core/Src/bms.c **** {
 1671              		.loc 1 556 0
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 0
 1674              		@ frame_needed = 0, uses_anonymous_args = 0
 1675              		@ link register save eliminated.
 557:Core/Src/bms.c **** 
 558:Core/Src/bms.c ****     if (BMS[0].chargeRequest && BMS[1].chargeRequest)
 1676              		.loc 1 558 0
 1677 0000 0F4B     		ldr	r3, .L147
 1678 0002 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 1679 0006 33B1     		cbz	r3, .L144
 1680              		.loc 1 558 0 is_stmt 0 discriminator 1
 1681 0008 0D4B     		ldr	r3, .L147
 1682 000a 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 1683 000e 13B1     		cbz	r3, .L144
 559:Core/Src/bms.c ****     {
 560:Core/Src/bms.c ****         chargerOn = true;
 1684              		.loc 1 560 0 is_stmt 1
ARM GAS  /tmp/cctRGGbR.s 			page 43


 1685 0010 0122     		movs	r2, #1
 1686 0012 0C4B     		ldr	r3, .L147+4
 1687 0014 1A70     		strb	r2, [r3]
 1688              	.L144:
 561:Core/Src/bms.c ****     }
 562:Core/Src/bms.c **** 
 563:Core/Src/bms.c ****     if (chargerOn)
 1689              		.loc 1 563 0
 1690 0016 0B4B     		ldr	r3, .L147+4
 1691 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1692 001a 83B1     		cbz	r3, .L143
 564:Core/Src/bms.c ****     {
 565:Core/Src/bms.c ****         if ((!BMS[0].chargeRequest) || (!BMS[1].chargeRequest))
 1693              		.loc 1 565 0
 1694 001c 084B     		ldr	r3, .L147
 1695 001e 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 1696 0022 1BB1     		cbz	r3, .L146
 1697              		.loc 1 565 0 is_stmt 0 discriminator 1
 1698 0024 064B     		ldr	r3, .L147
 1699 0026 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 1700 002a 43B9     		cbnz	r3, .L143
 1701              	.L146:
 566:Core/Src/bms.c ****         {
 567:Core/Src/bms.c ****             chargerOn = false;
 1702              		.loc 1 567 0 is_stmt 1
 1703 002c 0022     		movs	r2, #0
 1704 002e 054B     		ldr	r3, .L147+4
 1705 0030 1A70     		strb	r2, [r3]
 568:Core/Src/bms.c ****             BMS[0].state = Ready;
 1706              		.loc 1 568 0
 1707 0032 034B     		ldr	r3, .L147
 1708 0034 0122     		movs	r2, #1
 1709 0036 83F8F220 		strb	r2, [r3, #242]
 569:Core/Src/bms.c ****             BMS[1].state = Ready;
 1710              		.loc 1 569 0
 1711 003a 83F8E821 		strb	r2, [r3, #488]
 1712              	.L143:
 1713 003e 7047     		bx	lr
 1714              	.L148:
 1715              		.align	2
 1716              	.L147:
 1717 0040 00000000 		.word	BMS
 1718 0044 00000000 		.word	chargerOn
 1719              		.cfi_endproc
 1720              	.LFE151:
 1722              		.global	__aeabi_i2d
 1723              		.global	__aeabi_dmul
 1724              		.global	__aeabi_d2uiz
 1725              		.section	.text.decodeVolt,"ax",%progbits
 1726              		.align	1
 1727              		.global	decodeVolt
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu fpv4-sp-d16
 1733              	decodeVolt:
 1734              	.LFB152:
ARM GAS  /tmp/cctRGGbR.s 			page 44


 570:Core/Src/bms.c ****         }
 571:Core/Src/bms.c ****     }
 572:Core/Src/bms.c **** }
 573:Core/Src/bms.c **** 
 574:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 575:Core/Src/bms.c **** void decodeVolt(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // cell voltage in millivol
 576:Core/Src/bms.c **** {
 1735              		.loc 1 576 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 0
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              	.LVL133:
 1740 0000 38B5     		push	{r3, r4, r5, lr}
 1741              	.LCFI27:
 1742              		.cfi_def_cfa_offset 16
 1743              		.cfi_offset 3, -16
 1744              		.cfi_offset 4, -12
 1745              		.cfi_offset 5, -8
 1746              		.cfi_offset 14, -4
 1747 0002 0546     		mov	r5, r0
 1748 0004 1446     		mov	r4, r2
 577:Core/Src/bms.c ****     switch (rxMsg->StdId)
 1749              		.loc 1 577 0
 1750 0006 0B68     		ldr	r3, [r1]
 1751 0008 A3F58C63 		sub	r3, r3, #1120
 1752 000c 1E2B     		cmp	r3, #30
 1753 000e 00F28286 		bhi	.L149
 1754 0012 DFE813F0 		tbh	[pc, r3, lsl #1]
 1755              	.LVL134:
 1756              	.L152:
 1757 0016 1F00     		.2byte	(.L151-.L152)/2
 1758 0018 8100     		.2byte	(.L153-.L152)/2
 1759 001a 0301     		.2byte	(.L154-.L152)/2
 1760 001c 8701     		.2byte	(.L155-.L152)/2
 1761 001e 0902     		.2byte	(.L156-.L152)/2
 1762 0020 9102     		.2byte	(.L157-.L152)/2
 1763 0022 1D03     		.2byte	(.L158-.L152)/2
 1764 0024 8006     		.2byte	(.L149-.L152)/2
 1765 0026 A703     		.2byte	(.L159-.L152)/2
 1766 0028 3104     		.2byte	(.L160-.L152)/2
 1767 002a BD04     		.2byte	(.L161-.L152)/2
 1768 002c 8006     		.2byte	(.L149-.L152)/2
 1769 002e 4705     		.2byte	(.L162-.L152)/2
 1770 0030 AF05     		.2byte	(.L163-.L152)/2
 1771 0032 1706     		.2byte	(.L164-.L152)/2
 1772 0034 8006     		.2byte	(.L149-.L152)/2
 1773 0036 5000     		.2byte	(.L165-.L152)/2
 1774 0038 C200     		.2byte	(.L166-.L152)/2
 1775 003a 4401     		.2byte	(.L167-.L152)/2
 1776 003c C801     		.2byte	(.L168-.L152)/2
 1777 003e 4C02     		.2byte	(.L169-.L152)/2
 1778 0040 D602     		.2byte	(.L170-.L152)/2
 1779 0042 6203     		.2byte	(.L171-.L152)/2
 1780 0044 8006     		.2byte	(.L149-.L152)/2
 1781 0046 EC03     		.2byte	(.L172-.L152)/2
 1782 0048 7604     		.2byte	(.L173-.L152)/2
 1783 004a 0205     		.2byte	(.L174-.L152)/2
ARM GAS  /tmp/cctRGGbR.s 			page 45


 1784 004c 8006     		.2byte	(.L149-.L152)/2
 1785 004e 7B05     		.2byte	(.L175-.L152)/2
 1786 0050 E305     		.2byte	(.L176-.L152)/2
 1787 0052 4D06     		.2byte	(.L177-.L152)/2
 1788              		.p2align 1
 1789              	.L151:
 578:Core/Src/bms.c ****     {
 579:Core/Src/bms.c ****     case 0x460: // Begin module 1
 580:Core/Src/bms.c ****         bms->cellVolt[0] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1790              		.loc 1 580 0
 1791 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1792 0056 1B02     		lsls	r3, r3, #8
 1793 0058 03F47063 		and	r3, r3, #3840
 1794 005c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1795              	.LVL135:
 1796 005e 1844     		add	r0, r0, r3
 1797 0060 FFF7FEFF 		bl	__aeabi_i2d
 1798              	.LVL136:
 1799 0064 0022     		movs	r2, #0
 1800 0066 AE4B     		ldr	r3, .L179
 1801 0068 FFF7FEFF 		bl	__aeabi_dmul
 1802              	.LVL137:
 1803 006c FFF7FEFF 		bl	__aeabi_d2uiz
 1804              	.LVL138:
 1805 0070 80B2     		uxth	r0, r0
 1806 0072 2880     		strh	r0, [r5]	@ movhi
 581:Core/Src/bms.c ****         bms->cellVolt[1] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1807              		.loc 1 581 0
 1808 0074 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1809 0076 1B02     		lsls	r3, r3, #8
 1810 0078 03F47063 		and	r3, r3, #3840
 1811 007c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1812 007e 1844     		add	r0, r0, r3
 1813 0080 FFF7FEFF 		bl	__aeabi_i2d
 1814              	.LVL139:
 1815 0084 0022     		movs	r2, #0
 1816 0086 A64B     		ldr	r3, .L179
 1817 0088 FFF7FEFF 		bl	__aeabi_dmul
 1818              	.LVL140:
 1819 008c FFF7FEFF 		bl	__aeabi_d2uiz
 1820              	.LVL141:
 1821 0090 80B2     		uxth	r0, r0
 1822 0092 6880     		strh	r0, [r5, #2]	@ movhi
 582:Core/Src/bms.c ****         bms->cellVolt[2] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1823              		.loc 1 582 0
 1824 0094 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1825 0096 1B02     		lsls	r3, r3, #8
 1826 0098 03F47063 		and	r3, r3, #3840
 1827 009c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1828 009e 1844     		add	r0, r0, r3
 1829 00a0 FFF7FEFF 		bl	__aeabi_i2d
 1830              	.LVL142:
 1831 00a4 0022     		movs	r2, #0
 1832 00a6 9E4B     		ldr	r3, .L179
 1833 00a8 FFF7FEFF 		bl	__aeabi_dmul
 1834              	.LVL143:
 1835 00ac FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/cctRGGbR.s 			page 46


 1836              	.LVL144:
 1837 00b0 80B2     		uxth	r0, r0
 1838 00b2 A880     		strh	r0, [r5, #4]	@ movhi
 583:Core/Src/bms.c ****         break;
 1839              		.loc 1 583 0
 1840 00b4 38BD     		pop	{r3, r4, r5, pc}
 1841              	.LVL145:
 1842              	.L165:
 584:Core/Src/bms.c **** 
 585:Core/Src/bms.c ****     case 0x470:
 586:Core/Src/bms.c ****         bms->cellVolt[3] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1843              		.loc 1 586 0
 1844 00b6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1845 00b8 1B02     		lsls	r3, r3, #8
 1846 00ba 03F47063 		and	r3, r3, #3840
 1847 00be 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1848              	.LVL146:
 1849 00c0 1844     		add	r0, r0, r3
 1850 00c2 FFF7FEFF 		bl	__aeabi_i2d
 1851              	.LVL147:
 1852 00c6 0022     		movs	r2, #0
 1853 00c8 954B     		ldr	r3, .L179
 1854 00ca FFF7FEFF 		bl	__aeabi_dmul
 1855              	.LVL148:
 1856 00ce FFF7FEFF 		bl	__aeabi_d2uiz
 1857              	.LVL149:
 1858 00d2 80B2     		uxth	r0, r0
 1859 00d4 E880     		strh	r0, [r5, #6]	@ movhi
 587:Core/Src/bms.c ****         bms->cellVolt[4] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1860              		.loc 1 587 0
 1861 00d6 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1862 00d8 1B02     		lsls	r3, r3, #8
 1863 00da 03F47063 		and	r3, r3, #3840
 1864 00de E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1865 00e0 1844     		add	r0, r0, r3
 1866 00e2 FFF7FEFF 		bl	__aeabi_i2d
 1867              	.LVL150:
 1868 00e6 0022     		movs	r2, #0
 1869 00e8 8D4B     		ldr	r3, .L179
 1870 00ea FFF7FEFF 		bl	__aeabi_dmul
 1871              	.LVL151:
 1872 00ee FFF7FEFF 		bl	__aeabi_d2uiz
 1873              	.LVL152:
 1874 00f2 80B2     		uxth	r0, r0
 1875 00f4 2881     		strh	r0, [r5, #8]	@ movhi
 588:Core/Src/bms.c ****         bms->cellVolt[5] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1876              		.loc 1 588 0
 1877 00f6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1878 00f8 1B02     		lsls	r3, r3, #8
 1879 00fa 03F47063 		and	r3, r3, #3840
 1880 00fe 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1881 0100 1844     		add	r0, r0, r3
 1882 0102 FFF7FEFF 		bl	__aeabi_i2d
 1883              	.LVL153:
 1884 0106 0022     		movs	r2, #0
 1885 0108 854B     		ldr	r3, .L179
 1886 010a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/cctRGGbR.s 			page 47


 1887              	.LVL154:
 1888 010e FFF7FEFF 		bl	__aeabi_d2uiz
 1889              	.LVL155:
 1890 0112 80B2     		uxth	r0, r0
 1891 0114 6881     		strh	r0, [r5, #10]	@ movhi
 589:Core/Src/bms.c ****         break;
 1892              		.loc 1 589 0
 1893 0116 38BD     		pop	{r3, r4, r5, pc}
 1894              	.LVL156:
 1895              	.L153:
 590:Core/Src/bms.c **** 
 591:Core/Src/bms.c ****     case 0x461:
 592:Core/Src/bms.c ****         bms->cellVolt[6] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1896              		.loc 1 592 0
 1897 0118 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1898 011a 1B02     		lsls	r3, r3, #8
 1899 011c 03F47063 		and	r3, r3, #3840
 1900 0120 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1901              	.LVL157:
 1902 0122 1844     		add	r0, r0, r3
 1903 0124 FFF7FEFF 		bl	__aeabi_i2d
 1904              	.LVL158:
 1905 0128 0022     		movs	r2, #0
 1906 012a 7D4B     		ldr	r3, .L179
 1907 012c FFF7FEFF 		bl	__aeabi_dmul
 1908              	.LVL159:
 1909 0130 FFF7FEFF 		bl	__aeabi_d2uiz
 1910              	.LVL160:
 1911 0134 80B2     		uxth	r0, r0
 1912 0136 A881     		strh	r0, [r5, #12]	@ movhi
 593:Core/Src/bms.c ****         bms->cellVolt[7] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1913              		.loc 1 593 0
 1914 0138 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1915 013a 1B02     		lsls	r3, r3, #8
 1916 013c 03F47063 		and	r3, r3, #3840
 1917 0140 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1918 0142 1844     		add	r0, r0, r3
 1919 0144 FFF7FEFF 		bl	__aeabi_i2d
 1920              	.LVL161:
 1921 0148 0022     		movs	r2, #0
 1922 014a 754B     		ldr	r3, .L179
 1923 014c FFF7FEFF 		bl	__aeabi_dmul
 1924              	.LVL162:
 1925 0150 FFF7FEFF 		bl	__aeabi_d2uiz
 1926              	.LVL163:
 1927 0154 80B2     		uxth	r0, r0
 1928 0156 E881     		strh	r0, [r5, #14]	@ movhi
 594:Core/Src/bms.c ****         bms->cellVolt[8] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1929              		.loc 1 594 0
 1930 0158 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1931 015a 1B02     		lsls	r3, r3, #8
 1932 015c 03F47063 		and	r3, r3, #3840
 1933 0160 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1934 0162 1844     		add	r0, r0, r3
 1935 0164 FFF7FEFF 		bl	__aeabi_i2d
 1936              	.LVL164:
 1937 0168 0022     		movs	r2, #0
ARM GAS  /tmp/cctRGGbR.s 			page 48


 1938 016a 6D4B     		ldr	r3, .L179
 1939 016c FFF7FEFF 		bl	__aeabi_dmul
 1940              	.LVL165:
 1941 0170 FFF7FEFF 		bl	__aeabi_d2uiz
 1942              	.LVL166:
 1943 0174 80B2     		uxth	r0, r0
 1944 0176 2882     		strh	r0, [r5, #16]	@ movhi
 595:Core/Src/bms.c ****         bms->cellVolt[9] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1945              		.loc 1 595 0
 1946 0178 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1947 017a 1B02     		lsls	r3, r3, #8
 1948 017c 03F47063 		and	r3, r3, #3840
 1949 0180 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1950 0182 1844     		add	r0, r0, r3
 1951 0184 FFF7FEFF 		bl	__aeabi_i2d
 1952              	.LVL167:
 1953 0188 0022     		movs	r2, #0
 1954 018a 654B     		ldr	r3, .L179
 1955 018c FFF7FEFF 		bl	__aeabi_dmul
 1956              	.LVL168:
 1957 0190 FFF7FEFF 		bl	__aeabi_d2uiz
 1958              	.LVL169:
 1959 0194 80B2     		uxth	r0, r0
 1960 0196 6882     		strh	r0, [r5, #18]	@ movhi
 596:Core/Src/bms.c ****         break;
 1961              		.loc 1 596 0
 1962 0198 38BD     		pop	{r3, r4, r5, pc}
 1963              	.LVL170:
 1964              	.L166:
 597:Core/Src/bms.c **** 
 598:Core/Src/bms.c ****     case 0x471:
 599:Core/Src/bms.c ****         bms->cellVolt[10] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1965              		.loc 1 599 0
 1966 019a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1967 019c 1B02     		lsls	r3, r3, #8
 1968 019e 03F47063 		and	r3, r3, #3840
 1969 01a2 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1970              	.LVL171:
 1971 01a4 1844     		add	r0, r0, r3
 1972 01a6 FFF7FEFF 		bl	__aeabi_i2d
 1973              	.LVL172:
 1974 01aa 0022     		movs	r2, #0
 1975 01ac 5C4B     		ldr	r3, .L179
 1976 01ae FFF7FEFF 		bl	__aeabi_dmul
 1977              	.LVL173:
 1978 01b2 FFF7FEFF 		bl	__aeabi_d2uiz
 1979              	.LVL174:
 1980 01b6 80B2     		uxth	r0, r0
 1981 01b8 A882     		strh	r0, [r5, #20]	@ movhi
 600:Core/Src/bms.c ****         bms->cellVolt[11] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1982              		.loc 1 600 0
 1983 01ba A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1984 01bc 1B02     		lsls	r3, r3, #8
 1985 01be 03F47063 		and	r3, r3, #3840
 1986 01c2 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1987 01c4 1844     		add	r0, r0, r3
 1988 01c6 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cctRGGbR.s 			page 49


 1989              	.LVL175:
 1990 01ca 0022     		movs	r2, #0
 1991 01cc 544B     		ldr	r3, .L179
 1992 01ce FFF7FEFF 		bl	__aeabi_dmul
 1993              	.LVL176:
 1994 01d2 FFF7FEFF 		bl	__aeabi_d2uiz
 1995              	.LVL177:
 1996 01d6 80B2     		uxth	r0, r0
 1997 01d8 E882     		strh	r0, [r5, #22]	@ movhi
 601:Core/Src/bms.c ****         bms->cellVolt[12] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1998              		.loc 1 601 0
 1999 01da 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2000 01dc 1B02     		lsls	r3, r3, #8
 2001 01de 03F47063 		and	r3, r3, #3840
 2002 01e2 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2003 01e4 1844     		add	r0, r0, r3
 2004 01e6 FFF7FEFF 		bl	__aeabi_i2d
 2005              	.LVL178:
 2006 01ea 0022     		movs	r2, #0
 2007 01ec 4C4B     		ldr	r3, .L179
 2008 01ee FFF7FEFF 		bl	__aeabi_dmul
 2009              	.LVL179:
 2010 01f2 FFF7FEFF 		bl	__aeabi_d2uiz
 2011              	.LVL180:
 2012 01f6 80B2     		uxth	r0, r0
 2013 01f8 2883     		strh	r0, [r5, #24]	@ movhi
 602:Core/Src/bms.c ****         bms->cellVolt[13] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2014              		.loc 1 602 0
 2015 01fa A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2016 01fc 1B02     		lsls	r3, r3, #8
 2017 01fe 03F47063 		and	r3, r3, #3840
 2018 0202 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2019 0204 1844     		add	r0, r0, r3
 2020 0206 FFF7FEFF 		bl	__aeabi_i2d
 2021              	.LVL181:
 2022 020a 0022     		movs	r2, #0
 2023 020c 444B     		ldr	r3, .L179
 2024 020e FFF7FEFF 		bl	__aeabi_dmul
 2025              	.LVL182:
 2026 0212 FFF7FEFF 		bl	__aeabi_d2uiz
 2027              	.LVL183:
 2028 0216 80B2     		uxth	r0, r0
 2029 0218 6883     		strh	r0, [r5, #26]	@ movhi
 603:Core/Src/bms.c ****         break;
 2030              		.loc 1 603 0
 2031 021a 38BD     		pop	{r3, r4, r5, pc}
 2032              	.LVL184:
 2033              	.L154:
 604:Core/Src/bms.c **** 
 605:Core/Src/bms.c ****     case 0x462:
 606:Core/Src/bms.c ****         bms->cellVolt[14] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2034              		.loc 1 606 0
 2035 021c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2036 021e 1B02     		lsls	r3, r3, #8
 2037 0220 03F47063 		and	r3, r3, #3840
 2038 0224 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2039              	.LVL185:
ARM GAS  /tmp/cctRGGbR.s 			page 50


 2040 0226 1844     		add	r0, r0, r3
 2041 0228 FFF7FEFF 		bl	__aeabi_i2d
 2042              	.LVL186:
 2043 022c 0022     		movs	r2, #0
 2044 022e 3C4B     		ldr	r3, .L179
 2045 0230 FFF7FEFF 		bl	__aeabi_dmul
 2046              	.LVL187:
 2047 0234 FFF7FEFF 		bl	__aeabi_d2uiz
 2048              	.LVL188:
 2049 0238 80B2     		uxth	r0, r0
 2050 023a A883     		strh	r0, [r5, #28]	@ movhi
 607:Core/Src/bms.c ****         bms->cellVolt[15] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2051              		.loc 1 607 0
 2052 023c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2053 023e 1B02     		lsls	r3, r3, #8
 2054 0240 03F47063 		and	r3, r3, #3840
 2055 0244 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2056 0246 1844     		add	r0, r0, r3
 2057 0248 FFF7FEFF 		bl	__aeabi_i2d
 2058              	.LVL189:
 2059 024c 0022     		movs	r2, #0
 2060 024e 344B     		ldr	r3, .L179
 2061 0250 FFF7FEFF 		bl	__aeabi_dmul
 2062              	.LVL190:
 2063 0254 FFF7FEFF 		bl	__aeabi_d2uiz
 2064              	.LVL191:
 2065 0258 80B2     		uxth	r0, r0
 2066 025a E883     		strh	r0, [r5, #30]	@ movhi
 608:Core/Src/bms.c ****         bms->cellVolt[16] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2067              		.loc 1 608 0
 2068 025c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2069 025e 1B02     		lsls	r3, r3, #8
 2070 0260 03F47063 		and	r3, r3, #3840
 2071 0264 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2072 0266 1844     		add	r0, r0, r3
 2073 0268 FFF7FEFF 		bl	__aeabi_i2d
 2074              	.LVL192:
 2075 026c 0022     		movs	r2, #0
 2076 026e 2C4B     		ldr	r3, .L179
 2077 0270 FFF7FEFF 		bl	__aeabi_dmul
 2078              	.LVL193:
 2079 0274 FFF7FEFF 		bl	__aeabi_d2uiz
 2080              	.LVL194:
 2081 0278 80B2     		uxth	r0, r0
 2082 027a 2884     		strh	r0, [r5, #32]	@ movhi
 609:Core/Src/bms.c ****         bms->cellVolt[17] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2083              		.loc 1 609 0
 2084 027c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2085 027e 1B02     		lsls	r3, r3, #8
 2086 0280 03F47063 		and	r3, r3, #3840
 2087 0284 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2088 0286 1844     		add	r0, r0, r3
 2089 0288 FFF7FEFF 		bl	__aeabi_i2d
 2090              	.LVL195:
 2091 028c 0022     		movs	r2, #0
 2092 028e 244B     		ldr	r3, .L179
 2093 0290 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/cctRGGbR.s 			page 51


 2094              	.LVL196:
 2095 0294 FFF7FEFF 		bl	__aeabi_d2uiz
 2096              	.LVL197:
 2097 0298 80B2     		uxth	r0, r0
 2098 029a 6884     		strh	r0, [r5, #34]	@ movhi
 610:Core/Src/bms.c ****         break;
 2099              		.loc 1 610 0
 2100 029c 38BD     		pop	{r3, r4, r5, pc}
 2101              	.LVL198:
 2102              	.L167:
 611:Core/Src/bms.c **** 
 612:Core/Src/bms.c ****     case 0x472:
 613:Core/Src/bms.c ****         bms->cellVolt[18] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2103              		.loc 1 613 0
 2104 029e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2105 02a0 1B02     		lsls	r3, r3, #8
 2106 02a2 03F47063 		and	r3, r3, #3840
 2107 02a6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2108              	.LVL199:
 2109 02a8 1844     		add	r0, r0, r3
 2110 02aa FFF7FEFF 		bl	__aeabi_i2d
 2111              	.LVL200:
 2112 02ae 0022     		movs	r2, #0
 2113 02b0 1B4B     		ldr	r3, .L179
 2114 02b2 FFF7FEFF 		bl	__aeabi_dmul
 2115              	.LVL201:
 2116 02b6 FFF7FEFF 		bl	__aeabi_d2uiz
 2117              	.LVL202:
 2118 02ba 80B2     		uxth	r0, r0
 2119 02bc A884     		strh	r0, [r5, #36]	@ movhi
 614:Core/Src/bms.c ****         bms->cellVolt[19] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2120              		.loc 1 614 0
 2121 02be A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2122 02c0 1B02     		lsls	r3, r3, #8
 2123 02c2 03F47063 		and	r3, r3, #3840
 2124 02c6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2125 02c8 1844     		add	r0, r0, r3
 2126 02ca FFF7FEFF 		bl	__aeabi_i2d
 2127              	.LVL203:
 2128 02ce 0022     		movs	r2, #0
 2129 02d0 134B     		ldr	r3, .L179
 2130 02d2 FFF7FEFF 		bl	__aeabi_dmul
 2131              	.LVL204:
 2132 02d6 FFF7FEFF 		bl	__aeabi_d2uiz
 2133              	.LVL205:
 2134 02da 80B2     		uxth	r0, r0
 2135 02dc E884     		strh	r0, [r5, #38]	@ movhi
 615:Core/Src/bms.c ****         bms->cellVolt[20] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2136              		.loc 1 615 0
 2137 02de 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2138 02e0 1B02     		lsls	r3, r3, #8
 2139 02e2 03F47063 		and	r3, r3, #3840
 2140 02e6 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2141 02e8 1844     		add	r0, r0, r3
 2142 02ea FFF7FEFF 		bl	__aeabi_i2d
 2143              	.LVL206:
 2144 02ee 0022     		movs	r2, #0
ARM GAS  /tmp/cctRGGbR.s 			page 52


 2145 02f0 0B4B     		ldr	r3, .L179
 2146 02f2 FFF7FEFF 		bl	__aeabi_dmul
 2147              	.LVL207:
 2148 02f6 FFF7FEFF 		bl	__aeabi_d2uiz
 2149              	.LVL208:
 2150 02fa 80B2     		uxth	r0, r0
 2151 02fc 2885     		strh	r0, [r5, #40]	@ movhi
 616:Core/Src/bms.c ****         bms->cellVolt[21] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2152              		.loc 1 616 0
 2153 02fe A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2154 0300 1B02     		lsls	r3, r3, #8
 2155 0302 03F47063 		and	r3, r3, #3840
 2156 0306 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2157 0308 1844     		add	r0, r0, r3
 2158 030a FFF7FEFF 		bl	__aeabi_i2d
 2159              	.LVL209:
 2160 030e 0022     		movs	r2, #0
 2161 0310 034B     		ldr	r3, .L179
 2162 0312 FFF7FEFF 		bl	__aeabi_dmul
 2163              	.LVL210:
 2164 0316 FFF7FEFF 		bl	__aeabi_d2uiz
 2165              	.LVL211:
 2166 031a 80B2     		uxth	r0, r0
 2167 031c 6885     		strh	r0, [r5, #42]	@ movhi
 617:Core/Src/bms.c ****         break;
 2168              		.loc 1 617 0
 2169 031e 38BD     		pop	{r3, r4, r5, pc}
 2170              	.LVL212:
 2171              	.L180:
 2172              		.align	2
 2173              	.L179:
 2174 0320 0000F43F 		.word	1072955392
 2175              	.LVL213:
 2176              	.L155:
 618:Core/Src/bms.c ****     case 0x463:
 619:Core/Src/bms.c ****         bms->cellVolt[22] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2177              		.loc 1 619 0
 2178 0324 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2179 0326 1B02     		lsls	r3, r3, #8
 2180 0328 03F47063 		and	r3, r3, #3840
 2181 032c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2182              	.LVL214:
 2183 032e 1844     		add	r0, r0, r3
 2184 0330 FFF7FEFF 		bl	__aeabi_i2d
 2185              	.LVL215:
 2186 0334 0022     		movs	r2, #0
 2187 0336 C54B     		ldr	r3, .L181
 2188 0338 FFF7FEFF 		bl	__aeabi_dmul
 2189              	.LVL216:
 2190 033c FFF7FEFF 		bl	__aeabi_d2uiz
 2191              	.LVL217:
 2192 0340 80B2     		uxth	r0, r0
 2193 0342 A885     		strh	r0, [r5, #44]	@ movhi
 620:Core/Src/bms.c ****         bms->cellVolt[23] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2194              		.loc 1 620 0
 2195 0344 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2196 0346 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp/cctRGGbR.s 			page 53


 2197 0348 03F47063 		and	r3, r3, #3840
 2198 034c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2199 034e 1844     		add	r0, r0, r3
 2200 0350 FFF7FEFF 		bl	__aeabi_i2d
 2201              	.LVL218:
 2202 0354 0022     		movs	r2, #0
 2203 0356 BD4B     		ldr	r3, .L181
 2204 0358 FFF7FEFF 		bl	__aeabi_dmul
 2205              	.LVL219:
 2206 035c FFF7FEFF 		bl	__aeabi_d2uiz
 2207              	.LVL220:
 2208 0360 80B2     		uxth	r0, r0
 2209 0362 E885     		strh	r0, [r5, #46]	@ movhi
 621:Core/Src/bms.c ****         bms->cellVolt[24] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2210              		.loc 1 621 0
 2211 0364 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2212 0366 1B02     		lsls	r3, r3, #8
 2213 0368 03F47063 		and	r3, r3, #3840
 2214 036c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2215 036e 1844     		add	r0, r0, r3
 2216 0370 FFF7FEFF 		bl	__aeabi_i2d
 2217              	.LVL221:
 2218 0374 0022     		movs	r2, #0
 2219 0376 B54B     		ldr	r3, .L181
 2220 0378 FFF7FEFF 		bl	__aeabi_dmul
 2221              	.LVL222:
 2222 037c FFF7FEFF 		bl	__aeabi_d2uiz
 2223              	.LVL223:
 2224 0380 80B2     		uxth	r0, r0
 2225 0382 2886     		strh	r0, [r5, #48]	@ movhi
 622:Core/Src/bms.c ****         bms->cellVolt[25] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2226              		.loc 1 622 0
 2227 0384 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2228 0386 1B02     		lsls	r3, r3, #8
 2229 0388 03F47063 		and	r3, r3, #3840
 2230 038c E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2231 038e 1844     		add	r0, r0, r3
 2232 0390 FFF7FEFF 		bl	__aeabi_i2d
 2233              	.LVL224:
 2234 0394 0022     		movs	r2, #0
 2235 0396 AD4B     		ldr	r3, .L181
 2236 0398 FFF7FEFF 		bl	__aeabi_dmul
 2237              	.LVL225:
 2238 039c FFF7FEFF 		bl	__aeabi_d2uiz
 2239              	.LVL226:
 2240 03a0 80B2     		uxth	r0, r0
 2241 03a2 6886     		strh	r0, [r5, #50]	@ movhi
 623:Core/Src/bms.c ****         break;
 2242              		.loc 1 623 0
 2243 03a4 38BD     		pop	{r3, r4, r5, pc}
 2244              	.LVL227:
 2245              	.L168:
 624:Core/Src/bms.c **** 
 625:Core/Src/bms.c ****     case 0x473:
 626:Core/Src/bms.c ****         bms->cellVolt[26] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2246              		.loc 1 626 0
 2247 03a6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/cctRGGbR.s 			page 54


 2248 03a8 1B02     		lsls	r3, r3, #8
 2249 03aa 03F47063 		and	r3, r3, #3840
 2250 03ae 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2251              	.LVL228:
 2252 03b0 1844     		add	r0, r0, r3
 2253 03b2 FFF7FEFF 		bl	__aeabi_i2d
 2254              	.LVL229:
 2255 03b6 0022     		movs	r2, #0
 2256 03b8 A44B     		ldr	r3, .L181
 2257 03ba FFF7FEFF 		bl	__aeabi_dmul
 2258              	.LVL230:
 2259 03be FFF7FEFF 		bl	__aeabi_d2uiz
 2260              	.LVL231:
 2261 03c2 80B2     		uxth	r0, r0
 2262 03c4 A886     		strh	r0, [r5, #52]	@ movhi
 627:Core/Src/bms.c ****         bms->cellVolt[27] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2263              		.loc 1 627 0
 2264 03c6 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2265 03c8 1B02     		lsls	r3, r3, #8
 2266 03ca 03F47063 		and	r3, r3, #3840
 2267 03ce E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2268 03d0 1844     		add	r0, r0, r3
 2269 03d2 FFF7FEFF 		bl	__aeabi_i2d
 2270              	.LVL232:
 2271 03d6 0022     		movs	r2, #0
 2272 03d8 9C4B     		ldr	r3, .L181
 2273 03da FFF7FEFF 		bl	__aeabi_dmul
 2274              	.LVL233:
 2275 03de FFF7FEFF 		bl	__aeabi_d2uiz
 2276              	.LVL234:
 2277 03e2 80B2     		uxth	r0, r0
 2278 03e4 E886     		strh	r0, [r5, #54]	@ movhi
 628:Core/Src/bms.c ****         bms->cellVolt[28] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2279              		.loc 1 628 0
 2280 03e6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2281 03e8 1B02     		lsls	r3, r3, #8
 2282 03ea 03F47063 		and	r3, r3, #3840
 2283 03ee 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2284 03f0 1844     		add	r0, r0, r3
 2285 03f2 FFF7FEFF 		bl	__aeabi_i2d
 2286              	.LVL235:
 2287 03f6 0022     		movs	r2, #0
 2288 03f8 944B     		ldr	r3, .L181
 2289 03fa FFF7FEFF 		bl	__aeabi_dmul
 2290              	.LVL236:
 2291 03fe FFF7FEFF 		bl	__aeabi_d2uiz
 2292              	.LVL237:
 2293 0402 80B2     		uxth	r0, r0
 2294 0404 2887     		strh	r0, [r5, #56]	@ movhi
 629:Core/Src/bms.c ****         bms->cellVolt[29] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2295              		.loc 1 629 0
 2296 0406 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2297 0408 1B02     		lsls	r3, r3, #8
 2298 040a 03F47063 		and	r3, r3, #3840
 2299 040e E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2300 0410 1844     		add	r0, r0, r3
 2301 0412 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cctRGGbR.s 			page 55


 2302              	.LVL238:
 2303 0416 0022     		movs	r2, #0
 2304 0418 8C4B     		ldr	r3, .L181
 2305 041a FFF7FEFF 		bl	__aeabi_dmul
 2306              	.LVL239:
 2307 041e FFF7FEFF 		bl	__aeabi_d2uiz
 2308              	.LVL240:
 2309 0422 80B2     		uxth	r0, r0
 2310 0424 6887     		strh	r0, [r5, #58]	@ movhi
 630:Core/Src/bms.c ****         break;
 2311              		.loc 1 630 0
 2312 0426 38BD     		pop	{r3, r4, r5, pc}
 2313              	.LVL241:
 2314              	.L156:
 631:Core/Src/bms.c **** 
 632:Core/Src/bms.c ****     case 0x464:
 633:Core/Src/bms.c ****         bms->cellVolt[30] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); // Begin module 2
 2315              		.loc 1 633 0
 2316 0428 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2317 042a 1B02     		lsls	r3, r3, #8
 2318 042c 03F47063 		and	r3, r3, #3840
 2319 0430 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2320              	.LVL242:
 2321 0432 1844     		add	r0, r0, r3
 2322 0434 FFF7FEFF 		bl	__aeabi_i2d
 2323              	.LVL243:
 2324 0438 0022     		movs	r2, #0
 2325 043a 844B     		ldr	r3, .L181
 2326 043c FFF7FEFF 		bl	__aeabi_dmul
 2327              	.LVL244:
 2328 0440 FFF7FEFF 		bl	__aeabi_d2uiz
 2329              	.LVL245:
 2330 0444 80B2     		uxth	r0, r0
 2331 0446 A887     		strh	r0, [r5, #60]	@ movhi
 634:Core/Src/bms.c ****         bms->cellVolt[31] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2332              		.loc 1 634 0
 2333 0448 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2334 044a 1B02     		lsls	r3, r3, #8
 2335 044c 03F47063 		and	r3, r3, #3840
 2336 0450 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2337 0452 1844     		add	r0, r0, r3
 2338 0454 FFF7FEFF 		bl	__aeabi_i2d
 2339              	.LVL246:
 2340 0458 0022     		movs	r2, #0
 2341 045a 7C4B     		ldr	r3, .L181
 2342 045c FFF7FEFF 		bl	__aeabi_dmul
 2343              	.LVL247:
 2344 0460 FFF7FEFF 		bl	__aeabi_d2uiz
 2345              	.LVL248:
 2346 0464 80B2     		uxth	r0, r0
 2347 0466 E887     		strh	r0, [r5, #62]	@ movhi
 635:Core/Src/bms.c ****         bms->cellVolt[32] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2348              		.loc 1 635 0
 2349 0468 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2350 046a 1B02     		lsls	r3, r3, #8
 2351 046c 03F47063 		and	r3, r3, #3840
 2352 0470 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
ARM GAS  /tmp/cctRGGbR.s 			page 56


 2353 0472 1844     		add	r0, r0, r3
 2354 0474 FFF7FEFF 		bl	__aeabi_i2d
 2355              	.LVL249:
 2356 0478 0022     		movs	r2, #0
 2357 047a 744B     		ldr	r3, .L181
 2358 047c FFF7FEFF 		bl	__aeabi_dmul
 2359              	.LVL250:
 2360 0480 FFF7FEFF 		bl	__aeabi_d2uiz
 2361              	.LVL251:
 2362 0484 80B2     		uxth	r0, r0
 2363 0486 A5F84000 		strh	r0, [r5, #64]	@ movhi
 636:Core/Src/bms.c ****         bms->cellVolt[33] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2364              		.loc 1 636 0
 2365 048a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2366 048c 1B02     		lsls	r3, r3, #8
 2367 048e 03F47063 		and	r3, r3, #3840
 2368 0492 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2369 0494 1844     		add	r0, r0, r3
 2370 0496 FFF7FEFF 		bl	__aeabi_i2d
 2371              	.LVL252:
 2372 049a 0022     		movs	r2, #0
 2373 049c 6B4B     		ldr	r3, .L181
 2374 049e FFF7FEFF 		bl	__aeabi_dmul
 2375              	.LVL253:
 2376 04a2 FFF7FEFF 		bl	__aeabi_d2uiz
 2377              	.LVL254:
 2378 04a6 80B2     		uxth	r0, r0
 2379 04a8 A5F84200 		strh	r0, [r5, #66]	@ movhi
 637:Core/Src/bms.c ****         break;
 2380              		.loc 1 637 0
 2381 04ac 38BD     		pop	{r3, r4, r5, pc}
 2382              	.LVL255:
 2383              	.L169:
 638:Core/Src/bms.c **** 
 639:Core/Src/bms.c ****     case 0x474:
 640:Core/Src/bms.c ****         bms->cellVolt[34] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2384              		.loc 1 640 0
 2385 04ae 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2386 04b0 1B02     		lsls	r3, r3, #8
 2387 04b2 03F47063 		and	r3, r3, #3840
 2388 04b6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2389              	.LVL256:
 2390 04b8 1844     		add	r0, r0, r3
 2391 04ba FFF7FEFF 		bl	__aeabi_i2d
 2392              	.LVL257:
 2393 04be 0022     		movs	r2, #0
 2394 04c0 624B     		ldr	r3, .L181
 2395 04c2 FFF7FEFF 		bl	__aeabi_dmul
 2396              	.LVL258:
 2397 04c6 FFF7FEFF 		bl	__aeabi_d2uiz
 2398              	.LVL259:
 2399 04ca 80B2     		uxth	r0, r0
 2400 04cc A5F84400 		strh	r0, [r5, #68]	@ movhi
 641:Core/Src/bms.c ****         bms->cellVolt[35] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2401              		.loc 1 641 0
 2402 04d0 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2403 04d2 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp/cctRGGbR.s 			page 57


 2404 04d4 03F47063 		and	r3, r3, #3840
 2405 04d8 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2406 04da 1844     		add	r0, r0, r3
 2407 04dc FFF7FEFF 		bl	__aeabi_i2d
 2408              	.LVL260:
 2409 04e0 0022     		movs	r2, #0
 2410 04e2 5A4B     		ldr	r3, .L181
 2411 04e4 FFF7FEFF 		bl	__aeabi_dmul
 2412              	.LVL261:
 2413 04e8 FFF7FEFF 		bl	__aeabi_d2uiz
 2414              	.LVL262:
 2415 04ec 80B2     		uxth	r0, r0
 2416 04ee A5F84600 		strh	r0, [r5, #70]	@ movhi
 642:Core/Src/bms.c ****         bms->cellVolt[36] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2417              		.loc 1 642 0
 2418 04f2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2419 04f4 1B02     		lsls	r3, r3, #8
 2420 04f6 03F47063 		and	r3, r3, #3840
 2421 04fa 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2422 04fc 1844     		add	r0, r0, r3
 2423 04fe FFF7FEFF 		bl	__aeabi_i2d
 2424              	.LVL263:
 2425 0502 0022     		movs	r2, #0
 2426 0504 514B     		ldr	r3, .L181
 2427 0506 FFF7FEFF 		bl	__aeabi_dmul
 2428              	.LVL264:
 2429 050a FFF7FEFF 		bl	__aeabi_d2uiz
 2430              	.LVL265:
 2431 050e 80B2     		uxth	r0, r0
 2432 0510 A5F84800 		strh	r0, [r5, #72]	@ movhi
 643:Core/Src/bms.c ****         bms->cellVolt[37] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2433              		.loc 1 643 0
 2434 0514 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2435 0516 1B02     		lsls	r3, r3, #8
 2436 0518 03F47063 		and	r3, r3, #3840
 2437 051c E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2438 051e 1844     		add	r0, r0, r3
 2439 0520 FFF7FEFF 		bl	__aeabi_i2d
 2440              	.LVL266:
 2441 0524 0022     		movs	r2, #0
 2442 0526 494B     		ldr	r3, .L181
 2443 0528 FFF7FEFF 		bl	__aeabi_dmul
 2444              	.LVL267:
 2445 052c FFF7FEFF 		bl	__aeabi_d2uiz
 2446              	.LVL268:
 2447 0530 80B2     		uxth	r0, r0
 2448 0532 A5F84A00 		strh	r0, [r5, #74]	@ movhi
 644:Core/Src/bms.c ****         break;
 2449              		.loc 1 644 0
 2450 0536 38BD     		pop	{r3, r4, r5, pc}
 2451              	.LVL269:
 2452              	.L157:
 645:Core/Src/bms.c **** 
 646:Core/Src/bms.c ****     case 0x465:
 647:Core/Src/bms.c ****         bms->cellVolt[38] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2453              		.loc 1 647 0
 2454 0538 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/cctRGGbR.s 			page 58


 2455 053a 1B02     		lsls	r3, r3, #8
 2456 053c 03F47063 		and	r3, r3, #3840
 2457 0540 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2458              	.LVL270:
 2459 0542 1844     		add	r0, r0, r3
 2460 0544 FFF7FEFF 		bl	__aeabi_i2d
 2461              	.LVL271:
 2462 0548 0022     		movs	r2, #0
 2463 054a 404B     		ldr	r3, .L181
 2464 054c FFF7FEFF 		bl	__aeabi_dmul
 2465              	.LVL272:
 2466 0550 FFF7FEFF 		bl	__aeabi_d2uiz
 2467              	.LVL273:
 2468 0554 80B2     		uxth	r0, r0
 2469 0556 A5F84C00 		strh	r0, [r5, #76]	@ movhi
 648:Core/Src/bms.c ****         bms->cellVolt[39] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2470              		.loc 1 648 0
 2471 055a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2472 055c 1B02     		lsls	r3, r3, #8
 2473 055e 03F47063 		and	r3, r3, #3840
 2474 0562 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2475 0564 1844     		add	r0, r0, r3
 2476 0566 FFF7FEFF 		bl	__aeabi_i2d
 2477              	.LVL274:
 2478 056a 0022     		movs	r2, #0
 2479 056c 374B     		ldr	r3, .L181
 2480 056e FFF7FEFF 		bl	__aeabi_dmul
 2481              	.LVL275:
 2482 0572 FFF7FEFF 		bl	__aeabi_d2uiz
 2483              	.LVL276:
 2484 0576 80B2     		uxth	r0, r0
 2485 0578 A5F84E00 		strh	r0, [r5, #78]	@ movhi
 649:Core/Src/bms.c ****         bms->cellVolt[40] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2486              		.loc 1 649 0
 2487 057c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2488 057e 1B02     		lsls	r3, r3, #8
 2489 0580 03F47063 		and	r3, r3, #3840
 2490 0584 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2491 0586 1844     		add	r0, r0, r3
 2492 0588 FFF7FEFF 		bl	__aeabi_i2d
 2493              	.LVL277:
 2494 058c 0022     		movs	r2, #0
 2495 058e 2F4B     		ldr	r3, .L181
 2496 0590 FFF7FEFF 		bl	__aeabi_dmul
 2497              	.LVL278:
 2498 0594 FFF7FEFF 		bl	__aeabi_d2uiz
 2499              	.LVL279:
 2500 0598 80B2     		uxth	r0, r0
 2501 059a A5F85000 		strh	r0, [r5, #80]	@ movhi
 650:Core/Src/bms.c ****         bms->cellVolt[41] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2502              		.loc 1 650 0
 2503 059e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2504 05a0 1B02     		lsls	r3, r3, #8
 2505 05a2 03F47063 		and	r3, r3, #3840
 2506 05a6 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2507 05a8 1844     		add	r0, r0, r3
 2508 05aa FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cctRGGbR.s 			page 59


 2509              	.LVL280:
 2510 05ae 0022     		movs	r2, #0
 2511 05b0 264B     		ldr	r3, .L181
 2512 05b2 FFF7FEFF 		bl	__aeabi_dmul
 2513              	.LVL281:
 2514 05b6 FFF7FEFF 		bl	__aeabi_d2uiz
 2515              	.LVL282:
 2516 05ba 80B2     		uxth	r0, r0
 2517 05bc A5F85200 		strh	r0, [r5, #82]	@ movhi
 651:Core/Src/bms.c ****         break;
 2518              		.loc 1 651 0
 2519 05c0 38BD     		pop	{r3, r4, r5, pc}
 2520              	.LVL283:
 2521              	.L170:
 652:Core/Src/bms.c **** 
 653:Core/Src/bms.c ****     case 0x475:
 654:Core/Src/bms.c ****         bms->cellVolt[42] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2522              		.loc 1 654 0
 2523 05c2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2524 05c4 1B02     		lsls	r3, r3, #8
 2525 05c6 03F47063 		and	r3, r3, #3840
 2526 05ca 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2527              	.LVL284:
 2528 05cc 1844     		add	r0, r0, r3
 2529 05ce FFF7FEFF 		bl	__aeabi_i2d
 2530              	.LVL285:
 2531 05d2 0022     		movs	r2, #0
 2532 05d4 1D4B     		ldr	r3, .L181
 2533 05d6 FFF7FEFF 		bl	__aeabi_dmul
 2534              	.LVL286:
 2535 05da FFF7FEFF 		bl	__aeabi_d2uiz
 2536              	.LVL287:
 2537 05de 80B2     		uxth	r0, r0
 2538 05e0 A5F85400 		strh	r0, [r5, #84]	@ movhi
 655:Core/Src/bms.c ****         bms->cellVolt[43] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2539              		.loc 1 655 0
 2540 05e4 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2541 05e6 1B02     		lsls	r3, r3, #8
 2542 05e8 03F47063 		and	r3, r3, #3840
 2543 05ec E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2544 05ee 1844     		add	r0, r0, r3
 2545 05f0 FFF7FEFF 		bl	__aeabi_i2d
 2546              	.LVL288:
 2547 05f4 0022     		movs	r2, #0
 2548 05f6 154B     		ldr	r3, .L181
 2549 05f8 FFF7FEFF 		bl	__aeabi_dmul
 2550              	.LVL289:
 2551 05fc FFF7FEFF 		bl	__aeabi_d2uiz
 2552              	.LVL290:
 2553 0600 80B2     		uxth	r0, r0
 2554 0602 A5F85600 		strh	r0, [r5, #86]	@ movhi
 656:Core/Src/bms.c ****         bms->cellVolt[44] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2555              		.loc 1 656 0
 2556 0606 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2557 0608 1B02     		lsls	r3, r3, #8
 2558 060a 03F47063 		and	r3, r3, #3840
 2559 060e 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
ARM GAS  /tmp/cctRGGbR.s 			page 60


 2560 0610 1844     		add	r0, r0, r3
 2561 0612 FFF7FEFF 		bl	__aeabi_i2d
 2562              	.LVL291:
 2563 0616 0022     		movs	r2, #0
 2564 0618 0C4B     		ldr	r3, .L181
 2565 061a FFF7FEFF 		bl	__aeabi_dmul
 2566              	.LVL292:
 2567 061e FFF7FEFF 		bl	__aeabi_d2uiz
 2568              	.LVL293:
 2569 0622 80B2     		uxth	r0, r0
 2570 0624 A5F85800 		strh	r0, [r5, #88]	@ movhi
 657:Core/Src/bms.c ****         bms->cellVolt[45] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2571              		.loc 1 657 0
 2572 0628 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2573 062a 1B02     		lsls	r3, r3, #8
 2574 062c 03F47063 		and	r3, r3, #3840
 2575 0630 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2576 0632 1844     		add	r0, r0, r3
 2577 0634 FFF7FEFF 		bl	__aeabi_i2d
 2578              	.LVL294:
 2579 0638 0022     		movs	r2, #0
 2580 063a 044B     		ldr	r3, .L181
 2581 063c FFF7FEFF 		bl	__aeabi_dmul
 2582              	.LVL295:
 2583 0640 FFF7FEFF 		bl	__aeabi_d2uiz
 2584              	.LVL296:
 2585 0644 80B2     		uxth	r0, r0
 2586 0646 A5F85A00 		strh	r0, [r5, #90]	@ movhi
 658:Core/Src/bms.c ****         break;
 2587              		.loc 1 658 0
 2588 064a 38BD     		pop	{r3, r4, r5, pc}
 2589              	.LVL297:
 2590              	.L182:
 2591              		.align	2
 2592              	.L181:
 2593 064c 0000F43F 		.word	1072955392
 2594              	.LVL298:
 2595              	.L158:
 659:Core/Src/bms.c **** 
 660:Core/Src/bms.c ****     case 0x466:
 661:Core/Src/bms.c ****         bms->cellVolt[46] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2596              		.loc 1 661 0
 2597 0650 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2598 0652 1B02     		lsls	r3, r3, #8
 2599 0654 03F47063 		and	r3, r3, #3840
 2600 0658 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2601              	.LVL299:
 2602 065a 1844     		add	r0, r0, r3
 2603 065c FFF7FEFF 		bl	__aeabi_i2d
 2604              	.LVL300:
 2605 0660 0022     		movs	r2, #0
 2606 0662 CA4B     		ldr	r3, .L183
 2607 0664 FFF7FEFF 		bl	__aeabi_dmul
 2608              	.LVL301:
 2609 0668 FFF7FEFF 		bl	__aeabi_d2uiz
 2610              	.LVL302:
 2611 066c 80B2     		uxth	r0, r0
ARM GAS  /tmp/cctRGGbR.s 			page 61


 2612 066e A5F85C00 		strh	r0, [r5, #92]	@ movhi
 662:Core/Src/bms.c ****         bms->cellVolt[47] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2613              		.loc 1 662 0
 2614 0672 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2615 0674 1B02     		lsls	r3, r3, #8
 2616 0676 03F47063 		and	r3, r3, #3840
 2617 067a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2618 067c 1844     		add	r0, r0, r3
 2619 067e FFF7FEFF 		bl	__aeabi_i2d
 2620              	.LVL303:
 2621 0682 0022     		movs	r2, #0
 2622 0684 C14B     		ldr	r3, .L183
 2623 0686 FFF7FEFF 		bl	__aeabi_dmul
 2624              	.LVL304:
 2625 068a FFF7FEFF 		bl	__aeabi_d2uiz
 2626              	.LVL305:
 2627 068e 80B2     		uxth	r0, r0
 2628 0690 A5F85E00 		strh	r0, [r5, #94]	@ movhi
 663:Core/Src/bms.c ****         bms->cellVolt[48] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2629              		.loc 1 663 0
 2630 0694 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2631 0696 1B02     		lsls	r3, r3, #8
 2632 0698 03F47063 		and	r3, r3, #3840
 2633 069c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2634 069e 1844     		add	r0, r0, r3
 2635 06a0 FFF7FEFF 		bl	__aeabi_i2d
 2636              	.LVL306:
 2637 06a4 0022     		movs	r2, #0
 2638 06a6 B94B     		ldr	r3, .L183
 2639 06a8 FFF7FEFF 		bl	__aeabi_dmul
 2640              	.LVL307:
 2641 06ac FFF7FEFF 		bl	__aeabi_d2uiz
 2642              	.LVL308:
 2643 06b0 80B2     		uxth	r0, r0
 2644 06b2 A5F86000 		strh	r0, [r5, #96]	@ movhi
 664:Core/Src/bms.c ****         bms->cellVolt[49] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2645              		.loc 1 664 0
 2646 06b6 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2647 06b8 1B02     		lsls	r3, r3, #8
 2648 06ba 03F47063 		and	r3, r3, #3840
 2649 06be E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2650 06c0 1844     		add	r0, r0, r3
 2651 06c2 FFF7FEFF 		bl	__aeabi_i2d
 2652              	.LVL309:
 2653 06c6 0022     		movs	r2, #0
 2654 06c8 B04B     		ldr	r3, .L183
 2655 06ca FFF7FEFF 		bl	__aeabi_dmul
 2656              	.LVL310:
 2657 06ce FFF7FEFF 		bl	__aeabi_d2uiz
 2658              	.LVL311:
 2659 06d2 80B2     		uxth	r0, r0
 2660 06d4 A5F86200 		strh	r0, [r5, #98]	@ movhi
 665:Core/Src/bms.c ****         break;
 2661              		.loc 1 665 0
 2662 06d8 38BD     		pop	{r3, r4, r5, pc}
 2663              	.LVL312:
 2664              	.L171:
ARM GAS  /tmp/cctRGGbR.s 			page 62


 666:Core/Src/bms.c **** 
 667:Core/Src/bms.c ****     case 0x476:
 668:Core/Src/bms.c ****         bms->cellVolt[50] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2665              		.loc 1 668 0
 2666 06da 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2667 06dc 1B02     		lsls	r3, r3, #8
 2668 06de 03F47063 		and	r3, r3, #3840
 2669 06e2 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2670              	.LVL313:
 2671 06e4 1844     		add	r0, r0, r3
 2672 06e6 FFF7FEFF 		bl	__aeabi_i2d
 2673              	.LVL314:
 2674 06ea 0022     		movs	r2, #0
 2675 06ec A74B     		ldr	r3, .L183
 2676 06ee FFF7FEFF 		bl	__aeabi_dmul
 2677              	.LVL315:
 2678 06f2 FFF7FEFF 		bl	__aeabi_d2uiz
 2679              	.LVL316:
 2680 06f6 80B2     		uxth	r0, r0
 2681 06f8 A5F86400 		strh	r0, [r5, #100]	@ movhi
 669:Core/Src/bms.c ****         bms->cellVolt[51] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2682              		.loc 1 669 0
 2683 06fc A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2684 06fe 1B02     		lsls	r3, r3, #8
 2685 0700 03F47063 		and	r3, r3, #3840
 2686 0704 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2687 0706 1844     		add	r0, r0, r3
 2688 0708 FFF7FEFF 		bl	__aeabi_i2d
 2689              	.LVL317:
 2690 070c 0022     		movs	r2, #0
 2691 070e 9F4B     		ldr	r3, .L183
 2692 0710 FFF7FEFF 		bl	__aeabi_dmul
 2693              	.LVL318:
 2694 0714 FFF7FEFF 		bl	__aeabi_d2uiz
 2695              	.LVL319:
 2696 0718 80B2     		uxth	r0, r0
 2697 071a A5F86600 		strh	r0, [r5, #102]	@ movhi
 670:Core/Src/bms.c ****         bms->cellVolt[52] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2698              		.loc 1 670 0
 2699 071e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2700 0720 1B02     		lsls	r3, r3, #8
 2701 0722 03F47063 		and	r3, r3, #3840
 2702 0726 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2703 0728 1844     		add	r0, r0, r3
 2704 072a FFF7FEFF 		bl	__aeabi_i2d
 2705              	.LVL320:
 2706 072e 0022     		movs	r2, #0
 2707 0730 964B     		ldr	r3, .L183
 2708 0732 FFF7FEFF 		bl	__aeabi_dmul
 2709              	.LVL321:
 2710 0736 FFF7FEFF 		bl	__aeabi_d2uiz
 2711              	.LVL322:
 2712 073a 80B2     		uxth	r0, r0
 2713 073c A5F86800 		strh	r0, [r5, #104]	@ movhi
 671:Core/Src/bms.c ****         bms->cellVolt[53] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2714              		.loc 1 671 0
 2715 0740 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cctRGGbR.s 			page 63


 2716 0742 1B02     		lsls	r3, r3, #8
 2717 0744 03F47063 		and	r3, r3, #3840
 2718 0748 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2719 074a 1844     		add	r0, r0, r3
 2720 074c FFF7FEFF 		bl	__aeabi_i2d
 2721              	.LVL323:
 2722 0750 0022     		movs	r2, #0
 2723 0752 8E4B     		ldr	r3, .L183
 2724 0754 FFF7FEFF 		bl	__aeabi_dmul
 2725              	.LVL324:
 2726 0758 FFF7FEFF 		bl	__aeabi_d2uiz
 2727              	.LVL325:
 2728 075c 80B2     		uxth	r0, r0
 2729 075e A5F86A00 		strh	r0, [r5, #106]	@ movhi
 672:Core/Src/bms.c ****         break;
 2730              		.loc 1 672 0
 2731 0762 38BD     		pop	{r3, r4, r5, pc}
 2732              	.LVL326:
 2733              	.L159:
 673:Core/Src/bms.c **** 
 674:Core/Src/bms.c ****     case 0x468:
 675:Core/Src/bms.c ****         bms->cellVolt[54] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 3
 2734              		.loc 1 675 0
 2735 0764 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2736 0766 1B02     		lsls	r3, r3, #8
 2737 0768 03F47063 		and	r3, r3, #3840
 2738 076c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2739              	.LVL327:
 2740 076e 1844     		add	r0, r0, r3
 2741 0770 FFF7FEFF 		bl	__aeabi_i2d
 2742              	.LVL328:
 2743 0774 0022     		movs	r2, #0
 2744 0776 854B     		ldr	r3, .L183
 2745 0778 FFF7FEFF 		bl	__aeabi_dmul
 2746              	.LVL329:
 2747 077c FFF7FEFF 		bl	__aeabi_d2uiz
 2748              	.LVL330:
 2749 0780 80B2     		uxth	r0, r0
 2750 0782 A5F86C00 		strh	r0, [r5, #108]	@ movhi
 676:Core/Src/bms.c ****         bms->cellVolt[55] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2751              		.loc 1 676 0
 2752 0786 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2753 0788 1B02     		lsls	r3, r3, #8
 2754 078a 03F47063 		and	r3, r3, #3840
 2755 078e E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2756 0790 1844     		add	r0, r0, r3
 2757 0792 FFF7FEFF 		bl	__aeabi_i2d
 2758              	.LVL331:
 2759 0796 0022     		movs	r2, #0
 2760 0798 7C4B     		ldr	r3, .L183
 2761 079a FFF7FEFF 		bl	__aeabi_dmul
 2762              	.LVL332:
 2763 079e FFF7FEFF 		bl	__aeabi_d2uiz
 2764              	.LVL333:
 2765 07a2 80B2     		uxth	r0, r0
 2766 07a4 A5F86E00 		strh	r0, [r5, #110]	@ movhi
 677:Core/Src/bms.c ****         bms->cellVolt[56] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
ARM GAS  /tmp/cctRGGbR.s 			page 64


 2767              		.loc 1 677 0
 2768 07a8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2769 07aa 1B02     		lsls	r3, r3, #8
 2770 07ac 03F47063 		and	r3, r3, #3840
 2771 07b0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2772 07b2 1844     		add	r0, r0, r3
 2773 07b4 FFF7FEFF 		bl	__aeabi_i2d
 2774              	.LVL334:
 2775 07b8 0022     		movs	r2, #0
 2776 07ba 744B     		ldr	r3, .L183
 2777 07bc FFF7FEFF 		bl	__aeabi_dmul
 2778              	.LVL335:
 2779 07c0 FFF7FEFF 		bl	__aeabi_d2uiz
 2780              	.LVL336:
 2781 07c4 80B2     		uxth	r0, r0
 2782 07c6 A5F87000 		strh	r0, [r5, #112]	@ movhi
 678:Core/Src/bms.c ****         bms->cellVolt[57] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2783              		.loc 1 678 0
 2784 07ca A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2785 07cc 1B02     		lsls	r3, r3, #8
 2786 07ce 03F47063 		and	r3, r3, #3840
 2787 07d2 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2788 07d4 1844     		add	r0, r0, r3
 2789 07d6 FFF7FEFF 		bl	__aeabi_i2d
 2790              	.LVL337:
 2791 07da 0022     		movs	r2, #0
 2792 07dc 6B4B     		ldr	r3, .L183
 2793 07de FFF7FEFF 		bl	__aeabi_dmul
 2794              	.LVL338:
 2795 07e2 FFF7FEFF 		bl	__aeabi_d2uiz
 2796              	.LVL339:
 2797 07e6 80B2     		uxth	r0, r0
 2798 07e8 A5F87200 		strh	r0, [r5, #114]	@ movhi
 679:Core/Src/bms.c ****         break;
 2799              		.loc 1 679 0
 2800 07ec 38BD     		pop	{r3, r4, r5, pc}
 2801              	.LVL340:
 2802              	.L172:
 680:Core/Src/bms.c **** 
 681:Core/Src/bms.c ****     case 0x478:
 682:Core/Src/bms.c ****         bms->cellVolt[58] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2803              		.loc 1 682 0
 2804 07ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2805 07f0 1B02     		lsls	r3, r3, #8
 2806 07f2 03F47063 		and	r3, r3, #3840
 2807 07f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2808              	.LVL341:
 2809 07f8 1844     		add	r0, r0, r3
 2810 07fa FFF7FEFF 		bl	__aeabi_i2d
 2811              	.LVL342:
 2812 07fe 0022     		movs	r2, #0
 2813 0800 624B     		ldr	r3, .L183
 2814 0802 FFF7FEFF 		bl	__aeabi_dmul
 2815              	.LVL343:
 2816 0806 FFF7FEFF 		bl	__aeabi_d2uiz
 2817              	.LVL344:
 2818 080a 80B2     		uxth	r0, r0
ARM GAS  /tmp/cctRGGbR.s 			page 65


 2819 080c A5F87400 		strh	r0, [r5, #116]	@ movhi
 683:Core/Src/bms.c ****         bms->cellVolt[59] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2820              		.loc 1 683 0
 2821 0810 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2822 0812 1B02     		lsls	r3, r3, #8
 2823 0814 03F47063 		and	r3, r3, #3840
 2824 0818 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2825 081a 1844     		add	r0, r0, r3
 2826 081c FFF7FEFF 		bl	__aeabi_i2d
 2827              	.LVL345:
 2828 0820 0022     		movs	r2, #0
 2829 0822 5A4B     		ldr	r3, .L183
 2830 0824 FFF7FEFF 		bl	__aeabi_dmul
 2831              	.LVL346:
 2832 0828 FFF7FEFF 		bl	__aeabi_d2uiz
 2833              	.LVL347:
 2834 082c 80B2     		uxth	r0, r0
 2835 082e A5F87600 		strh	r0, [r5, #118]	@ movhi
 684:Core/Src/bms.c ****         bms->cellVolt[60] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2836              		.loc 1 684 0
 2837 0832 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2838 0834 1B02     		lsls	r3, r3, #8
 2839 0836 03F47063 		and	r3, r3, #3840
 2840 083a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2841 083c 1844     		add	r0, r0, r3
 2842 083e FFF7FEFF 		bl	__aeabi_i2d
 2843              	.LVL348:
 2844 0842 0022     		movs	r2, #0
 2845 0844 514B     		ldr	r3, .L183
 2846 0846 FFF7FEFF 		bl	__aeabi_dmul
 2847              	.LVL349:
 2848 084a FFF7FEFF 		bl	__aeabi_d2uiz
 2849              	.LVL350:
 2850 084e 80B2     		uxth	r0, r0
 2851 0850 A5F87800 		strh	r0, [r5, #120]	@ movhi
 685:Core/Src/bms.c ****         bms->cellVolt[61] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2852              		.loc 1 685 0
 2853 0854 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2854 0856 1B02     		lsls	r3, r3, #8
 2855 0858 03F47063 		and	r3, r3, #3840
 2856 085c E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2857 085e 1844     		add	r0, r0, r3
 2858 0860 FFF7FEFF 		bl	__aeabi_i2d
 2859              	.LVL351:
 2860 0864 0022     		movs	r2, #0
 2861 0866 494B     		ldr	r3, .L183
 2862 0868 FFF7FEFF 		bl	__aeabi_dmul
 2863              	.LVL352:
 2864 086c FFF7FEFF 		bl	__aeabi_d2uiz
 2865              	.LVL353:
 2866 0870 80B2     		uxth	r0, r0
 2867 0872 A5F87A00 		strh	r0, [r5, #122]	@ movhi
 686:Core/Src/bms.c ****         break;
 2868              		.loc 1 686 0
 2869 0876 38BD     		pop	{r3, r4, r5, pc}
 2870              	.LVL354:
 2871              	.L160:
ARM GAS  /tmp/cctRGGbR.s 			page 66


 687:Core/Src/bms.c **** 
 688:Core/Src/bms.c ****     case 0x469:
 689:Core/Src/bms.c ****         bms->cellVolt[62] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2872              		.loc 1 689 0
 2873 0878 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2874 087a 1B02     		lsls	r3, r3, #8
 2875 087c 03F47063 		and	r3, r3, #3840
 2876 0880 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2877              	.LVL355:
 2878 0882 1844     		add	r0, r0, r3
 2879 0884 FFF7FEFF 		bl	__aeabi_i2d
 2880              	.LVL356:
 2881 0888 0022     		movs	r2, #0
 2882 088a 404B     		ldr	r3, .L183
 2883 088c FFF7FEFF 		bl	__aeabi_dmul
 2884              	.LVL357:
 2885 0890 FFF7FEFF 		bl	__aeabi_d2uiz
 2886              	.LVL358:
 2887 0894 80B2     		uxth	r0, r0
 2888 0896 A5F87C00 		strh	r0, [r5, #124]	@ movhi
 690:Core/Src/bms.c ****         bms->cellVolt[63] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2889              		.loc 1 690 0
 2890 089a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2891 089c 1B02     		lsls	r3, r3, #8
 2892 089e 03F47063 		and	r3, r3, #3840
 2893 08a2 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2894 08a4 1844     		add	r0, r0, r3
 2895 08a6 FFF7FEFF 		bl	__aeabi_i2d
 2896              	.LVL359:
 2897 08aa 0022     		movs	r2, #0
 2898 08ac 374B     		ldr	r3, .L183
 2899 08ae FFF7FEFF 		bl	__aeabi_dmul
 2900              	.LVL360:
 2901 08b2 FFF7FEFF 		bl	__aeabi_d2uiz
 2902              	.LVL361:
 2903 08b6 80B2     		uxth	r0, r0
 2904 08b8 A5F87E00 		strh	r0, [r5, #126]	@ movhi
 691:Core/Src/bms.c ****         bms->cellVolt[64] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2905              		.loc 1 691 0
 2906 08bc 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2907 08be 1B02     		lsls	r3, r3, #8
 2908 08c0 03F47063 		and	r3, r3, #3840
 2909 08c4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2910 08c6 1844     		add	r0, r0, r3
 2911 08c8 FFF7FEFF 		bl	__aeabi_i2d
 2912              	.LVL362:
 2913 08cc 0022     		movs	r2, #0
 2914 08ce 2F4B     		ldr	r3, .L183
 2915 08d0 FFF7FEFF 		bl	__aeabi_dmul
 2916              	.LVL363:
 2917 08d4 FFF7FEFF 		bl	__aeabi_d2uiz
 2918              	.LVL364:
 2919 08d8 80B2     		uxth	r0, r0
 2920 08da A5F88000 		strh	r0, [r5, #128]	@ movhi
 692:Core/Src/bms.c ****         bms->cellVolt[65] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2921              		.loc 1 692 0
 2922 08de A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cctRGGbR.s 			page 67


 2923 08e0 1B02     		lsls	r3, r3, #8
 2924 08e2 03F47063 		and	r3, r3, #3840
 2925 08e6 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2926 08e8 1844     		add	r0, r0, r3
 2927 08ea FFF7FEFF 		bl	__aeabi_i2d
 2928              	.LVL365:
 2929 08ee 0022     		movs	r2, #0
 2930 08f0 264B     		ldr	r3, .L183
 2931 08f2 FFF7FEFF 		bl	__aeabi_dmul
 2932              	.LVL366:
 2933 08f6 FFF7FEFF 		bl	__aeabi_d2uiz
 2934              	.LVL367:
 2935 08fa 80B2     		uxth	r0, r0
 2936 08fc A5F88200 		strh	r0, [r5, #130]	@ movhi
 693:Core/Src/bms.c ****         break;
 2937              		.loc 1 693 0
 2938 0900 38BD     		pop	{r3, r4, r5, pc}
 2939              	.LVL368:
 2940              	.L173:
 694:Core/Src/bms.c **** 
 695:Core/Src/bms.c ****     case 0x479:
 696:Core/Src/bms.c ****         bms->cellVolt[66] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2941              		.loc 1 696 0
 2942 0902 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2943 0904 1B02     		lsls	r3, r3, #8
 2944 0906 03F47063 		and	r3, r3, #3840
 2945 090a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2946              	.LVL369:
 2947 090c 1844     		add	r0, r0, r3
 2948 090e FFF7FEFF 		bl	__aeabi_i2d
 2949              	.LVL370:
 2950 0912 0022     		movs	r2, #0
 2951 0914 1D4B     		ldr	r3, .L183
 2952 0916 FFF7FEFF 		bl	__aeabi_dmul
 2953              	.LVL371:
 2954 091a FFF7FEFF 		bl	__aeabi_d2uiz
 2955              	.LVL372:
 2956 091e 80B2     		uxth	r0, r0
 2957 0920 A5F88400 		strh	r0, [r5, #132]	@ movhi
 697:Core/Src/bms.c ****         bms->cellVolt[67] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2958              		.loc 1 697 0
 2959 0924 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2960 0926 1B02     		lsls	r3, r3, #8
 2961 0928 03F47063 		and	r3, r3, #3840
 2962 092c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2963 092e 1844     		add	r0, r0, r3
 2964 0930 FFF7FEFF 		bl	__aeabi_i2d
 2965              	.LVL373:
 2966 0934 0022     		movs	r2, #0
 2967 0936 154B     		ldr	r3, .L183
 2968 0938 FFF7FEFF 		bl	__aeabi_dmul
 2969              	.LVL374:
 2970 093c FFF7FEFF 		bl	__aeabi_d2uiz
 2971              	.LVL375:
 2972 0940 80B2     		uxth	r0, r0
 2973 0942 A5F88600 		strh	r0, [r5, #134]	@ movhi
 698:Core/Src/bms.c ****         bms->cellVolt[68] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
ARM GAS  /tmp/cctRGGbR.s 			page 68


 2974              		.loc 1 698 0
 2975 0946 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2976 0948 1B02     		lsls	r3, r3, #8
 2977 094a 03F47063 		and	r3, r3, #3840
 2978 094e 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2979 0950 1844     		add	r0, r0, r3
 2980 0952 FFF7FEFF 		bl	__aeabi_i2d
 2981              	.LVL376:
 2982 0956 0022     		movs	r2, #0
 2983 0958 0C4B     		ldr	r3, .L183
 2984 095a FFF7FEFF 		bl	__aeabi_dmul
 2985              	.LVL377:
 2986 095e FFF7FEFF 		bl	__aeabi_d2uiz
 2987              	.LVL378:
 2988 0962 80B2     		uxth	r0, r0
 2989 0964 A5F88800 		strh	r0, [r5, #136]	@ movhi
 699:Core/Src/bms.c ****         bms->cellVolt[69] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2990              		.loc 1 699 0
 2991 0968 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2992 096a 1B02     		lsls	r3, r3, #8
 2993 096c 03F47063 		and	r3, r3, #3840
 2994 0970 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2995 0972 1844     		add	r0, r0, r3
 2996 0974 FFF7FEFF 		bl	__aeabi_i2d
 2997              	.LVL379:
 2998 0978 0022     		movs	r2, #0
 2999 097a 044B     		ldr	r3, .L183
 3000 097c FFF7FEFF 		bl	__aeabi_dmul
 3001              	.LVL380:
 3002 0980 FFF7FEFF 		bl	__aeabi_d2uiz
 3003              	.LVL381:
 3004 0984 80B2     		uxth	r0, r0
 3005 0986 A5F88A00 		strh	r0, [r5, #138]	@ movhi
 700:Core/Src/bms.c ****         break;
 3006              		.loc 1 700 0
 3007 098a 38BD     		pop	{r3, r4, r5, pc}
 3008              	.LVL382:
 3009              	.L184:
 3010              		.align	2
 3011              	.L183:
 3012 098c 0000F43F 		.word	1072955392
 3013              	.LVL383:
 3014              	.L161:
 701:Core/Src/bms.c **** 
 702:Core/Src/bms.c ****     case 0x46A:
 703:Core/Src/bms.c ****         bms->cellVolt[70] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3015              		.loc 1 703 0
 3016 0990 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3017 0992 1B02     		lsls	r3, r3, #8
 3018 0994 03F47063 		and	r3, r3, #3840
 3019 0998 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3020              	.LVL384:
 3021 099a 1844     		add	r0, r0, r3
 3022 099c FFF7FEFF 		bl	__aeabi_i2d
 3023              	.LVL385:
 3024 09a0 0022     		movs	r2, #0
 3025 09a2 C24B     		ldr	r3, .L185
ARM GAS  /tmp/cctRGGbR.s 			page 69


 3026 09a4 FFF7FEFF 		bl	__aeabi_dmul
 3027              	.LVL386:
 3028 09a8 FFF7FEFF 		bl	__aeabi_d2uiz
 3029              	.LVL387:
 3030 09ac 80B2     		uxth	r0, r0
 3031 09ae A5F88C00 		strh	r0, [r5, #140]	@ movhi
 704:Core/Src/bms.c ****         bms->cellVolt[71] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3032              		.loc 1 704 0
 3033 09b2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3034 09b4 1B02     		lsls	r3, r3, #8
 3035 09b6 03F47063 		and	r3, r3, #3840
 3036 09ba E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3037 09bc 1844     		add	r0, r0, r3
 3038 09be FFF7FEFF 		bl	__aeabi_i2d
 3039              	.LVL388:
 3040 09c2 0022     		movs	r2, #0
 3041 09c4 B94B     		ldr	r3, .L185
 3042 09c6 FFF7FEFF 		bl	__aeabi_dmul
 3043              	.LVL389:
 3044 09ca FFF7FEFF 		bl	__aeabi_d2uiz
 3045              	.LVL390:
 3046 09ce 80B2     		uxth	r0, r0
 3047 09d0 A5F88E00 		strh	r0, [r5, #142]	@ movhi
 705:Core/Src/bms.c ****         bms->cellVolt[72] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3048              		.loc 1 705 0
 3049 09d4 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3050 09d6 1B02     		lsls	r3, r3, #8
 3051 09d8 03F47063 		and	r3, r3, #3840
 3052 09dc 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3053 09de 1844     		add	r0, r0, r3
 3054 09e0 FFF7FEFF 		bl	__aeabi_i2d
 3055              	.LVL391:
 3056 09e4 0022     		movs	r2, #0
 3057 09e6 B14B     		ldr	r3, .L185
 3058 09e8 FFF7FEFF 		bl	__aeabi_dmul
 3059              	.LVL392:
 3060 09ec FFF7FEFF 		bl	__aeabi_d2uiz
 3061              	.LVL393:
 3062 09f0 80B2     		uxth	r0, r0
 3063 09f2 A5F89000 		strh	r0, [r5, #144]	@ movhi
 706:Core/Src/bms.c ****         bms->cellVolt[73] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 3064              		.loc 1 706 0
 3065 09f6 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3066 09f8 1B02     		lsls	r3, r3, #8
 3067 09fa 03F47063 		and	r3, r3, #3840
 3068 09fe E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 3069 0a00 1844     		add	r0, r0, r3
 3070 0a02 FFF7FEFF 		bl	__aeabi_i2d
 3071              	.LVL394:
 3072 0a06 0022     		movs	r2, #0
 3073 0a08 A84B     		ldr	r3, .L185
 3074 0a0a FFF7FEFF 		bl	__aeabi_dmul
 3075              	.LVL395:
 3076 0a0e FFF7FEFF 		bl	__aeabi_d2uiz
 3077              	.LVL396:
 3078 0a12 80B2     		uxth	r0, r0
 3079 0a14 A5F89200 		strh	r0, [r5, #146]	@ movhi
ARM GAS  /tmp/cctRGGbR.s 			page 70


 707:Core/Src/bms.c ****         break;
 3080              		.loc 1 707 0
 3081 0a18 38BD     		pop	{r3, r4, r5, pc}
 3082              	.LVL397:
 3083              	.L174:
 708:Core/Src/bms.c **** 
 709:Core/Src/bms.c ****     case 0x47A:
 710:Core/Src/bms.c ****         bms->cellVolt[74] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3084              		.loc 1 710 0
 3085 0a1a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3086 0a1c 1B02     		lsls	r3, r3, #8
 3087 0a1e 03F47063 		and	r3, r3, #3840
 3088 0a22 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3089              	.LVL398:
 3090 0a24 1844     		add	r0, r0, r3
 3091 0a26 FFF7FEFF 		bl	__aeabi_i2d
 3092              	.LVL399:
 3093 0a2a 0022     		movs	r2, #0
 3094 0a2c 9F4B     		ldr	r3, .L185
 3095 0a2e FFF7FEFF 		bl	__aeabi_dmul
 3096              	.LVL400:
 3097 0a32 FFF7FEFF 		bl	__aeabi_d2uiz
 3098              	.LVL401:
 3099 0a36 80B2     		uxth	r0, r0
 3100 0a38 A5F89400 		strh	r0, [r5, #148]	@ movhi
 711:Core/Src/bms.c ****         bms->cellVolt[75] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3101              		.loc 1 711 0
 3102 0a3c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3103 0a3e 1B02     		lsls	r3, r3, #8
 3104 0a40 03F47063 		and	r3, r3, #3840
 3105 0a44 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3106 0a46 1844     		add	r0, r0, r3
 3107 0a48 FFF7FEFF 		bl	__aeabi_i2d
 3108              	.LVL402:
 3109 0a4c 0022     		movs	r2, #0
 3110 0a4e 974B     		ldr	r3, .L185
 3111 0a50 FFF7FEFF 		bl	__aeabi_dmul
 3112              	.LVL403:
 3113 0a54 FFF7FEFF 		bl	__aeabi_d2uiz
 3114              	.LVL404:
 3115 0a58 80B2     		uxth	r0, r0
 3116 0a5a A5F89600 		strh	r0, [r5, #150]	@ movhi
 712:Core/Src/bms.c ****         bms->cellVolt[76] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3117              		.loc 1 712 0
 3118 0a5e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3119 0a60 1B02     		lsls	r3, r3, #8
 3120 0a62 03F47063 		and	r3, r3, #3840
 3121 0a66 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3122 0a68 1844     		add	r0, r0, r3
 3123 0a6a FFF7FEFF 		bl	__aeabi_i2d
 3124              	.LVL405:
 3125 0a6e 0022     		movs	r2, #0
 3126 0a70 8E4B     		ldr	r3, .L185
 3127 0a72 FFF7FEFF 		bl	__aeabi_dmul
 3128              	.LVL406:
 3129 0a76 FFF7FEFF 		bl	__aeabi_d2uiz
 3130              	.LVL407:
ARM GAS  /tmp/cctRGGbR.s 			page 71


 3131 0a7a 80B2     		uxth	r0, r0
 3132 0a7c A5F89800 		strh	r0, [r5, #152]	@ movhi
 713:Core/Src/bms.c ****         bms->cellVolt[77] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 3133              		.loc 1 713 0
 3134 0a80 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 3135 0a82 1B02     		lsls	r3, r3, #8
 3136 0a84 03F47063 		and	r3, r3, #3840
 3137 0a88 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 3138 0a8a 1844     		add	r0, r0, r3
 3139 0a8c FFF7FEFF 		bl	__aeabi_i2d
 3140              	.LVL408:
 3141 0a90 0022     		movs	r2, #0
 3142 0a92 864B     		ldr	r3, .L185
 3143 0a94 FFF7FEFF 		bl	__aeabi_dmul
 3144              	.LVL409:
 3145 0a98 FFF7FEFF 		bl	__aeabi_d2uiz
 3146              	.LVL410:
 3147 0a9c 80B2     		uxth	r0, r0
 3148 0a9e A5F89A00 		strh	r0, [r5, #154]	@ movhi
 714:Core/Src/bms.c ****         break;
 3149              		.loc 1 714 0
 3150 0aa2 38BD     		pop	{r3, r4, r5, pc}
 3151              	.LVL411:
 3152              	.L162:
 715:Core/Src/bms.c **** 
 716:Core/Src/bms.c ****     case 0x46C:
 717:Core/Src/bms.c ****         bms->cellVolt[78] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 4
 3153              		.loc 1 717 0
 3154 0aa4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3155 0aa6 1B02     		lsls	r3, r3, #8
 3156 0aa8 03F47063 		and	r3, r3, #3840
 3157 0aac 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3158              	.LVL412:
 3159 0aae 1844     		add	r0, r0, r3
 3160 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 3161              	.LVL413:
 3162 0ab4 0022     		movs	r2, #0
 3163 0ab6 7D4B     		ldr	r3, .L185
 3164 0ab8 FFF7FEFF 		bl	__aeabi_dmul
 3165              	.LVL414:
 3166 0abc FFF7FEFF 		bl	__aeabi_d2uiz
 3167              	.LVL415:
 3168 0ac0 80B2     		uxth	r0, r0
 3169 0ac2 A5F89C00 		strh	r0, [r5, #156]	@ movhi
 718:Core/Src/bms.c ****         bms->cellVolt[79] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3170              		.loc 1 718 0
 3171 0ac6 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3172 0ac8 1B02     		lsls	r3, r3, #8
 3173 0aca 03F47063 		and	r3, r3, #3840
 3174 0ace E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3175 0ad0 1844     		add	r0, r0, r3
 3176 0ad2 FFF7FEFF 		bl	__aeabi_i2d
 3177              	.LVL416:
 3178 0ad6 0022     		movs	r2, #0
 3179 0ad8 744B     		ldr	r3, .L185
 3180 0ada FFF7FEFF 		bl	__aeabi_dmul
 3181              	.LVL417:
ARM GAS  /tmp/cctRGGbR.s 			page 72


 3182 0ade FFF7FEFF 		bl	__aeabi_d2uiz
 3183              	.LVL418:
 3184 0ae2 80B2     		uxth	r0, r0
 3185 0ae4 A5F89E00 		strh	r0, [r5, #158]	@ movhi
 719:Core/Src/bms.c ****         bms->cellVolt[80] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3186              		.loc 1 719 0
 3187 0ae8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3188 0aea 1B02     		lsls	r3, r3, #8
 3189 0aec 03F47063 		and	r3, r3, #3840
 3190 0af0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3191 0af2 1844     		add	r0, r0, r3
 3192 0af4 FFF7FEFF 		bl	__aeabi_i2d
 3193              	.LVL419:
 3194 0af8 0022     		movs	r2, #0
 3195 0afa 6C4B     		ldr	r3, .L185
 3196 0afc FFF7FEFF 		bl	__aeabi_dmul
 3197              	.LVL420:
 3198 0b00 FFF7FEFF 		bl	__aeabi_d2uiz
 3199              	.LVL421:
 3200 0b04 80B2     		uxth	r0, r0
 3201 0b06 A5F8A000 		strh	r0, [r5, #160]	@ movhi
 720:Core/Src/bms.c ****         break;
 3202              		.loc 1 720 0
 3203 0b0a 38BD     		pop	{r3, r4, r5, pc}
 3204              	.LVL422:
 3205              	.L175:
 721:Core/Src/bms.c **** 
 722:Core/Src/bms.c ****     case 0x47C:
 723:Core/Src/bms.c ****         bms->cellVolt[81] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3206              		.loc 1 723 0
 3207 0b0c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3208 0b0e 1B02     		lsls	r3, r3, #8
 3209 0b10 03F47063 		and	r3, r3, #3840
 3210 0b14 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3211              	.LVL423:
 3212 0b16 1844     		add	r0, r0, r3
 3213 0b18 FFF7FEFF 		bl	__aeabi_i2d
 3214              	.LVL424:
 3215 0b1c 0022     		movs	r2, #0
 3216 0b1e 634B     		ldr	r3, .L185
 3217 0b20 FFF7FEFF 		bl	__aeabi_dmul
 3218              	.LVL425:
 3219 0b24 FFF7FEFF 		bl	__aeabi_d2uiz
 3220              	.LVL426:
 3221 0b28 80B2     		uxth	r0, r0
 3222 0b2a A5F8A200 		strh	r0, [r5, #162]	@ movhi
 724:Core/Src/bms.c ****         bms->cellVolt[82] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3223              		.loc 1 724 0
 3224 0b2e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3225 0b30 1B02     		lsls	r3, r3, #8
 3226 0b32 03F47063 		and	r3, r3, #3840
 3227 0b36 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3228 0b38 1844     		add	r0, r0, r3
 3229 0b3a FFF7FEFF 		bl	__aeabi_i2d
 3230              	.LVL427:
 3231 0b3e 0022     		movs	r2, #0
 3232 0b40 5A4B     		ldr	r3, .L185
ARM GAS  /tmp/cctRGGbR.s 			page 73


 3233 0b42 FFF7FEFF 		bl	__aeabi_dmul
 3234              	.LVL428:
 3235 0b46 FFF7FEFF 		bl	__aeabi_d2uiz
 3236              	.LVL429:
 3237 0b4a 80B2     		uxth	r0, r0
 3238 0b4c A5F8A400 		strh	r0, [r5, #164]	@ movhi
 725:Core/Src/bms.c ****         bms->cellVolt[83] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3239              		.loc 1 725 0
 3240 0b50 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3241 0b52 1B02     		lsls	r3, r3, #8
 3242 0b54 03F47063 		and	r3, r3, #3840
 3243 0b58 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3244 0b5a 1844     		add	r0, r0, r3
 3245 0b5c FFF7FEFF 		bl	__aeabi_i2d
 3246              	.LVL430:
 3247 0b60 0022     		movs	r2, #0
 3248 0b62 524B     		ldr	r3, .L185
 3249 0b64 FFF7FEFF 		bl	__aeabi_dmul
 3250              	.LVL431:
 3251 0b68 FFF7FEFF 		bl	__aeabi_d2uiz
 3252              	.LVL432:
 3253 0b6c 80B2     		uxth	r0, r0
 3254 0b6e A5F8A600 		strh	r0, [r5, #166]	@ movhi
 726:Core/Src/bms.c ****         break;
 3255              		.loc 1 726 0
 3256 0b72 38BD     		pop	{r3, r4, r5, pc}
 3257              	.LVL433:
 3258              	.L163:
 727:Core/Src/bms.c **** 
 728:Core/Src/bms.c ****     case 0x46D:
 729:Core/Src/bms.c ****         bms->cellVolt[84] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3259              		.loc 1 729 0
 3260 0b74 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3261 0b76 1B02     		lsls	r3, r3, #8
 3262 0b78 03F47063 		and	r3, r3, #3840
 3263 0b7c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3264              	.LVL434:
 3265 0b7e 1844     		add	r0, r0, r3
 3266 0b80 FFF7FEFF 		bl	__aeabi_i2d
 3267              	.LVL435:
 3268 0b84 0022     		movs	r2, #0
 3269 0b86 494B     		ldr	r3, .L185
 3270 0b88 FFF7FEFF 		bl	__aeabi_dmul
 3271              	.LVL436:
 3272 0b8c FFF7FEFF 		bl	__aeabi_d2uiz
 3273              	.LVL437:
 3274 0b90 80B2     		uxth	r0, r0
 3275 0b92 A5F8A800 		strh	r0, [r5, #168]	@ movhi
 730:Core/Src/bms.c ****         bms->cellVolt[85] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3276              		.loc 1 730 0
 3277 0b96 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3278 0b98 1B02     		lsls	r3, r3, #8
 3279 0b9a 03F47063 		and	r3, r3, #3840
 3280 0b9e E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3281 0ba0 1844     		add	r0, r0, r3
 3282 0ba2 FFF7FEFF 		bl	__aeabi_i2d
 3283              	.LVL438:
ARM GAS  /tmp/cctRGGbR.s 			page 74


 3284 0ba6 0022     		movs	r2, #0
 3285 0ba8 404B     		ldr	r3, .L185
 3286 0baa FFF7FEFF 		bl	__aeabi_dmul
 3287              	.LVL439:
 3288 0bae FFF7FEFF 		bl	__aeabi_d2uiz
 3289              	.LVL440:
 3290 0bb2 80B2     		uxth	r0, r0
 3291 0bb4 A5F8AA00 		strh	r0, [r5, #170]	@ movhi
 731:Core/Src/bms.c ****         bms->cellVolt[86] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3292              		.loc 1 731 0
 3293 0bb8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3294 0bba 1B02     		lsls	r3, r3, #8
 3295 0bbc 03F47063 		and	r3, r3, #3840
 3296 0bc0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3297 0bc2 1844     		add	r0, r0, r3
 3298 0bc4 FFF7FEFF 		bl	__aeabi_i2d
 3299              	.LVL441:
 3300 0bc8 0022     		movs	r2, #0
 3301 0bca 384B     		ldr	r3, .L185
 3302 0bcc FFF7FEFF 		bl	__aeabi_dmul
 3303              	.LVL442:
 3304 0bd0 FFF7FEFF 		bl	__aeabi_d2uiz
 3305              	.LVL443:
 3306 0bd4 80B2     		uxth	r0, r0
 3307 0bd6 A5F8AC00 		strh	r0, [r5, #172]	@ movhi
 732:Core/Src/bms.c ****         break;
 3308              		.loc 1 732 0
 3309 0bda 38BD     		pop	{r3, r4, r5, pc}
 3310              	.LVL444:
 3311              	.L176:
 733:Core/Src/bms.c **** 
 734:Core/Src/bms.c ****     case 0x47D:
 735:Core/Src/bms.c ****         bms->cellVolt[87] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3312              		.loc 1 735 0
 3313 0bdc 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3314 0bde 1B02     		lsls	r3, r3, #8
 3315 0be0 03F47063 		and	r3, r3, #3840
 3316 0be4 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3317              	.LVL445:
 3318 0be6 1844     		add	r0, r0, r3
 3319 0be8 FFF7FEFF 		bl	__aeabi_i2d
 3320              	.LVL446:
 3321 0bec 0022     		movs	r2, #0
 3322 0bee 2F4B     		ldr	r3, .L185
 3323 0bf0 FFF7FEFF 		bl	__aeabi_dmul
 3324              	.LVL447:
 3325 0bf4 FFF7FEFF 		bl	__aeabi_d2uiz
 3326              	.LVL448:
 3327 0bf8 80B2     		uxth	r0, r0
 3328 0bfa A5F8AE00 		strh	r0, [r5, #174]	@ movhi
 736:Core/Src/bms.c ****         bms->cellVolt[88] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3329              		.loc 1 736 0
 3330 0bfe A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3331 0c00 1B02     		lsls	r3, r3, #8
 3332 0c02 03F47063 		and	r3, r3, #3840
 3333 0c06 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3334 0c08 1844     		add	r0, r0, r3
ARM GAS  /tmp/cctRGGbR.s 			page 75


 3335 0c0a FFF7FEFF 		bl	__aeabi_i2d
 3336              	.LVL449:
 3337 0c0e 0022     		movs	r2, #0
 3338 0c10 264B     		ldr	r3, .L185
 3339 0c12 FFF7FEFF 		bl	__aeabi_dmul
 3340              	.LVL450:
 3341 0c16 FFF7FEFF 		bl	__aeabi_d2uiz
 3342              	.LVL451:
 3343 0c1a 80B2     		uxth	r0, r0
 3344 0c1c A5F8B000 		strh	r0, [r5, #176]	@ movhi
 737:Core/Src/bms.c ****         bms->cellVolt[89] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3345              		.loc 1 737 0
 3346 0c20 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3347 0c22 1B02     		lsls	r3, r3, #8
 3348 0c24 03F47063 		and	r3, r3, #3840
 3349 0c28 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3350 0c2a 1844     		add	r0, r0, r3
 3351 0c2c FFF7FEFF 		bl	__aeabi_i2d
 3352              	.LVL452:
 3353 0c30 0022     		movs	r2, #0
 3354 0c32 1E4B     		ldr	r3, .L185
 3355 0c34 FFF7FEFF 		bl	__aeabi_dmul
 3356              	.LVL453:
 3357 0c38 FFF7FEFF 		bl	__aeabi_d2uiz
 3358              	.LVL454:
 3359 0c3c 80B2     		uxth	r0, r0
 3360 0c3e A5F8B200 		strh	r0, [r5, #178]	@ movhi
 738:Core/Src/bms.c ****         break;
 3361              		.loc 1 738 0
 3362 0c42 38BD     		pop	{r3, r4, r5, pc}
 3363              	.LVL455:
 3364              	.L164:
 739:Core/Src/bms.c **** 
 740:Core/Src/bms.c ****     case 0x46E:
 741:Core/Src/bms.c ****         bms->cellVolt[90] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3365              		.loc 1 741 0
 3366 0c44 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3367 0c46 1B02     		lsls	r3, r3, #8
 3368 0c48 03F47063 		and	r3, r3, #3840
 3369 0c4c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3370              	.LVL456:
 3371 0c4e 1844     		add	r0, r0, r3
 3372 0c50 FFF7FEFF 		bl	__aeabi_i2d
 3373              	.LVL457:
 3374 0c54 0022     		movs	r2, #0
 3375 0c56 154B     		ldr	r3, .L185
 3376 0c58 FFF7FEFF 		bl	__aeabi_dmul
 3377              	.LVL458:
 3378 0c5c FFF7FEFF 		bl	__aeabi_d2uiz
 3379              	.LVL459:
 3380 0c60 80B2     		uxth	r0, r0
 3381 0c62 A5F8B400 		strh	r0, [r5, #180]	@ movhi
 742:Core/Src/bms.c ****         bms->cellVolt[91] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3382              		.loc 1 742 0
 3383 0c66 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3384 0c68 1B02     		lsls	r3, r3, #8
 3385 0c6a 03F47063 		and	r3, r3, #3840
ARM GAS  /tmp/cctRGGbR.s 			page 76


 3386 0c6e E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3387 0c70 1844     		add	r0, r0, r3
 3388 0c72 FFF7FEFF 		bl	__aeabi_i2d
 3389              	.LVL460:
 3390 0c76 0022     		movs	r2, #0
 3391 0c78 0C4B     		ldr	r3, .L185
 3392 0c7a FFF7FEFF 		bl	__aeabi_dmul
 3393              	.LVL461:
 3394 0c7e FFF7FEFF 		bl	__aeabi_d2uiz
 3395              	.LVL462:
 3396 0c82 80B2     		uxth	r0, r0
 3397 0c84 A5F8B600 		strh	r0, [r5, #182]	@ movhi
 743:Core/Src/bms.c ****         bms->cellVolt[92] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3398              		.loc 1 743 0
 3399 0c88 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3400 0c8a 1B02     		lsls	r3, r3, #8
 3401 0c8c 03F47063 		and	r3, r3, #3840
 3402 0c90 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3403 0c92 1844     		add	r0, r0, r3
 3404 0c94 FFF7FEFF 		bl	__aeabi_i2d
 3405              	.LVL463:
 3406 0c98 0022     		movs	r2, #0
 3407 0c9a 044B     		ldr	r3, .L185
 3408 0c9c FFF7FEFF 		bl	__aeabi_dmul
 3409              	.LVL464:
 3410 0ca0 FFF7FEFF 		bl	__aeabi_d2uiz
 3411              	.LVL465:
 3412 0ca4 80B2     		uxth	r0, r0
 3413 0ca6 A5F8B800 		strh	r0, [r5, #184]	@ movhi
 744:Core/Src/bms.c ****         break;
 3414              		.loc 1 744 0
 3415 0caa 38BD     		pop	{r3, r4, r5, pc}
 3416              	.LVL466:
 3417              	.L186:
 3418              		.align	2
 3419              	.L185:
 3420 0cac 0000F43F 		.word	1072955392
 3421              	.LVL467:
 3422              	.L177:
 745:Core/Src/bms.c **** 
 746:Core/Src/bms.c ****     case 0x47E:
 747:Core/Src/bms.c ****         bms->cellVolt[93] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3423              		.loc 1 747 0
 3424 0cb0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3425 0cb2 1B02     		lsls	r3, r3, #8
 3426 0cb4 03F47063 		and	r3, r3, #3840
 3427 0cb8 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3428              	.LVL468:
 3429 0cba 1844     		add	r0, r0, r3
 3430 0cbc FFF7FEFF 		bl	__aeabi_i2d
 3431              	.LVL469:
 3432 0cc0 0022     		movs	r2, #0
 3433 0cc2 154B     		ldr	r3, .L187
 3434 0cc4 FFF7FEFF 		bl	__aeabi_dmul
 3435              	.LVL470:
 3436 0cc8 FFF7FEFF 		bl	__aeabi_d2uiz
 3437              	.LVL471:
ARM GAS  /tmp/cctRGGbR.s 			page 77


 3438 0ccc 80B2     		uxth	r0, r0
 3439 0cce A5F8BA00 		strh	r0, [r5, #186]	@ movhi
 748:Core/Src/bms.c ****         bms->cellVolt[94] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3440              		.loc 1 748 0
 3441 0cd2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3442 0cd4 1B02     		lsls	r3, r3, #8
 3443 0cd6 03F47063 		and	r3, r3, #3840
 3444 0cda E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3445 0cdc 1844     		add	r0, r0, r3
 3446 0cde FFF7FEFF 		bl	__aeabi_i2d
 3447              	.LVL472:
 3448 0ce2 0022     		movs	r2, #0
 3449 0ce4 0C4B     		ldr	r3, .L187
 3450 0ce6 FFF7FEFF 		bl	__aeabi_dmul
 3451              	.LVL473:
 3452 0cea FFF7FEFF 		bl	__aeabi_d2uiz
 3453              	.LVL474:
 3454 0cee 80B2     		uxth	r0, r0
 3455 0cf0 A5F8BC00 		strh	r0, [r5, #188]	@ movhi
 749:Core/Src/bms.c ****         bms->cellVolt[95] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3456              		.loc 1 749 0
 3457 0cf4 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3458 0cf6 1B02     		lsls	r3, r3, #8
 3459 0cf8 03F47063 		and	r3, r3, #3840
 3460 0cfc 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3461 0cfe 1844     		add	r0, r0, r3
 3462 0d00 FFF7FEFF 		bl	__aeabi_i2d
 3463              	.LVL475:
 3464 0d04 0022     		movs	r2, #0
 3465 0d06 044B     		ldr	r3, .L187
 3466 0d08 FFF7FEFF 		bl	__aeabi_dmul
 3467              	.LVL476:
 3468 0d0c FFF7FEFF 		bl	__aeabi_d2uiz
 3469              	.LVL477:
 3470 0d10 80B2     		uxth	r0, r0
 3471 0d12 A5F8BE00 		strh	r0, [r5, #190]	@ movhi
 3472              	.L149:
 3473 0d16 38BD     		pop	{r3, r4, r5, pc}
 3474              	.LVL478:
 3475              	.L188:
 3476              		.align	2
 3477              	.L187:
 3478 0d18 0000F43F 		.word	1072955392
 3479              		.cfi_endproc
 3480              	.LFE152:
 3482              		.section	.text.decodeTemp,"ax",%progbits
 3483              		.align	1
 3484              		.global	decodeTemp
 3485              		.syntax unified
 3486              		.thumb
 3487              		.thumb_func
 3488              		.fpu fpv4-sp-d16
 3490              	decodeTemp:
 3491              	.LFB153:
 750:Core/Src/bms.c ****         break;
 751:Core/Src/bms.c **** 
 752:Core/Src/bms.c ****     default:
ARM GAS  /tmp/cctRGGbR.s 			page 78


 753:Core/Src/bms.c ****         break;
 754:Core/Src/bms.c ****     }
 755:Core/Src/bms.c **** }
 756:Core/Src/bms.c **** 
 757:Core/Src/bms.c **** void decodeTemp(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // in degrees F x 100
 758:Core/Src/bms.c **** {
 3492              		.loc 1 758 0
 3493              		.cfi_startproc
 3494              		@ args = 0, pretend = 0, frame = 0
 3495              		@ frame_needed = 0, uses_anonymous_args = 0
 3496              		@ link register save eliminated.
 3497              	.LVL479:
 759:Core/Src/bms.c ****     switch (rxMsg->StdId)
 3498              		.loc 1 759 0
 3499 0000 0B68     		ldr	r3, [r1]
 3500 0002 A3F5FC63 		sub	r3, r3, #2016
 3501 0006 0E2B     		cmp	r3, #14
 3502 0008 00F29780 		bhi	.L189
 3503 000c DFE803F0 		tbb	[pc, r3]
 3504              	.LVL480:
 3505              	.L192:
 3506 0010 08       		.byte	(.L191-.L192)/2
 3507 0011 15       		.byte	(.L193-.L192)/2
 3508 0012 22       		.byte	(.L194-.L192)/2
 3509 0013 32       		.byte	(.L195-.L192)/2
 3510 0014 36       		.byte	(.L196-.L192)/2
 3511 0015 43       		.byte	(.L197-.L192)/2
 3512 0016 53       		.byte	(.L198-.L192)/2
 3513 0017 95       		.byte	(.L189-.L192)/2
 3514 0018 57       		.byte	(.L199-.L192)/2
 3515 0019 64       		.byte	(.L200-.L192)/2
 3516 001a 74       		.byte	(.L201-.L192)/2
 3517 001b 95       		.byte	(.L189-.L192)/2
 3518 001c 78       		.byte	(.L202-.L192)/2
 3519 001d 85       		.byte	(.L203-.L192)/2
 3520 001e 92       		.byte	(.L204-.L192)/2
 3521 001f 00       		.p2align 1
 3522              	.L191:
 760:Core/Src/bms.c ****     {
 761:Core/Src/bms.c ****     case 0x7E0: //Begin module 1 temp sensors
 762:Core/Src/bms.c ****         bms->tempSensor[0] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3523              		.loc 1 762 0
 3524 0020 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3525 0022 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3526 0024 03EB0123 		add	r3, r3, r1, lsl #8
 3527 0028 A3EBC303 		sub	r3, r3, r3, lsl #3
 3528 002c 03F5E043 		add	r3, r3, #28672
 3529 0030 1C33     		adds	r3, r3, #28
 3530 0032 9BB2     		uxth	r3, r3
 3531 0034 A0F8C030 		strh	r3, [r0, #192]	@ movhi
 763:Core/Src/bms.c ****         break;
 3532              		.loc 1 763 0
 3533 0038 7047     		bx	lr
 3534              	.L193:
 764:Core/Src/bms.c **** 
 765:Core/Src/bms.c ****     case 0x7E1:
 766:Core/Src/bms.c ****         bms->tempSensor[1] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
ARM GAS  /tmp/cctRGGbR.s 			page 79


 3535              		.loc 1 766 0
 3536 003a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3537 003c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3538 003e 03EB0123 		add	r3, r3, r1, lsl #8
 3539 0042 A3EBC303 		sub	r3, r3, r3, lsl #3
 3540 0046 03F5E043 		add	r3, r3, #28672
 3541 004a 1C33     		adds	r3, r3, #28
 3542 004c 9BB2     		uxth	r3, r3
 3543 004e A0F8C230 		strh	r3, [r0, #194]	@ movhi
 767:Core/Src/bms.c ****         break;
 3544              		.loc 1 767 0
 3545 0052 7047     		bx	lr
 3546              	.L194:
 768:Core/Src/bms.c **** 
 769:Core/Src/bms.c ****     case 0x7E2:
 770:Core/Src/bms.c ****         bms->tempSensor[2] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3547              		.loc 1 770 0
 3548 0054 0023     		movs	r3, #0
 3549 0056 A0F8C430 		strh	r3, [r0, #196]	@ movhi
 771:Core/Src/bms.c ****         bms->tempSensor[3] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3550              		.loc 1 771 0
 3551 005a 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3552 005c D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3553 005e 03EB0123 		add	r3, r3, r1, lsl #8
 3554 0062 A3EBC303 		sub	r3, r3, r3, lsl #3
 3555 0066 03F5E043 		add	r3, r3, #28672
 3556 006a 1C33     		adds	r3, r3, #28
 3557 006c 9BB2     		uxth	r3, r3
 3558 006e A0F8C630 		strh	r3, [r0, #198]	@ movhi
 772:Core/Src/bms.c ****         break;
 3559              		.loc 1 772 0
 3560 0072 7047     		bx	lr
 3561              	.L195:
 773:Core/Src/bms.c **** 
 774:Core/Src/bms.c ****     case 0x7E3:
 775:Core/Src/bms.c ****         bms->tempSensor[4] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3562              		.loc 1 775 0
 3563 0074 0023     		movs	r3, #0
 3564 0076 A0F8C830 		strh	r3, [r0, #200]	@ movhi
 776:Core/Src/bms.c ****         break;
 3565              		.loc 1 776 0
 3566 007a 7047     		bx	lr
 3567              	.L196:
 777:Core/Src/bms.c **** 
 778:Core/Src/bms.c ****     case 0x7E4: //Begin module 2 temp sensors
 779:Core/Src/bms.c ****         bms->tempSensor[5] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3568              		.loc 1 779 0
 3569 007c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3570 007e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3571 0080 03EB0123 		add	r3, r3, r1, lsl #8
 3572 0084 A3EBC303 		sub	r3, r3, r3, lsl #3
 3573 0088 03F5E043 		add	r3, r3, #28672
 3574 008c 1C33     		adds	r3, r3, #28
 3575 008e 9BB2     		uxth	r3, r3
 3576 0090 A0F8CA30 		strh	r3, [r0, #202]	@ movhi
 780:Core/Src/bms.c ****         break;
 3577              		.loc 1 780 0
ARM GAS  /tmp/cctRGGbR.s 			page 80


 3578 0094 7047     		bx	lr
 3579              	.L197:
 781:Core/Src/bms.c **** 
 782:Core/Src/bms.c ****     case 0x7E5:
 783:Core/Src/bms.c ****         bms->tempSensor[6] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3580              		.loc 1 783 0
 3581 0096 0023     		movs	r3, #0
 3582 0098 A0F8CC30 		strh	r3, [r0, #204]	@ movhi
 784:Core/Src/bms.c ****         bms->tempSensor[7] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3583              		.loc 1 784 0
 3584 009c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3585 009e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3586 00a0 03EB0123 		add	r3, r3, r1, lsl #8
 3587 00a4 A3EBC303 		sub	r3, r3, r3, lsl #3
 3588 00a8 03F5E043 		add	r3, r3, #28672
 3589 00ac 1C33     		adds	r3, r3, #28
 3590 00ae 9BB2     		uxth	r3, r3
 3591 00b0 A0F8CE30 		strh	r3, [r0, #206]	@ movhi
 785:Core/Src/bms.c ****         break;
 3592              		.loc 1 785 0
 3593 00b4 7047     		bx	lr
 3594              	.L198:
 786:Core/Src/bms.c **** 
 787:Core/Src/bms.c ****     case 0x7E6:
 788:Core/Src/bms.c ****         bms->tempSensor[8] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3595              		.loc 1 788 0
 3596 00b6 0023     		movs	r3, #0
 3597 00b8 A0F8D030 		strh	r3, [r0, #208]	@ movhi
 789:Core/Src/bms.c ****         break;
 3598              		.loc 1 789 0
 3599 00bc 7047     		bx	lr
 3600              	.L199:
 790:Core/Src/bms.c **** 
 791:Core/Src/bms.c ****     case 0x7E8: //Begin module 3 temp sensors
 792:Core/Src/bms.c ****         bms->tempSensor[9] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3601              		.loc 1 792 0
 3602 00be 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3603 00c0 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3604 00c2 03EB0123 		add	r3, r3, r1, lsl #8
 3605 00c6 A3EBC303 		sub	r3, r3, r3, lsl #3
 3606 00ca 03F5E043 		add	r3, r3, #28672
 3607 00ce 1C33     		adds	r3, r3, #28
 3608 00d0 9BB2     		uxth	r3, r3
 3609 00d2 A0F8D230 		strh	r3, [r0, #210]	@ movhi
 793:Core/Src/bms.c ****         break;
 3610              		.loc 1 793 0
 3611 00d6 7047     		bx	lr
 3612              	.L200:
 794:Core/Src/bms.c **** 
 795:Core/Src/bms.c ****     case 0x7E9:
 796:Core/Src/bms.c ****         bms->tempSensor[10] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3613              		.loc 1 796 0
 3614 00d8 0023     		movs	r3, #0
 3615 00da A0F8D430 		strh	r3, [r0, #212]	@ movhi
 797:Core/Src/bms.c ****         bms->tempSensor[11] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3616              		.loc 1 797 0
 3617 00de 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
ARM GAS  /tmp/cctRGGbR.s 			page 81


 3618 00e0 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3619 00e2 03EB0123 		add	r3, r3, r1, lsl #8
 3620 00e6 A3EBC303 		sub	r3, r3, r3, lsl #3
 3621 00ea 03F5E043 		add	r3, r3, #28672
 3622 00ee 1C33     		adds	r3, r3, #28
 3623 00f0 9BB2     		uxth	r3, r3
 3624 00f2 A0F8D630 		strh	r3, [r0, #214]	@ movhi
 798:Core/Src/bms.c ****         break;
 3625              		.loc 1 798 0
 3626 00f6 7047     		bx	lr
 3627              	.L201:
 799:Core/Src/bms.c **** 
 800:Core/Src/bms.c ****     case 0x7EA:
 801:Core/Src/bms.c ****         bms->tempSensor[12] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3628              		.loc 1 801 0
 3629 00f8 0023     		movs	r3, #0
 3630 00fa A0F8D830 		strh	r3, [r0, #216]	@ movhi
 802:Core/Src/bms.c ****         break;
 3631              		.loc 1 802 0
 3632 00fe 7047     		bx	lr
 3633              	.L202:
 803:Core/Src/bms.c **** 
 804:Core/Src/bms.c ****     case 0x7EC: //Begin module 4 temp sensors
 805:Core/Src/bms.c ****         bms->tempSensor[13] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3634              		.loc 1 805 0
 3635 0100 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3636 0102 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3637 0104 03EB0123 		add	r3, r3, r1, lsl #8
 3638 0108 A3EBC303 		sub	r3, r3, r3, lsl #3
 3639 010c 03F5E043 		add	r3, r3, #28672
 3640 0110 1C33     		adds	r3, r3, #28
 3641 0112 9BB2     		uxth	r3, r3
 3642 0114 A0F8DA30 		strh	r3, [r0, #218]	@ movhi
 806:Core/Src/bms.c ****         break;
 3643              		.loc 1 806 0
 3644 0118 7047     		bx	lr
 3645              	.L203:
 807:Core/Src/bms.c **** 
 808:Core/Src/bms.c ****     case 0x7ED:
 809:Core/Src/bms.c ****         bms->tempSensor[14] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3646              		.loc 1 809 0
 3647 011a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3648 011c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3649 011e 03EB0123 		add	r3, r3, r1, lsl #8
 3650 0122 A3EBC303 		sub	r3, r3, r3, lsl #3
 3651 0126 03F5E043 		add	r3, r3, #28672
 3652 012a 1C33     		adds	r3, r3, #28
 3653 012c 9BB2     		uxth	r3, r3
 3654 012e A0F8DC30 		strh	r3, [r0, #220]	@ movhi
 810:Core/Src/bms.c ****         break;
 3655              		.loc 1 810 0
 3656 0132 7047     		bx	lr
 3657              	.L204:
 811:Core/Src/bms.c **** 
 812:Core/Src/bms.c ****     case 0x7EE:
 813:Core/Src/bms.c ****         bms->tempSensor[15] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3658              		.loc 1 813 0
ARM GAS  /tmp/cctRGGbR.s 			page 82


 3659 0134 0023     		movs	r3, #0
 3660 0136 A0F8DE30 		strh	r3, [r0, #222]	@ movhi
 3661              	.L189:
 3662 013a 7047     		bx	lr
 3663              		.cfi_endproc
 3664              	.LFE153:
 3666              		.comm	watchdogBits,1,1
 3667              		.comm	chargerOn,1,1
 3668              		.comm	BMS,492,4
 3669              		.comm	busFault,4,4
 3670              		.comm	txCycle3,4,4
 3671              		.comm	txCycle2,4,4
 3672              		.comm	txCycle,4,4
 3673              		.comm	canMailbox3,4,4
 3674              		.comm	canMailbox2,4,4
 3675              		.comm	canMailbox,4,4
 3676              		.comm	canRx3,8,4
 3677              		.comm	canRx2,8,4
 3678              		.comm	canRx,8,4
 3679              		.comm	txMsgExt3,24,4
 3680              		.comm	txMsg3,24,4
 3681              		.comm	rxMsg3,28,4
 3682              		.comm	txMsgExt2,24,4
 3683              		.comm	txMsg2,24,4
 3684              		.comm	rxMsg2,28,4
 3685              		.comm	txMsgExt,24,4
 3686              		.comm	txMsg,24,4
 3687              		.comm	rxMsg,28,4
 3688              		.comm	sf5,40,4
 3689              		.comm	sf4,40,4
 3690              		.comm	sf3,40,4
 3691              		.comm	sf2,40,4
 3692              		.comm	sf,40,4
 3693              		.comm	hcan3,40,4
 3694              		.comm	hcan2,40,4
 3695              		.comm	hcan1,40,4
 3696              		.section	.bss.errorCount,"aw",%nobits
 3697              		.align	2
 3698              		.set	.LANCHOR0,. + 0
 3701              	errorCount:
 3702 0000 00000000 		.space	4
 3703              		.section	.rodata.balanceByte,"a",%progbits
 3704              		.align	2
 3705              		.set	.LANCHOR1,. + 0
 3708              	balanceByte:
 3709 0000 00       		.byte	0
 3710 0001 00       		.byte	0
 3711 0002 00       		.byte	0
 3712 0003 00       		.byte	0
 3713 0004 00       		.byte	0
 3714 0005 00       		.byte	0
 3715 0006 01       		.byte	1
 3716 0007 01       		.byte	1
 3717 0008 01       		.byte	1
 3718 0009 01       		.byte	1
 3719 000a 01       		.byte	1
 3720 000b 01       		.byte	1
ARM GAS  /tmp/cctRGGbR.s 			page 83


 3721 000c 01       		.byte	1
 3722 000d 01       		.byte	1
 3723 000e 02       		.byte	2
 3724 000f 02       		.byte	2
 3725 0010 02       		.byte	2
 3726 0011 02       		.byte	2
 3727 0012 02       		.byte	2
 3728 0013 02       		.byte	2
 3729 0014 02       		.byte	2
 3730 0015 02       		.byte	2
 3731 0016 03       		.byte	3
 3732 0017 03       		.byte	3
 3733 0018 03       		.byte	3
 3734 0019 03       		.byte	3
 3735 001a 03       		.byte	3
 3736 001b 03       		.byte	3
 3737 001c 03       		.byte	3
 3738 001d 03       		.byte	3
 3739 001e 04       		.byte	4
 3740 001f 04       		.byte	4
 3741 0020 04       		.byte	4
 3742 0021 04       		.byte	4
 3743 0022 04       		.byte	4
 3744 0023 04       		.byte	4
 3745 0024 04       		.byte	4
 3746 0025 04       		.byte	4
 3747 0026 05       		.byte	5
 3748 0027 05       		.byte	5
 3749 0028 05       		.byte	5
 3750 0029 05       		.byte	5
 3751 002a 05       		.byte	5
 3752 002b 05       		.byte	5
 3753 002c 05       		.byte	5
 3754 002d 05       		.byte	5
 3755 002e 06       		.byte	6
 3756 002f 06       		.byte	6
 3757 0030 06       		.byte	6
 3758 0031 06       		.byte	6
 3759 0032 06       		.byte	6
 3760 0033 06       		.byte	6
 3761 0034 06       		.byte	6
 3762 0035 06       		.byte	6
 3763 0036 07       		.byte	7
 3764 0037 07       		.byte	7
 3765 0038 07       		.byte	7
 3766 0039 07       		.byte	7
 3767 003a 07       		.byte	7
 3768 003b 07       		.byte	7
 3769 003c 07       		.byte	7
 3770 003d 07       		.byte	7
 3771 003e 00       		.byte	0
 3772 003f 00       		.byte	0
 3773 0040 00       		.byte	0
 3774 0041 00       		.byte	0
 3775 0042 00       		.byte	0
 3776 0043 00       		.byte	0
 3777 0044 00       		.byte	0
ARM GAS  /tmp/cctRGGbR.s 			page 84


 3778 0045 00       		.byte	0
 3779 0046 01       		.byte	1
 3780 0047 01       		.byte	1
 3781 0048 01       		.byte	1
 3782 0049 01       		.byte	1
 3783 004a 01       		.byte	1
 3784 004b 01       		.byte	1
 3785 004c 01       		.byte	1
 3786 004d 01       		.byte	1
 3787 004e 02       		.byte	2
 3788 004f 02       		.byte	2
 3789 0050 02       		.byte	2
 3790 0051 02       		.byte	2
 3791 0052 02       		.byte	2
 3792 0053 02       		.byte	2
 3793 0054 03       		.byte	3
 3794 0055 03       		.byte	3
 3795 0056 03       		.byte	3
 3796 0057 03       		.byte	3
 3797 0058 03       		.byte	3
 3798 0059 03       		.byte	3
 3799 005a 04       		.byte	4
 3800 005b 04       		.byte	4
 3801 005c 04       		.byte	4
 3802 005d 04       		.byte	4
 3803 005e 04       		.byte	4
 3804 005f 04       		.byte	4
 3805              		.section	.rodata.balanceShift,"a",%progbits
 3806              		.align	2
 3807              		.set	.LANCHOR2,. + 0
 3810              	balanceShift:
 3811 0000 01       		.byte	1
 3812 0001 02       		.byte	2
 3813 0002 04       		.byte	4
 3814 0003 08       		.byte	8
 3815 0004 10       		.byte	16
 3816 0005 20       		.byte	32
 3817 0006 01       		.byte	1
 3818 0007 02       		.byte	2
 3819 0008 04       		.byte	4
 3820 0009 08       		.byte	8
 3821 000a 10       		.byte	16
 3822 000b 20       		.byte	32
 3823 000c 40       		.byte	64
 3824 000d 80       		.byte	-128
 3825 000e 01       		.byte	1
 3826 000f 02       		.byte	2
 3827 0010 04       		.byte	4
 3828 0011 08       		.byte	8
 3829 0012 10       		.byte	16
 3830 0013 20       		.byte	32
 3831 0014 40       		.byte	64
 3832 0015 80       		.byte	-128
 3833 0016 01       		.byte	1
 3834 0017 02       		.byte	2
 3835 0018 04       		.byte	4
 3836 0019 08       		.byte	8
ARM GAS  /tmp/cctRGGbR.s 			page 85


 3837 001a 10       		.byte	16
 3838 001b 20       		.byte	32
 3839 001c 40       		.byte	64
 3840 001d 80       		.byte	-128
 3841 001e 01       		.byte	1
 3842 001f 02       		.byte	2
 3843 0020 04       		.byte	4
 3844 0021 08       		.byte	8
 3845 0022 10       		.byte	16
 3846 0023 20       		.byte	32
 3847 0024 40       		.byte	64
 3848 0025 80       		.byte	-128
 3849 0026 01       		.byte	1
 3850 0027 02       		.byte	2
 3851 0028 04       		.byte	4
 3852 0029 08       		.byte	8
 3853 002a 10       		.byte	16
 3854 002b 20       		.byte	32
 3855 002c 40       		.byte	64
 3856 002d 80       		.byte	-128
 3857 002e 01       		.byte	1
 3858 002f 02       		.byte	2
 3859 0030 04       		.byte	4
 3860 0031 08       		.byte	8
 3861 0032 10       		.byte	16
 3862 0033 20       		.byte	32
 3863 0034 40       		.byte	64
 3864 0035 80       		.byte	-128
 3865 0036 01       		.byte	1
 3866 0037 02       		.byte	2
 3867 0038 04       		.byte	4
 3868 0039 08       		.byte	8
 3869 003a 10       		.byte	16
 3870 003b 20       		.byte	32
 3871 003c 40       		.byte	64
 3872 003d 80       		.byte	-128
 3873 003e 01       		.byte	1
 3874 003f 02       		.byte	2
 3875 0040 04       		.byte	4
 3876 0041 08       		.byte	8
 3877 0042 10       		.byte	16
 3878 0043 20       		.byte	32
 3879 0044 40       		.byte	64
 3880 0045 80       		.byte	-128
 3881 0046 01       		.byte	1
 3882 0047 02       		.byte	2
 3883 0048 04       		.byte	4
 3884 0049 08       		.byte	8
 3885 004a 10       		.byte	16
 3886 004b 20       		.byte	32
 3887 004c 40       		.byte	64
 3888 004d 80       		.byte	-128
 3889 004e 01       		.byte	1
 3890 004f 02       		.byte	2
 3891 0050 04       		.byte	4
 3892 0051 08       		.byte	8
 3893 0052 10       		.byte	16
ARM GAS  /tmp/cctRGGbR.s 			page 86


 3894 0053 20       		.byte	32
 3895 0054 01       		.byte	1
 3896 0055 02       		.byte	2
 3897 0056 04       		.byte	4
 3898 0057 08       		.byte	8
 3899 0058 10       		.byte	16
 3900 0059 20       		.byte	32
 3901 005a 01       		.byte	1
 3902 005b 02       		.byte	2
 3903 005c 04       		.byte	4
 3904 005d 08       		.byte	8
 3905 005e 10       		.byte	16
 3906 005f 20       		.byte	32
 3907              		.text
 3908              	.Letext0:
 3909              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3910              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3911              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3912              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3913              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 3914              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3915              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3916              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3917              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3918              		.file 11 "/usr/include/newlib/sys/lock.h"
 3919              		.file 12 "/usr/include/newlib/sys/_types.h"
 3920              		.file 13 "/usr/include/newlib/sys/reent.h"
 3921              		.file 14 "Core/Inc/can_setup.h"
 3922              		.file 15 "Core/Inc/bms.h"
 3923              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/cctRGGbR.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bms.c
     /tmp/cctRGGbR.s:18     .text.getSOC:0000000000000000 $t
     /tmp/cctRGGbR.s:24     .text.getSOC:0000000000000000 getSOC
     /tmp/cctRGGbR.s:50     .text.getSOC:0000000000000028 $d
     /tmp/cctRGGbR.s:55     .text.getHighCellVolt:0000000000000000 $t
     /tmp/cctRGGbR.s:61     .text.getHighCellVolt:0000000000000000 getHighCellVolt
     /tmp/cctRGGbR.s:105    .text.getHighCellTemp:0000000000000000 $t
     /tmp/cctRGGbR.s:111    .text.getHighCellTemp:0000000000000000 getHighCellTemp
     /tmp/cctRGGbR.s:157    .text.getLowCellTemp:0000000000000000 $t
     /tmp/cctRGGbR.s:163    .text.getLowCellTemp:0000000000000000 getLowCellTemp
     /tmp/cctRGGbR.s:216    .text.getAvgCellTemp:0000000000000000 $t
     /tmp/cctRGGbR.s:222    .text.getAvgCellTemp:0000000000000000 getAvgCellTemp
     /tmp/cctRGGbR.s:289    .text.getTempDelta:0000000000000000 $t
     /tmp/cctRGGbR.s:295    .text.getTempDelta:0000000000000000 getTempDelta
     /tmp/cctRGGbR.s:316    .text.getCellDelta:0000000000000000 $t
     /tmp/cctRGGbR.s:322    .text.getCellDelta:0000000000000000 getCellDelta
     /tmp/cctRGGbR.s:343    .text.getLowCellVolt:0000000000000000 $t
     /tmp/cctRGGbR.s:349    .text.getLowCellVolt:0000000000000000 getLowCellVolt
     /tmp/cctRGGbR.s:394    .text.getAvgCellVolt:0000000000000000 $t
     /tmp/cctRGGbR.s:400    .text.getAvgCellVolt:0000000000000000 getAvgCellVolt
     /tmp/cctRGGbR.s:443    .text.getAvgCellVolt:0000000000000028 $d
     /tmp/cctRGGbR.s:448    .text.getPackVolt:0000000000000000 $t
     /tmp/cctRGGbR.s:454    .text.getPackVolt:0000000000000000 getPackVolt
     /tmp/cctRGGbR.s:496    .text.getPackVolt:0000000000000024 $d
     /tmp/cctRGGbR.s:501    .text.getCellCount:0000000000000000 $t
     /tmp/cctRGGbR.s:507    .text.getCellCount:0000000000000000 getCellCount
     /tmp/cctRGGbR.s:581    .text.getCellCount:0000000000000044 $d
                            *COM*:00000000000001ec BMS
     /tmp/cctRGGbR.s:587    .text.initBMS:0000000000000000 $t
     /tmp/cctRGGbR.s:594    .text.initBMS:0000000000000000 initBMS
     /tmp/cctRGGbR.s:708    .text.initBMS:000000000000008c $d
                            *COM*:0000000000000001 watchdogBits
                            *COM*:0000000000000001 chargerOn
     /tmp/cctRGGbR.s:716    .text.bmsStateHandler:0000000000000000 $t
     /tmp/cctRGGbR.s:723    .text.bmsStateHandler:0000000000000000 bmsStateHandler
     /tmp/cctRGGbR.s:742    .text.bmsStateHandler:0000000000000010 $d
     /tmp/cctRGGbR.s:840    .text.acChargeCommand:0000000000000000 $t
     /tmp/cctRGGbR.s:847    .text.acChargeCommand:0000000000000000 acChargeCommand
     /tmp/cctRGGbR.s:941    .text.acChargeCommand:0000000000000080 $d
     /tmp/cctRGGbR.s:946    .text.tx500kData:0000000000000000 $t
     /tmp/cctRGGbR.s:953    .text.tx500kData:0000000000000000 tx500kData
     /tmp/cctRGGbR.s:1043   .text.tx500kData:00000000000000bc $d
     /tmp/cctRGGbR.s:1048   .text.refreshData:0000000000000000 $t
     /tmp/cctRGGbR.s:1055   .text.refreshData:0000000000000000 refreshData
     /tmp/cctRGGbR.s:1137   .text.refreshData:000000000000005c $d
     /tmp/cctRGGbR.s:1142   .text.sendCommand:0000000000000000 $t
     /tmp/cctRGGbR.s:1149   .text.sendCommand:0000000000000000 sendCommand
     /tmp/cctRGGbR.s:1212   .text.requestBICMdata:0000000000000000 $t
     /tmp/cctRGGbR.s:1219   .text.requestBICMdata:0000000000000000 requestBICMdata
     /tmp/cctRGGbR.s:1351   .text.balanceCommand:0000000000000000 $t
     /tmp/cctRGGbR.s:1358   .text.balanceCommand:0000000000000000 balanceCommand
     /tmp/cctRGGbR.s:1636   .text.balanceCommand:0000000000000164 $d
     /tmp/cctRGGbR.s:1642   .text.vehicleComms:0000000000000000 $t
     /tmp/cctRGGbR.s:1649   .text.vehicleComms:0000000000000000 vehicleComms
     /tmp/cctRGGbR.s:1662   .text.synchChargers:0000000000000000 $t
     /tmp/cctRGGbR.s:1669   .text.synchChargers:0000000000000000 synchChargers
ARM GAS  /tmp/cctRGGbR.s 			page 88


     /tmp/cctRGGbR.s:1717   .text.synchChargers:0000000000000040 $d
     /tmp/cctRGGbR.s:1726   .text.decodeVolt:0000000000000000 $t
     /tmp/cctRGGbR.s:1733   .text.decodeVolt:0000000000000000 decodeVolt
     /tmp/cctRGGbR.s:1757   .text.decodeVolt:0000000000000016 $d
     /tmp/cctRGGbR.s:1788   .text.decodeVolt:0000000000000054 $t
     /tmp/cctRGGbR.s:2174   .text.decodeVolt:0000000000000320 $d
     /tmp/cctRGGbR.s:2178   .text.decodeVolt:0000000000000324 $t
     /tmp/cctRGGbR.s:2593   .text.decodeVolt:000000000000064c $d
     /tmp/cctRGGbR.s:2597   .text.decodeVolt:0000000000000650 $t
     /tmp/cctRGGbR.s:3012   .text.decodeVolt:000000000000098c $d
     /tmp/cctRGGbR.s:3016   .text.decodeVolt:0000000000000990 $t
     /tmp/cctRGGbR.s:3420   .text.decodeVolt:0000000000000cac $d
     /tmp/cctRGGbR.s:3424   .text.decodeVolt:0000000000000cb0 $t
     /tmp/cctRGGbR.s:3478   .text.decodeVolt:0000000000000d18 $d
     /tmp/cctRGGbR.s:3483   .text.decodeTemp:0000000000000000 $t
     /tmp/cctRGGbR.s:3490   .text.decodeTemp:0000000000000000 decodeTemp
     /tmp/cctRGGbR.s:3506   .text.decodeTemp:0000000000000010 $d
                            *COM*:0000000000000004 busFault
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000004 canMailbox3
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx3
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000018 txMsg3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan3
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
     /tmp/cctRGGbR.s:3697   .bss.errorCount:0000000000000000 $d
     /tmp/cctRGGbR.s:3701   .bss.errorCount:0000000000000000 errorCount
     /tmp/cctRGGbR.s:3704   .rodata.balanceByte:0000000000000000 $d
     /tmp/cctRGGbR.s:3708   .rodata.balanceByte:0000000000000000 balanceByte
     /tmp/cctRGGbR.s:3806   .rodata.balanceShift:0000000000000000 $d
     /tmp/cctRGGbR.s:3810   .rodata.balanceShift:0000000000000000 balanceShift
                     .debug_frame:0000000000000010 $d
     /tmp/cctRGGbR.s:747    .text.bmsStateHandler:0000000000000015 $d
     /tmp/cctRGGbR.s:747    .text.bmsStateHandler:0000000000000016 $t
     /tmp/cctRGGbR.s:3521   .text.decodeTemp:000000000000001f $d
     /tmp/cctRGGbR.s:3521   .text.decodeTemp:0000000000000020 $t

UNDEFINED SYMBOLS
ARM GAS  /tmp/cctRGGbR.s 			page 89


HAL_NVIC_SystemReset
can2tx
HAL_Delay
can1tx
can3tx
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
