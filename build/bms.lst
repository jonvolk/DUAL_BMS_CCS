ARM GAS  /tmp/cctu2O1I.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bms.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.getSOC,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	getSOC:
  25              	.LFB139:
  26              		.file 1 "Core/Src/bms.c"
   1:Core/Src/bms.c **** #include "bms.h"
   2:Core/Src/bms.c **** #include "settings.h"
   3:Core/Src/bms.c **** #include "my_math.h"
   4:Core/Src/bms.c **** 
   5:Core/Src/bms.c **** static void getPackVolt(bms_t *bms);
   6:Core/Src/bms.c **** static void getAvgCellVolt(bms_t *bms);
   7:Core/Src/bms.c **** static void getLowCellVolt(bms_t *bms);
   8:Core/Src/bms.c **** static void getHighCellVolt(bms_t *bms);
   9:Core/Src/bms.c **** static void getCellDelta(bms_t *bms);
  10:Core/Src/bms.c **** static void getLowCellTemp(bms_t *bms);
  11:Core/Src/bms.c **** static void getHighCellTemp(bms_t *bms);
  12:Core/Src/bms.c **** static void getAvgCellTemp(bms_t *bms);
  13:Core/Src/bms.c **** static void getTempDelta(bms_t *bms);
  14:Core/Src/bms.c **** static void getCellCount(bms_t *bms, int pack);
  15:Core/Src/bms.c **** static void getSOC(bms_t *bms);
  16:Core/Src/bms.c **** 
  17:Core/Src/bms.c **** 
  18:Core/Src/bms.c **** 
  19:Core/Src/bms.c **** enum
  20:Core/Src/bms.c **** {
  21:Core/Src/bms.c ****     Boot,
  22:Core/Src/bms.c ****     Ready,
  23:Core/Src/bms.c ****     Drive,
  24:Core/Src/bms.c ****     Charge,
  25:Core/Src/bms.c ****     Error
  26:Core/Src/bms.c **** };
  27:Core/Src/bms.c **** 
  28:Core/Src/bms.c **** enum
  29:Core/Src/bms.c **** {
  30:Core/Src/bms.c ****     off,
  31:Core/Src/bms.c ****     on, //key on, inverter off
  32:Core/Src/bms.c ****     charge_keyOff,
ARM GAS  /tmp/cctu2O1I.s 			page 2


  33:Core/Src/bms.c ****     charge_keyOn, //who even does that
  34:Core/Src/bms.c ****     idle,         //key on, inverter on
  35:Core/Src/bms.c ****     run,          //key on direction selected
  36:Core/Src/bms.c ****     launchMode,   //break shit
  37:Core/Src/bms.c ****     burnout,      //destroy tires
  38:Core/Src/bms.c **** };
  39:Core/Src/bms.c **** 
  40:Core/Src/bms.c **** /*/SOC filtering
  41:Core/Src/bms.c **** static const int numReadings = 10;
  42:Core/Src/bms.c **** static int readings[10];  // the readings from the analog input
  43:Core/Src/bms.c **** static int readIndex = 0; // the index of the current reading
  44:Core/Src/bms.c **** static int total = 0;     // the running total
  45:Core/Src/bms.c **** static int average = 0;   // the average
  46:Core/Src/bms.c **** */
  47:Core/Src/bms.c **** 
  48:Core/Src/bms.c **** static const uint8_t balanceByte[96] =
  49:Core/Src/bms.c ****     {0, 0, 0, 0, 0, 0,
  50:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  51:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2, 2, 2,
  52:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3, 3, 3,
  53:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4, 4, 4,
  54:Core/Src/bms.c ****      5, 5, 5, 5, 5, 5, 5, 5,
  55:Core/Src/bms.c ****      6, 6, 6, 6, 6, 6, 6, 6,
  56:Core/Src/bms.c ****      7, 7, 7, 7, 7, 7, 7, 7,
  57:Core/Src/bms.c ****      0, 0, 0, 0, 0, 0, 0, 0,
  58:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  59:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2,
  60:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3,
  61:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4};
  62:Core/Src/bms.c **** 
  63:Core/Src/bms.c **** 
  64:Core/Src/bms.c ****     static const uint8_t balanceShift[96] =
  65:Core/Src/bms.c ****     {0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  66:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  67:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  68:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  69:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  70:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  71:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  72:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  73:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  74:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  75:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  76:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  77:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,};
  78:Core/Src/bms.c **** 
  79:Core/Src/bms.c **** // Initialize BMS //////////////////////////////////////////////////////////////////
  80:Core/Src/bms.c **** void initBMS(void)
  81:Core/Src/bms.c **** {
  82:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
  83:Core/Src/bms.c ****     {
  84:Core/Src/bms.c ****         BMS[i].state = Boot;
  85:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
  86:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
  87:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
  88:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
  89:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
ARM GAS  /tmp/cctu2O1I.s 			page 3


  90:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
  91:Core/Src/bms.c ****         BMS[i].packVolt = 0;
  92:Core/Src/bms.c ****         BMS[i].SOC = 0;
  93:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
  94:Core/Src/bms.c **** 
  95:Core/Src/bms.c ****         for (size_t j = 0; j < 96; j++)
  96:Core/Src/bms.c ****         {
  97:Core/Src/bms.c ****             BMS[i].cellVolt[j] = 0; 
  98:Core/Src/bms.c ****         }
  99:Core/Src/bms.c **** 
 100:Core/Src/bms.c ****         for (size_t j = 0; j < 16; j++)
 101:Core/Src/bms.c ****         {
 102:Core/Src/bms.c ****             BMS[i].tempSensor[j] = 0; 
 103:Core/Src/bms.c ****         }
 104:Core/Src/bms.c ****     }
 105:Core/Src/bms.c ****     //vehicleState = off;
 106:Core/Src/bms.c ****     charged = false;
 107:Core/Src/bms.c **** }
 108:Core/Src/bms.c **** 
 109:Core/Src/bms.c **** // Primary State Machine ///////////////////////////////////////////////////////////////
 110:Core/Src/bms.c **** void bmsStateHandler(bms_t *bms)
 111:Core/Src/bms.c **** {
 112:Core/Src/bms.c ****     switch (bms->state)
 113:Core/Src/bms.c ****     {
 114:Core/Src/bms.c ****     case Boot:
 115:Core/Src/bms.c ****         bms->chargeRequest = 0;
 116:Core/Src/bms.c ****         bms->state = Ready;
 117:Core/Src/bms.c ****         break;
 118:Core/Src/bms.c **** 
 119:Core/Src/bms.c ****     case Ready:
 120:Core/Src/bms.c ****         bms->chargeRequest = 0;
 121:Core/Src/bms.c **** 
 122:Core/Src/bms.c ****         if (bms->avgCellVolt > BALANCE_VOLTAGE)
 123:Core/Src/bms.c ****         {
 124:Core/Src/bms.c ****             if ((bms->highCellVolt - bms->lowCellVolt) > (BALANCE_HYS)) 
 125:Core/Src/bms.c ****             {
 126:Core/Src/bms.c ****                 bms->balancecells = true;
 127:Core/Src/bms.c ****             }
 128:Core/Src/bms.c **** 
 129:Core/Src/bms.c ****             else if ((bms->highCellVolt - bms->lowCellVolt) <= BALANCE_HYS)
 130:Core/Src/bms.c ****             {
 131:Core/Src/bms.c ****                 bms->balancecells = false;
 132:Core/Src/bms.c ****             }
 133:Core/Src/bms.c ****         }
 134:Core/Src/bms.c ****         else
 135:Core/Src/bms.c ****         {
 136:Core/Src/bms.c ****             bms->balancecells = false;
 137:Core/Src/bms.c ****         }
 138:Core/Src/bms.c **** 
 139:Core/Src/bms.c ****         if (bms->highCellVolt < (CHARGE_V_SETPOINT - CHARGE_HYS))
 140:Core/Src/bms.c ****         {
 141:Core/Src/bms.c ****             bms->state = Charge;
 142:Core/Src/bms.c ****         }
 143:Core/Src/bms.c ****         /*
 144:Core/Src/bms.c ****         if (vehicleState != off) //idle || run)
 145:Core/Src/bms.c ****         {
 146:Core/Src/bms.c ****             bms->balancecells = false;
ARM GAS  /tmp/cctu2O1I.s 			page 4


 147:Core/Src/bms.c ****             bms->state = Drive;
 148:Core/Src/bms.c ****         }*/
 149:Core/Src/bms.c ****         break;
 150:Core/Src/bms.c **** /*
 151:Core/Src/bms.c ****     case Drive:
 152:Core/Src/bms.c **** 
 153:Core/Src/bms.c ****     
 154:Core/Src/bms.c ****         if (vehicleState == off)
 155:Core/Src/bms.c ****         {
 156:Core/Src/bms.c ****             bms->state = Ready;
 157:Core/Src/bms.c ****         }
 158:Core/Src/bms.c ****         break;
 159:Core/Src/bms.c **** */
 160:Core/Src/bms.c ****     case Charge:
 161:Core/Src/bms.c ****         bms->balancecells = false;
 162:Core/Src/bms.c ****         bms->chargeRequest = 1;
 163:Core/Src/bms.c **** 
 164:Core/Src/bms.c ****         if (bms->highCellVolt > CHARGE_V_SETPOINT || bms->highCellTemp > OVER_T_SETPOINT)
 165:Core/Src/bms.c ****         {
 166:Core/Src/bms.c ****             if (bms->avgCellVolt > CHARGE_V_SETPOINT - BALANCE_HYS)
 167:Core/Src/bms.c ****             {
 168:Core/Src/bms.c ****                 //SOC charged func
 169:Core/Src/bms.c ****             }
 170:Core/Src/bms.c ****             else
 171:Core/Src/bms.c ****             {
 172:Core/Src/bms.c ****                 //SOC charged func
 173:Core/Src/bms.c ****             }
 174:Core/Src/bms.c ****             bms->chargeRequest = 0;
 175:Core/Src/bms.c ****             bms->state = Ready;
 176:Core/Src/bms.c ****         }
 177:Core/Src/bms.c ****         /*
 178:Core/Src/bms.c ****         if (charged)
 179:Core/Src/bms.c ****         {
 180:Core/Src/bms.c ****             bms->chargeRequest = 0;
 181:Core/Src/bms.c ****             bms->state = Ready;
 182:Core/Src/bms.c ****         }
 183:Core/Src/bms.c ****         */
 184:Core/Src/bms.c **** 
 185:Core/Src/bms.c ****         break;
 186:Core/Src/bms.c **** 
 187:Core/Src/bms.c ****     case Error:
 188:Core/Src/bms.c ****         bms->chargeRequest = 0;
 189:Core/Src/bms.c **** 
 190:Core/Src/bms.c ****         if (bms->lowCellVolt > UNDER_V_SETPOINT && bms->highCellVolt < OVER_V_SETPOINT)
 191:Core/Src/bms.c ****         {
 192:Core/Src/bms.c ****             bms->state = Ready;
 193:Core/Src/bms.c ****         }
 194:Core/Src/bms.c ****         break;
 195:Core/Src/bms.c **** 
 196:Core/Src/bms.c ****     default:
 197:Core/Src/bms.c ****         break;
 198:Core/Src/bms.c ****     }
 199:Core/Src/bms.c **** }
 200:Core/Src/bms.c **** 
 201:Core/Src/bms.c **** // 10kw Tesla Charger /////////////////////////////////////////////////////////////////////
 202:Core/Src/bms.c **** void acChargeCommand(void)
 203:Core/Src/bms.c **** {
ARM GAS  /tmp/cctu2O1I.s 			page 5


 204:Core/Src/bms.c ****     uint8_t canTx2[8];
 205:Core/Src/bms.c ****     if (BMS[0].chargeRequest == 1)//(!charged)
 206:Core/Src/bms.c ****     {
 207:Core/Src/bms.c ****         int val = 32;
 208:Core/Src/bms.c ****         //txMsg2.StdId = 0x605; //set parameter ID
 209:Core/Src/bms.c ****         //txMsg2.DLC = 8;
 210:Core/Src/bms.c ****         canTx2[0] = 0x40;
 211:Core/Src/bms.c ****         canTx2[1] = 0x00;
 212:Core/Src/bms.c ****         canTx2[2] = 0x20;
 213:Core/Src/bms.c ****         canTx2[3] = 9;
 214:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 215:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 216:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 217:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 218:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 219:Core/Src/bms.c ****         can2tx(0x605,8,canTx2);
 220:Core/Src/bms.c ****     }
 221:Core/Src/bms.c **** 
 222:Core/Src/bms.c ****     if (BMS[0].chargeRequest == 0)
 223:Core/Src/bms.c ****     {
 224:Core/Src/bms.c ****         int val = 0;
 225:Core/Src/bms.c ****         //txMsg2.StdId = 0x605; //set parameter ID
 226:Core/Src/bms.c ****         //txMsg2.DLC = 8;
 227:Core/Src/bms.c ****         canTx2[0] = 0x40;
 228:Core/Src/bms.c ****         canTx2[1] = 0x00;
 229:Core/Src/bms.c ****         canTx2[2] = 0x20;
 230:Core/Src/bms.c ****         canTx2[3] = 9;
 231:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 232:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 233:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 234:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 235:Core/Src/bms.c ****         can2tx(0x605,8,canTx2);
 236:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 237:Core/Src/bms.c ****         
 238:Core/Src/bms.c ****     }
 239:Core/Src/bms.c **** }
 240:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 241:Core/Src/bms.c **** void tx500kData(void)
 242:Core/Src/bms.c **** {
 243:Core/Src/bms.c **** 
 244:Core/Src/bms.c ****     //txMsg2.StdId = 0x138; //BMS1
 245:Core/Src/bms.c ****     //txMsg2.DLC = 8;
 246:Core/Src/bms.c ****     uint8_t bms0[8];
 247:Core/Src/bms.c ****     bms0[0] = BMS[0].packVolt & 0xFF;
 248:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 249:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 250:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 251:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 252:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 253:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 254:Core/Src/bms.c ****     bms0[7] = 0;
 255:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 256:Core/Src/bms.c **** 
 257:Core/Src/bms.c ****     //txMsg2.StdId = 0x139; //BMS2
 258:Core/Src/bms.c ****     //txMsg2.DLC = 8;
 259:Core/Src/bms.c ****     uint8_t bms1[8];
 260:Core/Src/bms.c ****     bms1[0] = BMS[1].packVolt & 0xFF;
ARM GAS  /tmp/cctu2O1I.s 			page 6


 261:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 262:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 263:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 264:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 265:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 266:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 267:Core/Src/bms.c ****     bms1[7] = 0;
 268:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 269:Core/Src/bms.c ****     //c2tx(&txMsg2, canTx2);
 270:Core/Src/bms.c **** }
 271:Core/Src/bms.c **** 
 272:Core/Src/bms.c **** void refreshData(void)
 273:Core/Src/bms.c **** {
 274:Core/Src/bms.c **** 
 275:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 276:Core/Src/bms.c ****     {
 277:Core/Src/bms.c ****         requestBICMdata(&BMS[i]);
 278:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 279:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 280:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 281:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 282:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 283:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 284:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 285:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 286:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 287:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 288:Core/Src/bms.c ****         getSOC(&BMS[i]);
 289:Core/Src/bms.c ****         acChargeCommand();
 290:Core/Src/bms.c ****     }
 291:Core/Src/bms.c **** }
 292:Core/Src/bms.c **** 
 293:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 294:Core/Src/bms.c **** void sendCommand(void)
 295:Core/Src/bms.c **** {
 296:Core/Src/bms.c ****     uint8_t canTx[8];
 297:Core/Src/bms.c ****     //txMsg.StdId = 0x200;
 298:Core/Src/bms.c ****     //txMsg.DLC = 3;
 299:Core/Src/bms.c ****     canTx[0] = 0x02;
 300:Core/Src/bms.c ****     canTx[1] = 0x00;
 301:Core/Src/bms.c ****     canTx[2] = 0x00;
 302:Core/Src/bms.c ****     can1tx(0x200,3,canTx);
 303:Core/Src/bms.c ****     //c1tx(&txMsg, canTx); //pack 1
 304:Core/Src/bms.c **** 
 305:Core/Src/bms.c ****     uint8_t canTx3[8];
 306:Core/Src/bms.c ****     //txMsg3.StdId = 0x200;
 307:Core/Src/bms.c ****     //txMsg3.DLC = 3;
 308:Core/Src/bms.c ****     canTx3[0] = 0x02;
 309:Core/Src/bms.c ****     canTx3[1] = 0x00;
 310:Core/Src/bms.c ****     canTx3[2] = 0x00;
 311:Core/Src/bms.c ****     can3tx(0x200,3,canTx3);
 312:Core/Src/bms.c ****     //c3tx(&txMsg3, canTx3); // pack 2
 313:Core/Src/bms.c **** }
 314:Core/Src/bms.c **** 
 315:Core/Src/bms.c **** void requestBICMdata(bms_t *bms)
 316:Core/Src/bms.c **** {
 317:Core/Src/bms.c ****     sendCommand();
ARM GAS  /tmp/cctu2O1I.s 			page 7


 318:Core/Src/bms.c ****     uint8_t canTx[8];
 319:Core/Src/bms.c ****     if (!bms->balancecells)
 320:Core/Src/bms.c ****     {
 321:Core/Src/bms.c **** 
 322:Core/Src/bms.c ****         //txMsg.StdId = 0x300;
 323:Core/Src/bms.c ****         //txMsg.DLC = 8;
 324:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 325:Core/Src/bms.c ****         {
 326:Core/Src/bms.c ****             canTx[i] = 0x00;
 327:Core/Src/bms.c ****         }
 328:Core/Src/bms.c ****         can1tx(0x300,8,canTx);
 329:Core/Src/bms.c ****         can3tx(0x300,8,canTx);
 330:Core/Src/bms.c ****         //c1tx(&txMsg, canTx); //pack 1
 331:Core/Src/bms.c **** 
 332:Core/Src/bms.c ****         //txMsg.StdId = 0x310;
 333:Core/Src/bms.c ****         //txMsg.DLC = 5;
 334:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 335:Core/Src/bms.c ****         {
 336:Core/Src/bms.c ****             canTx[i] = 0x00;
 337:Core/Src/bms.c ****         }
 338:Core/Src/bms.c ****         can1tx(0x310,5,canTx);
 339:Core/Src/bms.c ****         can3tx(0x310,5,canTx);
 340:Core/Src/bms.c ****         //c1tx(&txMsg, canTx); //pack 1
 341:Core/Src/bms.c ****     }
 342:Core/Src/bms.c ****     /*
 343:Core/Src/bms.c ****     uint8_t canTx3[8];
 344:Core/Src/bms.c ****     if (!bms->balancecells)
 345:Core/Src/bms.c ****     {
 346:Core/Src/bms.c ****         txMsg3.StdId = 0x300;
 347:Core/Src/bms.c ****         txMsg3.DLC = 8;
 348:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 349:Core/Src/bms.c ****         {
 350:Core/Src/bms.c ****             canTx3[i] = 0x00;
 351:Core/Src/bms.c ****         }
 352:Core/Src/bms.c ****         c3tx(&txMsg3, canTx3); //pack 2
 353:Core/Src/bms.c **** 
 354:Core/Src/bms.c ****         txMsg3.StdId = 0x310;
 355:Core/Src/bms.c ****         txMsg3.DLC = 5;
 356:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 357:Core/Src/bms.c ****         {
 358:Core/Src/bms.c ****             canTx3[i] = 0x00;
 359:Core/Src/bms.c ****         }
 360:Core/Src/bms.c ****         c3tx(&txMsg3, canTx3); //pack 2
 361:Core/Src/bms.c ****     }
 362:Core/Src/bms.c ****     */
 363:Core/Src/bms.c **** }
 364:Core/Src/bms.c **** 
 365:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 366:Core/Src/bms.c **** void balanceCommand(bms_t *bms, int pack)
 367:Core/Src/bms.c **** {
 368:Core/Src/bms.c ****     uint8_t canTx[8];
 369:Core/Src/bms.c ****     if (pack == 0)
 370:Core/Src/bms.c ****     {
 371:Core/Src/bms.c ****         //txMsg.StdId = 0x300;
 372:Core/Src/bms.c ****         //txMsg.DLC = 8;
 373:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 374:Core/Src/bms.c ****         {
ARM GAS  /tmp/cctu2O1I.s 			page 8


 375:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 376:Core/Src/bms.c ****             {
 377:Core/Src/bms.c ****                 canTx[balanceByte[i]] |= balanceShift[i];
 378:Core/Src/bms.c ****             }
 379:Core/Src/bms.c ****         }
 380:Core/Src/bms.c ****         can1tx(0x300,8,canTx);
 381:Core/Src/bms.c ****         //c1tx(&txMsg, canTx);
 382:Core/Src/bms.c **** 
 383:Core/Src/bms.c ****         //txMsg.StdId = 0x310;
 384:Core/Src/bms.c ****         //txMsg.DLC = 5;
 385:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 386:Core/Src/bms.c ****         {
 387:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 388:Core/Src/bms.c ****             {
 389:Core/Src/bms.c ****                 canTx[balanceByte[i]] |= balanceShift[i];
 390:Core/Src/bms.c ****             }
 391:Core/Src/bms.c ****         }
 392:Core/Src/bms.c ****         can1tx(0x310,5,canTx);
 393:Core/Src/bms.c ****         //c1tx(&txMsg, canTx);
 394:Core/Src/bms.c ****     }
 395:Core/Src/bms.c **** 
 396:Core/Src/bms.c ****     uint8_t canTx3[8];
 397:Core/Src/bms.c ****     if (pack == 1)
 398:Core/Src/bms.c ****     {
 399:Core/Src/bms.c ****         //txMsg3.StdId = 0x300;
 400:Core/Src/bms.c ****         //txMsg3.DLC = 8;
 401:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 402:Core/Src/bms.c ****         {
 403:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 404:Core/Src/bms.c ****             {
 405:Core/Src/bms.c ****                 canTx3[balanceByte[i]] |= balanceShift[i];
 406:Core/Src/bms.c ****             }
 407:Core/Src/bms.c ****         }
 408:Core/Src/bms.c ****         can3tx(0x300,8,canTx3);
 409:Core/Src/bms.c ****         //c3tx(&txMsg3, canTx3);
 410:Core/Src/bms.c **** 
 411:Core/Src/bms.c ****         //txMsg3.StdId = 0x310;
 412:Core/Src/bms.c ****         //txMsg3.DLC = 5;
 413:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 414:Core/Src/bms.c ****         {
 415:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 416:Core/Src/bms.c ****             {
 417:Core/Src/bms.c ****                 canTx3[balanceByte[i]] |= balanceShift[i];
 418:Core/Src/bms.c ****             }
 419:Core/Src/bms.c ****         }
 420:Core/Src/bms.c ****         can3tx(0x310,5,canTx3);
 421:Core/Src/bms.c ****         //c3tx(&txMsg3, canTx3);
 422:Core/Src/bms.c ****     }
 423:Core/Src/bms.c **** }
 424:Core/Src/bms.c **** 
 425:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 426:Core/Src/bms.c **** void getSOC(bms_t *bms)
 427:Core/Src/bms.c **** {
  27              		.loc 1 427 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctu2O1I.s 			page 9


  31              		@ link register save eliminated.
  32              	.LVL0:
 428:Core/Src/bms.c ****     bms->SOC = MAP(bms->avgCellVolt, SOC_VOLT_10, SOC_VOLT_90, 10, 90);
  33              		.loc 1 428 0
  34 0000 B0F8E620 		ldrh	r2, [r0, #230]
  35 0004 A2F61C42 		subw	r2, r2, #3100
  36 0008 02EB8202 		add	r2, r2, r2, lsl #2
  37 000c 1301     		lsls	r3, r2, #4
  38 000e 054A     		ldr	r2, .L2
  39 0010 82FB0312 		smull	r1, r2, r2, r3
  40 0014 DB17     		asrs	r3, r3, #31
  41 0016 C3EBA213 		rsb	r3, r3, r2, asr #6
  42 001a 0A33     		adds	r3, r3, #10
  43 001c 80F8F330 		strb	r3, [r0, #243]
  44 0020 7047     		bx	lr
  45              	.L3:
  46 0022 00BF     		.align	2
  47              	.L2:
  48 0024 D34D6210 		.word	274877907
  49              		.cfi_endproc
  50              	.LFE139:
  52              		.section	.text.getHighCellVolt,"ax",%progbits
  53              		.align	1
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	getHighCellVolt:
  60              	.LFB140:
 429:Core/Src/bms.c ****     /*
 430:Core/Src/bms.c ****     // subtract the last reading:
 431:Core/Src/bms.c ****     total = total - readings[readIndex];
 432:Core/Src/bms.c ****     // read from the sensor:
 433:Core/Src/bms.c ****     readings[readIndex] = bms->SOC;
 434:Core/Src/bms.c ****     // add the reading to the total:
 435:Core/Src/bms.c ****     total = total + readings[readIndex];
 436:Core/Src/bms.c ****     // advance to the next position in the array:
 437:Core/Src/bms.c ****     readIndex = readIndex + 1;
 438:Core/Src/bms.c ****     // if we're at the end of the array...
 439:Core/Src/bms.c ****     if (readIndex >= numReadings)
 440:Core/Src/bms.c ****     {
 441:Core/Src/bms.c ****         // ...wrap around to the beginning:
 442:Core/Src/bms.c ****         readIndex = 0;
 443:Core/Src/bms.c ****     }
 444:Core/Src/bms.c ****     // calculate the average:
 445:Core/Src/bms.c ****     average = total / numReadings;
 446:Core/Src/bms.c ****     */
 447:Core/Src/bms.c **** }
 448:Core/Src/bms.c **** 
 449:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 450:Core/Src/bms.c **** void getHighCellVolt(bms_t *bms)
 451:Core/Src/bms.c **** {
  61              		.loc 1 451 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
ARM GAS  /tmp/cctu2O1I.s 			page 10


  66              	.LVL1:
 452:Core/Src/bms.c ****     bms->highCellVolt = 0;
  67              		.loc 1 452 0
  68 0000 0023     		movs	r3, #0
  69 0002 A0F8E430 		strh	r3, [r0, #228]	@ movhi
  70              	.LVL2:
  71              	.LBB2:
 453:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
  72              		.loc 1 453 0
  73 0006 00E0     		b	.L5
  74              	.LVL3:
  75              	.L6:
  76              		.loc 1 453 0 is_stmt 0 discriminator 2
  77 0008 0133     		adds	r3, r3, #1
  78              	.LVL4:
  79              	.L5:
  80              		.loc 1 453 0 discriminator 1
  81 000a 5F2B     		cmp	r3, #95
  82 000c 08D8     		bhi	.L8
 454:Core/Src/bms.c ****     {
 455:Core/Src/bms.c ****         if (bms->cellVolt[i] > bms->highCellVolt)
  83              		.loc 1 455 0 is_stmt 1
  84 000e 30F81320 		ldrh	r2, [r0, r3, lsl #1]
  85 0012 B0F8E410 		ldrh	r1, [r0, #228]
  86 0016 8A42     		cmp	r2, r1
  87 0018 F6D9     		bls	.L6
 456:Core/Src/bms.c ****         {
 457:Core/Src/bms.c ****             bms->highCellVolt = bms->cellVolt[i];
  88              		.loc 1 457 0
  89 001a A0F8E420 		strh	r2, [r0, #228]	@ movhi
  90 001e F3E7     		b	.L6
  91              	.L8:
  92              	.LBE2:
 458:Core/Src/bms.c ****         }
 459:Core/Src/bms.c ****     }
 460:Core/Src/bms.c **** }
  93              		.loc 1 460 0
  94 0020 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE140:
  98              		.section	.text.getHighCellTemp,"ax",%progbits
  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu fpv4-sp-d16
 105              	getHighCellTemp:
 106              	.LFB141:
 461:Core/Src/bms.c **** 
 462:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 463:Core/Src/bms.c **** void getHighCellTemp(bms_t *bms)
 464:Core/Src/bms.c **** {
 107              		.loc 1 464 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
ARM GAS  /tmp/cctu2O1I.s 			page 11


 112              	.LVL5:
 465:Core/Src/bms.c ****     bms->highCellTemp = 0;
 113              		.loc 1 465 0
 114 0000 0023     		movs	r3, #0
 115 0002 A0F8EA30 		strh	r3, [r0, #234]	@ movhi
 116              	.LVL6:
 117              	.LBB3:
 466:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 118              		.loc 1 466 0
 119 0006 00E0     		b	.L10
 120              	.LVL7:
 121              	.L11:
 122              		.loc 1 466 0 is_stmt 0 discriminator 2
 123 0008 0133     		adds	r3, r3, #1
 124              	.LVL8:
 125              	.L10:
 126              		.loc 1 466 0 discriminator 1
 127 000a 0F2B     		cmp	r3, #15
 128 000c 0AD8     		bhi	.L13
 467:Core/Src/bms.c ****     {
 468:Core/Src/bms.c ****         if (bms->tempSensor[i] > bms->highCellTemp)
 129              		.loc 1 468 0 is_stmt 1
 130 000e 03F16002 		add	r2, r3, #96
 131 0012 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 132 0016 B0F8EA10 		ldrh	r1, [r0, #234]
 133 001a 8A42     		cmp	r2, r1
 134 001c F4D9     		bls	.L11
 469:Core/Src/bms.c ****         {
 470:Core/Src/bms.c ****             bms->highCellTemp = bms->tempSensor[i];
 135              		.loc 1 470 0
 136 001e A0F8EA20 		strh	r2, [r0, #234]	@ movhi
 137 0022 F1E7     		b	.L11
 138              	.L13:
 139              	.LBE3:
 471:Core/Src/bms.c ****         }
 472:Core/Src/bms.c ****     }
 473:Core/Src/bms.c **** }
 140              		.loc 1 473 0
 141 0024 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE141:
 145              		.section	.text.getLowCellTemp,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	getLowCellTemp:
 153              	.LFB142:
 474:Core/Src/bms.c **** 
 475:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 476:Core/Src/bms.c **** void getLowCellTemp(bms_t *bms)
 477:Core/Src/bms.c **** {
 154              		.loc 1 477 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctu2O1I.s 			page 12


 158              		@ link register save eliminated.
 159              	.LVL9:
 478:Core/Src/bms.c ****     bms->lowCellTemp = 20000;
 160              		.loc 1 478 0
 161 0000 44F62063 		movw	r3, #20000
 162 0004 A0F8EC30 		strh	r3, [r0, #236]	@ movhi
 163              	.LVL10:
 164              	.LBB4:
 479:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 165              		.loc 1 479 0
 166 0008 0023     		movs	r3, #0
 167 000a 00E0     		b	.L15
 168              	.LVL11:
 169              	.L16:
 170              		.loc 1 479 0 is_stmt 0 discriminator 2
 171 000c 0133     		adds	r3, r3, #1
 172              	.LVL12:
 173              	.L15:
 174              		.loc 1 479 0 discriminator 1
 175 000e 0F2B     		cmp	r3, #15
 176 0010 0CD8     		bhi	.L18
 480:Core/Src/bms.c ****     {
 481:Core/Src/bms.c ****         if (bms->tempSensor[i] > 0)
 177              		.loc 1 481 0 is_stmt 1
 178 0012 03F16002 		add	r2, r3, #96
 179 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 180 001a 002A     		cmp	r2, #0
 181 001c F6D0     		beq	.L16
 482:Core/Src/bms.c ****         {
 483:Core/Src/bms.c ****             if (bms->tempSensor[i] < bms->lowCellTemp)
 182              		.loc 1 483 0
 183 001e B0F8EC10 		ldrh	r1, [r0, #236]
 184 0022 8A42     		cmp	r2, r1
 185 0024 F2D2     		bcs	.L16
 484:Core/Src/bms.c ****             {
 485:Core/Src/bms.c ****                 bms->lowCellTemp = bms->tempSensor[i];
 186              		.loc 1 485 0
 187 0026 A0F8EC20 		strh	r2, [r0, #236]	@ movhi
 188 002a EFE7     		b	.L16
 189              	.L18:
 190              	.LBE4:
 486:Core/Src/bms.c ****             }
 487:Core/Src/bms.c ****         }
 488:Core/Src/bms.c ****     }
 489:Core/Src/bms.c **** }
 191              		.loc 1 489 0
 192 002c 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE142:
 196              		.section	.text.getAvgCellTemp,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	getAvgCellTemp:
 204              	.LFB143:
ARM GAS  /tmp/cctu2O1I.s 			page 13


 490:Core/Src/bms.c **** 
 491:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 492:Core/Src/bms.c **** void getAvgCellTemp(bms_t *bms)
 493:Core/Src/bms.c **** {
 205              		.loc 1 493 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL13:
 211 0000 10B4     		push	{r4}
 212              	.LCFI0:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 4, -4
 215              	.LVL14:
 216              	.LBB5:
 494:Core/Src/bms.c ****     int zeroCounter = 0;
 495:Core/Src/bms.c ****     int sumTemp = 0;
 496:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 217              		.loc 1 496 0
 218 0002 0023     		movs	r3, #0
 219              	.LBE5:
 495:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 220              		.loc 1 495 0
 221 0004 1946     		mov	r1, r3
 494:Core/Src/bms.c ****     int zeroCounter = 0;
 222              		.loc 1 494 0
 223 0006 1C46     		mov	r4, r3
 224              	.LBB6:
 225              		.loc 1 496 0
 226 0008 01E0     		b	.L20
 227              	.LVL15:
 228              	.L21:
 497:Core/Src/bms.c ****     {
 498:Core/Src/bms.c ****         if (bms->tempSensor[i] == 0) //IGNORE_TEMP)
 499:Core/Src/bms.c ****         {
 500:Core/Src/bms.c ****             zeroCounter++;
 501:Core/Src/bms.c ****         }
 502:Core/Src/bms.c **** 
 503:Core/Src/bms.c ****         sumTemp += bms->tempSensor[i];
 229              		.loc 1 503 0 discriminator 2
 230 000a 1144     		add	r1, r1, r2
 231              	.LVL16:
 496:Core/Src/bms.c ****     {
 232              		.loc 1 496 0 discriminator 2
 233 000c 0133     		adds	r3, r3, #1
 234              	.LVL17:
 235              	.L20:
 496:Core/Src/bms.c ****     {
 236              		.loc 1 496 0 is_stmt 0 discriminator 1
 237 000e 0F2B     		cmp	r3, #15
 238 0010 07D8     		bhi	.L24
 498:Core/Src/bms.c ****         {
 239              		.loc 1 498 0 is_stmt 1
 240 0012 03F16002 		add	r2, r3, #96
 241 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 242 001a 002A     		cmp	r2, #0
ARM GAS  /tmp/cctu2O1I.s 			page 14


 243 001c F5D1     		bne	.L21
 500:Core/Src/bms.c ****         }
 244              		.loc 1 500 0
 245 001e 0134     		adds	r4, r4, #1
 246              	.LVL18:
 247 0020 F3E7     		b	.L21
 248              	.L24:
 249              	.LBE6:
 504:Core/Src/bms.c ****     }
 505:Core/Src/bms.c ****     bms->avgCellTemp = (sumTemp / (16 - zeroCounter));
 250              		.loc 1 505 0
 251 0022 C4F11004 		rsb	r4, r4, #16
 252              	.LVL19:
 253 0026 91FBF4F1 		sdiv	r1, r1, r4
 254              	.LVL20:
 255 002a A0F8EE10 		strh	r1, [r0, #238]	@ movhi
 506:Core/Src/bms.c **** }
 256              		.loc 1 506 0
 257 002e 5DF8044B 		ldr	r4, [sp], #4
 258              	.LCFI1:
 259              		.cfi_restore 4
 260              		.cfi_def_cfa_offset 0
 261 0032 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE143:
 265              		.section	.text.getTempDelta,"ax",%progbits
 266              		.align	1
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv4-sp-d16
 272              	getTempDelta:
 273              	.LFB144:
 507:Core/Src/bms.c **** 
 508:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 509:Core/Src/bms.c **** void getTempDelta(bms_t *bms)
 510:Core/Src/bms.c **** {
 274              		.loc 1 510 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              	.LVL21:
 511:Core/Src/bms.c ****     bms->tempDelta = bms->highCellTemp - bms->lowCellTemp;
 280              		.loc 1 511 0
 281 0000 B0F8EA30 		ldrh	r3, [r0, #234]
 282 0004 B0F8EC20 		ldrh	r2, [r0, #236]
 283 0008 9B1A     		subs	r3, r3, r2
 284 000a A0F8F030 		strh	r3, [r0, #240]	@ movhi
 285 000e 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE144:
 289              		.section	.text.getCellDelta,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
ARM GAS  /tmp/cctu2O1I.s 			page 15


 294              		.fpu fpv4-sp-d16
 296              	getCellDelta:
 297              	.LFB145:
 512:Core/Src/bms.c **** }
 513:Core/Src/bms.c **** 
 514:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 515:Core/Src/bms.c **** void getCellDelta(bms_t *bms)
 516:Core/Src/bms.c **** {
 298              		.loc 1 516 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              	.LVL22:
 517:Core/Src/bms.c ****     bms->cellDelta = bms->highCellVolt - bms->lowCellVolt;
 304              		.loc 1 517 0
 305 0000 B0F8E430 		ldrh	r3, [r0, #228]
 306 0004 B0F8E220 		ldrh	r2, [r0, #226]
 307 0008 9B1A     		subs	r3, r3, r2
 308 000a A0F8E830 		strh	r3, [r0, #232]	@ movhi
 309 000e 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE145:
 313              		.section	.text.getLowCellVolt,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	getLowCellVolt:
 321              	.LFB146:
 518:Core/Src/bms.c **** }
 519:Core/Src/bms.c **** 
 520:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 521:Core/Src/bms.c **** void getLowCellVolt(bms_t *bms)
 522:Core/Src/bms.c **** {
 322              		.loc 1 522 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327              	.LVL23:
 523:Core/Src/bms.c ****     bms->lowCellVolt = 5000;
 328              		.loc 1 523 0
 329 0000 41F28833 		movw	r3, #5000
 330 0004 A0F8E230 		strh	r3, [r0, #226]	@ movhi
 331              	.LVL24:
 332              	.LBB7:
 524:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 333              		.loc 1 524 0
 334 0008 0023     		movs	r3, #0
 335 000a 00E0     		b	.L28
 336              	.LVL25:
 337              	.L29:
 338              		.loc 1 524 0 is_stmt 0 discriminator 2
 339 000c 0133     		adds	r3, r3, #1
 340              	.LVL26:
ARM GAS  /tmp/cctu2O1I.s 			page 16


 341              	.L28:
 342              		.loc 1 524 0 discriminator 1
 343 000e 5F2B     		cmp	r3, #95
 344 0010 08D8     		bhi	.L31
 525:Core/Src/bms.c ****     {
 526:Core/Src/bms.c ****         if (bms->cellVolt[i] < bms->lowCellVolt)
 345              		.loc 1 526 0 is_stmt 1
 346 0012 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 347 0016 B0F8E210 		ldrh	r1, [r0, #226]
 348 001a 8A42     		cmp	r2, r1
 349 001c F6D2     		bcs	.L29
 527:Core/Src/bms.c ****         {
 528:Core/Src/bms.c ****             bms->lowCellVolt = bms->cellVolt[i];
 350              		.loc 1 528 0
 351 001e A0F8E220 		strh	r2, [r0, #226]	@ movhi
 352 0022 F3E7     		b	.L29
 353              	.L31:
 354              	.LBE7:
 529:Core/Src/bms.c ****         }
 530:Core/Src/bms.c ****     }
 531:Core/Src/bms.c **** }
 355              		.loc 1 531 0
 356 0024 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE146:
 360              		.section	.text.getAvgCellVolt,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv4-sp-d16
 367              	getAvgCellVolt:
 368              	.LFB147:
 532:Core/Src/bms.c **** 
 533:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 534:Core/Src/bms.c **** void getAvgCellVolt(bms_t *bms)
 535:Core/Src/bms.c **** {
 369              		.loc 1 535 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL27:
 375              	.LBB8:
 536:Core/Src/bms.c **** 
 537:Core/Src/bms.c ****     int cellSum = 0;
 538:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 376              		.loc 1 538 0
 377 0000 0023     		movs	r3, #0
 378              	.LBE8:
 537:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 379              		.loc 1 537 0
 380 0002 1A46     		mov	r2, r3
 381              	.LBB9:
 382              		.loc 1 538 0
 383 0004 03E0     		b	.L33
 384              	.LVL28:
ARM GAS  /tmp/cctu2O1I.s 			page 17


 385              	.L34:
 539:Core/Src/bms.c ****     {
 540:Core/Src/bms.c **** 
 541:Core/Src/bms.c ****         cellSum += bms->cellVolt[i];
 386              		.loc 1 541 0 discriminator 3
 387 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 388 000a 0A44     		add	r2, r2, r1
 389              	.LVL29:
 538:Core/Src/bms.c ****     {
 390              		.loc 1 538 0 discriminator 3
 391 000c 0133     		adds	r3, r3, #1
 392              	.LVL30:
 393              	.L33:
 538:Core/Src/bms.c ****     {
 394              		.loc 1 538 0 is_stmt 0 discriminator 1
 395 000e 5F2B     		cmp	r3, #95
 396 0010 F9D9     		bls	.L34
 397              	.LBE9:
 542:Core/Src/bms.c ****     }
 543:Core/Src/bms.c ****     bms->avgCellVolt = (cellSum / 96);
 398              		.loc 1 543 0 is_stmt 1
 399 0012 0449     		ldr	r1, .L35
 400 0014 81FB0231 		smull	r3, r1, r1, r2
 401              	.LVL31:
 402 0018 D317     		asrs	r3, r2, #31
 403 001a C3EB2113 		rsb	r3, r3, r1, asr #4
 404 001e A0F8E630 		strh	r3, [r0, #230]	@ movhi
 405 0022 7047     		bx	lr
 406              	.L36:
 407              		.align	2
 408              	.L35:
 409 0024 ABAAAA2A 		.word	715827883
 410              		.cfi_endproc
 411              	.LFE147:
 413              		.section	.text.getPackVolt,"ax",%progbits
 414              		.align	1
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	getPackVolt:
 421              	.LFB148:
 544:Core/Src/bms.c **** }
 545:Core/Src/bms.c **** 
 546:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 547:Core/Src/bms.c **** void getPackVolt(bms_t *bms)
 548:Core/Src/bms.c **** {
 422              		.loc 1 548 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.LVL32:
 428              	.LBB10:
 549:Core/Src/bms.c ****     uint32_t packSum = 0;
 550:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 429              		.loc 1 550 0
ARM GAS  /tmp/cctu2O1I.s 			page 18


 430 0000 0023     		movs	r3, #0
 431              	.LBE10:
 549:Core/Src/bms.c ****     uint32_t packSum = 0;
 432              		.loc 1 549 0
 433 0002 1A46     		mov	r2, r3
 434              	.LBB11:
 435              		.loc 1 550 0
 436 0004 03E0     		b	.L38
 437              	.LVL33:
 438              	.L39:
 551:Core/Src/bms.c ****     {
 552:Core/Src/bms.c ****         packSum += bms->cellVolt[i];
 439              		.loc 1 552 0 discriminator 3
 440 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 441 000a 0A44     		add	r2, r2, r1
 442              	.LVL34:
 550:Core/Src/bms.c ****     {
 443              		.loc 1 550 0 discriminator 3
 444 000c 0133     		adds	r3, r3, #1
 445              	.LVL35:
 446              	.L38:
 550:Core/Src/bms.c ****     {
 447              		.loc 1 550 0 is_stmt 0 discriminator 1
 448 000e 5F2B     		cmp	r3, #95
 449 0010 F9D9     		bls	.L39
 450              	.LBE11:
 553:Core/Src/bms.c ****     }
 554:Core/Src/bms.c ****     bms->packVolt = packSum / 10;
 451              		.loc 1 554 0 is_stmt 1
 452 0012 034B     		ldr	r3, .L40
 453              	.LVL36:
 454 0014 A3FB0223 		umull	r2, r3, r3, r2
 455              	.LVL37:
 456 0018 DB08     		lsrs	r3, r3, #3
 457 001a A0F8E030 		strh	r3, [r0, #224]	@ movhi
 458 001e 7047     		bx	lr
 459              	.L41:
 460              		.align	2
 461              	.L40:
 462 0020 CDCCCCCC 		.word	-858993459
 463              		.cfi_endproc
 464              	.LFE148:
 466              		.section	.text.getCellCount,"ax",%progbits
 467              		.align	1
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	getCellCount:
 474              	.LFB149:
 555:Core/Src/bms.c **** }
 556:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 557:Core/Src/bms.c **** void getCellCount(bms_t *bms, int pack)
 558:Core/Src/bms.c **** {
 475              		.loc 1 558 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cctu2O1I.s 			page 19


 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480              	.LVL38:
 481 0000 10B4     		push	{r4}
 482              	.LCFI2:
 483              		.cfi_def_cfa_offset 4
 484              		.cfi_offset 4, -4
 485              	.LVL39:
 486              	.LBB12:
 559:Core/Src/bms.c ****     uint16_t cellCount = 0;
 560:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 487              		.loc 1 560 0
 488 0002 0023     		movs	r3, #0
 489              	.LBE12:
 559:Core/Src/bms.c ****     uint16_t cellCount = 0;
 490              		.loc 1 559 0
 491 0004 1A46     		mov	r2, r3
 492              	.LBB13:
 493              		.loc 1 560 0
 494 0006 00E0     		b	.L43
 495              	.LVL40:
 496              	.L44:
 497              		.loc 1 560 0 is_stmt 0 discriminator 2
 498 0008 0133     		adds	r3, r3, #1
 499              	.LVL41:
 500              	.L43:
 501              		.loc 1 560 0 discriminator 1
 502 000a 5F2B     		cmp	r3, #95
 503 000c 07D8     		bhi	.L48
 561:Core/Src/bms.c ****     {
 562:Core/Src/bms.c ****         if (bms->cellVolt[i] > IGNORE_VOLT)
 504              		.loc 1 562 0 is_stmt 1
 505 000e 30F81340 		ldrh	r4, [r0, r3, lsl #1]
 506 0012 B4F5FA7F 		cmp	r4, #500
 507 0016 F7D9     		bls	.L44
 563:Core/Src/bms.c ****         {
 564:Core/Src/bms.c ****             cellCount++;
 508              		.loc 1 564 0
 509 0018 0132     		adds	r2, r2, #1
 510              	.LVL42:
 511 001a 92B2     		uxth	r2, r2
 512              	.LVL43:
 513 001c F4E7     		b	.L44
 514              	.L48:
 515              	.LBE13:
 565:Core/Src/bms.c ****         }
 566:Core/Src/bms.c ****     }
 567:Core/Src/bms.c ****     if (cellCount != 96)
 516              		.loc 1 567 0
 517 001e 602A     		cmp	r2, #96
 518 0020 06D0     		beq	.L42
 568:Core/Src/bms.c ****     {
 569:Core/Src/bms.c ****         BMS[pack].state = Error;
 519              		.loc 1 569 0
 520 0022 F622     		movs	r2, #246
 521              	.LVL44:
 522 0024 044B     		ldr	r3, .L49
ARM GAS  /tmp/cctu2O1I.s 			page 20


 523              	.LVL45:
 524 0026 02FB0131 		mla	r1, r2, r1, r3
 525              	.LVL46:
 526 002a 0423     		movs	r3, #4
 527 002c 81F8F230 		strb	r3, [r1, #242]
 528              	.L42:
 570:Core/Src/bms.c ****     }
 571:Core/Src/bms.c **** }
 529              		.loc 1 571 0
 530 0030 5DF8044B 		ldr	r4, [sp], #4
 531              	.LCFI3:
 532              		.cfi_restore 4
 533              		.cfi_def_cfa_offset 0
 534 0034 7047     		bx	lr
 535              	.L50:
 536 0036 00BF     		.align	2
 537              	.L49:
 538 0038 00000000 		.word	BMS
 539              		.cfi_endproc
 540              	.LFE149:
 542              		.section	.text.initBMS,"ax",%progbits
 543              		.align	1
 544              		.global	initBMS
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	initBMS:
 551              	.LFB131:
  81:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 552              		.loc 1 81 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL47:
 558              	.LBB14:
  82:Core/Src/bms.c ****     {
 559              		.loc 1 82 0
 560 0000 0021     		movs	r1, #0
 561              	.LVL48:
 562 0002 0129     		cmp	r1, #1
 563 0004 3FD8     		bhi	.L62
 564              	.LBE14:
  81:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 565              		.loc 1 81 0
 566 0006 10B4     		push	{r4}
 567              	.LCFI4:
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 4, -4
 570 0008 1DE0     		b	.L57
 571              	.LVL49:
 572              	.L54:
 573              	.LBB18:
 574              	.LBB15:
  97:Core/Src/bms.c ****         }
 575              		.loc 1 97 0 discriminator 3
ARM GAS  /tmp/cctu2O1I.s 			page 21


 576 000a C1EB4113 		rsb	r3, r1, r1, lsl #5
 577 000e C1EB8303 		rsb	r3, r1, r3, lsl #2
 578 0012 1344     		add	r3, r3, r2
 579 0014 0024     		movs	r4, #0
 580 0016 1E48     		ldr	r0, .L64
 581 0018 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  95:Core/Src/bms.c ****         {
 582              		.loc 1 95 0 discriminator 3
 583 001c 0132     		adds	r2, r2, #1
 584              	.LVL50:
 585              	.L53:
  95:Core/Src/bms.c ****         {
 586              		.loc 1 95 0 is_stmt 0 discriminator 1
 587 001e 5F2A     		cmp	r2, #95
 588 0020 F3D9     		bls	.L54
 589 0022 0022     		movs	r2, #0
 590              	.LVL51:
 591 0024 0AE0     		b	.L55
 592              	.LVL52:
 593              	.L56:
 594              	.LBE15:
 595              	.LBB16:
 102:Core/Src/bms.c ****         }
 596              		.loc 1 102 0 is_stmt 1 discriminator 3
 597 0026 C1EB4113 		rsb	r3, r1, r1, lsl #5
 598 002a C1EB8303 		rsb	r3, r1, r3, lsl #2
 599 002e 1344     		add	r3, r3, r2
 600 0030 6033     		adds	r3, r3, #96
 601 0032 0024     		movs	r4, #0
 602 0034 1648     		ldr	r0, .L64
 603 0036 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
 100:Core/Src/bms.c ****         {
 604              		.loc 1 100 0 discriminator 3
 605 003a 0132     		adds	r2, r2, #1
 606              	.LVL53:
 607              	.L55:
 100:Core/Src/bms.c ****         {
 608              		.loc 1 100 0 is_stmt 0 discriminator 1
 609 003c 0F2A     		cmp	r2, #15
 610 003e F2D9     		bls	.L56
 611              	.LBE16:
  82:Core/Src/bms.c ****     {
 612              		.loc 1 82 0 is_stmt 1 discriminator 2
 613 0040 0131     		adds	r1, r1, #1
 614              	.LVL54:
 615 0042 0129     		cmp	r1, #1
 616 0044 19D8     		bhi	.L63
 617              	.LVL55:
 618              	.L57:
  84:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
 619              		.loc 1 84 0
 620 0046 F623     		movs	r3, #246
 621 0048 114A     		ldr	r2, .L64
 622 004a 03FB0123 		mla	r3, r3, r1, r2
 623 004e 0022     		movs	r2, #0
 624 0050 83F8F220 		strb	r2, [r3, #242]
  85:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
ARM GAS  /tmp/cctu2O1I.s 			page 22


 625              		.loc 1 85 0
 626 0054 A3F8E820 		strh	r2, [r3, #232]	@ movhi
  86:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
 627              		.loc 1 86 0
 628 0058 A3F8EA20 		strh	r2, [r3, #234]	@ movhi
  87:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
 629              		.loc 1 87 0
 630 005c 83F8F420 		strb	r2, [r3, #244]
  88:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
 631              		.loc 1 88 0
 632 0060 A3F8E420 		strh	r2, [r3, #228]	@ movhi
  89:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
 633              		.loc 1 89 0
 634 0064 A3F8E220 		strh	r2, [r3, #226]	@ movhi
  90:Core/Src/bms.c ****         BMS[i].packVolt = 0;
 635              		.loc 1 90 0
 636 0068 A3F8EC20 		strh	r2, [r3, #236]	@ movhi
  91:Core/Src/bms.c ****         BMS[i].SOC = 0;
 637              		.loc 1 91 0
 638 006c A3F8E020 		strh	r2, [r3, #224]	@ movhi
  92:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
 639              		.loc 1 92 0
 640 0070 83F8F320 		strb	r2, [r3, #243]
  93:Core/Src/bms.c **** 
 641              		.loc 1 93 0
 642 0074 A3F8F020 		strh	r2, [r3, #240]	@ movhi
 643              	.LVL56:
 644              	.LBB17:
  95:Core/Src/bms.c ****         {
 645              		.loc 1 95 0
 646 0078 D1E7     		b	.L53
 647              	.LVL57:
 648              	.L63:
 649              	.LBE17:
 650              	.LBE18:
 106:Core/Src/bms.c **** }
 651              		.loc 1 106 0
 652 007a 0022     		movs	r2, #0
 653              	.LVL58:
 654 007c 054B     		ldr	r3, .L64+4
 655 007e 1A70     		strb	r2, [r3]
 107:Core/Src/bms.c **** 
 656              		.loc 1 107 0
 657 0080 5DF8044B 		ldr	r4, [sp], #4
 658              	.LCFI5:
 659              		.cfi_restore 4
 660              		.cfi_def_cfa_offset 0
 661 0084 7047     		bx	lr
 662              	.L62:
 106:Core/Src/bms.c **** }
 663              		.loc 1 106 0
 664 0086 0022     		movs	r2, #0
 665 0088 024B     		ldr	r3, .L64+4
 666 008a 1A70     		strb	r2, [r3]
 667 008c 7047     		bx	lr
 668              	.L65:
 669 008e 00BF     		.align	2
ARM GAS  /tmp/cctu2O1I.s 			page 23


 670              	.L64:
 671 0090 00000000 		.word	BMS
 672 0094 00000000 		.word	charged
 673              		.cfi_endproc
 674              	.LFE131:
 676              		.section	.text.bmsStateHandler,"ax",%progbits
 677              		.align	1
 678              		.global	bmsStateHandler
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu fpv4-sp-d16
 684              	bmsStateHandler:
 685              	.LFB132:
 111:Core/Src/bms.c ****     switch (bms->state)
 686              		.loc 1 111 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691              	.LVL59:
 112:Core/Src/bms.c ****     {
 692              		.loc 1 112 0
 693 0000 90F8F230 		ldrb	r3, [r0, #242]	@ zero_extendqisi2
 694 0004 042B     		cmp	r3, #4
 695 0006 5AD8     		bhi	.L66
 696 0008 DFE803F0 		tbb	[pc, r3]
 697              	.L69:
 698 000c 03       		.byte	(.L68-.L69)/2
 699 000d 0A       		.byte	(.L70-.L69)/2
 700 000e 59       		.byte	(.L66-.L69)/2
 701 000f 2F       		.byte	(.L71-.L69)/2
 702 0010 48       		.byte	(.L72-.L69)/2
 703 0011 00       		.p2align 1
 704              	.L68:
 115:Core/Src/bms.c ****         bms->state = Ready;
 705              		.loc 1 115 0
 706 0012 0023     		movs	r3, #0
 707 0014 80F8F430 		strb	r3, [r0, #244]
 116:Core/Src/bms.c ****         break;
 708              		.loc 1 116 0
 709 0018 0123     		movs	r3, #1
 710 001a 80F8F230 		strb	r3, [r0, #242]
 117:Core/Src/bms.c **** 
 711              		.loc 1 117 0
 712 001e 7047     		bx	lr
 713              	.L70:
 120:Core/Src/bms.c **** 
 714              		.loc 1 120 0
 715 0020 0023     		movs	r3, #0
 716 0022 80F8F430 		strb	r3, [r0, #244]
 122:Core/Src/bms.c ****         {
 717              		.loc 1 122 0
 718 0026 B0F8E620 		ldrh	r2, [r0, #230]
 719 002a 40F60A73 		movw	r3, #3850
 720 002e 9A42     		cmp	r2, r3
 721 0030 0ED9     		bls	.L73
ARM GAS  /tmp/cctu2O1I.s 			page 24


 124:Core/Src/bms.c ****             {
 722              		.loc 1 124 0
 723 0032 B0F8E430 		ldrh	r3, [r0, #228]
 724 0036 B0F8E220 		ldrh	r2, [r0, #226]
 725 003a 9B1A     		subs	r3, r3, r2
 726 003c 112B     		cmp	r3, #17
 727 003e 03DD     		ble	.L74
 126:Core/Src/bms.c ****             }
 728              		.loc 1 126 0
 729 0040 0123     		movs	r3, #1
 730 0042 80F8F530 		strb	r3, [r0, #245]
 731 0046 06E0     		b	.L75
 732              	.L74:
 131:Core/Src/bms.c ****             }
 733              		.loc 1 131 0
 734 0048 0023     		movs	r3, #0
 735 004a 80F8F530 		strb	r3, [r0, #245]
 736 004e 02E0     		b	.L75
 737              	.L73:
 136:Core/Src/bms.c ****         }
 738              		.loc 1 136 0
 739 0050 0023     		movs	r3, #0
 740 0052 80F8F530 		strb	r3, [r0, #245]
 741              	.L75:
 139:Core/Src/bms.c ****         {
 742              		.loc 1 139 0
 743 0056 B0F8E420 		ldrh	r2, [r0, #228]
 744 005a 40F6B373 		movw	r3, #4019
 745 005e 9A42     		cmp	r2, r3
 746 0060 2DD8     		bhi	.L66
 141:Core/Src/bms.c ****         }
 747              		.loc 1 141 0
 748 0062 0323     		movs	r3, #3
 749 0064 80F8F230 		strb	r3, [r0, #242]
 750 0068 7047     		bx	lr
 751              	.L71:
 161:Core/Src/bms.c ****         bms->chargeRequest = 1;
 752              		.loc 1 161 0
 753 006a 0023     		movs	r3, #0
 754 006c 80F8F530 		strb	r3, [r0, #245]
 162:Core/Src/bms.c **** 
 755              		.loc 1 162 0
 756 0070 0123     		movs	r3, #1
 757 0072 80F8F430 		strb	r3, [r0, #244]
 164:Core/Src/bms.c ****         {
 758              		.loc 1 164 0
 759 0076 B0F8E420 		ldrh	r2, [r0, #228]
 760 007a 41F25403 		movw	r3, #4180
 761 007e 9A42     		cmp	r2, r3
 762 0080 05D8     		bhi	.L76
 164:Core/Src/bms.c ****         {
 763              		.loc 1 164 0 is_stmt 0 discriminator 1
 764 0082 B0F8EA20 		ldrh	r2, [r0, #234]
 765 0086 43F2B063 		movw	r3, #14000
 766 008a 9A42     		cmp	r2, r3
 767 008c 17D9     		bls	.L66
 768              	.L76:
ARM GAS  /tmp/cctu2O1I.s 			page 25


 174:Core/Src/bms.c ****             bms->state = Ready;
 769              		.loc 1 174 0 is_stmt 1
 770 008e 0023     		movs	r3, #0
 771 0090 80F8F430 		strb	r3, [r0, #244]
 175:Core/Src/bms.c ****         }
 772              		.loc 1 175 0
 773 0094 0123     		movs	r3, #1
 774 0096 80F8F230 		strb	r3, [r0, #242]
 775 009a 7047     		bx	lr
 776              	.L72:
 188:Core/Src/bms.c **** 
 777              		.loc 1 188 0
 778 009c 0023     		movs	r3, #0
 779 009e 80F8F430 		strb	r3, [r0, #244]
 190:Core/Src/bms.c ****         {
 780              		.loc 1 190 0
 781 00a2 B0F8E230 		ldrh	r3, [r0, #226]
 782 00a6 B3F5FA6F 		cmp	r3, #2000
 783 00aa 08D9     		bls	.L66
 190:Core/Src/bms.c ****         {
 784              		.loc 1 190 0 is_stmt 0 discriminator 1
 785 00ac B0F8E420 		ldrh	r2, [r0, #228]
 786 00b0 41F29903 		movw	r3, #4249
 787 00b4 9A42     		cmp	r2, r3
 788 00b6 02D8     		bhi	.L66
 192:Core/Src/bms.c ****         }
 789              		.loc 1 192 0 is_stmt 1
 790 00b8 0123     		movs	r3, #1
 791 00ba 80F8F230 		strb	r3, [r0, #242]
 792              	.L66:
 793 00be 7047     		bx	lr
 794              		.cfi_endproc
 795              	.LFE132:
 797              		.section	.text.acChargeCommand,"ax",%progbits
 798              		.align	1
 799              		.global	acChargeCommand
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu fpv4-sp-d16
 805              	acChargeCommand:
 806              	.LFB133:
 203:Core/Src/bms.c ****     uint8_t canTx2[8];
 807              		.loc 1 203 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 8
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811 0000 00B5     		push	{lr}
 812              	.LCFI6:
 813              		.cfi_def_cfa_offset 4
 814              		.cfi_offset 14, -4
 815 0002 83B0     		sub	sp, sp, #12
 816              	.LCFI7:
 817              		.cfi_def_cfa_offset 16
 205:Core/Src/bms.c ****     {
 818              		.loc 1 205 0
 819 0004 204B     		ldr	r3, .L83
ARM GAS  /tmp/cctu2O1I.s 			page 26


 820 0006 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 821 000a 012B     		cmp	r3, #1
 822 000c 06D0     		beq	.L81
 823              	.L78:
 222:Core/Src/bms.c ****     {
 824              		.loc 1 222 0
 825 000e 1E4B     		ldr	r3, .L83
 826 0010 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 827 0014 EBB1     		cbz	r3, .L82
 828              	.L77:
 239:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 829              		.loc 1 239 0
 830 0016 03B0     		add	sp, sp, #12
 831              	.LCFI8:
 832              		.cfi_remember_state
 833              		.cfi_def_cfa_offset 4
 834              		@ sp needed
 835 0018 5DF804FB 		ldr	pc, [sp], #4
 836              	.L81:
 837              	.LCFI9:
 838              		.cfi_restore_state
 839              	.LVL60:
 840              	.LBB19:
 210:Core/Src/bms.c ****         canTx2[1] = 0x00;
 841              		.loc 1 210 0
 842 001c 4023     		movs	r3, #64
 843 001e 8DF80030 		strb	r3, [sp]
 211:Core/Src/bms.c ****         canTx2[2] = 0x20;
 844              		.loc 1 211 0
 845 0022 0023     		movs	r3, #0
 846 0024 8DF80130 		strb	r3, [sp, #1]
 212:Core/Src/bms.c ****         canTx2[3] = 9;
 847              		.loc 1 212 0
 848 0028 2022     		movs	r2, #32
 849 002a 8DF80220 		strb	r2, [sp, #2]
 213:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 850              		.loc 1 213 0
 851 002e 0921     		movs	r1, #9
 852 0030 8DF80310 		strb	r1, [sp, #3]
 214:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 853              		.loc 1 214 0
 854 0034 8DF80420 		strb	r2, [sp, #4]
 215:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 855              		.loc 1 215 0
 856 0038 8DF80530 		strb	r3, [sp, #5]
 216:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 857              		.loc 1 216 0
 858 003c 8DF80630 		strb	r3, [sp, #6]
 217:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 859              		.loc 1 217 0
 860 0040 8DF80730 		strb	r3, [sp, #7]
 219:Core/Src/bms.c ****     }
 861              		.loc 1 219 0
 862 0044 6A46     		mov	r2, sp
 863 0046 0821     		movs	r1, #8
 864 0048 40F20560 		movw	r0, #1541
 865 004c FFF7FEFF 		bl	can2tx
ARM GAS  /tmp/cctu2O1I.s 			page 27


 866              	.LVL61:
 867 0050 DDE7     		b	.L78
 868              	.LVL62:
 869              	.L82:
 870              	.LBE19:
 871              	.LBB20:
 227:Core/Src/bms.c ****         canTx2[1] = 0x00;
 872              		.loc 1 227 0
 873 0052 4023     		movs	r3, #64
 874 0054 8DF80030 		strb	r3, [sp]
 228:Core/Src/bms.c ****         canTx2[2] = 0x20;
 875              		.loc 1 228 0
 876 0058 0023     		movs	r3, #0
 877 005a 8DF80130 		strb	r3, [sp, #1]
 229:Core/Src/bms.c ****         canTx2[3] = 9;
 878              		.loc 1 229 0
 879 005e 2022     		movs	r2, #32
 880 0060 8DF80220 		strb	r2, [sp, #2]
 230:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 881              		.loc 1 230 0
 882 0064 0922     		movs	r2, #9
 883 0066 8DF80320 		strb	r2, [sp, #3]
 231:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 884              		.loc 1 231 0
 885 006a 8DF80430 		strb	r3, [sp, #4]
 232:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 886              		.loc 1 232 0
 887 006e 8DF80530 		strb	r3, [sp, #5]
 233:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 888              		.loc 1 233 0
 889 0072 8DF80630 		strb	r3, [sp, #6]
 234:Core/Src/bms.c ****         can2tx(0x605,8,canTx2);
 890              		.loc 1 234 0
 891 0076 8DF80730 		strb	r3, [sp, #7]
 235:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 892              		.loc 1 235 0
 893 007a 6A46     		mov	r2, sp
 894 007c 0821     		movs	r1, #8
 895 007e 40F20560 		movw	r0, #1541
 896 0082 FFF7FEFF 		bl	can2tx
 897              	.LVL63:
 898              	.LBE20:
 239:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 899              		.loc 1 239 0
 900 0086 C6E7     		b	.L77
 901              	.L84:
 902              		.align	2
 903              	.L83:
 904 0088 00000000 		.word	BMS
 905              		.cfi_endproc
 906              	.LFE133:
 908              		.section	.text.tx500kData,"ax",%progbits
 909              		.align	1
 910              		.global	tx500kData
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
ARM GAS  /tmp/cctu2O1I.s 			page 28


 914              		.fpu fpv4-sp-d16
 916              	tx500kData:
 917              	.LFB134:
 242:Core/Src/bms.c **** 
 918              		.loc 1 242 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 16
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922 0000 30B5     		push	{r4, r5, lr}
 923              	.LCFI10:
 924              		.cfi_def_cfa_offset 12
 925              		.cfi_offset 4, -12
 926              		.cfi_offset 5, -8
 927              		.cfi_offset 14, -4
 928 0002 85B0     		sub	sp, sp, #20
 929              	.LCFI11:
 930              		.cfi_def_cfa_offset 32
 247:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 931              		.loc 1 247 0
 932 0004 224C     		ldr	r4, .L87
 933 0006 B4F8E030 		ldrh	r3, [r4, #224]
 934 000a 8DF80830 		strb	r3, [sp, #8]
 248:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 935              		.loc 1 248 0
 936 000e 1B0A     		lsrs	r3, r3, #8
 937 0010 8DF80930 		strb	r3, [sp, #9]
 249:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 938              		.loc 1 249 0
 939 0014 B4F8EE30 		ldrh	r3, [r4, #238]
 940 0018 8DF80A30 		strb	r3, [sp, #10]
 250:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 941              		.loc 1 250 0
 942 001c 1B0A     		lsrs	r3, r3, #8
 943 001e 8DF80B30 		strb	r3, [sp, #11]
 251:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 944              		.loc 1 251 0
 945 0022 B4F8E830 		ldrh	r3, [r4, #232]
 946 0026 8DF80C30 		strb	r3, [sp, #12]
 252:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 947              		.loc 1 252 0
 948 002a 1B0A     		lsrs	r3, r3, #8
 949 002c 8DF80D30 		strb	r3, [sp, #13]
 253:Core/Src/bms.c ****     bms0[7] = 0;
 950              		.loc 1 253 0
 951 0030 94F8F330 		ldrb	r3, [r4, #243]	@ zero_extendqisi2
 952 0034 8DF80E30 		strb	r3, [sp, #14]
 254:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 953              		.loc 1 254 0
 954 0038 0025     		movs	r5, #0
 955 003a 8DF80F50 		strb	r5, [sp, #15]
 255:Core/Src/bms.c **** 
 956              		.loc 1 255 0
 957 003e 02AA     		add	r2, sp, #8
 958 0040 0821     		movs	r1, #8
 959 0042 4FF49C70 		mov	r0, #312
 960 0046 FFF7FEFF 		bl	can2tx
 961              	.LVL64:
ARM GAS  /tmp/cctu2O1I.s 			page 29


 260:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 962              		.loc 1 260 0
 963 004a B4F8D631 		ldrh	r3, [r4, #470]
 964 004e 8DF80030 		strb	r3, [sp]
 261:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 965              		.loc 1 261 0
 966 0052 1B0A     		lsrs	r3, r3, #8
 967 0054 8DF80130 		strb	r3, [sp, #1]
 262:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 968              		.loc 1 262 0
 969 0058 B4F8E431 		ldrh	r3, [r4, #484]
 970 005c 8DF80230 		strb	r3, [sp, #2]
 263:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 971              		.loc 1 263 0
 972 0060 1B0A     		lsrs	r3, r3, #8
 973 0062 8DF80330 		strb	r3, [sp, #3]
 264:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 974              		.loc 1 264 0
 975 0066 B4F8DE31 		ldrh	r3, [r4, #478]
 976 006a 8DF80430 		strb	r3, [sp, #4]
 265:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 977              		.loc 1 265 0
 978 006e 1B0A     		lsrs	r3, r3, #8
 979 0070 8DF80530 		strb	r3, [sp, #5]
 266:Core/Src/bms.c ****     bms1[7] = 0;
 980              		.loc 1 266 0
 981 0074 94F8E931 		ldrb	r3, [r4, #489]	@ zero_extendqisi2
 982 0078 8DF80630 		strb	r3, [sp, #6]
 267:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 983              		.loc 1 267 0
 984 007c 8DF80750 		strb	r5, [sp, #7]
 268:Core/Src/bms.c ****     //c2tx(&txMsg2, canTx2);
 985              		.loc 1 268 0
 986 0080 6A46     		mov	r2, sp
 987 0082 0821     		movs	r1, #8
 988 0084 40F23910 		movw	r0, #313
 989 0088 FFF7FEFF 		bl	can2tx
 990              	.LVL65:
 270:Core/Src/bms.c **** 
 991              		.loc 1 270 0
 992 008c 05B0     		add	sp, sp, #20
 993              	.LCFI12:
 994              		.cfi_def_cfa_offset 12
 995              		@ sp needed
 996 008e 30BD     		pop	{r4, r5, pc}
 997              	.L88:
 998              		.align	2
 999              	.L87:
 1000 0090 00000000 		.word	BMS
 1001              		.cfi_endproc
 1002              	.LFE134:
 1004              		.section	.text.sendCommand,"ax",%progbits
 1005              		.align	1
 1006              		.global	sendCommand
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
ARM GAS  /tmp/cctu2O1I.s 			page 30


 1010              		.fpu fpv4-sp-d16
 1012              	sendCommand:
 1013              	.LFB136:
 295:Core/Src/bms.c ****     uint8_t canTx[8];
 1014              		.loc 1 295 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 16
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018 0000 30B5     		push	{r4, r5, lr}
 1019              	.LCFI13:
 1020              		.cfi_def_cfa_offset 12
 1021              		.cfi_offset 4, -12
 1022              		.cfi_offset 5, -8
 1023              		.cfi_offset 14, -4
 1024 0002 85B0     		sub	sp, sp, #20
 1025              	.LCFI14:
 1026              		.cfi_def_cfa_offset 32
 299:Core/Src/bms.c ****     canTx[1] = 0x00;
 1027              		.loc 1 299 0
 1028 0004 0225     		movs	r5, #2
 1029 0006 8DF80850 		strb	r5, [sp, #8]
 300:Core/Src/bms.c ****     canTx[2] = 0x00;
 1030              		.loc 1 300 0
 1031 000a 0024     		movs	r4, #0
 1032 000c 8DF80940 		strb	r4, [sp, #9]
 301:Core/Src/bms.c ****     can1tx(0x200,3,canTx);
 1033              		.loc 1 301 0
 1034 0010 8DF80A40 		strb	r4, [sp, #10]
 302:Core/Src/bms.c ****     //c1tx(&txMsg, canTx); //pack 1
 1035              		.loc 1 302 0
 1036 0014 02AA     		add	r2, sp, #8
 1037 0016 0321     		movs	r1, #3
 1038 0018 4FF40070 		mov	r0, #512
 1039 001c FFF7FEFF 		bl	can1tx
 1040              	.LVL66:
 308:Core/Src/bms.c ****     canTx3[1] = 0x00;
 1041              		.loc 1 308 0
 1042 0020 8DF80050 		strb	r5, [sp]
 309:Core/Src/bms.c ****     canTx3[2] = 0x00;
 1043              		.loc 1 309 0
 1044 0024 8DF80140 		strb	r4, [sp, #1]
 310:Core/Src/bms.c ****     can3tx(0x200,3,canTx3);
 1045              		.loc 1 310 0
 1046 0028 8DF80240 		strb	r4, [sp, #2]
 311:Core/Src/bms.c ****     //c3tx(&txMsg3, canTx3); // pack 2
 1047              		.loc 1 311 0
 1048 002c 6A46     		mov	r2, sp
 1049 002e 0321     		movs	r1, #3
 1050 0030 4FF40070 		mov	r0, #512
 1051 0034 FFF7FEFF 		bl	can3tx
 1052              	.LVL67:
 313:Core/Src/bms.c **** 
 1053              		.loc 1 313 0
 1054 0038 05B0     		add	sp, sp, #20
 1055              	.LCFI15:
 1056              		.cfi_def_cfa_offset 12
 1057              		@ sp needed
ARM GAS  /tmp/cctu2O1I.s 			page 31


 1058 003a 30BD     		pop	{r4, r5, pc}
 1059              		.cfi_endproc
 1060              	.LFE136:
 1062              		.section	.text.requestBICMdata,"ax",%progbits
 1063              		.align	1
 1064              		.global	requestBICMdata
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1068              		.fpu fpv4-sp-d16
 1070              	requestBICMdata:
 1071              	.LFB137:
 316:Core/Src/bms.c ****     sendCommand();
 1072              		.loc 1 316 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              	.LVL68:
 1077 0000 10B5     		push	{r4, lr}
 1078              	.LCFI16:
 1079              		.cfi_def_cfa_offset 8
 1080              		.cfi_offset 4, -8
 1081              		.cfi_offset 14, -4
 1082 0002 82B0     		sub	sp, sp, #8
 1083              	.LCFI17:
 1084              		.cfi_def_cfa_offset 16
 1085 0004 0446     		mov	r4, r0
 317:Core/Src/bms.c ****     uint8_t canTx[8];
 1086              		.loc 1 317 0
 1087 0006 FFF7FEFF 		bl	sendCommand
 1088              	.LVL69:
 319:Core/Src/bms.c ****     {
 1089              		.loc 1 319 0
 1090 000a 94F8F530 		ldrb	r3, [r4, #245]	@ zero_extendqisi2
 1091 000e 33B1     		cbz	r3, .L93
 1092 0010 29E0     		b	.L91
 1093              	.LVL70:
 1094              	.L94:
 1095              	.LBB21:
 326:Core/Src/bms.c ****         }
 1096              		.loc 1 326 0 discriminator 3
 1097 0012 02AA     		add	r2, sp, #8
 1098 0014 1A44     		add	r2, r2, r3
 1099 0016 0021     		movs	r1, #0
 1100 0018 02F8081C 		strb	r1, [r2, #-8]
 324:Core/Src/bms.c ****         {
 1101              		.loc 1 324 0 discriminator 3
 1102 001c 0133     		adds	r3, r3, #1
 1103              	.LVL71:
 1104              	.L93:
 324:Core/Src/bms.c ****         {
 1105              		.loc 1 324 0 is_stmt 0 discriminator 1
 1106 001e 072B     		cmp	r3, #7
 1107 0020 F7D9     		bls	.L94
 1108              	.LBE21:
 328:Core/Src/bms.c ****         can3tx(0x300,8,canTx);
 1109              		.loc 1 328 0 is_stmt 1
ARM GAS  /tmp/cctu2O1I.s 			page 32


 1110 0022 6A46     		mov	r2, sp
 1111 0024 0821     		movs	r1, #8
 1112 0026 4FF44070 		mov	r0, #768
 1113 002a FFF7FEFF 		bl	can1tx
 1114              	.LVL72:
 329:Core/Src/bms.c ****         //c1tx(&txMsg, canTx); //pack 1
 1115              		.loc 1 329 0
 1116 002e 6A46     		mov	r2, sp
 1117 0030 0821     		movs	r1, #8
 1118 0032 4FF44070 		mov	r0, #768
 1119 0036 FFF7FEFF 		bl	can3tx
 1120              	.LVL73:
 1121              	.LBB22:
 334:Core/Src/bms.c ****         {
 1122              		.loc 1 334 0
 1123 003a 0023     		movs	r3, #0
 1124 003c 05E0     		b	.L95
 1125              	.LVL74:
 1126              	.L96:
 336:Core/Src/bms.c ****         }
 1127              		.loc 1 336 0 discriminator 3
 1128 003e 02AA     		add	r2, sp, #8
 1129 0040 1A44     		add	r2, r2, r3
 1130 0042 0021     		movs	r1, #0
 1131 0044 02F8081C 		strb	r1, [r2, #-8]
 334:Core/Src/bms.c ****         {
 1132              		.loc 1 334 0 discriminator 3
 1133 0048 0133     		adds	r3, r3, #1
 1134              	.LVL75:
 1135              	.L95:
 334:Core/Src/bms.c ****         {
 1136              		.loc 1 334 0 is_stmt 0 discriminator 1
 1137 004a 042B     		cmp	r3, #4
 1138 004c F7D9     		bls	.L96
 1139              	.LBE22:
 338:Core/Src/bms.c ****         can3tx(0x310,5,canTx);
 1140              		.loc 1 338 0 is_stmt 1
 1141 004e 6A46     		mov	r2, sp
 1142 0050 0521     		movs	r1, #5
 1143 0052 4FF44470 		mov	r0, #784
 1144 0056 FFF7FEFF 		bl	can1tx
 1145              	.LVL76:
 339:Core/Src/bms.c ****         //c1tx(&txMsg, canTx); //pack 1
 1146              		.loc 1 339 0
 1147 005a 6A46     		mov	r2, sp
 1148 005c 0521     		movs	r1, #5
 1149 005e 4FF44470 		mov	r0, #784
 1150 0062 FFF7FEFF 		bl	can3tx
 1151              	.LVL77:
 1152              	.L91:
 363:Core/Src/bms.c **** 
 1153              		.loc 1 363 0
 1154 0066 02B0     		add	sp, sp, #8
 1155              	.LCFI18:
 1156              		.cfi_def_cfa_offset 8
 1157              		@ sp needed
 1158 0068 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cctu2O1I.s 			page 33


 1159              		.cfi_endproc
 1160              	.LFE137:
 1162              		.section	.text.refreshData,"ax",%progbits
 1163              		.align	1
 1164              		.global	refreshData
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1168              		.fpu fpv4-sp-d16
 1170              	refreshData:
 1171              	.LFB135:
 273:Core/Src/bms.c **** 
 1172              		.loc 1 273 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176 0000 38B5     		push	{r3, r4, r5, lr}
 1177              	.LCFI19:
 1178              		.cfi_def_cfa_offset 16
 1179              		.cfi_offset 3, -16
 1180              		.cfi_offset 4, -12
 1181              		.cfi_offset 5, -8
 1182              		.cfi_offset 14, -4
 1183              	.LVL78:
 1184              	.LBB23:
 275:Core/Src/bms.c ****     {
 1185              		.loc 1 275 0
 1186 0002 0025     		movs	r5, #0
 1187 0004 2BE0     		b	.L99
 1188              	.LVL79:
 1189              	.L100:
 277:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 1190              		.loc 1 277 0 discriminator 3
 1191 0006 174B     		ldr	r3, .L102
 1192 0008 F624     		movs	r4, #246
 1193 000a 04FB0534 		mla	r4, r4, r5, r3
 1194 000e 2046     		mov	r0, r4
 1195 0010 FFF7FEFF 		bl	requestBICMdata
 1196              	.LVL80:
 278:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 1197              		.loc 1 278 0 discriminator 3
 1198 0014 2046     		mov	r0, r4
 1199 0016 FFF7FEFF 		bl	getPackVolt
 1200              	.LVL81:
 279:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 1201              		.loc 1 279 0 discriminator 3
 1202 001a 2046     		mov	r0, r4
 1203 001c FFF7FEFF 		bl	getAvgCellVolt
 1204              	.LVL82:
 280:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 1205              		.loc 1 280 0 discriminator 3
 1206 0020 2046     		mov	r0, r4
 1207 0022 FFF7FEFF 		bl	getLowCellVolt
 1208              	.LVL83:
 281:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 1209              		.loc 1 281 0 discriminator 3
 1210 0026 2046     		mov	r0, r4
ARM GAS  /tmp/cctu2O1I.s 			page 34


 1211 0028 FFF7FEFF 		bl	getHighCellVolt
 1212              	.LVL84:
 282:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 1213              		.loc 1 282 0 discriminator 3
 1214 002c 2046     		mov	r0, r4
 1215 002e FFF7FEFF 		bl	getCellDelta
 1216              	.LVL85:
 283:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 1217              		.loc 1 283 0 discriminator 3
 1218 0032 2046     		mov	r0, r4
 1219 0034 FFF7FEFF 		bl	getLowCellTemp
 1220              	.LVL86:
 284:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 1221              		.loc 1 284 0 discriminator 3
 1222 0038 2046     		mov	r0, r4
 1223 003a FFF7FEFF 		bl	getHighCellTemp
 1224              	.LVL87:
 285:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 1225              		.loc 1 285 0 discriminator 3
 1226 003e 2046     		mov	r0, r4
 1227 0040 FFF7FEFF 		bl	getAvgCellTemp
 1228              	.LVL88:
 286:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 1229              		.loc 1 286 0 discriminator 3
 1230 0044 2046     		mov	r0, r4
 1231 0046 FFF7FEFF 		bl	getTempDelta
 1232              	.LVL89:
 287:Core/Src/bms.c ****         getSOC(&BMS[i]);
 1233              		.loc 1 287 0 discriminator 3
 1234 004a 2946     		mov	r1, r5
 1235 004c 2046     		mov	r0, r4
 1236 004e FFF7FEFF 		bl	getCellCount
 1237              	.LVL90:
 288:Core/Src/bms.c ****         acChargeCommand();
 1238              		.loc 1 288 0 discriminator 3
 1239 0052 2046     		mov	r0, r4
 1240 0054 FFF7FEFF 		bl	getSOC
 1241              	.LVL91:
 289:Core/Src/bms.c ****     }
 1242              		.loc 1 289 0 discriminator 3
 1243 0058 FFF7FEFF 		bl	acChargeCommand
 1244              	.LVL92:
 275:Core/Src/bms.c ****     {
 1245              		.loc 1 275 0 discriminator 3
 1246 005c 0135     		adds	r5, r5, #1
 1247              	.LVL93:
 1248              	.L99:
 275:Core/Src/bms.c ****     {
 1249              		.loc 1 275 0 is_stmt 0 discriminator 1
 1250 005e 012D     		cmp	r5, #1
 1251 0060 D1D9     		bls	.L100
 1252              	.LBE23:
 291:Core/Src/bms.c **** 
 1253              		.loc 1 291 0 is_stmt 1
 1254 0062 38BD     		pop	{r3, r4, r5, pc}
 1255              	.LVL94:
 1256              	.L103:
ARM GAS  /tmp/cctu2O1I.s 			page 35


 1257              		.align	2
 1258              	.L102:
 1259 0064 00000000 		.word	BMS
 1260              		.cfi_endproc
 1261              	.LFE135:
 1263              		.section	.text.balanceCommand,"ax",%progbits
 1264              		.align	1
 1265              		.global	balanceCommand
 1266              		.syntax unified
 1267              		.thumb
 1268              		.thumb_func
 1269              		.fpu fpv4-sp-d16
 1271              	balanceCommand:
 1272              	.LFB138:
 367:Core/Src/bms.c ****     uint8_t canTx[8];
 1273              		.loc 1 367 0
 1274              		.cfi_startproc
 1275              		@ args = 0, pretend = 0, frame = 16
 1276              		@ frame_needed = 0, uses_anonymous_args = 0
 1277              	.LVL95:
 1278 0000 30B5     		push	{r4, r5, lr}
 1279              	.LCFI20:
 1280              		.cfi_def_cfa_offset 12
 1281              		.cfi_offset 4, -12
 1282              		.cfi_offset 5, -8
 1283              		.cfi_offset 14, -4
 1284 0002 85B0     		sub	sp, sp, #20
 1285              	.LCFI21:
 1286              		.cfi_def_cfa_offset 32
 1287 0004 0446     		mov	r4, r0
 369:Core/Src/bms.c ****     {
 1288              		.loc 1 369 0
 1289 0006 0D46     		mov	r5, r1
 1290 0008 C1B1     		cbz	r1, .L119
 1291              	.LVL96:
 1292              	.L106:
 397:Core/Src/bms.c ****     {
 1293              		.loc 1 397 0
 1294 000a 012D     		cmp	r5, #1
 1295 000c 51D0     		beq	.L122
 1296              	.L104:
 423:Core/Src/bms.c **** 
 1297              		.loc 1 423 0
 1298 000e 05B0     		add	sp, sp, #20
 1299              	.LCFI22:
 1300              		.cfi_remember_state
 1301              		.cfi_def_cfa_offset 12
 1302              		@ sp needed
 1303 0010 30BD     		pop	{r4, r5, pc}
 1304              	.LVL97:
 1305              	.L107:
 1306              	.LCFI23:
 1307              		.cfi_restore_state
 1308              	.LBB24:
 373:Core/Src/bms.c ****         {
 1309              		.loc 1 373 0 discriminator 2
 1310 0012 0133     		adds	r3, r3, #1
ARM GAS  /tmp/cctu2O1I.s 			page 36


 1311              	.LVL98:
 1312              	.L105:
 373:Core/Src/bms.c ****         {
 1313              		.loc 1 373 0 is_stmt 0 discriminator 1
 1314 0014 3D2B     		cmp	r3, #61
 1315 0016 13D8     		bhi	.L123
 375:Core/Src/bms.c ****             {
 1316              		.loc 1 375 0 is_stmt 1
 1317 0018 B4F8E610 		ldrh	r1, [r4, #230]
 1318 001c 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1319 0020 9142     		cmp	r1, r2
 1320 0022 F6D2     		bcs	.L107
 377:Core/Src/bms.c ****             }
 1321              		.loc 1 377 0
 1322 0024 364A     		ldr	r2, .L127
 1323 0026 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1324 0028 3649     		ldr	r1, .L127+4
 1325 002a C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1326 002c 04A8     		add	r0, sp, #16
 1327 002e 0244     		add	r2, r2, r0
 1328 0030 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1329 0034 0143     		orrs	r1, r1, r0
 1330 0036 02F8081C 		strb	r1, [r2, #-8]
 1331 003a EAE7     		b	.L107
 1332              	.LVL99:
 1333              	.L119:
 1334              	.LBE24:
 1335 003c 0023     		movs	r3, #0
 1336 003e E9E7     		b	.L105
 1337              	.LVL100:
 1338              	.L123:
 380:Core/Src/bms.c ****         //c1tx(&txMsg, canTx);
 1339              		.loc 1 380 0
 1340 0040 02AA     		add	r2, sp, #8
 1341 0042 0821     		movs	r1, #8
 1342 0044 4FF44070 		mov	r0, #768
 1343 0048 FFF7FEFF 		bl	can1tx
 1344              	.LVL101:
 1345              	.LBB25:
 385:Core/Src/bms.c ****         {
 1346              		.loc 1 385 0
 1347 004c 3E23     		movs	r3, #62
 1348 004e 00E0     		b	.L109
 1349              	.LVL102:
 1350              	.L110:
 385:Core/Src/bms.c ****         {
 1351              		.loc 1 385 0 is_stmt 0 discriminator 2
 1352 0050 0133     		adds	r3, r3, #1
 1353              	.LVL103:
 1354              	.L109:
 385:Core/Src/bms.c ****         {
 1355              		.loc 1 385 0 discriminator 1
 1356 0052 5F2B     		cmp	r3, #95
 1357 0054 11D8     		bhi	.L124
 387:Core/Src/bms.c ****             {
 1358              		.loc 1 387 0 is_stmt 1
 1359 0056 B4F8E610 		ldrh	r1, [r4, #230]
ARM GAS  /tmp/cctu2O1I.s 			page 37


 1360 005a 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1361 005e 9142     		cmp	r1, r2
 1362 0060 F6D2     		bcs	.L110
 389:Core/Src/bms.c ****             }
 1363              		.loc 1 389 0
 1364 0062 274A     		ldr	r2, .L127
 1365 0064 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1366 0066 2749     		ldr	r1, .L127+4
 1367 0068 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1368 006a 04A8     		add	r0, sp, #16
 1369 006c 0244     		add	r2, r2, r0
 1370 006e 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1371 0072 0143     		orrs	r1, r1, r0
 1372 0074 02F8081C 		strb	r1, [r2, #-8]
 1373 0078 EAE7     		b	.L110
 1374              	.L124:
 1375              	.LBE25:
 392:Core/Src/bms.c ****         //c1tx(&txMsg, canTx);
 1376              		.loc 1 392 0
 1377 007a 02AA     		add	r2, sp, #8
 1378 007c 0521     		movs	r1, #5
 1379 007e 4FF44470 		mov	r0, #784
 1380 0082 FFF7FEFF 		bl	can1tx
 1381              	.LVL104:
 1382 0086 C0E7     		b	.L106
 1383              	.LVL105:
 1384              	.L114:
 1385              	.LBB26:
 401:Core/Src/bms.c ****         {
 1386              		.loc 1 401 0 discriminator 2
 1387 0088 0133     		adds	r3, r3, #1
 1388              	.LVL106:
 1389              	.L112:
 401:Core/Src/bms.c ****         {
 1390              		.loc 1 401 0 is_stmt 0 discriminator 1
 1391 008a 3D2B     		cmp	r3, #61
 1392 008c 13D8     		bhi	.L125
 403:Core/Src/bms.c ****             {
 1393              		.loc 1 403 0 is_stmt 1
 1394 008e B4F8E610 		ldrh	r1, [r4, #230]
 1395 0092 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1396 0096 9142     		cmp	r1, r2
 1397 0098 F6D2     		bcs	.L114
 405:Core/Src/bms.c ****             }
 1398              		.loc 1 405 0
 1399 009a 194A     		ldr	r2, .L127
 1400 009c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1401 009e 1949     		ldr	r1, .L127+4
 1402 00a0 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1403 00a2 04A8     		add	r0, sp, #16
 1404 00a4 0244     		add	r2, r2, r0
 1405 00a6 12F8100C 		ldrb	r0, [r2, #-16]	@ zero_extendqisi2
 1406 00aa 0143     		orrs	r1, r1, r0
 1407 00ac 02F8101C 		strb	r1, [r2, #-16]
 1408 00b0 EAE7     		b	.L114
 1409              	.LVL107:
 1410              	.L122:
ARM GAS  /tmp/cctu2O1I.s 			page 38


 1411              	.LBE26:
 1412 00b2 0023     		movs	r3, #0
 1413 00b4 E9E7     		b	.L112
 1414              	.LVL108:
 1415              	.L125:
 408:Core/Src/bms.c ****         //c3tx(&txMsg3, canTx3);
 1416              		.loc 1 408 0
 1417 00b6 6A46     		mov	r2, sp
 1418 00b8 0821     		movs	r1, #8
 1419 00ba 4FF44070 		mov	r0, #768
 1420 00be FFF7FEFF 		bl	can3tx
 1421              	.LVL109:
 1422              	.LBB27:
 413:Core/Src/bms.c ****         {
 1423              		.loc 1 413 0
 1424 00c2 3E23     		movs	r3, #62
 1425 00c4 00E0     		b	.L116
 1426              	.LVL110:
 1427              	.L117:
 413:Core/Src/bms.c ****         {
 1428              		.loc 1 413 0 is_stmt 0 discriminator 2
 1429 00c6 0133     		adds	r3, r3, #1
 1430              	.LVL111:
 1431              	.L116:
 413:Core/Src/bms.c ****         {
 1432              		.loc 1 413 0 discriminator 1
 1433 00c8 5F2B     		cmp	r3, #95
 1434 00ca 11D8     		bhi	.L126
 415:Core/Src/bms.c ****             {
 1435              		.loc 1 415 0 is_stmt 1
 1436 00cc B4F8E610 		ldrh	r1, [r4, #230]
 1437 00d0 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1438 00d4 9142     		cmp	r1, r2
 1439 00d6 F6D2     		bcs	.L117
 417:Core/Src/bms.c ****             }
 1440              		.loc 1 417 0
 1441 00d8 094A     		ldr	r2, .L127
 1442 00da D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1443 00dc 0949     		ldr	r1, .L127+4
 1444 00de C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1445 00e0 04A8     		add	r0, sp, #16
 1446 00e2 0244     		add	r2, r2, r0
 1447 00e4 12F8100C 		ldrb	r0, [r2, #-16]	@ zero_extendqisi2
 1448 00e8 0143     		orrs	r1, r1, r0
 1449 00ea 02F8101C 		strb	r1, [r2, #-16]
 1450 00ee EAE7     		b	.L117
 1451              	.L126:
 1452              	.LBE27:
 420:Core/Src/bms.c ****         //c3tx(&txMsg3, canTx3);
 1453              		.loc 1 420 0
 1454 00f0 6A46     		mov	r2, sp
 1455 00f2 0521     		movs	r1, #5
 1456 00f4 4FF44470 		mov	r0, #784
 1457 00f8 FFF7FEFF 		bl	can3tx
 1458              	.LVL112:
 423:Core/Src/bms.c **** 
 1459              		.loc 1 423 0
ARM GAS  /tmp/cctu2O1I.s 			page 39


 1460 00fc 87E7     		b	.L104
 1461              	.L128:
 1462 00fe 00BF     		.align	2
 1463              	.L127:
 1464 0100 00000000 		.word	.LANCHOR0
 1465 0104 00000000 		.word	.LANCHOR1
 1466              		.cfi_endproc
 1467              	.LFE138:
 1469              		.section	.text.vehicleComms,"ax",%progbits
 1470              		.align	1
 1471              		.global	vehicleComms
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu fpv4-sp-d16
 1477              	vehicleComms:
 1478              	.LFB150:
 572:Core/Src/bms.c **** 
 573:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 574:Core/Src/bms.c **** void vehicleComms(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 575:Core/Src/bms.c **** {
 1479              		.loc 1 575 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 1483              		@ link register save eliminated.
 1484              	.LVL113:
 1485 0000 7047     		bx	lr
 1486              		.cfi_endproc
 1487              	.LFE150:
 1489              		.section	.text.synchChargers,"ax",%progbits
 1490              		.align	1
 1491              		.global	synchChargers
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1495              		.fpu fpv4-sp-d16
 1497              	synchChargers:
 1498              	.LFB151:
 576:Core/Src/bms.c ****     switch (rxMsg->StdId)
 577:Core/Src/bms.c ****     {
 578:Core/Src/bms.c ****     case 0x313:
 579:Core/Src/bms.c ****         //vehicleState = canRx[0];
 580:Core/Src/bms.c ****         break;
 581:Core/Src/bms.c **** 
 582:Core/Src/bms.c ****     default:
 583:Core/Src/bms.c ****         break;
 584:Core/Src/bms.c ****     }
 585:Core/Src/bms.c **** }
 586:Core/Src/bms.c **** 
 587:Core/Src/bms.c **** 
 588:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 589:Core/Src/bms.c **** void synchChargers(void)
 590:Core/Src/bms.c **** {
 1499              		.loc 1 590 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cctu2O1I.s 			page 40


 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              		@ link register save eliminated.
 1504 0000 7047     		bx	lr
 1505              		.cfi_endproc
 1506              	.LFE151:
 1508              		.global	__aeabi_i2d
 1509              		.global	__aeabi_dmul
 1510              		.global	__aeabi_d2uiz
 1511              		.section	.text.decodeVolt,"ax",%progbits
 1512              		.align	1
 1513              		.global	decodeVolt
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1517              		.fpu fpv4-sp-d16
 1519              	decodeVolt:
 1520              	.LFB152:
 591:Core/Src/bms.c ****     if(BMS[0].chargeRequest && BMS[1].chargeRequest)
 592:Core/Src/bms.c ****     {
 593:Core/Src/bms.c ****         charged == false;
 594:Core/Src/bms.c ****     }
 595:Core/Src/bms.c **** 
 596:Core/Src/bms.c ****     if (!BMS[0].chargeRequest || !BMS[1].chargeRequest)
 597:Core/Src/bms.c ****     {
 598:Core/Src/bms.c ****         charged == true;
 599:Core/Src/bms.c ****     }
 600:Core/Src/bms.c **** 
 601:Core/Src/bms.c **** }
 602:Core/Src/bms.c **** 
 603:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 604:Core/Src/bms.c **** void decodeVolt(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // cell voltage in millivol
 605:Core/Src/bms.c **** {
 1521              		.loc 1 605 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              	.LVL114:
 1526              		.loc 1 605 0
 1527 0000 38B5     		push	{r3, r4, r5, lr}
 1528              	.LCFI24:
 1529              		.cfi_def_cfa_offset 16
 1530              		.cfi_offset 3, -16
 1531              		.cfi_offset 4, -12
 1532              		.cfi_offset 5, -8
 1533              		.cfi_offset 14, -4
 1534 0002 0546     		mov	r5, r0
 1535 0004 1446     		mov	r4, r2
 606:Core/Src/bms.c ****     switch (rxMsg->StdId)
 1536              		.loc 1 606 0
 1537 0006 0B68     		ldr	r3, [r1]
 1538 0008 A3F58C63 		sub	r3, r3, #1120
 1539 000c 1E2B     		cmp	r3, #30
 1540 000e 00F22186 		bhi	.L131
 1541 0012 DFE813F0 		tbh	[pc, r3, lsl #1]
 1542              	.LVL115:
 1543              	.L134:
 1544 0016 1F00     		.2byte	(.L133-.L134)/2
ARM GAS  /tmp/cctu2O1I.s 			page 41


 1545 0018 7B00     		.2byte	(.L135-.L134)/2
 1546 001a F500     		.2byte	(.L136-.L134)/2
 1547 001c 6F01     		.2byte	(.L137-.L134)/2
 1548 001e EC01     		.2byte	(.L138-.L134)/2
 1549 0020 6C02     		.2byte	(.L139-.L134)/2
 1550 0022 EE02     		.2byte	(.L140-.L134)/2
 1551 0024 1F06     		.2byte	(.L131-.L134)/2
 1552 0026 7203     		.2byte	(.L141-.L134)/2
 1553 0028 F403     		.2byte	(.L142-.L134)/2
 1554 002a 7604     		.2byte	(.L143-.L134)/2
 1555 002c 1F06     		.2byte	(.L131-.L134)/2
 1556 002e FA04     		.2byte	(.L144-.L134)/2
 1557 0030 5C05     		.2byte	(.L145-.L134)/2
 1558 0032 BE05     		.2byte	(.L146-.L134)/2
 1559 0034 1F06     		.2byte	(.L131-.L134)/2
 1560 0036 4D00     		.2byte	(.L147-.L134)/2
 1561 0038 B800     		.2byte	(.L148-.L134)/2
 1562 003a 3201     		.2byte	(.L149-.L134)/2
 1563 003c AF01     		.2byte	(.L150-.L134)/2
 1564 003e 2B02     		.2byte	(.L151-.L134)/2
 1565 0040 AD02     		.2byte	(.L152-.L134)/2
 1566 0042 3103     		.2byte	(.L153-.L134)/2
 1567 0044 1F06     		.2byte	(.L131-.L134)/2
 1568 0046 B303     		.2byte	(.L154-.L134)/2
 1569 0048 3504     		.2byte	(.L155-.L134)/2
 1570 004a B904     		.2byte	(.L156-.L134)/2
 1571 004c 1F06     		.2byte	(.L131-.L134)/2
 1572 004e 2B05     		.2byte	(.L157-.L134)/2
 1573 0050 8D05     		.2byte	(.L158-.L134)/2
 1574 0052 EF05     		.2byte	(.L159-.L134)/2
 1575              		.p2align 1
 1576              	.L133:
 607:Core/Src/bms.c ****     {
 608:Core/Src/bms.c ****     case 0x460: // Begin module 1
 609:Core/Src/bms.c ****         bms->cellVolt[0] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1577              		.loc 1 609 0
 1578 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1579 0056 1B02     		lsls	r3, r3, #8
 1580 0058 03F47063 		and	r3, r3, #3840
 1581 005c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1582              	.LVL116:
 1583 005e 1844     		add	r0, r0, r3
 1584 0060 FFF7FEFF 		bl	__aeabi_i2d
 1585              	.LVL117:
 1586 0064 0022     		movs	r2, #0
 1587 0066 C24B     		ldr	r3, .L161
 1588 0068 FFF7FEFF 		bl	__aeabi_dmul
 1589              	.LVL118:
 1590 006c FFF7FEFF 		bl	__aeabi_d2uiz
 1591              	.LVL119:
 1592 0070 2880     		strh	r0, [r5]	@ movhi
 610:Core/Src/bms.c ****         bms->cellVolt[1] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1593              		.loc 1 610 0
 1594 0072 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1595 0074 1B02     		lsls	r3, r3, #8
 1596 0076 03F47063 		and	r3, r3, #3840
 1597 007a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
ARM GAS  /tmp/cctu2O1I.s 			page 42


 1598 007c 1844     		add	r0, r0, r3
 1599 007e FFF7FEFF 		bl	__aeabi_i2d
 1600              	.LVL120:
 1601 0082 0022     		movs	r2, #0
 1602 0084 BA4B     		ldr	r3, .L161
 1603 0086 FFF7FEFF 		bl	__aeabi_dmul
 1604              	.LVL121:
 1605 008a FFF7FEFF 		bl	__aeabi_d2uiz
 1606              	.LVL122:
 1607 008e 6880     		strh	r0, [r5, #2]	@ movhi
 611:Core/Src/bms.c ****         bms->cellVolt[2] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1608              		.loc 1 611 0
 1609 0090 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1610 0092 1B02     		lsls	r3, r3, #8
 1611 0094 03F47063 		and	r3, r3, #3840
 1612 0098 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1613 009a 1844     		add	r0, r0, r3
 1614 009c FFF7FEFF 		bl	__aeabi_i2d
 1615              	.LVL123:
 1616 00a0 0022     		movs	r2, #0
 1617 00a2 B34B     		ldr	r3, .L161
 1618 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1619              	.LVL124:
 1620 00a8 FFF7FEFF 		bl	__aeabi_d2uiz
 1621              	.LVL125:
 1622 00ac A880     		strh	r0, [r5, #4]	@ movhi
 612:Core/Src/bms.c ****         break;
 1623              		.loc 1 612 0
 1624 00ae 38BD     		pop	{r3, r4, r5, pc}
 1625              	.LVL126:
 1626              	.L147:
 613:Core/Src/bms.c **** 
 614:Core/Src/bms.c ****     case 0x470:
 615:Core/Src/bms.c ****         bms->cellVolt[3] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1627              		.loc 1 615 0
 1628 00b0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1629 00b2 1B02     		lsls	r3, r3, #8
 1630 00b4 03F47063 		and	r3, r3, #3840
 1631 00b8 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1632              	.LVL127:
 1633 00ba 1844     		add	r0, r0, r3
 1634 00bc FFF7FEFF 		bl	__aeabi_i2d
 1635              	.LVL128:
 1636 00c0 0022     		movs	r2, #0
 1637 00c2 AB4B     		ldr	r3, .L161
 1638 00c4 FFF7FEFF 		bl	__aeabi_dmul
 1639              	.LVL129:
 1640 00c8 FFF7FEFF 		bl	__aeabi_d2uiz
 1641              	.LVL130:
 1642 00cc E880     		strh	r0, [r5, #6]	@ movhi
 616:Core/Src/bms.c ****         bms->cellVolt[4] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1643              		.loc 1 616 0
 1644 00ce A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1645 00d0 1B02     		lsls	r3, r3, #8
 1646 00d2 03F47063 		and	r3, r3, #3840
 1647 00d6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1648 00d8 1844     		add	r0, r0, r3
ARM GAS  /tmp/cctu2O1I.s 			page 43


 1649 00da FFF7FEFF 		bl	__aeabi_i2d
 1650              	.LVL131:
 1651 00de 0022     		movs	r2, #0
 1652 00e0 A34B     		ldr	r3, .L161
 1653 00e2 FFF7FEFF 		bl	__aeabi_dmul
 1654              	.LVL132:
 1655 00e6 FFF7FEFF 		bl	__aeabi_d2uiz
 1656              	.LVL133:
 1657 00ea 2881     		strh	r0, [r5, #8]	@ movhi
 617:Core/Src/bms.c ****         bms->cellVolt[5] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1658              		.loc 1 617 0
 1659 00ec 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1660 00ee 1B02     		lsls	r3, r3, #8
 1661 00f0 03F47063 		and	r3, r3, #3840
 1662 00f4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1663 00f6 1844     		add	r0, r0, r3
 1664 00f8 FFF7FEFF 		bl	__aeabi_i2d
 1665              	.LVL134:
 1666 00fc 0022     		movs	r2, #0
 1667 00fe 9C4B     		ldr	r3, .L161
 1668 0100 FFF7FEFF 		bl	__aeabi_dmul
 1669              	.LVL135:
 1670 0104 FFF7FEFF 		bl	__aeabi_d2uiz
 1671              	.LVL136:
 1672 0108 6881     		strh	r0, [r5, #10]	@ movhi
 618:Core/Src/bms.c ****         break;
 1673              		.loc 1 618 0
 1674 010a 38BD     		pop	{r3, r4, r5, pc}
 1675              	.LVL137:
 1676              	.L135:
 619:Core/Src/bms.c **** 
 620:Core/Src/bms.c ****     case 0x461:
 621:Core/Src/bms.c ****         bms->cellVolt[6] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1677              		.loc 1 621 0
 1678 010c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1679 010e 1B02     		lsls	r3, r3, #8
 1680 0110 03F47063 		and	r3, r3, #3840
 1681 0114 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1682              	.LVL138:
 1683 0116 1844     		add	r0, r0, r3
 1684 0118 FFF7FEFF 		bl	__aeabi_i2d
 1685              	.LVL139:
 1686 011c 0022     		movs	r2, #0
 1687 011e 944B     		ldr	r3, .L161
 1688 0120 FFF7FEFF 		bl	__aeabi_dmul
 1689              	.LVL140:
 1690 0124 FFF7FEFF 		bl	__aeabi_d2uiz
 1691              	.LVL141:
 1692 0128 A881     		strh	r0, [r5, #12]	@ movhi
 622:Core/Src/bms.c ****         bms->cellVolt[7] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1693              		.loc 1 622 0
 1694 012a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1695 012c 1B02     		lsls	r3, r3, #8
 1696 012e 03F47063 		and	r3, r3, #3840
 1697 0132 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1698 0134 1844     		add	r0, r0, r3
 1699 0136 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cctu2O1I.s 			page 44


 1700              	.LVL142:
 1701 013a 0022     		movs	r2, #0
 1702 013c 8C4B     		ldr	r3, .L161
 1703 013e FFF7FEFF 		bl	__aeabi_dmul
 1704              	.LVL143:
 1705 0142 FFF7FEFF 		bl	__aeabi_d2uiz
 1706              	.LVL144:
 1707 0146 E881     		strh	r0, [r5, #14]	@ movhi
 623:Core/Src/bms.c ****         bms->cellVolt[8] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1708              		.loc 1 623 0
 1709 0148 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1710 014a 1B02     		lsls	r3, r3, #8
 1711 014c 03F47063 		and	r3, r3, #3840
 1712 0150 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1713 0152 1844     		add	r0, r0, r3
 1714 0154 FFF7FEFF 		bl	__aeabi_i2d
 1715              	.LVL145:
 1716 0158 0022     		movs	r2, #0
 1717 015a 854B     		ldr	r3, .L161
 1718 015c FFF7FEFF 		bl	__aeabi_dmul
 1719              	.LVL146:
 1720 0160 FFF7FEFF 		bl	__aeabi_d2uiz
 1721              	.LVL147:
 1722 0164 2882     		strh	r0, [r5, #16]	@ movhi
 624:Core/Src/bms.c ****         bms->cellVolt[9] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1723              		.loc 1 624 0
 1724 0166 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1725 0168 1B02     		lsls	r3, r3, #8
 1726 016a 03F47063 		and	r3, r3, #3840
 1727 016e E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1728 0170 1844     		add	r0, r0, r3
 1729 0172 FFF7FEFF 		bl	__aeabi_i2d
 1730              	.LVL148:
 1731 0176 0022     		movs	r2, #0
 1732 0178 7D4B     		ldr	r3, .L161
 1733 017a FFF7FEFF 		bl	__aeabi_dmul
 1734              	.LVL149:
 1735 017e FFF7FEFF 		bl	__aeabi_d2uiz
 1736              	.LVL150:
 1737 0182 6882     		strh	r0, [r5, #18]	@ movhi
 625:Core/Src/bms.c ****         break;
 1738              		.loc 1 625 0
 1739 0184 38BD     		pop	{r3, r4, r5, pc}
 1740              	.LVL151:
 1741              	.L148:
 626:Core/Src/bms.c **** 
 627:Core/Src/bms.c ****     case 0x471:
 628:Core/Src/bms.c ****         bms->cellVolt[10] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1742              		.loc 1 628 0
 1743 0186 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1744 0188 1B02     		lsls	r3, r3, #8
 1745 018a 03F47063 		and	r3, r3, #3840
 1746 018e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1747              	.LVL152:
 1748 0190 1844     		add	r0, r0, r3
 1749 0192 FFF7FEFF 		bl	__aeabi_i2d
 1750              	.LVL153:
ARM GAS  /tmp/cctu2O1I.s 			page 45


 1751 0196 0022     		movs	r2, #0
 1752 0198 754B     		ldr	r3, .L161
 1753 019a FFF7FEFF 		bl	__aeabi_dmul
 1754              	.LVL154:
 1755 019e FFF7FEFF 		bl	__aeabi_d2uiz
 1756              	.LVL155:
 1757 01a2 A882     		strh	r0, [r5, #20]	@ movhi
 629:Core/Src/bms.c ****         bms->cellVolt[11] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1758              		.loc 1 629 0
 1759 01a4 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1760 01a6 1B02     		lsls	r3, r3, #8
 1761 01a8 03F47063 		and	r3, r3, #3840
 1762 01ac E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1763 01ae 1844     		add	r0, r0, r3
 1764 01b0 FFF7FEFF 		bl	__aeabi_i2d
 1765              	.LVL156:
 1766 01b4 0022     		movs	r2, #0
 1767 01b6 6E4B     		ldr	r3, .L161
 1768 01b8 FFF7FEFF 		bl	__aeabi_dmul
 1769              	.LVL157:
 1770 01bc FFF7FEFF 		bl	__aeabi_d2uiz
 1771              	.LVL158:
 1772 01c0 E882     		strh	r0, [r5, #22]	@ movhi
 630:Core/Src/bms.c ****         bms->cellVolt[12] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1773              		.loc 1 630 0
 1774 01c2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1775 01c4 1B02     		lsls	r3, r3, #8
 1776 01c6 03F47063 		and	r3, r3, #3840
 1777 01ca 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1778 01cc 1844     		add	r0, r0, r3
 1779 01ce FFF7FEFF 		bl	__aeabi_i2d
 1780              	.LVL159:
 1781 01d2 0022     		movs	r2, #0
 1782 01d4 664B     		ldr	r3, .L161
 1783 01d6 FFF7FEFF 		bl	__aeabi_dmul
 1784              	.LVL160:
 1785 01da FFF7FEFF 		bl	__aeabi_d2uiz
 1786              	.LVL161:
 1787 01de 2883     		strh	r0, [r5, #24]	@ movhi
 631:Core/Src/bms.c ****         bms->cellVolt[13] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1788              		.loc 1 631 0
 1789 01e0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1790 01e2 1B02     		lsls	r3, r3, #8
 1791 01e4 03F47063 		and	r3, r3, #3840
 1792 01e8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1793 01ea 1844     		add	r0, r0, r3
 1794 01ec FFF7FEFF 		bl	__aeabi_i2d
 1795              	.LVL162:
 1796 01f0 0022     		movs	r2, #0
 1797 01f2 5F4B     		ldr	r3, .L161
 1798 01f4 FFF7FEFF 		bl	__aeabi_dmul
 1799              	.LVL163:
 1800 01f8 FFF7FEFF 		bl	__aeabi_d2uiz
 1801              	.LVL164:
 1802 01fc 6883     		strh	r0, [r5, #26]	@ movhi
 632:Core/Src/bms.c ****         break;
 1803              		.loc 1 632 0
ARM GAS  /tmp/cctu2O1I.s 			page 46


 1804 01fe 38BD     		pop	{r3, r4, r5, pc}
 1805              	.LVL165:
 1806              	.L136:
 633:Core/Src/bms.c **** 
 634:Core/Src/bms.c ****     case 0x462:
 635:Core/Src/bms.c ****         bms->cellVolt[14] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1807              		.loc 1 635 0
 1808 0200 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1809 0202 1B02     		lsls	r3, r3, #8
 1810 0204 03F47063 		and	r3, r3, #3840
 1811 0208 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1812              	.LVL166:
 1813 020a 1844     		add	r0, r0, r3
 1814 020c FFF7FEFF 		bl	__aeabi_i2d
 1815              	.LVL167:
 1816 0210 0022     		movs	r2, #0
 1817 0212 574B     		ldr	r3, .L161
 1818 0214 FFF7FEFF 		bl	__aeabi_dmul
 1819              	.LVL168:
 1820 0218 FFF7FEFF 		bl	__aeabi_d2uiz
 1821              	.LVL169:
 1822 021c A883     		strh	r0, [r5, #28]	@ movhi
 636:Core/Src/bms.c ****         bms->cellVolt[15] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1823              		.loc 1 636 0
 1824 021e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1825 0220 1B02     		lsls	r3, r3, #8
 1826 0222 03F47063 		and	r3, r3, #3840
 1827 0226 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1828 0228 1844     		add	r0, r0, r3
 1829 022a FFF7FEFF 		bl	__aeabi_i2d
 1830              	.LVL170:
 1831 022e 0022     		movs	r2, #0
 1832 0230 4F4B     		ldr	r3, .L161
 1833 0232 FFF7FEFF 		bl	__aeabi_dmul
 1834              	.LVL171:
 1835 0236 FFF7FEFF 		bl	__aeabi_d2uiz
 1836              	.LVL172:
 1837 023a E883     		strh	r0, [r5, #30]	@ movhi
 637:Core/Src/bms.c ****         bms->cellVolt[16] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1838              		.loc 1 637 0
 1839 023c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1840 023e 1B02     		lsls	r3, r3, #8
 1841 0240 03F47063 		and	r3, r3, #3840
 1842 0244 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1843 0246 1844     		add	r0, r0, r3
 1844 0248 FFF7FEFF 		bl	__aeabi_i2d
 1845              	.LVL173:
 1846 024c 0022     		movs	r2, #0
 1847 024e 484B     		ldr	r3, .L161
 1848 0250 FFF7FEFF 		bl	__aeabi_dmul
 1849              	.LVL174:
 1850 0254 FFF7FEFF 		bl	__aeabi_d2uiz
 1851              	.LVL175:
 1852 0258 2884     		strh	r0, [r5, #32]	@ movhi
 638:Core/Src/bms.c ****         bms->cellVolt[17] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1853              		.loc 1 638 0
 1854 025a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
ARM GAS  /tmp/cctu2O1I.s 			page 47


 1855 025c 1B02     		lsls	r3, r3, #8
 1856 025e 03F47063 		and	r3, r3, #3840
 1857 0262 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1858 0264 1844     		add	r0, r0, r3
 1859 0266 FFF7FEFF 		bl	__aeabi_i2d
 1860              	.LVL176:
 1861 026a 0022     		movs	r2, #0
 1862 026c 404B     		ldr	r3, .L161
 1863 026e FFF7FEFF 		bl	__aeabi_dmul
 1864              	.LVL177:
 1865 0272 FFF7FEFF 		bl	__aeabi_d2uiz
 1866              	.LVL178:
 1867 0276 6884     		strh	r0, [r5, #34]	@ movhi
 639:Core/Src/bms.c ****         break;
 1868              		.loc 1 639 0
 1869 0278 38BD     		pop	{r3, r4, r5, pc}
 1870              	.LVL179:
 1871              	.L149:
 640:Core/Src/bms.c **** 
 641:Core/Src/bms.c ****     case 0x472:
 642:Core/Src/bms.c ****         bms->cellVolt[18] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1872              		.loc 1 642 0
 1873 027a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1874 027c 1B02     		lsls	r3, r3, #8
 1875 027e 03F47063 		and	r3, r3, #3840
 1876 0282 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1877              	.LVL180:
 1878 0284 1844     		add	r0, r0, r3
 1879 0286 FFF7FEFF 		bl	__aeabi_i2d
 1880              	.LVL181:
 1881 028a 0022     		movs	r2, #0
 1882 028c 384B     		ldr	r3, .L161
 1883 028e FFF7FEFF 		bl	__aeabi_dmul
 1884              	.LVL182:
 1885 0292 FFF7FEFF 		bl	__aeabi_d2uiz
 1886              	.LVL183:
 1887 0296 A884     		strh	r0, [r5, #36]	@ movhi
 643:Core/Src/bms.c ****         bms->cellVolt[19] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1888              		.loc 1 643 0
 1889 0298 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1890 029a 1B02     		lsls	r3, r3, #8
 1891 029c 03F47063 		and	r3, r3, #3840
 1892 02a0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1893 02a2 1844     		add	r0, r0, r3
 1894 02a4 FFF7FEFF 		bl	__aeabi_i2d
 1895              	.LVL184:
 1896 02a8 0022     		movs	r2, #0
 1897 02aa 314B     		ldr	r3, .L161
 1898 02ac FFF7FEFF 		bl	__aeabi_dmul
 1899              	.LVL185:
 1900 02b0 FFF7FEFF 		bl	__aeabi_d2uiz
 1901              	.LVL186:
 1902 02b4 E884     		strh	r0, [r5, #38]	@ movhi
 644:Core/Src/bms.c ****         bms->cellVolt[20] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1903              		.loc 1 644 0
 1904 02b6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1905 02b8 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp/cctu2O1I.s 			page 48


 1906 02ba 03F47063 		and	r3, r3, #3840
 1907 02be 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1908 02c0 1844     		add	r0, r0, r3
 1909 02c2 FFF7FEFF 		bl	__aeabi_i2d
 1910              	.LVL187:
 1911 02c6 0022     		movs	r2, #0
 1912 02c8 294B     		ldr	r3, .L161
 1913 02ca FFF7FEFF 		bl	__aeabi_dmul
 1914              	.LVL188:
 1915 02ce FFF7FEFF 		bl	__aeabi_d2uiz
 1916              	.LVL189:
 1917 02d2 2885     		strh	r0, [r5, #40]	@ movhi
 645:Core/Src/bms.c ****         bms->cellVolt[21] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1918              		.loc 1 645 0
 1919 02d4 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1920 02d6 1B02     		lsls	r3, r3, #8
 1921 02d8 03F47063 		and	r3, r3, #3840
 1922 02dc E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1923 02de 1844     		add	r0, r0, r3
 1924 02e0 FFF7FEFF 		bl	__aeabi_i2d
 1925              	.LVL190:
 1926 02e4 0022     		movs	r2, #0
 1927 02e6 224B     		ldr	r3, .L161
 1928 02e8 FFF7FEFF 		bl	__aeabi_dmul
 1929              	.LVL191:
 1930 02ec FFF7FEFF 		bl	__aeabi_d2uiz
 1931              	.LVL192:
 1932 02f0 6885     		strh	r0, [r5, #42]	@ movhi
 646:Core/Src/bms.c ****         break;
 1933              		.loc 1 646 0
 1934 02f2 38BD     		pop	{r3, r4, r5, pc}
 1935              	.LVL193:
 1936              	.L137:
 647:Core/Src/bms.c ****     case 0x463:
 648:Core/Src/bms.c ****         bms->cellVolt[22] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1937              		.loc 1 648 0
 1938 02f4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1939 02f6 1B02     		lsls	r3, r3, #8
 1940 02f8 03F47063 		and	r3, r3, #3840
 1941 02fc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1942              	.LVL194:
 1943 02fe 1844     		add	r0, r0, r3
 1944 0300 FFF7FEFF 		bl	__aeabi_i2d
 1945              	.LVL195:
 1946 0304 0022     		movs	r2, #0
 1947 0306 1A4B     		ldr	r3, .L161
 1948 0308 FFF7FEFF 		bl	__aeabi_dmul
 1949              	.LVL196:
 1950 030c FFF7FEFF 		bl	__aeabi_d2uiz
 1951              	.LVL197:
 1952 0310 A885     		strh	r0, [r5, #44]	@ movhi
 649:Core/Src/bms.c ****         bms->cellVolt[23] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1953              		.loc 1 649 0
 1954 0312 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1955 0314 1B02     		lsls	r3, r3, #8
 1956 0316 03F47063 		and	r3, r3, #3840
 1957 031a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
ARM GAS  /tmp/cctu2O1I.s 			page 49


 1958 031c 1844     		add	r0, r0, r3
 1959 031e FFF7FEFF 		bl	__aeabi_i2d
 1960              	.LVL198:
 1961 0322 0022     		movs	r2, #0
 1962 0324 124B     		ldr	r3, .L161
 1963 0326 FFF7FEFF 		bl	__aeabi_dmul
 1964              	.LVL199:
 1965 032a FFF7FEFF 		bl	__aeabi_d2uiz
 1966              	.LVL200:
 1967 032e E885     		strh	r0, [r5, #46]	@ movhi
 650:Core/Src/bms.c ****         bms->cellVolt[24] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1968              		.loc 1 650 0
 1969 0330 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1970 0332 1B02     		lsls	r3, r3, #8
 1971 0334 03F47063 		and	r3, r3, #3840
 1972 0338 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1973 033a 1844     		add	r0, r0, r3
 1974 033c FFF7FEFF 		bl	__aeabi_i2d
 1975              	.LVL201:
 1976 0340 0022     		movs	r2, #0
 1977 0342 0B4B     		ldr	r3, .L161
 1978 0344 FFF7FEFF 		bl	__aeabi_dmul
 1979              	.LVL202:
 1980 0348 FFF7FEFF 		bl	__aeabi_d2uiz
 1981              	.LVL203:
 1982 034c 2886     		strh	r0, [r5, #48]	@ movhi
 651:Core/Src/bms.c ****         bms->cellVolt[25] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1983              		.loc 1 651 0
 1984 034e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1985 0350 1B02     		lsls	r3, r3, #8
 1986 0352 03F47063 		and	r3, r3, #3840
 1987 0356 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1988 0358 1844     		add	r0, r0, r3
 1989 035a FFF7FEFF 		bl	__aeabi_i2d
 1990              	.LVL204:
 1991 035e 0022     		movs	r2, #0
 1992 0360 034B     		ldr	r3, .L161
 1993 0362 FFF7FEFF 		bl	__aeabi_dmul
 1994              	.LVL205:
 1995 0366 FFF7FEFF 		bl	__aeabi_d2uiz
 1996              	.LVL206:
 1997 036a 6886     		strh	r0, [r5, #50]	@ movhi
 652:Core/Src/bms.c ****         break;
 1998              		.loc 1 652 0
 1999 036c 38BD     		pop	{r3, r4, r5, pc}
 2000              	.LVL207:
 2001              	.L162:
 2002 036e 00BF     		.align	2
 2003              	.L161:
 2004 0370 0000F43F 		.word	1072955392
 2005              	.LVL208:
 2006              	.L150:
 653:Core/Src/bms.c **** 
 654:Core/Src/bms.c ****     case 0x473:
 655:Core/Src/bms.c ****         bms->cellVolt[26] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2007              		.loc 1 655 0
 2008 0374 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/cctu2O1I.s 			page 50


 2009 0376 1B02     		lsls	r3, r3, #8
 2010 0378 03F47063 		and	r3, r3, #3840
 2011 037c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2012              	.LVL209:
 2013 037e 1844     		add	r0, r0, r3
 2014 0380 FFF7FEFF 		bl	__aeabi_i2d
 2015              	.LVL210:
 2016 0384 0022     		movs	r2, #0
 2017 0386 BB4B     		ldr	r3, .L163
 2018 0388 FFF7FEFF 		bl	__aeabi_dmul
 2019              	.LVL211:
 2020 038c FFF7FEFF 		bl	__aeabi_d2uiz
 2021              	.LVL212:
 2022 0390 A886     		strh	r0, [r5, #52]	@ movhi
 656:Core/Src/bms.c ****         bms->cellVolt[27] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2023              		.loc 1 656 0
 2024 0392 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2025 0394 1B02     		lsls	r3, r3, #8
 2026 0396 03F47063 		and	r3, r3, #3840
 2027 039a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2028 039c 1844     		add	r0, r0, r3
 2029 039e FFF7FEFF 		bl	__aeabi_i2d
 2030              	.LVL213:
 2031 03a2 0022     		movs	r2, #0
 2032 03a4 B34B     		ldr	r3, .L163
 2033 03a6 FFF7FEFF 		bl	__aeabi_dmul
 2034              	.LVL214:
 2035 03aa FFF7FEFF 		bl	__aeabi_d2uiz
 2036              	.LVL215:
 2037 03ae E886     		strh	r0, [r5, #54]	@ movhi
 657:Core/Src/bms.c ****         bms->cellVolt[28] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2038              		.loc 1 657 0
 2039 03b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2040 03b2 1B02     		lsls	r3, r3, #8
 2041 03b4 03F47063 		and	r3, r3, #3840
 2042 03b8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2043 03ba 1844     		add	r0, r0, r3
 2044 03bc FFF7FEFF 		bl	__aeabi_i2d
 2045              	.LVL216:
 2046 03c0 0022     		movs	r2, #0
 2047 03c2 AC4B     		ldr	r3, .L163
 2048 03c4 FFF7FEFF 		bl	__aeabi_dmul
 2049              	.LVL217:
 2050 03c8 FFF7FEFF 		bl	__aeabi_d2uiz
 2051              	.LVL218:
 2052 03cc 2887     		strh	r0, [r5, #56]	@ movhi
 658:Core/Src/bms.c ****         bms->cellVolt[29] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2053              		.loc 1 658 0
 2054 03ce A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2055 03d0 1B02     		lsls	r3, r3, #8
 2056 03d2 03F47063 		and	r3, r3, #3840
 2057 03d6 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2058 03d8 1844     		add	r0, r0, r3
 2059 03da FFF7FEFF 		bl	__aeabi_i2d
 2060              	.LVL219:
 2061 03de 0022     		movs	r2, #0
 2062 03e0 A44B     		ldr	r3, .L163
ARM GAS  /tmp/cctu2O1I.s 			page 51


 2063 03e2 FFF7FEFF 		bl	__aeabi_dmul
 2064              	.LVL220:
 2065 03e6 FFF7FEFF 		bl	__aeabi_d2uiz
 2066              	.LVL221:
 2067 03ea 6887     		strh	r0, [r5, #58]	@ movhi
 659:Core/Src/bms.c ****         break;
 2068              		.loc 1 659 0
 2069 03ec 38BD     		pop	{r3, r4, r5, pc}
 2070              	.LVL222:
 2071              	.L138:
 660:Core/Src/bms.c **** 
 661:Core/Src/bms.c ****     case 0x464:
 662:Core/Src/bms.c ****         bms->cellVolt[30] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); // Begin module 2
 2072              		.loc 1 662 0
 2073 03ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2074 03f0 1B02     		lsls	r3, r3, #8
 2075 03f2 03F47063 		and	r3, r3, #3840
 2076 03f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2077              	.LVL223:
 2078 03f8 1844     		add	r0, r0, r3
 2079 03fa FFF7FEFF 		bl	__aeabi_i2d
 2080              	.LVL224:
 2081 03fe 0022     		movs	r2, #0
 2082 0400 9C4B     		ldr	r3, .L163
 2083 0402 FFF7FEFF 		bl	__aeabi_dmul
 2084              	.LVL225:
 2085 0406 FFF7FEFF 		bl	__aeabi_d2uiz
 2086              	.LVL226:
 2087 040a A887     		strh	r0, [r5, #60]	@ movhi
 663:Core/Src/bms.c ****         bms->cellVolt[31] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2088              		.loc 1 663 0
 2089 040c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2090 040e 1B02     		lsls	r3, r3, #8
 2091 0410 03F47063 		and	r3, r3, #3840
 2092 0414 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2093 0416 1844     		add	r0, r0, r3
 2094 0418 FFF7FEFF 		bl	__aeabi_i2d
 2095              	.LVL227:
 2096 041c 0022     		movs	r2, #0
 2097 041e 954B     		ldr	r3, .L163
 2098 0420 FFF7FEFF 		bl	__aeabi_dmul
 2099              	.LVL228:
 2100 0424 FFF7FEFF 		bl	__aeabi_d2uiz
 2101              	.LVL229:
 2102 0428 E887     		strh	r0, [r5, #62]	@ movhi
 664:Core/Src/bms.c ****         bms->cellVolt[32] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2103              		.loc 1 664 0
 2104 042a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2105 042c 1B02     		lsls	r3, r3, #8
 2106 042e 03F47063 		and	r3, r3, #3840
 2107 0432 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2108 0434 1844     		add	r0, r0, r3
 2109 0436 FFF7FEFF 		bl	__aeabi_i2d
 2110              	.LVL230:
 2111 043a 0022     		movs	r2, #0
 2112 043c 8D4B     		ldr	r3, .L163
 2113 043e FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/cctu2O1I.s 			page 52


 2114              	.LVL231:
 2115 0442 FFF7FEFF 		bl	__aeabi_d2uiz
 2116              	.LVL232:
 2117 0446 A5F84000 		strh	r0, [r5, #64]	@ movhi
 665:Core/Src/bms.c ****         bms->cellVolt[33] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2118              		.loc 1 665 0
 2119 044a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2120 044c 1B02     		lsls	r3, r3, #8
 2121 044e 03F47063 		and	r3, r3, #3840
 2122 0452 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2123 0454 1844     		add	r0, r0, r3
 2124 0456 FFF7FEFF 		bl	__aeabi_i2d
 2125              	.LVL233:
 2126 045a 0022     		movs	r2, #0
 2127 045c 854B     		ldr	r3, .L163
 2128 045e FFF7FEFF 		bl	__aeabi_dmul
 2129              	.LVL234:
 2130 0462 FFF7FEFF 		bl	__aeabi_d2uiz
 2131              	.LVL235:
 2132 0466 A5F84200 		strh	r0, [r5, #66]	@ movhi
 666:Core/Src/bms.c ****         break;
 2133              		.loc 1 666 0
 2134 046a 38BD     		pop	{r3, r4, r5, pc}
 2135              	.LVL236:
 2136              	.L151:
 667:Core/Src/bms.c **** 
 668:Core/Src/bms.c ****     case 0x474:
 669:Core/Src/bms.c ****         bms->cellVolt[34] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2137              		.loc 1 669 0
 2138 046c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2139 046e 1B02     		lsls	r3, r3, #8
 2140 0470 03F47063 		and	r3, r3, #3840
 2141 0474 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2142              	.LVL237:
 2143 0476 1844     		add	r0, r0, r3
 2144 0478 FFF7FEFF 		bl	__aeabi_i2d
 2145              	.LVL238:
 2146 047c 0022     		movs	r2, #0
 2147 047e 7D4B     		ldr	r3, .L163
 2148 0480 FFF7FEFF 		bl	__aeabi_dmul
 2149              	.LVL239:
 2150 0484 FFF7FEFF 		bl	__aeabi_d2uiz
 2151              	.LVL240:
 2152 0488 A5F84400 		strh	r0, [r5, #68]	@ movhi
 670:Core/Src/bms.c ****         bms->cellVolt[35] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2153              		.loc 1 670 0
 2154 048c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2155 048e 1B02     		lsls	r3, r3, #8
 2156 0490 03F47063 		and	r3, r3, #3840
 2157 0494 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2158 0496 1844     		add	r0, r0, r3
 2159 0498 FFF7FEFF 		bl	__aeabi_i2d
 2160              	.LVL241:
 2161 049c 0022     		movs	r2, #0
 2162 049e 754B     		ldr	r3, .L163
 2163 04a0 FFF7FEFF 		bl	__aeabi_dmul
 2164              	.LVL242:
ARM GAS  /tmp/cctu2O1I.s 			page 53


 2165 04a4 FFF7FEFF 		bl	__aeabi_d2uiz
 2166              	.LVL243:
 2167 04a8 A5F84600 		strh	r0, [r5, #70]	@ movhi
 671:Core/Src/bms.c ****         bms->cellVolt[36] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2168              		.loc 1 671 0
 2169 04ac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2170 04ae 1B02     		lsls	r3, r3, #8
 2171 04b0 03F47063 		and	r3, r3, #3840
 2172 04b4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2173 04b6 1844     		add	r0, r0, r3
 2174 04b8 FFF7FEFF 		bl	__aeabi_i2d
 2175              	.LVL244:
 2176 04bc 0022     		movs	r2, #0
 2177 04be 6D4B     		ldr	r3, .L163
 2178 04c0 FFF7FEFF 		bl	__aeabi_dmul
 2179              	.LVL245:
 2180 04c4 FFF7FEFF 		bl	__aeabi_d2uiz
 2181              	.LVL246:
 2182 04c8 A5F84800 		strh	r0, [r5, #72]	@ movhi
 672:Core/Src/bms.c ****         bms->cellVolt[37] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2183              		.loc 1 672 0
 2184 04cc A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2185 04ce 1B02     		lsls	r3, r3, #8
 2186 04d0 03F47063 		and	r3, r3, #3840
 2187 04d4 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2188 04d6 1844     		add	r0, r0, r3
 2189 04d8 FFF7FEFF 		bl	__aeabi_i2d
 2190              	.LVL247:
 2191 04dc 0022     		movs	r2, #0
 2192 04de 654B     		ldr	r3, .L163
 2193 04e0 FFF7FEFF 		bl	__aeabi_dmul
 2194              	.LVL248:
 2195 04e4 FFF7FEFF 		bl	__aeabi_d2uiz
 2196              	.LVL249:
 2197 04e8 A5F84A00 		strh	r0, [r5, #74]	@ movhi
 673:Core/Src/bms.c ****         break;
 2198              		.loc 1 673 0
 2199 04ec 38BD     		pop	{r3, r4, r5, pc}
 2200              	.LVL250:
 2201              	.L139:
 674:Core/Src/bms.c **** 
 675:Core/Src/bms.c ****     case 0x465:
 676:Core/Src/bms.c ****         bms->cellVolt[38] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2202              		.loc 1 676 0
 2203 04ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2204 04f0 1B02     		lsls	r3, r3, #8
 2205 04f2 03F47063 		and	r3, r3, #3840
 2206 04f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2207              	.LVL251:
 2208 04f8 1844     		add	r0, r0, r3
 2209 04fa FFF7FEFF 		bl	__aeabi_i2d
 2210              	.LVL252:
 2211 04fe 0022     		movs	r2, #0
 2212 0500 5C4B     		ldr	r3, .L163
 2213 0502 FFF7FEFF 		bl	__aeabi_dmul
 2214              	.LVL253:
 2215 0506 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/cctu2O1I.s 			page 54


 2216              	.LVL254:
 2217 050a A5F84C00 		strh	r0, [r5, #76]	@ movhi
 677:Core/Src/bms.c ****         bms->cellVolt[39] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2218              		.loc 1 677 0
 2219 050e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2220 0510 1B02     		lsls	r3, r3, #8
 2221 0512 03F47063 		and	r3, r3, #3840
 2222 0516 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2223 0518 1844     		add	r0, r0, r3
 2224 051a FFF7FEFF 		bl	__aeabi_i2d
 2225              	.LVL255:
 2226 051e 0022     		movs	r2, #0
 2227 0520 544B     		ldr	r3, .L163
 2228 0522 FFF7FEFF 		bl	__aeabi_dmul
 2229              	.LVL256:
 2230 0526 FFF7FEFF 		bl	__aeabi_d2uiz
 2231              	.LVL257:
 2232 052a A5F84E00 		strh	r0, [r5, #78]	@ movhi
 678:Core/Src/bms.c ****         bms->cellVolt[40] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2233              		.loc 1 678 0
 2234 052e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2235 0530 1B02     		lsls	r3, r3, #8
 2236 0532 03F47063 		and	r3, r3, #3840
 2237 0536 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2238 0538 1844     		add	r0, r0, r3
 2239 053a FFF7FEFF 		bl	__aeabi_i2d
 2240              	.LVL258:
 2241 053e 0022     		movs	r2, #0
 2242 0540 4C4B     		ldr	r3, .L163
 2243 0542 FFF7FEFF 		bl	__aeabi_dmul
 2244              	.LVL259:
 2245 0546 FFF7FEFF 		bl	__aeabi_d2uiz
 2246              	.LVL260:
 2247 054a A5F85000 		strh	r0, [r5, #80]	@ movhi
 679:Core/Src/bms.c ****         bms->cellVolt[41] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2248              		.loc 1 679 0
 2249 054e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2250 0550 1B02     		lsls	r3, r3, #8
 2251 0552 03F47063 		and	r3, r3, #3840
 2252 0556 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2253 0558 1844     		add	r0, r0, r3
 2254 055a FFF7FEFF 		bl	__aeabi_i2d
 2255              	.LVL261:
 2256 055e 0022     		movs	r2, #0
 2257 0560 444B     		ldr	r3, .L163
 2258 0562 FFF7FEFF 		bl	__aeabi_dmul
 2259              	.LVL262:
 2260 0566 FFF7FEFF 		bl	__aeabi_d2uiz
 2261              	.LVL263:
 2262 056a A5F85200 		strh	r0, [r5, #82]	@ movhi
 680:Core/Src/bms.c ****         break;
 2263              		.loc 1 680 0
 2264 056e 38BD     		pop	{r3, r4, r5, pc}
 2265              	.LVL264:
 2266              	.L152:
 681:Core/Src/bms.c **** 
 682:Core/Src/bms.c ****     case 0x475:
ARM GAS  /tmp/cctu2O1I.s 			page 55


 683:Core/Src/bms.c ****         bms->cellVolt[42] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2267              		.loc 1 683 0
 2268 0570 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2269 0572 1B02     		lsls	r3, r3, #8
 2270 0574 03F47063 		and	r3, r3, #3840
 2271 0578 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2272              	.LVL265:
 2273 057a 1844     		add	r0, r0, r3
 2274 057c FFF7FEFF 		bl	__aeabi_i2d
 2275              	.LVL266:
 2276 0580 0022     		movs	r2, #0
 2277 0582 3C4B     		ldr	r3, .L163
 2278 0584 FFF7FEFF 		bl	__aeabi_dmul
 2279              	.LVL267:
 2280 0588 FFF7FEFF 		bl	__aeabi_d2uiz
 2281              	.LVL268:
 2282 058c A5F85400 		strh	r0, [r5, #84]	@ movhi
 684:Core/Src/bms.c ****         bms->cellVolt[43] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2283              		.loc 1 684 0
 2284 0590 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2285 0592 1B02     		lsls	r3, r3, #8
 2286 0594 03F47063 		and	r3, r3, #3840
 2287 0598 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2288 059a 1844     		add	r0, r0, r3
 2289 059c FFF7FEFF 		bl	__aeabi_i2d
 2290              	.LVL269:
 2291 05a0 0022     		movs	r2, #0
 2292 05a2 344B     		ldr	r3, .L163
 2293 05a4 FFF7FEFF 		bl	__aeabi_dmul
 2294              	.LVL270:
 2295 05a8 FFF7FEFF 		bl	__aeabi_d2uiz
 2296              	.LVL271:
 2297 05ac A5F85600 		strh	r0, [r5, #86]	@ movhi
 685:Core/Src/bms.c ****         bms->cellVolt[44] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2298              		.loc 1 685 0
 2299 05b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2300 05b2 1B02     		lsls	r3, r3, #8
 2301 05b4 03F47063 		and	r3, r3, #3840
 2302 05b8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2303 05ba 1844     		add	r0, r0, r3
 2304 05bc FFF7FEFF 		bl	__aeabi_i2d
 2305              	.LVL272:
 2306 05c0 0022     		movs	r2, #0
 2307 05c2 2C4B     		ldr	r3, .L163
 2308 05c4 FFF7FEFF 		bl	__aeabi_dmul
 2309              	.LVL273:
 2310 05c8 FFF7FEFF 		bl	__aeabi_d2uiz
 2311              	.LVL274:
 2312 05cc A5F85800 		strh	r0, [r5, #88]	@ movhi
 686:Core/Src/bms.c ****         bms->cellVolt[45] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2313              		.loc 1 686 0
 2314 05d0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2315 05d2 1B02     		lsls	r3, r3, #8
 2316 05d4 03F47063 		and	r3, r3, #3840
 2317 05d8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2318 05da 1844     		add	r0, r0, r3
 2319 05dc FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cctu2O1I.s 			page 56


 2320              	.LVL275:
 2321 05e0 0022     		movs	r2, #0
 2322 05e2 244B     		ldr	r3, .L163
 2323 05e4 FFF7FEFF 		bl	__aeabi_dmul
 2324              	.LVL276:
 2325 05e8 FFF7FEFF 		bl	__aeabi_d2uiz
 2326              	.LVL277:
 2327 05ec A5F85A00 		strh	r0, [r5, #90]	@ movhi
 687:Core/Src/bms.c ****         break;
 2328              		.loc 1 687 0
 2329 05f0 38BD     		pop	{r3, r4, r5, pc}
 2330              	.LVL278:
 2331              	.L140:
 688:Core/Src/bms.c **** 
 689:Core/Src/bms.c ****     case 0x466:
 690:Core/Src/bms.c ****         bms->cellVolt[46] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2332              		.loc 1 690 0
 2333 05f2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2334 05f4 1B02     		lsls	r3, r3, #8
 2335 05f6 03F47063 		and	r3, r3, #3840
 2336 05fa 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2337              	.LVL279:
 2338 05fc 1844     		add	r0, r0, r3
 2339 05fe FFF7FEFF 		bl	__aeabi_i2d
 2340              	.LVL280:
 2341 0602 0022     		movs	r2, #0
 2342 0604 1B4B     		ldr	r3, .L163
 2343 0606 FFF7FEFF 		bl	__aeabi_dmul
 2344              	.LVL281:
 2345 060a FFF7FEFF 		bl	__aeabi_d2uiz
 2346              	.LVL282:
 2347 060e A5F85C00 		strh	r0, [r5, #92]	@ movhi
 691:Core/Src/bms.c ****         bms->cellVolt[47] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2348              		.loc 1 691 0
 2349 0612 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2350 0614 1B02     		lsls	r3, r3, #8
 2351 0616 03F47063 		and	r3, r3, #3840
 2352 061a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2353 061c 1844     		add	r0, r0, r3
 2354 061e FFF7FEFF 		bl	__aeabi_i2d
 2355              	.LVL283:
 2356 0622 0022     		movs	r2, #0
 2357 0624 134B     		ldr	r3, .L163
 2358 0626 FFF7FEFF 		bl	__aeabi_dmul
 2359              	.LVL284:
 2360 062a FFF7FEFF 		bl	__aeabi_d2uiz
 2361              	.LVL285:
 2362 062e A5F85E00 		strh	r0, [r5, #94]	@ movhi
 692:Core/Src/bms.c ****         bms->cellVolt[48] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2363              		.loc 1 692 0
 2364 0632 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2365 0634 1B02     		lsls	r3, r3, #8
 2366 0636 03F47063 		and	r3, r3, #3840
 2367 063a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2368 063c 1844     		add	r0, r0, r3
 2369 063e FFF7FEFF 		bl	__aeabi_i2d
 2370              	.LVL286:
ARM GAS  /tmp/cctu2O1I.s 			page 57


 2371 0642 0022     		movs	r2, #0
 2372 0644 0B4B     		ldr	r3, .L163
 2373 0646 FFF7FEFF 		bl	__aeabi_dmul
 2374              	.LVL287:
 2375 064a FFF7FEFF 		bl	__aeabi_d2uiz
 2376              	.LVL288:
 2377 064e A5F86000 		strh	r0, [r5, #96]	@ movhi
 693:Core/Src/bms.c ****         bms->cellVolt[49] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2378              		.loc 1 693 0
 2379 0652 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2380 0654 1B02     		lsls	r3, r3, #8
 2381 0656 03F47063 		and	r3, r3, #3840
 2382 065a E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2383 065c 1844     		add	r0, r0, r3
 2384 065e FFF7FEFF 		bl	__aeabi_i2d
 2385              	.LVL289:
 2386 0662 0022     		movs	r2, #0
 2387 0664 034B     		ldr	r3, .L163
 2388 0666 FFF7FEFF 		bl	__aeabi_dmul
 2389              	.LVL290:
 2390 066a FFF7FEFF 		bl	__aeabi_d2uiz
 2391              	.LVL291:
 2392 066e A5F86200 		strh	r0, [r5, #98]	@ movhi
 694:Core/Src/bms.c ****         break;
 2393              		.loc 1 694 0
 2394 0672 38BD     		pop	{r3, r4, r5, pc}
 2395              	.LVL292:
 2396              	.L164:
 2397              		.align	2
 2398              	.L163:
 2399 0674 0000F43F 		.word	1072955392
 2400              	.LVL293:
 2401              	.L153:
 695:Core/Src/bms.c **** 
 696:Core/Src/bms.c ****     case 0x476:
 697:Core/Src/bms.c ****         bms->cellVolt[50] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2402              		.loc 1 697 0
 2403 0678 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2404 067a 1B02     		lsls	r3, r3, #8
 2405 067c 03F47063 		and	r3, r3, #3840
 2406 0680 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2407              	.LVL294:
 2408 0682 1844     		add	r0, r0, r3
 2409 0684 FFF7FEFF 		bl	__aeabi_i2d
 2410              	.LVL295:
 2411 0688 0022     		movs	r2, #0
 2412 068a BE4B     		ldr	r3, .L165
 2413 068c FFF7FEFF 		bl	__aeabi_dmul
 2414              	.LVL296:
 2415 0690 FFF7FEFF 		bl	__aeabi_d2uiz
 2416              	.LVL297:
 2417 0694 A5F86400 		strh	r0, [r5, #100]	@ movhi
 698:Core/Src/bms.c ****         bms->cellVolt[51] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2418              		.loc 1 698 0
 2419 0698 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2420 069a 1B02     		lsls	r3, r3, #8
 2421 069c 03F47063 		and	r3, r3, #3840
ARM GAS  /tmp/cctu2O1I.s 			page 58


 2422 06a0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2423 06a2 1844     		add	r0, r0, r3
 2424 06a4 FFF7FEFF 		bl	__aeabi_i2d
 2425              	.LVL298:
 2426 06a8 0022     		movs	r2, #0
 2427 06aa B64B     		ldr	r3, .L165
 2428 06ac FFF7FEFF 		bl	__aeabi_dmul
 2429              	.LVL299:
 2430 06b0 FFF7FEFF 		bl	__aeabi_d2uiz
 2431              	.LVL300:
 2432 06b4 A5F86600 		strh	r0, [r5, #102]	@ movhi
 699:Core/Src/bms.c ****         bms->cellVolt[52] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2433              		.loc 1 699 0
 2434 06b8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2435 06ba 1B02     		lsls	r3, r3, #8
 2436 06bc 03F47063 		and	r3, r3, #3840
 2437 06c0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2438 06c2 1844     		add	r0, r0, r3
 2439 06c4 FFF7FEFF 		bl	__aeabi_i2d
 2440              	.LVL301:
 2441 06c8 0022     		movs	r2, #0
 2442 06ca AE4B     		ldr	r3, .L165
 2443 06cc FFF7FEFF 		bl	__aeabi_dmul
 2444              	.LVL302:
 2445 06d0 FFF7FEFF 		bl	__aeabi_d2uiz
 2446              	.LVL303:
 2447 06d4 A5F86800 		strh	r0, [r5, #104]	@ movhi
 700:Core/Src/bms.c ****         bms->cellVolt[53] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2448              		.loc 1 700 0
 2449 06d8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2450 06da 1B02     		lsls	r3, r3, #8
 2451 06dc 03F47063 		and	r3, r3, #3840
 2452 06e0 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2453 06e2 1844     		add	r0, r0, r3
 2454 06e4 FFF7FEFF 		bl	__aeabi_i2d
 2455              	.LVL304:
 2456 06e8 0022     		movs	r2, #0
 2457 06ea A64B     		ldr	r3, .L165
 2458 06ec FFF7FEFF 		bl	__aeabi_dmul
 2459              	.LVL305:
 2460 06f0 FFF7FEFF 		bl	__aeabi_d2uiz
 2461              	.LVL306:
 2462 06f4 A5F86A00 		strh	r0, [r5, #106]	@ movhi
 701:Core/Src/bms.c ****         break;
 2463              		.loc 1 701 0
 2464 06f8 38BD     		pop	{r3, r4, r5, pc}
 2465              	.LVL307:
 2466              	.L141:
 702:Core/Src/bms.c **** 
 703:Core/Src/bms.c ****     case 0x468:
 704:Core/Src/bms.c ****         bms->cellVolt[54] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 3
 2467              		.loc 1 704 0
 2468 06fa 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2469 06fc 1B02     		lsls	r3, r3, #8
 2470 06fe 03F47063 		and	r3, r3, #3840
 2471 0702 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2472              	.LVL308:
ARM GAS  /tmp/cctu2O1I.s 			page 59


 2473 0704 1844     		add	r0, r0, r3
 2474 0706 FFF7FEFF 		bl	__aeabi_i2d
 2475              	.LVL309:
 2476 070a 0022     		movs	r2, #0
 2477 070c 9D4B     		ldr	r3, .L165
 2478 070e FFF7FEFF 		bl	__aeabi_dmul
 2479              	.LVL310:
 2480 0712 FFF7FEFF 		bl	__aeabi_d2uiz
 2481              	.LVL311:
 2482 0716 A5F86C00 		strh	r0, [r5, #108]	@ movhi
 705:Core/Src/bms.c ****         bms->cellVolt[55] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2483              		.loc 1 705 0
 2484 071a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2485 071c 1B02     		lsls	r3, r3, #8
 2486 071e 03F47063 		and	r3, r3, #3840
 2487 0722 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2488 0724 1844     		add	r0, r0, r3
 2489 0726 FFF7FEFF 		bl	__aeabi_i2d
 2490              	.LVL312:
 2491 072a 0022     		movs	r2, #0
 2492 072c 954B     		ldr	r3, .L165
 2493 072e FFF7FEFF 		bl	__aeabi_dmul
 2494              	.LVL313:
 2495 0732 FFF7FEFF 		bl	__aeabi_d2uiz
 2496              	.LVL314:
 2497 0736 A5F86E00 		strh	r0, [r5, #110]	@ movhi
 706:Core/Src/bms.c ****         bms->cellVolt[56] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2498              		.loc 1 706 0
 2499 073a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2500 073c 1B02     		lsls	r3, r3, #8
 2501 073e 03F47063 		and	r3, r3, #3840
 2502 0742 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2503 0744 1844     		add	r0, r0, r3
 2504 0746 FFF7FEFF 		bl	__aeabi_i2d
 2505              	.LVL315:
 2506 074a 0022     		movs	r2, #0
 2507 074c 8D4B     		ldr	r3, .L165
 2508 074e FFF7FEFF 		bl	__aeabi_dmul
 2509              	.LVL316:
 2510 0752 FFF7FEFF 		bl	__aeabi_d2uiz
 2511              	.LVL317:
 2512 0756 A5F87000 		strh	r0, [r5, #112]	@ movhi
 707:Core/Src/bms.c ****         bms->cellVolt[57] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2513              		.loc 1 707 0
 2514 075a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2515 075c 1B02     		lsls	r3, r3, #8
 2516 075e 03F47063 		and	r3, r3, #3840
 2517 0762 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2518 0764 1844     		add	r0, r0, r3
 2519 0766 FFF7FEFF 		bl	__aeabi_i2d
 2520              	.LVL318:
 2521 076a 0022     		movs	r2, #0
 2522 076c 854B     		ldr	r3, .L165
 2523 076e FFF7FEFF 		bl	__aeabi_dmul
 2524              	.LVL319:
 2525 0772 FFF7FEFF 		bl	__aeabi_d2uiz
 2526              	.LVL320:
ARM GAS  /tmp/cctu2O1I.s 			page 60


 2527 0776 A5F87200 		strh	r0, [r5, #114]	@ movhi
 708:Core/Src/bms.c ****         break;
 2528              		.loc 1 708 0
 2529 077a 38BD     		pop	{r3, r4, r5, pc}
 2530              	.LVL321:
 2531              	.L154:
 709:Core/Src/bms.c **** 
 710:Core/Src/bms.c ****     case 0x478:
 711:Core/Src/bms.c ****         bms->cellVolt[58] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2532              		.loc 1 711 0
 2533 077c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2534 077e 1B02     		lsls	r3, r3, #8
 2535 0780 03F47063 		and	r3, r3, #3840
 2536 0784 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2537              	.LVL322:
 2538 0786 1844     		add	r0, r0, r3
 2539 0788 FFF7FEFF 		bl	__aeabi_i2d
 2540              	.LVL323:
 2541 078c 0022     		movs	r2, #0
 2542 078e 7D4B     		ldr	r3, .L165
 2543 0790 FFF7FEFF 		bl	__aeabi_dmul
 2544              	.LVL324:
 2545 0794 FFF7FEFF 		bl	__aeabi_d2uiz
 2546              	.LVL325:
 2547 0798 A5F87400 		strh	r0, [r5, #116]	@ movhi
 712:Core/Src/bms.c ****         bms->cellVolt[59] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2548              		.loc 1 712 0
 2549 079c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2550 079e 1B02     		lsls	r3, r3, #8
 2551 07a0 03F47063 		and	r3, r3, #3840
 2552 07a4 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2553 07a6 1844     		add	r0, r0, r3
 2554 07a8 FFF7FEFF 		bl	__aeabi_i2d
 2555              	.LVL326:
 2556 07ac 0022     		movs	r2, #0
 2557 07ae 754B     		ldr	r3, .L165
 2558 07b0 FFF7FEFF 		bl	__aeabi_dmul
 2559              	.LVL327:
 2560 07b4 FFF7FEFF 		bl	__aeabi_d2uiz
 2561              	.LVL328:
 2562 07b8 A5F87600 		strh	r0, [r5, #118]	@ movhi
 713:Core/Src/bms.c ****         bms->cellVolt[60] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2563              		.loc 1 713 0
 2564 07bc 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2565 07be 1B02     		lsls	r3, r3, #8
 2566 07c0 03F47063 		and	r3, r3, #3840
 2567 07c4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2568 07c6 1844     		add	r0, r0, r3
 2569 07c8 FFF7FEFF 		bl	__aeabi_i2d
 2570              	.LVL329:
 2571 07cc 0022     		movs	r2, #0
 2572 07ce 6D4B     		ldr	r3, .L165
 2573 07d0 FFF7FEFF 		bl	__aeabi_dmul
 2574              	.LVL330:
 2575 07d4 FFF7FEFF 		bl	__aeabi_d2uiz
 2576              	.LVL331:
 2577 07d8 A5F87800 		strh	r0, [r5, #120]	@ movhi
ARM GAS  /tmp/cctu2O1I.s 			page 61


 714:Core/Src/bms.c ****         bms->cellVolt[61] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2578              		.loc 1 714 0
 2579 07dc A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2580 07de 1B02     		lsls	r3, r3, #8
 2581 07e0 03F47063 		and	r3, r3, #3840
 2582 07e4 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2583 07e6 1844     		add	r0, r0, r3
 2584 07e8 FFF7FEFF 		bl	__aeabi_i2d
 2585              	.LVL332:
 2586 07ec 0022     		movs	r2, #0
 2587 07ee 654B     		ldr	r3, .L165
 2588 07f0 FFF7FEFF 		bl	__aeabi_dmul
 2589              	.LVL333:
 2590 07f4 FFF7FEFF 		bl	__aeabi_d2uiz
 2591              	.LVL334:
 2592 07f8 A5F87A00 		strh	r0, [r5, #122]	@ movhi
 715:Core/Src/bms.c ****         break;
 2593              		.loc 1 715 0
 2594 07fc 38BD     		pop	{r3, r4, r5, pc}
 2595              	.LVL335:
 2596              	.L142:
 716:Core/Src/bms.c **** 
 717:Core/Src/bms.c ****     case 0x469:
 718:Core/Src/bms.c ****         bms->cellVolt[62] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2597              		.loc 1 718 0
 2598 07fe 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2599 0800 1B02     		lsls	r3, r3, #8
 2600 0802 03F47063 		and	r3, r3, #3840
 2601 0806 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2602              	.LVL336:
 2603 0808 1844     		add	r0, r0, r3
 2604 080a FFF7FEFF 		bl	__aeabi_i2d
 2605              	.LVL337:
 2606 080e 0022     		movs	r2, #0
 2607 0810 5C4B     		ldr	r3, .L165
 2608 0812 FFF7FEFF 		bl	__aeabi_dmul
 2609              	.LVL338:
 2610 0816 FFF7FEFF 		bl	__aeabi_d2uiz
 2611              	.LVL339:
 2612 081a A5F87C00 		strh	r0, [r5, #124]	@ movhi
 719:Core/Src/bms.c ****         bms->cellVolt[63] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2613              		.loc 1 719 0
 2614 081e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2615 0820 1B02     		lsls	r3, r3, #8
 2616 0822 03F47063 		and	r3, r3, #3840
 2617 0826 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2618 0828 1844     		add	r0, r0, r3
 2619 082a FFF7FEFF 		bl	__aeabi_i2d
 2620              	.LVL340:
 2621 082e 0022     		movs	r2, #0
 2622 0830 544B     		ldr	r3, .L165
 2623 0832 FFF7FEFF 		bl	__aeabi_dmul
 2624              	.LVL341:
 2625 0836 FFF7FEFF 		bl	__aeabi_d2uiz
 2626              	.LVL342:
 2627 083a A5F87E00 		strh	r0, [r5, #126]	@ movhi
 720:Core/Src/bms.c ****         bms->cellVolt[64] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
ARM GAS  /tmp/cctu2O1I.s 			page 62


 2628              		.loc 1 720 0
 2629 083e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2630 0840 1B02     		lsls	r3, r3, #8
 2631 0842 03F47063 		and	r3, r3, #3840
 2632 0846 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2633 0848 1844     		add	r0, r0, r3
 2634 084a FFF7FEFF 		bl	__aeabi_i2d
 2635              	.LVL343:
 2636 084e 0022     		movs	r2, #0
 2637 0850 4C4B     		ldr	r3, .L165
 2638 0852 FFF7FEFF 		bl	__aeabi_dmul
 2639              	.LVL344:
 2640 0856 FFF7FEFF 		bl	__aeabi_d2uiz
 2641              	.LVL345:
 2642 085a A5F88000 		strh	r0, [r5, #128]	@ movhi
 721:Core/Src/bms.c ****         bms->cellVolt[65] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2643              		.loc 1 721 0
 2644 085e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2645 0860 1B02     		lsls	r3, r3, #8
 2646 0862 03F47063 		and	r3, r3, #3840
 2647 0866 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2648 0868 1844     		add	r0, r0, r3
 2649 086a FFF7FEFF 		bl	__aeabi_i2d
 2650              	.LVL346:
 2651 086e 0022     		movs	r2, #0
 2652 0870 444B     		ldr	r3, .L165
 2653 0872 FFF7FEFF 		bl	__aeabi_dmul
 2654              	.LVL347:
 2655 0876 FFF7FEFF 		bl	__aeabi_d2uiz
 2656              	.LVL348:
 2657 087a A5F88200 		strh	r0, [r5, #130]	@ movhi
 722:Core/Src/bms.c ****         break;
 2658              		.loc 1 722 0
 2659 087e 38BD     		pop	{r3, r4, r5, pc}
 2660              	.LVL349:
 2661              	.L155:
 723:Core/Src/bms.c **** 
 724:Core/Src/bms.c ****     case 0x479:
 725:Core/Src/bms.c ****         bms->cellVolt[66] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2662              		.loc 1 725 0
 2663 0880 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2664 0882 1B02     		lsls	r3, r3, #8
 2665 0884 03F47063 		and	r3, r3, #3840
 2666 0888 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2667              	.LVL350:
 2668 088a 1844     		add	r0, r0, r3
 2669 088c FFF7FEFF 		bl	__aeabi_i2d
 2670              	.LVL351:
 2671 0890 0022     		movs	r2, #0
 2672 0892 3C4B     		ldr	r3, .L165
 2673 0894 FFF7FEFF 		bl	__aeabi_dmul
 2674              	.LVL352:
 2675 0898 FFF7FEFF 		bl	__aeabi_d2uiz
 2676              	.LVL353:
 2677 089c A5F88400 		strh	r0, [r5, #132]	@ movhi
 726:Core/Src/bms.c ****         bms->cellVolt[67] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2678              		.loc 1 726 0
ARM GAS  /tmp/cctu2O1I.s 			page 63


 2679 08a0 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2680 08a2 1B02     		lsls	r3, r3, #8
 2681 08a4 03F47063 		and	r3, r3, #3840
 2682 08a8 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2683 08aa 1844     		add	r0, r0, r3
 2684 08ac FFF7FEFF 		bl	__aeabi_i2d
 2685              	.LVL354:
 2686 08b0 0022     		movs	r2, #0
 2687 08b2 344B     		ldr	r3, .L165
 2688 08b4 FFF7FEFF 		bl	__aeabi_dmul
 2689              	.LVL355:
 2690 08b8 FFF7FEFF 		bl	__aeabi_d2uiz
 2691              	.LVL356:
 2692 08bc A5F88600 		strh	r0, [r5, #134]	@ movhi
 727:Core/Src/bms.c ****         bms->cellVolt[68] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2693              		.loc 1 727 0
 2694 08c0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2695 08c2 1B02     		lsls	r3, r3, #8
 2696 08c4 03F47063 		and	r3, r3, #3840
 2697 08c8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2698 08ca 1844     		add	r0, r0, r3
 2699 08cc FFF7FEFF 		bl	__aeabi_i2d
 2700              	.LVL357:
 2701 08d0 0022     		movs	r2, #0
 2702 08d2 2C4B     		ldr	r3, .L165
 2703 08d4 FFF7FEFF 		bl	__aeabi_dmul
 2704              	.LVL358:
 2705 08d8 FFF7FEFF 		bl	__aeabi_d2uiz
 2706              	.LVL359:
 2707 08dc A5F88800 		strh	r0, [r5, #136]	@ movhi
 728:Core/Src/bms.c ****         bms->cellVolt[69] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2708              		.loc 1 728 0
 2709 08e0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2710 08e2 1B02     		lsls	r3, r3, #8
 2711 08e4 03F47063 		and	r3, r3, #3840
 2712 08e8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2713 08ea 1844     		add	r0, r0, r3
 2714 08ec FFF7FEFF 		bl	__aeabi_i2d
 2715              	.LVL360:
 2716 08f0 0022     		movs	r2, #0
 2717 08f2 244B     		ldr	r3, .L165
 2718 08f4 FFF7FEFF 		bl	__aeabi_dmul
 2719              	.LVL361:
 2720 08f8 FFF7FEFF 		bl	__aeabi_d2uiz
 2721              	.LVL362:
 2722 08fc A5F88A00 		strh	r0, [r5, #138]	@ movhi
 729:Core/Src/bms.c ****         break;
 2723              		.loc 1 729 0
 2724 0900 38BD     		pop	{r3, r4, r5, pc}
 2725              	.LVL363:
 2726              	.L143:
 730:Core/Src/bms.c **** 
 731:Core/Src/bms.c ****     case 0x46A:
 732:Core/Src/bms.c ****         bms->cellVolt[70] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2727              		.loc 1 732 0
 2728 0902 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2729 0904 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp/cctu2O1I.s 			page 64


 2730 0906 03F47063 		and	r3, r3, #3840
 2731 090a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2732              	.LVL364:
 2733 090c 1844     		add	r0, r0, r3
 2734 090e FFF7FEFF 		bl	__aeabi_i2d
 2735              	.LVL365:
 2736 0912 0022     		movs	r2, #0
 2737 0914 1B4B     		ldr	r3, .L165
 2738 0916 FFF7FEFF 		bl	__aeabi_dmul
 2739              	.LVL366:
 2740 091a FFF7FEFF 		bl	__aeabi_d2uiz
 2741              	.LVL367:
 2742 091e A5F88C00 		strh	r0, [r5, #140]	@ movhi
 733:Core/Src/bms.c ****         bms->cellVolt[71] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2743              		.loc 1 733 0
 2744 0922 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2745 0924 1B02     		lsls	r3, r3, #8
 2746 0926 03F47063 		and	r3, r3, #3840
 2747 092a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2748 092c 1844     		add	r0, r0, r3
 2749 092e FFF7FEFF 		bl	__aeabi_i2d
 2750              	.LVL368:
 2751 0932 0022     		movs	r2, #0
 2752 0934 134B     		ldr	r3, .L165
 2753 0936 FFF7FEFF 		bl	__aeabi_dmul
 2754              	.LVL369:
 2755 093a FFF7FEFF 		bl	__aeabi_d2uiz
 2756              	.LVL370:
 2757 093e A5F88E00 		strh	r0, [r5, #142]	@ movhi
 734:Core/Src/bms.c ****         bms->cellVolt[72] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2758              		.loc 1 734 0
 2759 0942 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2760 0944 1B02     		lsls	r3, r3, #8
 2761 0946 03F47063 		and	r3, r3, #3840
 2762 094a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2763 094c 1844     		add	r0, r0, r3
 2764 094e FFF7FEFF 		bl	__aeabi_i2d
 2765              	.LVL371:
 2766 0952 0022     		movs	r2, #0
 2767 0954 0B4B     		ldr	r3, .L165
 2768 0956 FFF7FEFF 		bl	__aeabi_dmul
 2769              	.LVL372:
 2770 095a FFF7FEFF 		bl	__aeabi_d2uiz
 2771              	.LVL373:
 2772 095e A5F89000 		strh	r0, [r5, #144]	@ movhi
 735:Core/Src/bms.c ****         bms->cellVolt[73] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2773              		.loc 1 735 0
 2774 0962 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2775 0964 1B02     		lsls	r3, r3, #8
 2776 0966 03F47063 		and	r3, r3, #3840
 2777 096a E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2778 096c 1844     		add	r0, r0, r3
 2779 096e FFF7FEFF 		bl	__aeabi_i2d
 2780              	.LVL374:
 2781 0972 0022     		movs	r2, #0
 2782 0974 034B     		ldr	r3, .L165
 2783 0976 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/cctu2O1I.s 			page 65


 2784              	.LVL375:
 2785 097a FFF7FEFF 		bl	__aeabi_d2uiz
 2786              	.LVL376:
 2787 097e A5F89200 		strh	r0, [r5, #146]	@ movhi
 736:Core/Src/bms.c ****         break;
 2788              		.loc 1 736 0
 2789 0982 38BD     		pop	{r3, r4, r5, pc}
 2790              	.LVL377:
 2791              	.L166:
 2792              		.align	2
 2793              	.L165:
 2794 0984 0000F43F 		.word	1072955392
 2795              	.LVL378:
 2796              	.L156:
 737:Core/Src/bms.c **** 
 738:Core/Src/bms.c ****     case 0x47A:
 739:Core/Src/bms.c ****         bms->cellVolt[74] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2797              		.loc 1 739 0
 2798 0988 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2799 098a 1B02     		lsls	r3, r3, #8
 2800 098c 03F47063 		and	r3, r3, #3840
 2801 0990 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2802              	.LVL379:
 2803 0992 1844     		add	r0, r0, r3
 2804 0994 FFF7FEFF 		bl	__aeabi_i2d
 2805              	.LVL380:
 2806 0998 0022     		movs	r2, #0
 2807 099a AF4B     		ldr	r3, .L167
 2808 099c FFF7FEFF 		bl	__aeabi_dmul
 2809              	.LVL381:
 2810 09a0 FFF7FEFF 		bl	__aeabi_d2uiz
 2811              	.LVL382:
 2812 09a4 A5F89400 		strh	r0, [r5, #148]	@ movhi
 740:Core/Src/bms.c ****         bms->cellVolt[75] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2813              		.loc 1 740 0
 2814 09a8 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2815 09aa 1B02     		lsls	r3, r3, #8
 2816 09ac 03F47063 		and	r3, r3, #3840
 2817 09b0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2818 09b2 1844     		add	r0, r0, r3
 2819 09b4 FFF7FEFF 		bl	__aeabi_i2d
 2820              	.LVL383:
 2821 09b8 0022     		movs	r2, #0
 2822 09ba A74B     		ldr	r3, .L167
 2823 09bc FFF7FEFF 		bl	__aeabi_dmul
 2824              	.LVL384:
 2825 09c0 FFF7FEFF 		bl	__aeabi_d2uiz
 2826              	.LVL385:
 2827 09c4 A5F89600 		strh	r0, [r5, #150]	@ movhi
 741:Core/Src/bms.c ****         bms->cellVolt[76] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2828              		.loc 1 741 0
 2829 09c8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2830 09ca 1B02     		lsls	r3, r3, #8
 2831 09cc 03F47063 		and	r3, r3, #3840
 2832 09d0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2833 09d2 1844     		add	r0, r0, r3
 2834 09d4 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/cctu2O1I.s 			page 66


 2835              	.LVL386:
 2836 09d8 0022     		movs	r2, #0
 2837 09da 9F4B     		ldr	r3, .L167
 2838 09dc FFF7FEFF 		bl	__aeabi_dmul
 2839              	.LVL387:
 2840 09e0 FFF7FEFF 		bl	__aeabi_d2uiz
 2841              	.LVL388:
 2842 09e4 A5F89800 		strh	r0, [r5, #152]	@ movhi
 742:Core/Src/bms.c ****         bms->cellVolt[77] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2843              		.loc 1 742 0
 2844 09e8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2845 09ea 1B02     		lsls	r3, r3, #8
 2846 09ec 03F47063 		and	r3, r3, #3840
 2847 09f0 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2848 09f2 1844     		add	r0, r0, r3
 2849 09f4 FFF7FEFF 		bl	__aeabi_i2d
 2850              	.LVL389:
 2851 09f8 0022     		movs	r2, #0
 2852 09fa 974B     		ldr	r3, .L167
 2853 09fc FFF7FEFF 		bl	__aeabi_dmul
 2854              	.LVL390:
 2855 0a00 FFF7FEFF 		bl	__aeabi_d2uiz
 2856              	.LVL391:
 2857 0a04 A5F89A00 		strh	r0, [r5, #154]	@ movhi
 743:Core/Src/bms.c ****         break;
 2858              		.loc 1 743 0
 2859 0a08 38BD     		pop	{r3, r4, r5, pc}
 2860              	.LVL392:
 2861              	.L144:
 744:Core/Src/bms.c **** 
 745:Core/Src/bms.c ****     case 0x46C:
 746:Core/Src/bms.c ****         bms->cellVolt[78] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 4
 2862              		.loc 1 746 0
 2863 0a0a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2864 0a0c 1B02     		lsls	r3, r3, #8
 2865 0a0e 03F47063 		and	r3, r3, #3840
 2866 0a12 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2867              	.LVL393:
 2868 0a14 1844     		add	r0, r0, r3
 2869 0a16 FFF7FEFF 		bl	__aeabi_i2d
 2870              	.LVL394:
 2871 0a1a 0022     		movs	r2, #0
 2872 0a1c 8E4B     		ldr	r3, .L167
 2873 0a1e FFF7FEFF 		bl	__aeabi_dmul
 2874              	.LVL395:
 2875 0a22 FFF7FEFF 		bl	__aeabi_d2uiz
 2876              	.LVL396:
 2877 0a26 A5F89C00 		strh	r0, [r5, #156]	@ movhi
 747:Core/Src/bms.c ****         bms->cellVolt[79] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2878              		.loc 1 747 0
 2879 0a2a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2880 0a2c 1B02     		lsls	r3, r3, #8
 2881 0a2e 03F47063 		and	r3, r3, #3840
 2882 0a32 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2883 0a34 1844     		add	r0, r0, r3
 2884 0a36 FFF7FEFF 		bl	__aeabi_i2d
 2885              	.LVL397:
ARM GAS  /tmp/cctu2O1I.s 			page 67


 2886 0a3a 0022     		movs	r2, #0
 2887 0a3c 864B     		ldr	r3, .L167
 2888 0a3e FFF7FEFF 		bl	__aeabi_dmul
 2889              	.LVL398:
 2890 0a42 FFF7FEFF 		bl	__aeabi_d2uiz
 2891              	.LVL399:
 2892 0a46 A5F89E00 		strh	r0, [r5, #158]	@ movhi
 748:Core/Src/bms.c ****         bms->cellVolt[80] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2893              		.loc 1 748 0
 2894 0a4a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2895 0a4c 1B02     		lsls	r3, r3, #8
 2896 0a4e 03F47063 		and	r3, r3, #3840
 2897 0a52 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2898 0a54 1844     		add	r0, r0, r3
 2899 0a56 FFF7FEFF 		bl	__aeabi_i2d
 2900              	.LVL400:
 2901 0a5a 0022     		movs	r2, #0
 2902 0a5c 7E4B     		ldr	r3, .L167
 2903 0a5e FFF7FEFF 		bl	__aeabi_dmul
 2904              	.LVL401:
 2905 0a62 FFF7FEFF 		bl	__aeabi_d2uiz
 2906              	.LVL402:
 2907 0a66 A5F8A000 		strh	r0, [r5, #160]	@ movhi
 749:Core/Src/bms.c ****         break;
 2908              		.loc 1 749 0
 2909 0a6a 38BD     		pop	{r3, r4, r5, pc}
 2910              	.LVL403:
 2911              	.L157:
 750:Core/Src/bms.c **** 
 751:Core/Src/bms.c ****     case 0x47C:
 752:Core/Src/bms.c ****         bms->cellVolt[81] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2912              		.loc 1 752 0
 2913 0a6c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2914 0a6e 1B02     		lsls	r3, r3, #8
 2915 0a70 03F47063 		and	r3, r3, #3840
 2916 0a74 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2917              	.LVL404:
 2918 0a76 1844     		add	r0, r0, r3
 2919 0a78 FFF7FEFF 		bl	__aeabi_i2d
 2920              	.LVL405:
 2921 0a7c 0022     		movs	r2, #0
 2922 0a7e 764B     		ldr	r3, .L167
 2923 0a80 FFF7FEFF 		bl	__aeabi_dmul
 2924              	.LVL406:
 2925 0a84 FFF7FEFF 		bl	__aeabi_d2uiz
 2926              	.LVL407:
 2927 0a88 A5F8A200 		strh	r0, [r5, #162]	@ movhi
 753:Core/Src/bms.c ****         bms->cellVolt[82] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2928              		.loc 1 753 0
 2929 0a8c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2930 0a8e 1B02     		lsls	r3, r3, #8
 2931 0a90 03F47063 		and	r3, r3, #3840
 2932 0a94 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2933 0a96 1844     		add	r0, r0, r3
 2934 0a98 FFF7FEFF 		bl	__aeabi_i2d
 2935              	.LVL408:
 2936 0a9c 0022     		movs	r2, #0
ARM GAS  /tmp/cctu2O1I.s 			page 68


 2937 0a9e 6E4B     		ldr	r3, .L167
 2938 0aa0 FFF7FEFF 		bl	__aeabi_dmul
 2939              	.LVL409:
 2940 0aa4 FFF7FEFF 		bl	__aeabi_d2uiz
 2941              	.LVL410:
 2942 0aa8 A5F8A400 		strh	r0, [r5, #164]	@ movhi
 754:Core/Src/bms.c ****         bms->cellVolt[83] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2943              		.loc 1 754 0
 2944 0aac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2945 0aae 1B02     		lsls	r3, r3, #8
 2946 0ab0 03F47063 		and	r3, r3, #3840
 2947 0ab4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2948 0ab6 1844     		add	r0, r0, r3
 2949 0ab8 FFF7FEFF 		bl	__aeabi_i2d
 2950              	.LVL411:
 2951 0abc 0022     		movs	r2, #0
 2952 0abe 664B     		ldr	r3, .L167
 2953 0ac0 FFF7FEFF 		bl	__aeabi_dmul
 2954              	.LVL412:
 2955 0ac4 FFF7FEFF 		bl	__aeabi_d2uiz
 2956              	.LVL413:
 2957 0ac8 A5F8A600 		strh	r0, [r5, #166]	@ movhi
 755:Core/Src/bms.c ****         break;
 2958              		.loc 1 755 0
 2959 0acc 38BD     		pop	{r3, r4, r5, pc}
 2960              	.LVL414:
 2961              	.L145:
 756:Core/Src/bms.c **** 
 757:Core/Src/bms.c ****     case 0x46D:
 758:Core/Src/bms.c ****         bms->cellVolt[84] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2962              		.loc 1 758 0
 2963 0ace 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2964 0ad0 1B02     		lsls	r3, r3, #8
 2965 0ad2 03F47063 		and	r3, r3, #3840
 2966 0ad6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2967              	.LVL415:
 2968 0ad8 1844     		add	r0, r0, r3
 2969 0ada FFF7FEFF 		bl	__aeabi_i2d
 2970              	.LVL416:
 2971 0ade 0022     		movs	r2, #0
 2972 0ae0 5D4B     		ldr	r3, .L167
 2973 0ae2 FFF7FEFF 		bl	__aeabi_dmul
 2974              	.LVL417:
 2975 0ae6 FFF7FEFF 		bl	__aeabi_d2uiz
 2976              	.LVL418:
 2977 0aea A5F8A800 		strh	r0, [r5, #168]	@ movhi
 759:Core/Src/bms.c ****         bms->cellVolt[85] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2978              		.loc 1 759 0
 2979 0aee A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2980 0af0 1B02     		lsls	r3, r3, #8
 2981 0af2 03F47063 		and	r3, r3, #3840
 2982 0af6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2983 0af8 1844     		add	r0, r0, r3
 2984 0afa FFF7FEFF 		bl	__aeabi_i2d
 2985              	.LVL419:
 2986 0afe 0022     		movs	r2, #0
 2987 0b00 554B     		ldr	r3, .L167
ARM GAS  /tmp/cctu2O1I.s 			page 69


 2988 0b02 FFF7FEFF 		bl	__aeabi_dmul
 2989              	.LVL420:
 2990 0b06 FFF7FEFF 		bl	__aeabi_d2uiz
 2991              	.LVL421:
 2992 0b0a A5F8AA00 		strh	r0, [r5, #170]	@ movhi
 760:Core/Src/bms.c ****         bms->cellVolt[86] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2993              		.loc 1 760 0
 2994 0b0e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2995 0b10 1B02     		lsls	r3, r3, #8
 2996 0b12 03F47063 		and	r3, r3, #3840
 2997 0b16 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2998 0b18 1844     		add	r0, r0, r3
 2999 0b1a FFF7FEFF 		bl	__aeabi_i2d
 3000              	.LVL422:
 3001 0b1e 0022     		movs	r2, #0
 3002 0b20 4D4B     		ldr	r3, .L167
 3003 0b22 FFF7FEFF 		bl	__aeabi_dmul
 3004              	.LVL423:
 3005 0b26 FFF7FEFF 		bl	__aeabi_d2uiz
 3006              	.LVL424:
 3007 0b2a A5F8AC00 		strh	r0, [r5, #172]	@ movhi
 761:Core/Src/bms.c ****         break;
 3008              		.loc 1 761 0
 3009 0b2e 38BD     		pop	{r3, r4, r5, pc}
 3010              	.LVL425:
 3011              	.L158:
 762:Core/Src/bms.c **** 
 763:Core/Src/bms.c ****     case 0x47D:
 764:Core/Src/bms.c ****         bms->cellVolt[87] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3012              		.loc 1 764 0
 3013 0b30 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3014 0b32 1B02     		lsls	r3, r3, #8
 3015 0b34 03F47063 		and	r3, r3, #3840
 3016 0b38 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3017              	.LVL426:
 3018 0b3a 1844     		add	r0, r0, r3
 3019 0b3c FFF7FEFF 		bl	__aeabi_i2d
 3020              	.LVL427:
 3021 0b40 0022     		movs	r2, #0
 3022 0b42 454B     		ldr	r3, .L167
 3023 0b44 FFF7FEFF 		bl	__aeabi_dmul
 3024              	.LVL428:
 3025 0b48 FFF7FEFF 		bl	__aeabi_d2uiz
 3026              	.LVL429:
 3027 0b4c A5F8AE00 		strh	r0, [r5, #174]	@ movhi
 765:Core/Src/bms.c ****         bms->cellVolt[88] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3028              		.loc 1 765 0
 3029 0b50 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3030 0b52 1B02     		lsls	r3, r3, #8
 3031 0b54 03F47063 		and	r3, r3, #3840
 3032 0b58 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3033 0b5a 1844     		add	r0, r0, r3
 3034 0b5c FFF7FEFF 		bl	__aeabi_i2d
 3035              	.LVL430:
 3036 0b60 0022     		movs	r2, #0
 3037 0b62 3D4B     		ldr	r3, .L167
 3038 0b64 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/cctu2O1I.s 			page 70


 3039              	.LVL431:
 3040 0b68 FFF7FEFF 		bl	__aeabi_d2uiz
 3041              	.LVL432:
 3042 0b6c A5F8B000 		strh	r0, [r5, #176]	@ movhi
 766:Core/Src/bms.c ****         bms->cellVolt[89] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3043              		.loc 1 766 0
 3044 0b70 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3045 0b72 1B02     		lsls	r3, r3, #8
 3046 0b74 03F47063 		and	r3, r3, #3840
 3047 0b78 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3048 0b7a 1844     		add	r0, r0, r3
 3049 0b7c FFF7FEFF 		bl	__aeabi_i2d
 3050              	.LVL433:
 3051 0b80 0022     		movs	r2, #0
 3052 0b82 354B     		ldr	r3, .L167
 3053 0b84 FFF7FEFF 		bl	__aeabi_dmul
 3054              	.LVL434:
 3055 0b88 FFF7FEFF 		bl	__aeabi_d2uiz
 3056              	.LVL435:
 3057 0b8c A5F8B200 		strh	r0, [r5, #178]	@ movhi
 767:Core/Src/bms.c ****         break;
 3058              		.loc 1 767 0
 3059 0b90 38BD     		pop	{r3, r4, r5, pc}
 3060              	.LVL436:
 3061              	.L146:
 768:Core/Src/bms.c **** 
 769:Core/Src/bms.c ****     case 0x46E:
 770:Core/Src/bms.c ****         bms->cellVolt[90] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3062              		.loc 1 770 0
 3063 0b92 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3064 0b94 1B02     		lsls	r3, r3, #8
 3065 0b96 03F47063 		and	r3, r3, #3840
 3066 0b9a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3067              	.LVL437:
 3068 0b9c 1844     		add	r0, r0, r3
 3069 0b9e FFF7FEFF 		bl	__aeabi_i2d
 3070              	.LVL438:
 3071 0ba2 0022     		movs	r2, #0
 3072 0ba4 2C4B     		ldr	r3, .L167
 3073 0ba6 FFF7FEFF 		bl	__aeabi_dmul
 3074              	.LVL439:
 3075 0baa FFF7FEFF 		bl	__aeabi_d2uiz
 3076              	.LVL440:
 3077 0bae A5F8B400 		strh	r0, [r5, #180]	@ movhi
 771:Core/Src/bms.c ****         bms->cellVolt[91] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3078              		.loc 1 771 0
 3079 0bb2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3080 0bb4 1B02     		lsls	r3, r3, #8
 3081 0bb6 03F47063 		and	r3, r3, #3840
 3082 0bba E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3083 0bbc 1844     		add	r0, r0, r3
 3084 0bbe FFF7FEFF 		bl	__aeabi_i2d
 3085              	.LVL441:
 3086 0bc2 0022     		movs	r2, #0
 3087 0bc4 244B     		ldr	r3, .L167
 3088 0bc6 FFF7FEFF 		bl	__aeabi_dmul
 3089              	.LVL442:
ARM GAS  /tmp/cctu2O1I.s 			page 71


 3090 0bca FFF7FEFF 		bl	__aeabi_d2uiz
 3091              	.LVL443:
 3092 0bce A5F8B600 		strh	r0, [r5, #182]	@ movhi
 772:Core/Src/bms.c ****         bms->cellVolt[92] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3093              		.loc 1 772 0
 3094 0bd2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3095 0bd4 1B02     		lsls	r3, r3, #8
 3096 0bd6 03F47063 		and	r3, r3, #3840
 3097 0bda 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3098 0bdc 1844     		add	r0, r0, r3
 3099 0bde FFF7FEFF 		bl	__aeabi_i2d
 3100              	.LVL444:
 3101 0be2 0022     		movs	r2, #0
 3102 0be4 1C4B     		ldr	r3, .L167
 3103 0be6 FFF7FEFF 		bl	__aeabi_dmul
 3104              	.LVL445:
 3105 0bea FFF7FEFF 		bl	__aeabi_d2uiz
 3106              	.LVL446:
 3107 0bee A5F8B800 		strh	r0, [r5, #184]	@ movhi
 773:Core/Src/bms.c ****         break;
 3108              		.loc 1 773 0
 3109 0bf2 38BD     		pop	{r3, r4, r5, pc}
 3110              	.LVL447:
 3111              	.L159:
 774:Core/Src/bms.c **** 
 775:Core/Src/bms.c ****     case 0x47E:
 776:Core/Src/bms.c ****         bms->cellVolt[93] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3112              		.loc 1 776 0
 3113 0bf4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3114 0bf6 1B02     		lsls	r3, r3, #8
 3115 0bf8 03F47063 		and	r3, r3, #3840
 3116 0bfc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3117              	.LVL448:
 3118 0bfe 1844     		add	r0, r0, r3
 3119 0c00 FFF7FEFF 		bl	__aeabi_i2d
 3120              	.LVL449:
 3121 0c04 0022     		movs	r2, #0
 3122 0c06 144B     		ldr	r3, .L167
 3123 0c08 FFF7FEFF 		bl	__aeabi_dmul
 3124              	.LVL450:
 3125 0c0c FFF7FEFF 		bl	__aeabi_d2uiz
 3126              	.LVL451:
 3127 0c10 A5F8BA00 		strh	r0, [r5, #186]	@ movhi
 777:Core/Src/bms.c ****         bms->cellVolt[94] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3128              		.loc 1 777 0
 3129 0c14 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3130 0c16 1B02     		lsls	r3, r3, #8
 3131 0c18 03F47063 		and	r3, r3, #3840
 3132 0c1c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3133 0c1e 1844     		add	r0, r0, r3
 3134 0c20 FFF7FEFF 		bl	__aeabi_i2d
 3135              	.LVL452:
 3136 0c24 0022     		movs	r2, #0
 3137 0c26 0C4B     		ldr	r3, .L167
 3138 0c28 FFF7FEFF 		bl	__aeabi_dmul
 3139              	.LVL453:
 3140 0c2c FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/cctu2O1I.s 			page 72


 3141              	.LVL454:
 3142 0c30 A5F8BC00 		strh	r0, [r5, #188]	@ movhi
 778:Core/Src/bms.c ****         bms->cellVolt[95] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3143              		.loc 1 778 0
 3144 0c34 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3145 0c36 1B02     		lsls	r3, r3, #8
 3146 0c38 03F47063 		and	r3, r3, #3840
 3147 0c3c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3148 0c3e 1844     		add	r0, r0, r3
 3149 0c40 FFF7FEFF 		bl	__aeabi_i2d
 3150              	.LVL455:
 3151 0c44 0022     		movs	r2, #0
 3152 0c46 044B     		ldr	r3, .L167
 3153 0c48 FFF7FEFF 		bl	__aeabi_dmul
 3154              	.LVL456:
 3155 0c4c FFF7FEFF 		bl	__aeabi_d2uiz
 3156              	.LVL457:
 3157 0c50 A5F8BE00 		strh	r0, [r5, #190]	@ movhi
 3158              	.L131:
 3159 0c54 38BD     		pop	{r3, r4, r5, pc}
 3160              	.LVL458:
 3161              	.L168:
 3162 0c56 00BF     		.align	2
 3163              	.L167:
 3164 0c58 0000F43F 		.word	1072955392
 3165              		.cfi_endproc
 3166              	.LFE152:
 3168              		.section	.text.decodeTemp,"ax",%progbits
 3169              		.align	1
 3170              		.global	decodeTemp
 3171              		.syntax unified
 3172              		.thumb
 3173              		.thumb_func
 3174              		.fpu fpv4-sp-d16
 3176              	decodeTemp:
 3177              	.LFB153:
 779:Core/Src/bms.c ****         break;
 780:Core/Src/bms.c **** 
 781:Core/Src/bms.c ****     default:
 782:Core/Src/bms.c ****         break;
 783:Core/Src/bms.c ****     }
 784:Core/Src/bms.c **** }
 785:Core/Src/bms.c **** 
 786:Core/Src/bms.c **** void decodeTemp(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // in degrees F x 100
 787:Core/Src/bms.c **** {
 3178              		.loc 1 787 0
 3179              		.cfi_startproc
 3180              		@ args = 0, pretend = 0, frame = 0
 3181              		@ frame_needed = 0, uses_anonymous_args = 0
 3182              		@ link register save eliminated.
 3183              	.LVL459:
 788:Core/Src/bms.c ****     switch (rxMsg->StdId)
 3184              		.loc 1 788 0
 3185 0000 0B68     		ldr	r3, [r1]
 3186 0002 A3F5FC63 		sub	r3, r3, #2016
 3187 0006 0E2B     		cmp	r3, #14
 3188 0008 00F28E80 		bhi	.L169
ARM GAS  /tmp/cctu2O1I.s 			page 73


 3189 000c DFE803F0 		tbb	[pc, r3]
 3190              	.LVL460:
 3191              	.L172:
 3192 0010 08       		.byte	(.L171-.L172)/2
 3193 0011 14       		.byte	(.L173-.L172)/2
 3194 0012 20       		.byte	(.L174-.L172)/2
 3195 0013 2F       		.byte	(.L175-.L172)/2
 3196 0014 33       		.byte	(.L176-.L172)/2
 3197 0015 3F       		.byte	(.L177-.L172)/2
 3198 0016 4E       		.byte	(.L178-.L172)/2
 3199 0017 8C       		.byte	(.L169-.L172)/2
 3200 0018 52       		.byte	(.L179-.L172)/2
 3201 0019 5E       		.byte	(.L180-.L172)/2
 3202 001a 6D       		.byte	(.L181-.L172)/2
 3203 001b 8C       		.byte	(.L169-.L172)/2
 3204 001c 71       		.byte	(.L182-.L172)/2
 3205 001d 7D       		.byte	(.L183-.L172)/2
 3206 001e 89       		.byte	(.L184-.L172)/2
 3207 001f 00       		.p2align 1
 3208              	.L171:
 789:Core/Src/bms.c ****     {
 790:Core/Src/bms.c ****     case 0x7E0: //Begin module 1 temp sensors
 791:Core/Src/bms.c ****         bms->tempSensor[0] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3209              		.loc 1 791 0
 3210 0020 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3211 0022 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3212 0024 03EB0123 		add	r3, r3, r1, lsl #8
 3213 0028 A3EBC303 		sub	r3, r3, r3, lsl #3
 3214 002c 03F5E043 		add	r3, r3, #28672
 3215 0030 1C33     		adds	r3, r3, #28
 3216 0032 A0F8C030 		strh	r3, [r0, #192]	@ movhi
 792:Core/Src/bms.c ****         break;
 3217              		.loc 1 792 0
 3218 0036 7047     		bx	lr
 3219              	.L173:
 793:Core/Src/bms.c **** 
 794:Core/Src/bms.c ****     case 0x7E1:
 795:Core/Src/bms.c ****         bms->tempSensor[1] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3220              		.loc 1 795 0
 3221 0038 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3222 003a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3223 003c 03EB0123 		add	r3, r3, r1, lsl #8
 3224 0040 A3EBC303 		sub	r3, r3, r3, lsl #3
 3225 0044 03F5E043 		add	r3, r3, #28672
 3226 0048 1C33     		adds	r3, r3, #28
 3227 004a A0F8C230 		strh	r3, [r0, #194]	@ movhi
 796:Core/Src/bms.c ****         break;
 3228              		.loc 1 796 0
 3229 004e 7047     		bx	lr
 3230              	.L174:
 797:Core/Src/bms.c **** 
 798:Core/Src/bms.c ****     case 0x7E2:
 799:Core/Src/bms.c ****         bms->tempSensor[2] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3231              		.loc 1 799 0
 3232 0050 0023     		movs	r3, #0
 3233 0052 A0F8C430 		strh	r3, [r0, #196]	@ movhi
 800:Core/Src/bms.c ****         bms->tempSensor[3] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
ARM GAS  /tmp/cctu2O1I.s 			page 74


 3234              		.loc 1 800 0
 3235 0056 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3236 0058 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3237 005a 03EB0123 		add	r3, r3, r1, lsl #8
 3238 005e A3EBC303 		sub	r3, r3, r3, lsl #3
 3239 0062 03F5E043 		add	r3, r3, #28672
 3240 0066 1C33     		adds	r3, r3, #28
 3241 0068 A0F8C630 		strh	r3, [r0, #198]	@ movhi
 801:Core/Src/bms.c ****         break;
 3242              		.loc 1 801 0
 3243 006c 7047     		bx	lr
 3244              	.L175:
 802:Core/Src/bms.c **** 
 803:Core/Src/bms.c ****     case 0x7E3:
 804:Core/Src/bms.c ****         bms->tempSensor[4] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3245              		.loc 1 804 0
 3246 006e 0023     		movs	r3, #0
 3247 0070 A0F8C830 		strh	r3, [r0, #200]	@ movhi
 805:Core/Src/bms.c ****         break;
 3248              		.loc 1 805 0
 3249 0074 7047     		bx	lr
 3250              	.L176:
 806:Core/Src/bms.c **** 
 807:Core/Src/bms.c ****     case 0x7E4: //Begin module 2 temp sensors
 808:Core/Src/bms.c ****         bms->tempSensor[5] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3251              		.loc 1 808 0
 3252 0076 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3253 0078 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3254 007a 03EB0123 		add	r3, r3, r1, lsl #8
 3255 007e A3EBC303 		sub	r3, r3, r3, lsl #3
 3256 0082 03F5E043 		add	r3, r3, #28672
 3257 0086 1C33     		adds	r3, r3, #28
 3258 0088 A0F8CA30 		strh	r3, [r0, #202]	@ movhi
 809:Core/Src/bms.c ****         break;
 3259              		.loc 1 809 0
 3260 008c 7047     		bx	lr
 3261              	.L177:
 810:Core/Src/bms.c **** 
 811:Core/Src/bms.c ****     case 0x7E5:
 812:Core/Src/bms.c ****         bms->tempSensor[6] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3262              		.loc 1 812 0
 3263 008e 0023     		movs	r3, #0
 3264 0090 A0F8CC30 		strh	r3, [r0, #204]	@ movhi
 813:Core/Src/bms.c ****         bms->tempSensor[7] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3265              		.loc 1 813 0
 3266 0094 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3267 0096 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3268 0098 03EB0123 		add	r3, r3, r1, lsl #8
 3269 009c A3EBC303 		sub	r3, r3, r3, lsl #3
 3270 00a0 03F5E043 		add	r3, r3, #28672
 3271 00a4 1C33     		adds	r3, r3, #28
 3272 00a6 A0F8CE30 		strh	r3, [r0, #206]	@ movhi
 814:Core/Src/bms.c ****         break;
 3273              		.loc 1 814 0
 3274 00aa 7047     		bx	lr
 3275              	.L178:
 815:Core/Src/bms.c **** 
ARM GAS  /tmp/cctu2O1I.s 			page 75


 816:Core/Src/bms.c ****     case 0x7E6:
 817:Core/Src/bms.c ****         bms->tempSensor[8] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3276              		.loc 1 817 0
 3277 00ac 0023     		movs	r3, #0
 3278 00ae A0F8D030 		strh	r3, [r0, #208]	@ movhi
 818:Core/Src/bms.c ****         break;
 3279              		.loc 1 818 0
 3280 00b2 7047     		bx	lr
 3281              	.L179:
 819:Core/Src/bms.c **** 
 820:Core/Src/bms.c ****     case 0x7E8: //Begin module 3 temp sensors
 821:Core/Src/bms.c ****         bms->tempSensor[9] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3282              		.loc 1 821 0
 3283 00b4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3284 00b6 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3285 00b8 03EB0123 		add	r3, r3, r1, lsl #8
 3286 00bc A3EBC303 		sub	r3, r3, r3, lsl #3
 3287 00c0 03F5E043 		add	r3, r3, #28672
 3288 00c4 1C33     		adds	r3, r3, #28
 3289 00c6 A0F8D230 		strh	r3, [r0, #210]	@ movhi
 822:Core/Src/bms.c ****         break;
 3290              		.loc 1 822 0
 3291 00ca 7047     		bx	lr
 3292              	.L180:
 823:Core/Src/bms.c **** 
 824:Core/Src/bms.c ****     case 0x7E9:
 825:Core/Src/bms.c ****         bms->tempSensor[10] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3293              		.loc 1 825 0
 3294 00cc 0023     		movs	r3, #0
 3295 00ce A0F8D430 		strh	r3, [r0, #212]	@ movhi
 826:Core/Src/bms.c ****         bms->tempSensor[11] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3296              		.loc 1 826 0
 3297 00d2 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3298 00d4 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3299 00d6 03EB0123 		add	r3, r3, r1, lsl #8
 3300 00da A3EBC303 		sub	r3, r3, r3, lsl #3
 3301 00de 03F5E043 		add	r3, r3, #28672
 3302 00e2 1C33     		adds	r3, r3, #28
 3303 00e4 A0F8D630 		strh	r3, [r0, #214]	@ movhi
 827:Core/Src/bms.c ****         break;
 3304              		.loc 1 827 0
 3305 00e8 7047     		bx	lr
 3306              	.L181:
 828:Core/Src/bms.c **** 
 829:Core/Src/bms.c ****     case 0x7EA:
 830:Core/Src/bms.c ****         bms->tempSensor[12] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3307              		.loc 1 830 0
 3308 00ea 0023     		movs	r3, #0
 3309 00ec A0F8D830 		strh	r3, [r0, #216]	@ movhi
 831:Core/Src/bms.c ****         break;
 3310              		.loc 1 831 0
 3311 00f0 7047     		bx	lr
 3312              	.L182:
 832:Core/Src/bms.c **** 
 833:Core/Src/bms.c ****     case 0x7EC: //Begin module 4 temp sensors
 834:Core/Src/bms.c ****         bms->tempSensor[13] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3313              		.loc 1 834 0
ARM GAS  /tmp/cctu2O1I.s 			page 76


 3314 00f2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3315 00f4 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3316 00f6 03EB0123 		add	r3, r3, r1, lsl #8
 3317 00fa A3EBC303 		sub	r3, r3, r3, lsl #3
 3318 00fe 03F5E043 		add	r3, r3, #28672
 3319 0102 1C33     		adds	r3, r3, #28
 3320 0104 A0F8DA30 		strh	r3, [r0, #218]	@ movhi
 835:Core/Src/bms.c ****         break;
 3321              		.loc 1 835 0
 3322 0108 7047     		bx	lr
 3323              	.L183:
 836:Core/Src/bms.c **** 
 837:Core/Src/bms.c ****     case 0x7ED:
 838:Core/Src/bms.c ****         bms->tempSensor[14] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3324              		.loc 1 838 0
 3325 010a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3326 010c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3327 010e 03EB0123 		add	r3, r3, r1, lsl #8
 3328 0112 A3EBC303 		sub	r3, r3, r3, lsl #3
 3329 0116 03F5E043 		add	r3, r3, #28672
 3330 011a 1C33     		adds	r3, r3, #28
 3331 011c A0F8DC30 		strh	r3, [r0, #220]	@ movhi
 839:Core/Src/bms.c ****         break;
 3332              		.loc 1 839 0
 3333 0120 7047     		bx	lr
 3334              	.L184:
 840:Core/Src/bms.c **** 
 841:Core/Src/bms.c ****     case 0x7EE:
 842:Core/Src/bms.c ****         bms->tempSensor[15] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3335              		.loc 1 842 0
 3336 0122 0023     		movs	r3, #0
 3337 0124 A0F8DE30 		strh	r3, [r0, #222]	@ movhi
 3338              	.L169:
 3339 0128 7047     		bx	lr
 3340              		.cfi_endproc
 3341              	.LFE153:
 3343              		.comm	charged,1,1
 3344              		.comm	BMS,492,4
 3345              		.comm	txCycle3,4,4
 3346              		.comm	txCycle2,4,4
 3347              		.comm	txCycle,4,4
 3348              		.comm	canMailbox3,4,4
 3349              		.comm	canMailbox2,4,4
 3350              		.comm	canMailbox,4,4
 3351              		.comm	canRx3,8,4
 3352              		.comm	canRx2,8,4
 3353              		.comm	canRx,8,4
 3354              		.comm	txMsgExt3,24,4
 3355              		.comm	txMsg3,24,4
 3356              		.comm	rxMsg3,28,4
 3357              		.comm	txMsgExt2,24,4
 3358              		.comm	txMsg2,24,4
 3359              		.comm	rxMsg2,28,4
 3360              		.comm	txMsgExt,24,4
 3361              		.comm	txMsg,24,4
 3362              		.comm	rxMsg,28,4
 3363              		.comm	sf5,40,4
ARM GAS  /tmp/cctu2O1I.s 			page 77


 3364              		.comm	sf4,40,4
 3365              		.comm	sf3,40,4
 3366              		.comm	sf2,40,4
 3367              		.comm	sf,40,4
 3368              		.comm	hcan3,40,4
 3369              		.comm	hcan2,40,4
 3370              		.comm	hcan1,40,4
 3371              		.section	.rodata.balanceByte,"a",%progbits
 3372              		.align	2
 3373              		.set	.LANCHOR0,. + 0
 3376              	balanceByte:
 3377 0000 00       		.byte	0
 3378 0001 00       		.byte	0
 3379 0002 00       		.byte	0
 3380 0003 00       		.byte	0
 3381 0004 00       		.byte	0
 3382 0005 00       		.byte	0
 3383 0006 01       		.byte	1
 3384 0007 01       		.byte	1
 3385 0008 01       		.byte	1
 3386 0009 01       		.byte	1
 3387 000a 01       		.byte	1
 3388 000b 01       		.byte	1
 3389 000c 01       		.byte	1
 3390 000d 01       		.byte	1
 3391 000e 02       		.byte	2
 3392 000f 02       		.byte	2
 3393 0010 02       		.byte	2
 3394 0011 02       		.byte	2
 3395 0012 02       		.byte	2
 3396 0013 02       		.byte	2
 3397 0014 02       		.byte	2
 3398 0015 02       		.byte	2
 3399 0016 03       		.byte	3
 3400 0017 03       		.byte	3
 3401 0018 03       		.byte	3
 3402 0019 03       		.byte	3
 3403 001a 03       		.byte	3
 3404 001b 03       		.byte	3
 3405 001c 03       		.byte	3
 3406 001d 03       		.byte	3
 3407 001e 04       		.byte	4
 3408 001f 04       		.byte	4
 3409 0020 04       		.byte	4
 3410 0021 04       		.byte	4
 3411 0022 04       		.byte	4
 3412 0023 04       		.byte	4
 3413 0024 04       		.byte	4
 3414 0025 04       		.byte	4
 3415 0026 05       		.byte	5
 3416 0027 05       		.byte	5
 3417 0028 05       		.byte	5
 3418 0029 05       		.byte	5
 3419 002a 05       		.byte	5
 3420 002b 05       		.byte	5
 3421 002c 05       		.byte	5
 3422 002d 05       		.byte	5
ARM GAS  /tmp/cctu2O1I.s 			page 78


 3423 002e 06       		.byte	6
 3424 002f 06       		.byte	6
 3425 0030 06       		.byte	6
 3426 0031 06       		.byte	6
 3427 0032 06       		.byte	6
 3428 0033 06       		.byte	6
 3429 0034 06       		.byte	6
 3430 0035 06       		.byte	6
 3431 0036 07       		.byte	7
 3432 0037 07       		.byte	7
 3433 0038 07       		.byte	7
 3434 0039 07       		.byte	7
 3435 003a 07       		.byte	7
 3436 003b 07       		.byte	7
 3437 003c 07       		.byte	7
 3438 003d 07       		.byte	7
 3439 003e 00       		.byte	0
 3440 003f 00       		.byte	0
 3441 0040 00       		.byte	0
 3442 0041 00       		.byte	0
 3443 0042 00       		.byte	0
 3444 0043 00       		.byte	0
 3445 0044 00       		.byte	0
 3446 0045 00       		.byte	0
 3447 0046 01       		.byte	1
 3448 0047 01       		.byte	1
 3449 0048 01       		.byte	1
 3450 0049 01       		.byte	1
 3451 004a 01       		.byte	1
 3452 004b 01       		.byte	1
 3453 004c 01       		.byte	1
 3454 004d 01       		.byte	1
 3455 004e 02       		.byte	2
 3456 004f 02       		.byte	2
 3457 0050 02       		.byte	2
 3458 0051 02       		.byte	2
 3459 0052 02       		.byte	2
 3460 0053 02       		.byte	2
 3461 0054 03       		.byte	3
 3462 0055 03       		.byte	3
 3463 0056 03       		.byte	3
 3464 0057 03       		.byte	3
 3465 0058 03       		.byte	3
 3466 0059 03       		.byte	3
 3467 005a 04       		.byte	4
 3468 005b 04       		.byte	4
 3469 005c 04       		.byte	4
 3470 005d 04       		.byte	4
 3471 005e 04       		.byte	4
 3472 005f 04       		.byte	4
 3473              		.section	.rodata.balanceShift,"a",%progbits
 3474              		.align	2
 3475              		.set	.LANCHOR1,. + 0
 3478              	balanceShift:
 3479 0000 01       		.byte	1
 3480 0001 02       		.byte	2
 3481 0002 04       		.byte	4
ARM GAS  /tmp/cctu2O1I.s 			page 79


 3482 0003 08       		.byte	8
 3483 0004 10       		.byte	16
 3484 0005 20       		.byte	32
 3485 0006 01       		.byte	1
 3486 0007 02       		.byte	2
 3487 0008 04       		.byte	4
 3488 0009 08       		.byte	8
 3489 000a 10       		.byte	16
 3490 000b 20       		.byte	32
 3491 000c 40       		.byte	64
 3492 000d 80       		.byte	-128
 3493 000e 01       		.byte	1
 3494 000f 02       		.byte	2
 3495 0010 04       		.byte	4
 3496 0011 08       		.byte	8
 3497 0012 10       		.byte	16
 3498 0013 20       		.byte	32
 3499 0014 40       		.byte	64
 3500 0015 80       		.byte	-128
 3501 0016 01       		.byte	1
 3502 0017 02       		.byte	2
 3503 0018 04       		.byte	4
 3504 0019 08       		.byte	8
 3505 001a 10       		.byte	16
 3506 001b 20       		.byte	32
 3507 001c 40       		.byte	64
 3508 001d 80       		.byte	-128
 3509 001e 01       		.byte	1
 3510 001f 02       		.byte	2
 3511 0020 04       		.byte	4
 3512 0021 08       		.byte	8
 3513 0022 10       		.byte	16
 3514 0023 20       		.byte	32
 3515 0024 40       		.byte	64
 3516 0025 80       		.byte	-128
 3517 0026 01       		.byte	1
 3518 0027 02       		.byte	2
 3519 0028 04       		.byte	4
 3520 0029 08       		.byte	8
 3521 002a 10       		.byte	16
 3522 002b 20       		.byte	32
 3523 002c 40       		.byte	64
 3524 002d 80       		.byte	-128
 3525 002e 01       		.byte	1
 3526 002f 02       		.byte	2
 3527 0030 04       		.byte	4
 3528 0031 08       		.byte	8
 3529 0032 10       		.byte	16
 3530 0033 20       		.byte	32
 3531 0034 40       		.byte	64
 3532 0035 80       		.byte	-128
 3533 0036 01       		.byte	1
 3534 0037 02       		.byte	2
 3535 0038 04       		.byte	4
 3536 0039 08       		.byte	8
 3537 003a 10       		.byte	16
 3538 003b 20       		.byte	32
ARM GAS  /tmp/cctu2O1I.s 			page 80


 3539 003c 40       		.byte	64
 3540 003d 80       		.byte	-128
 3541 003e 01       		.byte	1
 3542 003f 02       		.byte	2
 3543 0040 04       		.byte	4
 3544 0041 08       		.byte	8
 3545 0042 10       		.byte	16
 3546 0043 20       		.byte	32
 3547 0044 40       		.byte	64
 3548 0045 80       		.byte	-128
 3549 0046 01       		.byte	1
 3550 0047 02       		.byte	2
 3551 0048 04       		.byte	4
 3552 0049 08       		.byte	8
 3553 004a 10       		.byte	16
 3554 004b 20       		.byte	32
 3555 004c 40       		.byte	64
 3556 004d 80       		.byte	-128
 3557 004e 01       		.byte	1
 3558 004f 02       		.byte	2
 3559 0050 04       		.byte	4
 3560 0051 08       		.byte	8
 3561 0052 10       		.byte	16
 3562 0053 20       		.byte	32
 3563 0054 01       		.byte	1
 3564 0055 02       		.byte	2
 3565 0056 04       		.byte	4
 3566 0057 08       		.byte	8
 3567 0058 10       		.byte	16
 3568 0059 20       		.byte	32
 3569 005a 01       		.byte	1
 3570 005b 02       		.byte	2
 3571 005c 04       		.byte	4
 3572 005d 08       		.byte	8
 3573 005e 10       		.byte	16
 3574 005f 20       		.byte	32
 3575              		.text
 3576              	.Letext0:
 3577              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3578              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3579              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3580              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3581              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 3582              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3583              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3584              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3585              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3586              		.file 11 "/usr/include/newlib/sys/lock.h"
 3587              		.file 12 "/usr/include/newlib/sys/_types.h"
 3588              		.file 13 "/usr/include/newlib/sys/reent.h"
 3589              		.file 14 "Core/Inc/can_setup.h"
 3590              		.file 15 "Core/Inc/bms.h"
ARM GAS  /tmp/cctu2O1I.s 			page 81


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bms.c
     /tmp/cctu2O1I.s:18     .text.getSOC:0000000000000000 $t
     /tmp/cctu2O1I.s:24     .text.getSOC:0000000000000000 getSOC
     /tmp/cctu2O1I.s:48     .text.getSOC:0000000000000024 $d
     /tmp/cctu2O1I.s:53     .text.getHighCellVolt:0000000000000000 $t
     /tmp/cctu2O1I.s:59     .text.getHighCellVolt:0000000000000000 getHighCellVolt
     /tmp/cctu2O1I.s:99     .text.getHighCellTemp:0000000000000000 $t
     /tmp/cctu2O1I.s:105    .text.getHighCellTemp:0000000000000000 getHighCellTemp
     /tmp/cctu2O1I.s:146    .text.getLowCellTemp:0000000000000000 $t
     /tmp/cctu2O1I.s:152    .text.getLowCellTemp:0000000000000000 getLowCellTemp
     /tmp/cctu2O1I.s:197    .text.getAvgCellTemp:0000000000000000 $t
     /tmp/cctu2O1I.s:203    .text.getAvgCellTemp:0000000000000000 getAvgCellTemp
     /tmp/cctu2O1I.s:266    .text.getTempDelta:0000000000000000 $t
     /tmp/cctu2O1I.s:272    .text.getTempDelta:0000000000000000 getTempDelta
     /tmp/cctu2O1I.s:290    .text.getCellDelta:0000000000000000 $t
     /tmp/cctu2O1I.s:296    .text.getCellDelta:0000000000000000 getCellDelta
     /tmp/cctu2O1I.s:314    .text.getLowCellVolt:0000000000000000 $t
     /tmp/cctu2O1I.s:320    .text.getLowCellVolt:0000000000000000 getLowCellVolt
     /tmp/cctu2O1I.s:361    .text.getAvgCellVolt:0000000000000000 $t
     /tmp/cctu2O1I.s:367    .text.getAvgCellVolt:0000000000000000 getAvgCellVolt
     /tmp/cctu2O1I.s:409    .text.getAvgCellVolt:0000000000000024 $d
     /tmp/cctu2O1I.s:414    .text.getPackVolt:0000000000000000 $t
     /tmp/cctu2O1I.s:420    .text.getPackVolt:0000000000000000 getPackVolt
     /tmp/cctu2O1I.s:462    .text.getPackVolt:0000000000000020 $d
     /tmp/cctu2O1I.s:467    .text.getCellCount:0000000000000000 $t
     /tmp/cctu2O1I.s:473    .text.getCellCount:0000000000000000 getCellCount
     /tmp/cctu2O1I.s:538    .text.getCellCount:0000000000000038 $d
                            *COM*:00000000000001ec BMS
     /tmp/cctu2O1I.s:543    .text.initBMS:0000000000000000 $t
     /tmp/cctu2O1I.s:550    .text.initBMS:0000000000000000 initBMS
     /tmp/cctu2O1I.s:671    .text.initBMS:0000000000000090 $d
                            *COM*:0000000000000001 charged
     /tmp/cctu2O1I.s:677    .text.bmsStateHandler:0000000000000000 $t
     /tmp/cctu2O1I.s:684    .text.bmsStateHandler:0000000000000000 bmsStateHandler
     /tmp/cctu2O1I.s:698    .text.bmsStateHandler:000000000000000c $d
     /tmp/cctu2O1I.s:798    .text.acChargeCommand:0000000000000000 $t
     /tmp/cctu2O1I.s:805    .text.acChargeCommand:0000000000000000 acChargeCommand
     /tmp/cctu2O1I.s:904    .text.acChargeCommand:0000000000000088 $d
     /tmp/cctu2O1I.s:909    .text.tx500kData:0000000000000000 $t
     /tmp/cctu2O1I.s:916    .text.tx500kData:0000000000000000 tx500kData
     /tmp/cctu2O1I.s:1000   .text.tx500kData:0000000000000090 $d
     /tmp/cctu2O1I.s:1005   .text.sendCommand:0000000000000000 $t
     /tmp/cctu2O1I.s:1012   .text.sendCommand:0000000000000000 sendCommand
     /tmp/cctu2O1I.s:1063   .text.requestBICMdata:0000000000000000 $t
     /tmp/cctu2O1I.s:1070   .text.requestBICMdata:0000000000000000 requestBICMdata
     /tmp/cctu2O1I.s:1163   .text.refreshData:0000000000000000 $t
     /tmp/cctu2O1I.s:1170   .text.refreshData:0000000000000000 refreshData
     /tmp/cctu2O1I.s:1259   .text.refreshData:0000000000000064 $d
     /tmp/cctu2O1I.s:1264   .text.balanceCommand:0000000000000000 $t
     /tmp/cctu2O1I.s:1271   .text.balanceCommand:0000000000000000 balanceCommand
     /tmp/cctu2O1I.s:1464   .text.balanceCommand:0000000000000100 $d
     /tmp/cctu2O1I.s:1470   .text.vehicleComms:0000000000000000 $t
     /tmp/cctu2O1I.s:1477   .text.vehicleComms:0000000000000000 vehicleComms
     /tmp/cctu2O1I.s:1490   .text.synchChargers:0000000000000000 $t
     /tmp/cctu2O1I.s:1497   .text.synchChargers:0000000000000000 synchChargers
     /tmp/cctu2O1I.s:1512   .text.decodeVolt:0000000000000000 $t
ARM GAS  /tmp/cctu2O1I.s 			page 82


     /tmp/cctu2O1I.s:1519   .text.decodeVolt:0000000000000000 decodeVolt
     /tmp/cctu2O1I.s:1544   .text.decodeVolt:0000000000000016 $d
     /tmp/cctu2O1I.s:1575   .text.decodeVolt:0000000000000054 $t
     /tmp/cctu2O1I.s:2004   .text.decodeVolt:0000000000000370 $d
     /tmp/cctu2O1I.s:2008   .text.decodeVolt:0000000000000374 $t
     /tmp/cctu2O1I.s:2399   .text.decodeVolt:0000000000000674 $d
     /tmp/cctu2O1I.s:2403   .text.decodeVolt:0000000000000678 $t
     /tmp/cctu2O1I.s:2794   .text.decodeVolt:0000000000000984 $d
     /tmp/cctu2O1I.s:2798   .text.decodeVolt:0000000000000988 $t
     /tmp/cctu2O1I.s:3164   .text.decodeVolt:0000000000000c58 $d
     /tmp/cctu2O1I.s:3169   .text.decodeTemp:0000000000000000 $t
     /tmp/cctu2O1I.s:3176   .text.decodeTemp:0000000000000000 decodeTemp
     /tmp/cctu2O1I.s:3192   .text.decodeTemp:0000000000000010 $d
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000004 canMailbox3
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx3
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000018 txMsg3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan3
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
     /tmp/cctu2O1I.s:3372   .rodata.balanceByte:0000000000000000 $d
     /tmp/cctu2O1I.s:3376   .rodata.balanceByte:0000000000000000 balanceByte
     /tmp/cctu2O1I.s:3474   .rodata.balanceShift:0000000000000000 $d
     /tmp/cctu2O1I.s:3478   .rodata.balanceShift:0000000000000000 balanceShift
                     .debug_frame:0000000000000010 $d
     /tmp/cctu2O1I.s:703    .text.bmsStateHandler:0000000000000011 $d
     /tmp/cctu2O1I.s:703    .text.bmsStateHandler:0000000000000012 $t
     /tmp/cctu2O1I.s:3207   .text.decodeTemp:000000000000001f $d
     /tmp/cctu2O1I.s:3207   .text.decodeTemp:0000000000000020 $t

UNDEFINED SYMBOLS
can2tx
can1tx
can3tx
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
