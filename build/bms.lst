ARM GAS  /tmp/ccKxHDb6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bms.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.getSOC,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	getSOC:
  25              	.LFB139:
  26              		.file 1 "Core/Src/bms.c"
   1:Core/Src/bms.c **** #include "bms.h"
   2:Core/Src/bms.c **** #include "settings.h"
   3:Core/Src/bms.c **** #include "my_math.h"
   4:Core/Src/bms.c **** 
   5:Core/Src/bms.c **** static void getPackVolt(bms_t *bms);
   6:Core/Src/bms.c **** static void getAvgCellVolt(bms_t *bms);
   7:Core/Src/bms.c **** static void getLowCellVolt(bms_t *bms);
   8:Core/Src/bms.c **** static void getHighCellVolt(bms_t *bms);
   9:Core/Src/bms.c **** static void getCellDelta(bms_t *bms);
  10:Core/Src/bms.c **** static void getLowCellTemp(bms_t *bms);
  11:Core/Src/bms.c **** static void getHighCellTemp(bms_t *bms);
  12:Core/Src/bms.c **** static void getAvgCellTemp(bms_t *bms);
  13:Core/Src/bms.c **** static void getTempDelta(bms_t *bms);
  14:Core/Src/bms.c **** static void getCellCount(bms_t *bms, int pack);
  15:Core/Src/bms.c **** static void getSOC(bms_t *bms);
  16:Core/Src/bms.c **** 
  17:Core/Src/bms.c **** enum
  18:Core/Src/bms.c **** {
  19:Core/Src/bms.c ****     Boot,
  20:Core/Src/bms.c ****     Ready,
  21:Core/Src/bms.c ****     Drive,
  22:Core/Src/bms.c ****     Charge,
  23:Core/Src/bms.c ****     Error
  24:Core/Src/bms.c **** };
  25:Core/Src/bms.c **** 
  26:Core/Src/bms.c **** enum
  27:Core/Src/bms.c **** {
  28:Core/Src/bms.c ****     off,
  29:Core/Src/bms.c ****     on, //key on, inverter off
  30:Core/Src/bms.c ****     charge_keyOff,
  31:Core/Src/bms.c ****     charge_keyOn, //who even does that
  32:Core/Src/bms.c ****     idle,         //key on, inverter on
ARM GAS  /tmp/ccKxHDb6.s 			page 2


  33:Core/Src/bms.c ****     run,          //key on direction selected
  34:Core/Src/bms.c ****     launchMode,   //break shit
  35:Core/Src/bms.c ****     burnout,      //destroy tires
  36:Core/Src/bms.c **** };
  37:Core/Src/bms.c **** 
  38:Core/Src/bms.c **** /*/SOC filtering
  39:Core/Src/bms.c **** static const int numReadings = 10;
  40:Core/Src/bms.c **** static int readings[10];  // the readings from the analog input
  41:Core/Src/bms.c **** static int readIndex = 0; // the index of the current reading
  42:Core/Src/bms.c **** static int total = 0;     // the running total
  43:Core/Src/bms.c **** static int average = 0;   // the average
  44:Core/Src/bms.c **** */
  45:Core/Src/bms.c **** 
  46:Core/Src/bms.c **** static const uint8_t balanceByte[96] =
  47:Core/Src/bms.c ****     {0, 0, 0, 0, 0, 0,
  48:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  49:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2, 2, 2,
  50:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3, 3, 3,
  51:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4, 4, 4,
  52:Core/Src/bms.c ****      5, 5, 5, 5, 5, 5, 5, 5,
  53:Core/Src/bms.c ****      6, 6, 6, 6, 6, 6, 6, 6,
  54:Core/Src/bms.c ****      7, 7, 7, 7, 7, 7, 7, 7,
  55:Core/Src/bms.c ****      0, 0, 0, 0, 0, 0, 0, 0,
  56:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  57:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2,
  58:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3,
  59:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4};
  60:Core/Src/bms.c **** 
  61:Core/Src/bms.c **** static const uint8_t balanceShift[96] =
  62:Core/Src/bms.c ****     {0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  63:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  64:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  65:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  66:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  67:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  68:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  69:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  70:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  71:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80,
  72:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  73:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20,
  74:Core/Src/bms.c ****      0x01, 0x02, 0x04, 0x08, 0x10, 0x20};
  75:Core/Src/bms.c **** 
  76:Core/Src/bms.c **** // Initialize BMS //////////////////////////////////////////////////////////////////
  77:Core/Src/bms.c **** void initBMS(void)
  78:Core/Src/bms.c **** {
  79:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
  80:Core/Src/bms.c ****     {
  81:Core/Src/bms.c ****         BMS[i].state = Boot;
  82:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
  83:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
  84:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
  85:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
  86:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
  87:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
  88:Core/Src/bms.c ****         BMS[i].packVolt = 0;
  89:Core/Src/bms.c ****         BMS[i].SOC = 0;
ARM GAS  /tmp/ccKxHDb6.s 			page 3


  90:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
  91:Core/Src/bms.c **** 
  92:Core/Src/bms.c ****         for (size_t j = 0; j < 96; j++)
  93:Core/Src/bms.c ****         {
  94:Core/Src/bms.c ****             BMS[i].cellVolt[j] = 0;
  95:Core/Src/bms.c ****         }
  96:Core/Src/bms.c **** 
  97:Core/Src/bms.c ****         for (size_t j = 0; j < 16; j++)
  98:Core/Src/bms.c ****         {
  99:Core/Src/bms.c ****             BMS[i].tempSensor[j] = 0;
 100:Core/Src/bms.c ****         }
 101:Core/Src/bms.c ****     }
 102:Core/Src/bms.c ****     //vehicleState = off;
 103:Core/Src/bms.c ****     watchdogBits = 0b0000;
 104:Core/Src/bms.c ****     charged = false;
 105:Core/Src/bms.c **** }
 106:Core/Src/bms.c **** 
 107:Core/Src/bms.c **** // Primary State Machine ///////////////////////////////////////////////////////////////
 108:Core/Src/bms.c **** void bmsStateHandler(bms_t *bms)
 109:Core/Src/bms.c **** {
 110:Core/Src/bms.c ****     switch (bms->state)
 111:Core/Src/bms.c ****     {
 112:Core/Src/bms.c ****     case Boot:
 113:Core/Src/bms.c ****         bms->chargeRequest = 0;
 114:Core/Src/bms.c ****         bms->state = Ready;
 115:Core/Src/bms.c ****        
 116:Core/Src/bms.c ****         break;
 117:Core/Src/bms.c **** 
 118:Core/Src/bms.c ****     case Ready:
 119:Core/Src/bms.c ****         bms->chargeRequest = 0;
 120:Core/Src/bms.c **** 
 121:Core/Src/bms.c ****         if (bms->avgCellVolt > BALANCE_VOLTAGE)
 122:Core/Src/bms.c ****         {
 123:Core/Src/bms.c ****             if ((bms->highCellVolt - bms->lowCellVolt) > (BALANCE_HYS))
 124:Core/Src/bms.c ****             {
 125:Core/Src/bms.c ****                 bms->balancecells = true;
 126:Core/Src/bms.c ****             }
 127:Core/Src/bms.c **** 
 128:Core/Src/bms.c ****             else if ((bms->highCellVolt - bms->lowCellVolt) <= BALANCE_HYS)
 129:Core/Src/bms.c ****             {
 130:Core/Src/bms.c ****                 bms->balancecells = false;
 131:Core/Src/bms.c ****             }
 132:Core/Src/bms.c ****         }
 133:Core/Src/bms.c ****         else
 134:Core/Src/bms.c ****         {
 135:Core/Src/bms.c ****             bms->balancecells = false;
 136:Core/Src/bms.c ****         }
 137:Core/Src/bms.c **** 
 138:Core/Src/bms.c ****         if (bms->highCellVolt < (CHARGE_V_SETPOINT - CHARGE_HYS))
 139:Core/Src/bms.c ****         {
 140:Core/Src/bms.c ****             bms->state = Charge;
 141:Core/Src/bms.c ****         }
 142:Core/Src/bms.c ****         /*
 143:Core/Src/bms.c ****         if (vehicleState != off) //idle || run)
 144:Core/Src/bms.c ****         {
 145:Core/Src/bms.c ****             bms->balancecells = false;
 146:Core/Src/bms.c ****             bms->state = Drive;
ARM GAS  /tmp/ccKxHDb6.s 			page 4


 147:Core/Src/bms.c ****         }*/
 148:Core/Src/bms.c ****         break;
 149:Core/Src/bms.c ****         /*
 150:Core/Src/bms.c ****     case Drive:
 151:Core/Src/bms.c **** 
 152:Core/Src/bms.c ****     
 153:Core/Src/bms.c ****         if (vehicleState == off)
 154:Core/Src/bms.c ****         {
 155:Core/Src/bms.c ****             bms->state = Ready;
 156:Core/Src/bms.c ****         }
 157:Core/Src/bms.c ****         break;
 158:Core/Src/bms.c **** */
 159:Core/Src/bms.c ****     case Charge:
 160:Core/Src/bms.c ****         bms->balancecells = false;
 161:Core/Src/bms.c ****         bms->chargeRequest = 1;
 162:Core/Src/bms.c **** 
 163:Core/Src/bms.c ****         if (bms->highCellVolt > CHARGE_V_SETPOINT || bms->highCellTemp > OVER_T_SETPOINT)
 164:Core/Src/bms.c ****         {
 165:Core/Src/bms.c ****             /*
 166:Core/Src/bms.c ****             if (bms->avgCellVolt > CHARGE_V_SETPOINT - BALANCE_HYS)
 167:Core/Src/bms.c ****             {
 168:Core/Src/bms.c ****                 //SOC charged func
 169:Core/Src/bms.c ****             }
 170:Core/Src/bms.c ****             else
 171:Core/Src/bms.c ****             {
 172:Core/Src/bms.c ****                 //SOC charged func
 173:Core/Src/bms.c ****             }
 174:Core/Src/bms.c ****             */
 175:Core/Src/bms.c ****             bms->chargeRequest = 0;
 176:Core/Src/bms.c ****             bms->state = Ready;
 177:Core/Src/bms.c ****         }
 178:Core/Src/bms.c ****         break;
 179:Core/Src/bms.c **** 
 180:Core/Src/bms.c ****     case Error:
 181:Core/Src/bms.c ****         bms->chargeRequest = 0;
 182:Core/Src/bms.c **** 
 183:Core/Src/bms.c ****         if (bms->lowCellVolt > UNDER_V_SETPOINT && bms->highCellVolt < OVER_V_SETPOINT)
 184:Core/Src/bms.c ****         {
 185:Core/Src/bms.c ****             bms->state = Ready;
 186:Core/Src/bms.c ****         }
 187:Core/Src/bms.c ****         break;
 188:Core/Src/bms.c **** 
 189:Core/Src/bms.c ****     default:
 190:Core/Src/bms.c ****         break;
 191:Core/Src/bms.c ****     }
 192:Core/Src/bms.c **** }
 193:Core/Src/bms.c **** 
 194:Core/Src/bms.c **** // 10kw Tesla Charger /////////////////////////////////////////////////////////////////////
 195:Core/Src/bms.c **** void acChargeCommand(void)
 196:Core/Src/bms.c **** {
 197:Core/Src/bms.c ****     uint8_t canTx2[8];
 198:Core/Src/bms.c ****     if (!charged)
 199:Core/Src/bms.c ****     {
 200:Core/Src/bms.c ****         int val = 32;
 201:Core/Src/bms.c ****         //txMsg2.StdId = 0x605; //set parameter ID
 202:Core/Src/bms.c ****         //txMsg2.DLC = 8;
 203:Core/Src/bms.c ****         canTx2[0] = 0x40;
ARM GAS  /tmp/ccKxHDb6.s 			page 5


 204:Core/Src/bms.c ****         canTx2[1] = 0x00;
 205:Core/Src/bms.c ****         canTx2[2] = 0x20;
 206:Core/Src/bms.c ****         canTx2[3] = 9;
 207:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 208:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 209:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 210:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 211:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 212:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2);
 213:Core/Src/bms.c ****     }
 214:Core/Src/bms.c **** 
 215:Core/Src/bms.c ****     else
 216:Core/Src/bms.c ****     {
 217:Core/Src/bms.c ****         int val = 0;
 218:Core/Src/bms.c ****         //txMsg2.StdId = 0x605; //set parameter ID
 219:Core/Src/bms.c ****         //txMsg2.DLC = 8;
 220:Core/Src/bms.c ****         canTx2[0] = 0x40;
 221:Core/Src/bms.c ****         canTx2[1] = 0x00;
 222:Core/Src/bms.c ****         canTx2[2] = 0x20;
 223:Core/Src/bms.c ****         canTx2[3] = 9;
 224:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 225:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 226:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 227:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 228:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2);
 229:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 230:Core/Src/bms.c ****     }
 231:Core/Src/bms.c **** }
 232:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 233:Core/Src/bms.c **** void tx500kData(void)
 234:Core/Src/bms.c **** {
 235:Core/Src/bms.c **** 
 236:Core/Src/bms.c ****     uint8_t bms0[8];
 237:Core/Src/bms.c ****     bms0[0] = BMS[0].packVolt & 0xFF;
 238:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 239:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 240:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 241:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 242:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 243:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 244:Core/Src/bms.c ****     bms0[7] = 0;
 245:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 246:Core/Src/bms.c **** 
 247:Core/Src/bms.c ****     uint8_t bms1[8];
 248:Core/Src/bms.c ****     bms1[0] = BMS[1].packVolt & 0xFF;
 249:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 250:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 251:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 252:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 253:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 254:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 255:Core/Src/bms.c ****     bms1[7] = 0;
 256:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 257:Core/Src/bms.c **** }
 258:Core/Src/bms.c **** 
 259:Core/Src/bms.c **** void refreshData(void)
 260:Core/Src/bms.c **** {
ARM GAS  /tmp/ccKxHDb6.s 			page 6


 261:Core/Src/bms.c **** 
 262:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 263:Core/Src/bms.c ****     {
 264:Core/Src/bms.c ****         requestBICMdata(&BMS[i], i);
 265:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 266:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 267:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 268:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 269:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 270:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 271:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 272:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 273:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 274:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 275:Core/Src/bms.c ****         getSOC(&BMS[i]);
 276:Core/Src/bms.c ****     }
 277:Core/Src/bms.c **** }
 278:Core/Src/bms.c **** 
 279:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 280:Core/Src/bms.c **** void sendCommand(int pack)
 281:Core/Src/bms.c **** {
 282:Core/Src/bms.c ****     uint8_t canTx[3];
 283:Core/Src/bms.c ****     canTx[0] = 0x02;
 284:Core/Src/bms.c ****     canTx[1] = 0x00;
 285:Core/Src/bms.c ****     canTx[2] = 0x00;
 286:Core/Src/bms.c **** 
 287:Core/Src/bms.c ****     switch (pack)
 288:Core/Src/bms.c ****     {
 289:Core/Src/bms.c ****     case 0:
 290:Core/Src/bms.c ****         can1tx(0x200, 3, canTx);
 291:Core/Src/bms.c ****         break;
 292:Core/Src/bms.c **** 
 293:Core/Src/bms.c ****     case 1:
 294:Core/Src/bms.c ****         can3tx(0x200, 3, canTx);
 295:Core/Src/bms.c ****         break;
 296:Core/Src/bms.c **** 
 297:Core/Src/bms.c ****     default:
 298:Core/Src/bms.c ****         break;
 299:Core/Src/bms.c ****     }
 300:Core/Src/bms.c **** }
 301:Core/Src/bms.c **** 
 302:Core/Src/bms.c **** void requestBICMdata(bms_t *bms, int pack)
 303:Core/Src/bms.c **** {
 304:Core/Src/bms.c **** 
 305:Core/Src/bms.c ****     uint8_t canTx[8];
 306:Core/Src/bms.c ****     if (!bms->balancecells)
 307:Core/Src/bms.c ****     {
 308:Core/Src/bms.c ****         sendCommand(pack);
 309:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 310:Core/Src/bms.c ****         {
 311:Core/Src/bms.c ****             canTx[i] = 0x00;
 312:Core/Src/bms.c ****         }
 313:Core/Src/bms.c ****         switch (pack)
 314:Core/Src/bms.c ****         {
 315:Core/Src/bms.c ****         case 0:
 316:Core/Src/bms.c ****             can1tx(0x300, 8, canTx);
 317:Core/Src/bms.c ****             break;
ARM GAS  /tmp/ccKxHDb6.s 			page 7


 318:Core/Src/bms.c **** 
 319:Core/Src/bms.c ****         case 1:
 320:Core/Src/bms.c ****             can3tx(0x300, 8, canTx);
 321:Core/Src/bms.c ****             break;
 322:Core/Src/bms.c **** 
 323:Core/Src/bms.c ****         default:
 324:Core/Src/bms.c ****             break;
 325:Core/Src/bms.c ****         }
 326:Core/Src/bms.c **** 
 327:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 328:Core/Src/bms.c ****         {
 329:Core/Src/bms.c ****             canTx[i] = 0x00;
 330:Core/Src/bms.c ****         }
 331:Core/Src/bms.c **** 
 332:Core/Src/bms.c ****         switch (pack)
 333:Core/Src/bms.c ****         {
 334:Core/Src/bms.c ****         case 0:
 335:Core/Src/bms.c ****             can1tx(0x310, 5, canTx);
 336:Core/Src/bms.c ****             break;
 337:Core/Src/bms.c **** 
 338:Core/Src/bms.c ****         case 1:
 339:Core/Src/bms.c ****             can3tx(0x310, 5, canTx);
 340:Core/Src/bms.c ****             break;
 341:Core/Src/bms.c **** 
 342:Core/Src/bms.c ****         default:
 343:Core/Src/bms.c ****             break;
 344:Core/Src/bms.c ****         }
 345:Core/Src/bms.c ****     }
 346:Core/Src/bms.c **** }
 347:Core/Src/bms.c **** 
 348:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 349:Core/Src/bms.c **** void balanceCommand(bms_t *bms, int pack)
 350:Core/Src/bms.c **** {
 351:Core/Src/bms.c ****     sendCommand(pack);
 352:Core/Src/bms.c ****     uint8_t balance[8];
 353:Core/Src/bms.c **** 
 354:Core/Src/bms.c ****     switch (pack)
 355:Core/Src/bms.c ****     {
 356:Core/Src/bms.c ****     case 0:
 357:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 358:Core/Src/bms.c ****         {
 359:Core/Src/bms.c ****             balance[i] = 0;
 360:Core/Src/bms.c ****         }
 361:Core/Src/bms.c **** 
 362:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 363:Core/Src/bms.c ****         {
 364:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 365:Core/Src/bms.c ****             {
 366:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 367:Core/Src/bms.c ****             }
 368:Core/Src/bms.c ****         }
 369:Core/Src/bms.c ****         can1tx(0x300, 8, balance);
 370:Core/Src/bms.c **** 
 371:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 372:Core/Src/bms.c ****         {
 373:Core/Src/bms.c ****             balance[i] = 0;
 374:Core/Src/bms.c ****         }
ARM GAS  /tmp/ccKxHDb6.s 			page 8


 375:Core/Src/bms.c **** 
 376:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 377:Core/Src/bms.c ****         {
 378:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 379:Core/Src/bms.c ****             {
 380:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 381:Core/Src/bms.c ****             }
 382:Core/Src/bms.c ****         }
 383:Core/Src/bms.c ****         can1tx(0x310, 5, balance);
 384:Core/Src/bms.c ****         break;
 385:Core/Src/bms.c **** 
 386:Core/Src/bms.c ****     case 1:
 387:Core/Src/bms.c **** 
 388:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 389:Core/Src/bms.c ****         {
 390:Core/Src/bms.c ****             balance[i] = 0;
 391:Core/Src/bms.c ****         }
 392:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 393:Core/Src/bms.c ****         {
 394:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 395:Core/Src/bms.c ****             {
 396:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 397:Core/Src/bms.c ****             }
 398:Core/Src/bms.c ****         }
 399:Core/Src/bms.c ****         can3tx(0x300, 8, balance);
 400:Core/Src/bms.c **** 
 401:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 402:Core/Src/bms.c ****         {
 403:Core/Src/bms.c ****             balance[i] = 0;
 404:Core/Src/bms.c ****         }
 405:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 406:Core/Src/bms.c ****         {
 407:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 408:Core/Src/bms.c ****             {
 409:Core/Src/bms.c ****                 balance[balanceByte[i]] |= balanceShift[i];
 410:Core/Src/bms.c ****             }
 411:Core/Src/bms.c ****         }
 412:Core/Src/bms.c ****         can3tx(0x310, 5, balance);
 413:Core/Src/bms.c ****         break;
 414:Core/Src/bms.c **** 
 415:Core/Src/bms.c ****     default:
 416:Core/Src/bms.c ****         break;
 417:Core/Src/bms.c ****     }
 418:Core/Src/bms.c **** }
 419:Core/Src/bms.c **** 
 420:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 421:Core/Src/bms.c **** void getSOC(bms_t *bms)
 422:Core/Src/bms.c **** {
  27              		.loc 1 422 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 423:Core/Src/bms.c ****     bms->SOC = MAP(bms->avgCellVolt, SOC_VOLT_10, SOC_VOLT_90, 10, 90);
  33              		.loc 1 423 0
  34 0000 B0F8E620 		ldrh	r2, [r0, #230]
ARM GAS  /tmp/ccKxHDb6.s 			page 9


  35 0004 A2F61C42 		subw	r2, r2, #3100
  36 0008 02EB8202 		add	r2, r2, r2, lsl #2
  37 000c 1301     		lsls	r3, r2, #4
  38 000e 054A     		ldr	r2, .L2
  39 0010 82FB0312 		smull	r1, r2, r2, r3
  40 0014 DB17     		asrs	r3, r3, #31
  41 0016 C3EBA213 		rsb	r3, r3, r2, asr #6
  42 001a 0A33     		adds	r3, r3, #10
  43 001c 80F8F330 		strb	r3, [r0, #243]
  44 0020 7047     		bx	lr
  45              	.L3:
  46 0022 00BF     		.align	2
  47              	.L2:
  48 0024 D34D6210 		.word	274877907
  49              		.cfi_endproc
  50              	.LFE139:
  52              		.section	.text.getHighCellVolt,"ax",%progbits
  53              		.align	1
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	getHighCellVolt:
  60              	.LFB140:
 424:Core/Src/bms.c ****     /*
 425:Core/Src/bms.c ****     // subtract the last reading:
 426:Core/Src/bms.c ****     total = total - readings[readIndex];
 427:Core/Src/bms.c ****     // read from the sensor:
 428:Core/Src/bms.c ****     readings[readIndex] = bms->SOC;
 429:Core/Src/bms.c ****     // add the reading to the total:
 430:Core/Src/bms.c ****     total = total + readings[readIndex];
 431:Core/Src/bms.c ****     // advance to the next position in the array:
 432:Core/Src/bms.c ****     readIndex = readIndex + 1;
 433:Core/Src/bms.c ****     // if we're at the end of the array...
 434:Core/Src/bms.c ****     if (readIndex >= numReadings)
 435:Core/Src/bms.c ****     {
 436:Core/Src/bms.c ****         // ...wrap around to the beginning:
 437:Core/Src/bms.c ****         readIndex = 0;
 438:Core/Src/bms.c ****     }
 439:Core/Src/bms.c ****     // calculate the average:
 440:Core/Src/bms.c ****     average = total / numReadings;
 441:Core/Src/bms.c ****     */
 442:Core/Src/bms.c **** }
 443:Core/Src/bms.c **** 
 444:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 445:Core/Src/bms.c **** void getHighCellVolt(bms_t *bms)
 446:Core/Src/bms.c **** {
  61              		.loc 1 446 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL1:
 447:Core/Src/bms.c ****     bms->highCellVolt = 0;
  67              		.loc 1 447 0
  68 0000 0023     		movs	r3, #0
  69 0002 A0F8E430 		strh	r3, [r0, #228]	@ movhi
ARM GAS  /tmp/ccKxHDb6.s 			page 10


  70              	.LVL2:
  71              	.LBB2:
 448:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
  72              		.loc 1 448 0
  73 0006 00E0     		b	.L5
  74              	.LVL3:
  75              	.L6:
  76              		.loc 1 448 0 is_stmt 0 discriminator 2
  77 0008 0133     		adds	r3, r3, #1
  78              	.LVL4:
  79              	.L5:
  80              		.loc 1 448 0 discriminator 1
  81 000a 5F2B     		cmp	r3, #95
  82 000c 08D8     		bhi	.L8
 449:Core/Src/bms.c ****     {
 450:Core/Src/bms.c ****         if (bms->cellVolt[i] > bms->highCellVolt)
  83              		.loc 1 450 0 is_stmt 1
  84 000e 30F81320 		ldrh	r2, [r0, r3, lsl #1]
  85 0012 B0F8E410 		ldrh	r1, [r0, #228]
  86 0016 8A42     		cmp	r2, r1
  87 0018 F6D9     		bls	.L6
 451:Core/Src/bms.c ****         {
 452:Core/Src/bms.c ****             bms->highCellVolt = bms->cellVolt[i];
  88              		.loc 1 452 0
  89 001a A0F8E420 		strh	r2, [r0, #228]	@ movhi
  90 001e F3E7     		b	.L6
  91              	.L8:
  92              	.LBE2:
 453:Core/Src/bms.c ****         }
 454:Core/Src/bms.c ****     }
 455:Core/Src/bms.c **** }
  93              		.loc 1 455 0
  94 0020 7047     		bx	lr
  95              		.cfi_endproc
  96              	.LFE140:
  98              		.section	.text.getHighCellTemp,"ax",%progbits
  99              		.align	1
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu fpv4-sp-d16
 105              	getHighCellTemp:
 106              	.LFB141:
 456:Core/Src/bms.c **** 
 457:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 458:Core/Src/bms.c **** void getHighCellTemp(bms_t *bms)
 459:Core/Src/bms.c **** {
 107              		.loc 1 459 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112              	.LVL5:
 460:Core/Src/bms.c ****     bms->highCellTemp = 0;
 113              		.loc 1 460 0
 114 0000 0023     		movs	r3, #0
 115 0002 A0F8EA30 		strh	r3, [r0, #234]	@ movhi
ARM GAS  /tmp/ccKxHDb6.s 			page 11


 116              	.LVL6:
 117              	.LBB3:
 461:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 118              		.loc 1 461 0
 119 0006 00E0     		b	.L10
 120              	.LVL7:
 121              	.L11:
 122              		.loc 1 461 0 is_stmt 0 discriminator 2
 123 0008 0133     		adds	r3, r3, #1
 124              	.LVL8:
 125              	.L10:
 126              		.loc 1 461 0 discriminator 1
 127 000a 0F2B     		cmp	r3, #15
 128 000c 0AD8     		bhi	.L13
 462:Core/Src/bms.c ****     {
 463:Core/Src/bms.c ****         if (bms->tempSensor[i] > bms->highCellTemp)
 129              		.loc 1 463 0 is_stmt 1
 130 000e 03F16002 		add	r2, r3, #96
 131 0012 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 132 0016 B0F8EA10 		ldrh	r1, [r0, #234]
 133 001a 8A42     		cmp	r2, r1
 134 001c F4D9     		bls	.L11
 464:Core/Src/bms.c ****         {
 465:Core/Src/bms.c ****             bms->highCellTemp = bms->tempSensor[i];
 135              		.loc 1 465 0
 136 001e A0F8EA20 		strh	r2, [r0, #234]	@ movhi
 137 0022 F1E7     		b	.L11
 138              	.L13:
 139              	.LBE3:
 466:Core/Src/bms.c ****         }
 467:Core/Src/bms.c ****     }
 468:Core/Src/bms.c **** }
 140              		.loc 1 468 0
 141 0024 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE141:
 145              		.section	.text.getLowCellTemp,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	getLowCellTemp:
 153              	.LFB142:
 469:Core/Src/bms.c **** 
 470:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 471:Core/Src/bms.c **** void getLowCellTemp(bms_t *bms)
 472:Core/Src/bms.c **** {
 154              		.loc 1 472 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              	.LVL9:
 473:Core/Src/bms.c ****     bms->lowCellTemp = 20000;
 160              		.loc 1 473 0
 161 0000 44F62063 		movw	r3, #20000
ARM GAS  /tmp/ccKxHDb6.s 			page 12


 162 0004 A0F8EC30 		strh	r3, [r0, #236]	@ movhi
 163              	.LVL10:
 164              	.LBB4:
 474:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 165              		.loc 1 474 0
 166 0008 0023     		movs	r3, #0
 167 000a 00E0     		b	.L15
 168              	.LVL11:
 169              	.L16:
 170              		.loc 1 474 0 is_stmt 0 discriminator 2
 171 000c 0133     		adds	r3, r3, #1
 172              	.LVL12:
 173              	.L15:
 174              		.loc 1 474 0 discriminator 1
 175 000e 0F2B     		cmp	r3, #15
 176 0010 0CD8     		bhi	.L18
 475:Core/Src/bms.c ****     {
 476:Core/Src/bms.c ****         if (bms->tempSensor[i] > 0)
 177              		.loc 1 476 0 is_stmt 1
 178 0012 03F16002 		add	r2, r3, #96
 179 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 180 001a 002A     		cmp	r2, #0
 181 001c F6D0     		beq	.L16
 477:Core/Src/bms.c ****         {
 478:Core/Src/bms.c ****             if (bms->tempSensor[i] < bms->lowCellTemp)
 182              		.loc 1 478 0
 183 001e B0F8EC10 		ldrh	r1, [r0, #236]
 184 0022 8A42     		cmp	r2, r1
 185 0024 F2D2     		bcs	.L16
 479:Core/Src/bms.c ****             {
 480:Core/Src/bms.c ****                 bms->lowCellTemp = bms->tempSensor[i];
 186              		.loc 1 480 0
 187 0026 A0F8EC20 		strh	r2, [r0, #236]	@ movhi
 188 002a EFE7     		b	.L16
 189              	.L18:
 190              	.LBE4:
 481:Core/Src/bms.c ****             }
 482:Core/Src/bms.c ****         }
 483:Core/Src/bms.c ****     }
 484:Core/Src/bms.c **** }
 191              		.loc 1 484 0
 192 002c 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE142:
 196              		.section	.text.getAvgCellTemp,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	getAvgCellTemp:
 204              	.LFB143:
 485:Core/Src/bms.c **** 
 486:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 487:Core/Src/bms.c **** void getAvgCellTemp(bms_t *bms)
 488:Core/Src/bms.c **** {
 205              		.loc 1 488 0
ARM GAS  /tmp/ccKxHDb6.s 			page 13


 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 210              	.LVL13:
 211 0000 10B4     		push	{r4}
 212              	.LCFI0:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 4, -4
 215              	.LVL14:
 216              	.LBB5:
 489:Core/Src/bms.c ****     int zeroCounter = 0;
 490:Core/Src/bms.c ****     int sumTemp = 0;
 491:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 217              		.loc 1 491 0
 218 0002 0023     		movs	r3, #0
 219              	.LBE5:
 490:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 220              		.loc 1 490 0
 221 0004 1946     		mov	r1, r3
 489:Core/Src/bms.c ****     int zeroCounter = 0;
 222              		.loc 1 489 0
 223 0006 1C46     		mov	r4, r3
 224              	.LBB6:
 225              		.loc 1 491 0
 226 0008 01E0     		b	.L20
 227              	.LVL15:
 228              	.L21:
 492:Core/Src/bms.c ****     {
 493:Core/Src/bms.c ****         if (bms->tempSensor[i] == 0) //IGNORE_TEMP)
 494:Core/Src/bms.c ****         {
 495:Core/Src/bms.c ****             zeroCounter++;
 496:Core/Src/bms.c ****         }
 497:Core/Src/bms.c **** 
 498:Core/Src/bms.c ****         sumTemp += bms->tempSensor[i];
 229              		.loc 1 498 0 discriminator 2
 230 000a 1144     		add	r1, r1, r2
 231              	.LVL16:
 491:Core/Src/bms.c ****     {
 232              		.loc 1 491 0 discriminator 2
 233 000c 0133     		adds	r3, r3, #1
 234              	.LVL17:
 235              	.L20:
 491:Core/Src/bms.c ****     {
 236              		.loc 1 491 0 is_stmt 0 discriminator 1
 237 000e 0F2B     		cmp	r3, #15
 238 0010 07D8     		bhi	.L24
 493:Core/Src/bms.c ****         {
 239              		.loc 1 493 0 is_stmt 1
 240 0012 03F16002 		add	r2, r3, #96
 241 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 242 001a 002A     		cmp	r2, #0
 243 001c F5D1     		bne	.L21
 495:Core/Src/bms.c ****         }
 244              		.loc 1 495 0
 245 001e 0134     		adds	r4, r4, #1
 246              	.LVL18:
ARM GAS  /tmp/ccKxHDb6.s 			page 14


 247 0020 F3E7     		b	.L21
 248              	.L24:
 249              	.LBE6:
 499:Core/Src/bms.c ****     }
 500:Core/Src/bms.c ****     bms->avgCellTemp = (sumTemp / (16 - zeroCounter));
 250              		.loc 1 500 0
 251 0022 C4F11004 		rsb	r4, r4, #16
 252              	.LVL19:
 253 0026 91FBF4F1 		sdiv	r1, r1, r4
 254              	.LVL20:
 255 002a A0F8EE10 		strh	r1, [r0, #238]	@ movhi
 501:Core/Src/bms.c **** }
 256              		.loc 1 501 0
 257 002e 5DF8044B 		ldr	r4, [sp], #4
 258              	.LCFI1:
 259              		.cfi_restore 4
 260              		.cfi_def_cfa_offset 0
 261 0032 7047     		bx	lr
 262              		.cfi_endproc
 263              	.LFE143:
 265              		.section	.text.getTempDelta,"ax",%progbits
 266              		.align	1
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv4-sp-d16
 272              	getTempDelta:
 273              	.LFB144:
 502:Core/Src/bms.c **** 
 503:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 504:Core/Src/bms.c **** void getTempDelta(bms_t *bms)
 505:Core/Src/bms.c **** {
 274              		.loc 1 505 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279              	.LVL21:
 506:Core/Src/bms.c ****     bms->tempDelta = bms->highCellTemp - bms->lowCellTemp;
 280              		.loc 1 506 0
 281 0000 B0F8EA30 		ldrh	r3, [r0, #234]
 282 0004 B0F8EC20 		ldrh	r2, [r0, #236]
 283 0008 9B1A     		subs	r3, r3, r2
 284 000a A0F8F030 		strh	r3, [r0, #240]	@ movhi
 285 000e 7047     		bx	lr
 286              		.cfi_endproc
 287              	.LFE144:
 289              		.section	.text.getCellDelta,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	getCellDelta:
 297              	.LFB145:
 507:Core/Src/bms.c **** }
 508:Core/Src/bms.c **** 
ARM GAS  /tmp/ccKxHDb6.s 			page 15


 509:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 510:Core/Src/bms.c **** void getCellDelta(bms_t *bms)
 511:Core/Src/bms.c **** {
 298              		.loc 1 511 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              	.LVL22:
 512:Core/Src/bms.c ****     bms->cellDelta = bms->highCellVolt - bms->lowCellVolt;
 304              		.loc 1 512 0
 305 0000 B0F8E430 		ldrh	r3, [r0, #228]
 306 0004 B0F8E220 		ldrh	r2, [r0, #226]
 307 0008 9B1A     		subs	r3, r3, r2
 308 000a A0F8E830 		strh	r3, [r0, #232]	@ movhi
 309 000e 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE145:
 313              		.section	.text.getLowCellVolt,"ax",%progbits
 314              		.align	1
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	getLowCellVolt:
 321              	.LFB146:
 513:Core/Src/bms.c **** }
 514:Core/Src/bms.c **** 
 515:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 516:Core/Src/bms.c **** void getLowCellVolt(bms_t *bms)
 517:Core/Src/bms.c **** {
 322              		.loc 1 517 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327              	.LVL23:
 518:Core/Src/bms.c ****     bms->lowCellVolt = 5000;
 328              		.loc 1 518 0
 329 0000 41F28833 		movw	r3, #5000
 330 0004 A0F8E230 		strh	r3, [r0, #226]	@ movhi
 331              	.LVL24:
 332              	.LBB7:
 519:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 333              		.loc 1 519 0
 334 0008 0023     		movs	r3, #0
 335 000a 00E0     		b	.L28
 336              	.LVL25:
 337              	.L29:
 338              		.loc 1 519 0 is_stmt 0 discriminator 2
 339 000c 0133     		adds	r3, r3, #1
 340              	.LVL26:
 341              	.L28:
 342              		.loc 1 519 0 discriminator 1
 343 000e 5F2B     		cmp	r3, #95
 344 0010 08D8     		bhi	.L31
 520:Core/Src/bms.c ****     {
ARM GAS  /tmp/ccKxHDb6.s 			page 16


 521:Core/Src/bms.c ****         if (bms->cellVolt[i] < bms->lowCellVolt)
 345              		.loc 1 521 0 is_stmt 1
 346 0012 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 347 0016 B0F8E210 		ldrh	r1, [r0, #226]
 348 001a 8A42     		cmp	r2, r1
 349 001c F6D2     		bcs	.L29
 522:Core/Src/bms.c ****         {
 523:Core/Src/bms.c ****             bms->lowCellVolt = bms->cellVolt[i];
 350              		.loc 1 523 0
 351 001e A0F8E220 		strh	r2, [r0, #226]	@ movhi
 352 0022 F3E7     		b	.L29
 353              	.L31:
 354              	.LBE7:
 524:Core/Src/bms.c ****         }
 525:Core/Src/bms.c ****     }
 526:Core/Src/bms.c **** }
 355              		.loc 1 526 0
 356 0024 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE146:
 360              		.section	.text.getAvgCellVolt,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 365              		.fpu fpv4-sp-d16
 367              	getAvgCellVolt:
 368              	.LFB147:
 527:Core/Src/bms.c **** 
 528:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 529:Core/Src/bms.c **** void getAvgCellVolt(bms_t *bms)
 530:Core/Src/bms.c **** {
 369              		.loc 1 530 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL27:
 375              	.LBB8:
 531:Core/Src/bms.c **** 
 532:Core/Src/bms.c ****     int cellSum = 0;
 533:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 376              		.loc 1 533 0
 377 0000 0023     		movs	r3, #0
 378              	.LBE8:
 532:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 379              		.loc 1 532 0
 380 0002 1A46     		mov	r2, r3
 381              	.LBB9:
 382              		.loc 1 533 0
 383 0004 03E0     		b	.L33
 384              	.LVL28:
 385              	.L34:
 534:Core/Src/bms.c ****     {
 535:Core/Src/bms.c **** 
 536:Core/Src/bms.c ****         cellSum += bms->cellVolt[i];
 386              		.loc 1 536 0 discriminator 3
ARM GAS  /tmp/ccKxHDb6.s 			page 17


 387 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 388 000a 0A44     		add	r2, r2, r1
 389              	.LVL29:
 533:Core/Src/bms.c ****     {
 390              		.loc 1 533 0 discriminator 3
 391 000c 0133     		adds	r3, r3, #1
 392              	.LVL30:
 393              	.L33:
 533:Core/Src/bms.c ****     {
 394              		.loc 1 533 0 is_stmt 0 discriminator 1
 395 000e 5F2B     		cmp	r3, #95
 396 0010 F9D9     		bls	.L34
 397              	.LBE9:
 537:Core/Src/bms.c ****     }
 538:Core/Src/bms.c ****     bms->avgCellVolt = (cellSum / 96);
 398              		.loc 1 538 0 is_stmt 1
 399 0012 0449     		ldr	r1, .L35
 400 0014 81FB0231 		smull	r3, r1, r1, r2
 401              	.LVL31:
 402 0018 D317     		asrs	r3, r2, #31
 403 001a C3EB2113 		rsb	r3, r3, r1, asr #4
 404 001e A0F8E630 		strh	r3, [r0, #230]	@ movhi
 405 0022 7047     		bx	lr
 406              	.L36:
 407              		.align	2
 408              	.L35:
 409 0024 ABAAAA2A 		.word	715827883
 410              		.cfi_endproc
 411              	.LFE147:
 413              		.section	.text.getPackVolt,"ax",%progbits
 414              		.align	1
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 418              		.fpu fpv4-sp-d16
 420              	getPackVolt:
 421              	.LFB148:
 539:Core/Src/bms.c **** }
 540:Core/Src/bms.c **** 
 541:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 542:Core/Src/bms.c **** void getPackVolt(bms_t *bms)
 543:Core/Src/bms.c **** {
 422              		.loc 1 543 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427              	.LVL32:
 428              	.LBB10:
 544:Core/Src/bms.c ****     uint32_t packSum = 0;
 545:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 429              		.loc 1 545 0
 430 0000 0023     		movs	r3, #0
 431              	.LBE10:
 544:Core/Src/bms.c ****     uint32_t packSum = 0;
 432              		.loc 1 544 0
 433 0002 1A46     		mov	r2, r3
ARM GAS  /tmp/ccKxHDb6.s 			page 18


 434              	.LBB11:
 435              		.loc 1 545 0
 436 0004 03E0     		b	.L38
 437              	.LVL33:
 438              	.L39:
 546:Core/Src/bms.c ****     {
 547:Core/Src/bms.c ****         packSum += bms->cellVolt[i];
 439              		.loc 1 547 0 discriminator 3
 440 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 441 000a 0A44     		add	r2, r2, r1
 442              	.LVL34:
 545:Core/Src/bms.c ****     {
 443              		.loc 1 545 0 discriminator 3
 444 000c 0133     		adds	r3, r3, #1
 445              	.LVL35:
 446              	.L38:
 545:Core/Src/bms.c ****     {
 447              		.loc 1 545 0 is_stmt 0 discriminator 1
 448 000e 5F2B     		cmp	r3, #95
 449 0010 F9D9     		bls	.L39
 450              	.LBE11:
 548:Core/Src/bms.c ****     }
 549:Core/Src/bms.c ****     bms->packVolt = packSum / 10;
 451              		.loc 1 549 0 is_stmt 1
 452 0012 034B     		ldr	r3, .L40
 453              	.LVL36:
 454 0014 A3FB0223 		umull	r2, r3, r3, r2
 455              	.LVL37:
 456 0018 DB08     		lsrs	r3, r3, #3
 457 001a A0F8E030 		strh	r3, [r0, #224]	@ movhi
 458 001e 7047     		bx	lr
 459              	.L41:
 460              		.align	2
 461              	.L40:
 462 0020 CDCCCCCC 		.word	-858993459
 463              		.cfi_endproc
 464              	.LFE148:
 466              		.section	.text.getCellCount,"ax",%progbits
 467              		.align	1
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	getCellCount:
 474              	.LFB149:
 550:Core/Src/bms.c **** }
 551:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 552:Core/Src/bms.c **** void getCellCount(bms_t *bms, int pack)
 553:Core/Src/bms.c **** {
 475              		.loc 1 553 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480              	.LVL38:
 481 0000 10B4     		push	{r4}
 482              	.LCFI2:
ARM GAS  /tmp/ccKxHDb6.s 			page 19


 483              		.cfi_def_cfa_offset 4
 484              		.cfi_offset 4, -4
 485              	.LVL39:
 486              	.LBB12:
 554:Core/Src/bms.c ****     uint16_t cellCount = 0;
 555:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 487              		.loc 1 555 0
 488 0002 0023     		movs	r3, #0
 489              	.LBE12:
 554:Core/Src/bms.c ****     uint16_t cellCount = 0;
 490              		.loc 1 554 0
 491 0004 1A46     		mov	r2, r3
 492              	.LBB13:
 493              		.loc 1 555 0
 494 0006 00E0     		b	.L43
 495              	.LVL40:
 496              	.L44:
 497              		.loc 1 555 0 is_stmt 0 discriminator 2
 498 0008 0133     		adds	r3, r3, #1
 499              	.LVL41:
 500              	.L43:
 501              		.loc 1 555 0 discriminator 1
 502 000a 5F2B     		cmp	r3, #95
 503 000c 07D8     		bhi	.L48
 556:Core/Src/bms.c ****     {
 557:Core/Src/bms.c ****         if (bms->cellVolt[i] > IGNORE_VOLT)
 504              		.loc 1 557 0 is_stmt 1
 505 000e 30F81340 		ldrh	r4, [r0, r3, lsl #1]
 506 0012 B4F5FA7F 		cmp	r4, #500
 507 0016 F7D9     		bls	.L44
 558:Core/Src/bms.c ****         {
 559:Core/Src/bms.c ****             cellCount++;
 508              		.loc 1 559 0
 509 0018 0132     		adds	r2, r2, #1
 510              	.LVL42:
 511 001a 92B2     		uxth	r2, r2
 512              	.LVL43:
 513 001c F4E7     		b	.L44
 514              	.L48:
 515              	.LBE13:
 560:Core/Src/bms.c ****         }
 561:Core/Src/bms.c ****     }
 562:Core/Src/bms.c ****     if (cellCount != 96)
 516              		.loc 1 562 0
 517 001e 602A     		cmp	r2, #96
 518 0020 06D0     		beq	.L42
 563:Core/Src/bms.c ****     {
 564:Core/Src/bms.c ****         BMS[pack].state = Error;
 519              		.loc 1 564 0
 520 0022 F622     		movs	r2, #246
 521              	.LVL44:
 522 0024 044B     		ldr	r3, .L49
 523              	.LVL45:
 524 0026 02FB0131 		mla	r1, r2, r1, r3
 525              	.LVL46:
 526 002a 0423     		movs	r3, #4
 527 002c 81F8F230 		strb	r3, [r1, #242]
ARM GAS  /tmp/ccKxHDb6.s 			page 20


 528              	.L42:
 565:Core/Src/bms.c ****     }
 566:Core/Src/bms.c **** }
 529              		.loc 1 566 0
 530 0030 5DF8044B 		ldr	r4, [sp], #4
 531              	.LCFI3:
 532              		.cfi_restore 4
 533              		.cfi_def_cfa_offset 0
 534 0034 7047     		bx	lr
 535              	.L50:
 536 0036 00BF     		.align	2
 537              	.L49:
 538 0038 00000000 		.word	BMS
 539              		.cfi_endproc
 540              	.LFE149:
 542              		.section	.text.initBMS,"ax",%progbits
 543              		.align	1
 544              		.global	initBMS
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 548              		.fpu fpv4-sp-d16
 550              	initBMS:
 551              	.LFB131:
  78:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 552              		.loc 1 78 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557              	.LVL47:
 558              	.LBB14:
  79:Core/Src/bms.c ****     {
 559              		.loc 1 79 0
 560 0000 0021     		movs	r1, #0
 561              	.LVL48:
 562 0002 0129     		cmp	r1, #1
 563 0004 41D8     		bhi	.L62
 564              	.LBE14:
  78:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 565              		.loc 1 78 0
 566 0006 10B4     		push	{r4}
 567              	.LCFI4:
 568              		.cfi_def_cfa_offset 4
 569              		.cfi_offset 4, -4
 570 0008 1DE0     		b	.L57
 571              	.LVL49:
 572              	.L54:
 573              	.LBB18:
 574              	.LBB15:
  94:Core/Src/bms.c ****         }
 575              		.loc 1 94 0 discriminator 3
 576 000a C1EB4113 		rsb	r3, r1, r1, lsl #5
 577 000e C1EB8303 		rsb	r3, r1, r3, lsl #2
 578 0012 1344     		add	r3, r3, r2
 579 0014 0024     		movs	r4, #0
 580 0016 2048     		ldr	r0, .L64
ARM GAS  /tmp/ccKxHDb6.s 			page 21


 581 0018 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  92:Core/Src/bms.c ****         {
 582              		.loc 1 92 0 discriminator 3
 583 001c 0132     		adds	r2, r2, #1
 584              	.LVL50:
 585              	.L53:
  92:Core/Src/bms.c ****         {
 586              		.loc 1 92 0 is_stmt 0 discriminator 1
 587 001e 5F2A     		cmp	r2, #95
 588 0020 F3D9     		bls	.L54
 589 0022 0022     		movs	r2, #0
 590              	.LVL51:
 591 0024 0AE0     		b	.L55
 592              	.LVL52:
 593              	.L56:
 594              	.LBE15:
 595              	.LBB16:
  99:Core/Src/bms.c ****         }
 596              		.loc 1 99 0 is_stmt 1 discriminator 3
 597 0026 C1EB4113 		rsb	r3, r1, r1, lsl #5
 598 002a C1EB8303 		rsb	r3, r1, r3, lsl #2
 599 002e 1344     		add	r3, r3, r2
 600 0030 6033     		adds	r3, r3, #96
 601 0032 0024     		movs	r4, #0
 602 0034 1848     		ldr	r0, .L64
 603 0036 20F81340 		strh	r4, [r0, r3, lsl #1]	@ movhi
  97:Core/Src/bms.c ****         {
 604              		.loc 1 97 0 discriminator 3
 605 003a 0132     		adds	r2, r2, #1
 606              	.LVL53:
 607              	.L55:
  97:Core/Src/bms.c ****         {
 608              		.loc 1 97 0 is_stmt 0 discriminator 1
 609 003c 0F2A     		cmp	r2, #15
 610 003e F2D9     		bls	.L56
 611              	.LBE16:
  79:Core/Src/bms.c ****     {
 612              		.loc 1 79 0 is_stmt 1 discriminator 2
 613 0040 0131     		adds	r1, r1, #1
 614              	.LVL54:
 615 0042 0129     		cmp	r1, #1
 616 0044 19D8     		bhi	.L63
 617              	.LVL55:
 618              	.L57:
  81:Core/Src/bms.c ****         BMS[i].cellDelta = 0;
 619              		.loc 1 81 0
 620 0046 F623     		movs	r3, #246
 621 0048 134A     		ldr	r2, .L64
 622 004a 03FB0123 		mla	r3, r3, r1, r2
 623 004e 0022     		movs	r2, #0
 624 0050 83F8F220 		strb	r2, [r3, #242]
  82:Core/Src/bms.c ****         BMS[i].highCellTemp = 0;
 625              		.loc 1 82 0
 626 0054 A3F8E820 		strh	r2, [r3, #232]	@ movhi
  83:Core/Src/bms.c ****         BMS[i].chargeRequest = 0;
 627              		.loc 1 83 0
 628 0058 A3F8EA20 		strh	r2, [r3, #234]	@ movhi
ARM GAS  /tmp/ccKxHDb6.s 			page 22


  84:Core/Src/bms.c ****         BMS[i].highCellVolt = 0;
 629              		.loc 1 84 0
 630 005c 83F8F420 		strb	r2, [r3, #244]
  85:Core/Src/bms.c ****         BMS[i].lowCellVolt = 0;
 631              		.loc 1 85 0
 632 0060 A3F8E420 		strh	r2, [r3, #228]	@ movhi
  86:Core/Src/bms.c ****         BMS[i].lowCellTemp = 0;
 633              		.loc 1 86 0
 634 0064 A3F8E220 		strh	r2, [r3, #226]	@ movhi
  87:Core/Src/bms.c ****         BMS[i].packVolt = 0;
 635              		.loc 1 87 0
 636 0068 A3F8EC20 		strh	r2, [r3, #236]	@ movhi
  88:Core/Src/bms.c ****         BMS[i].SOC = 0;
 637              		.loc 1 88 0
 638 006c A3F8E020 		strh	r2, [r3, #224]	@ movhi
  89:Core/Src/bms.c ****         BMS[i].tempDelta = 0;
 639              		.loc 1 89 0
 640 0070 83F8F320 		strb	r2, [r3, #243]
  90:Core/Src/bms.c **** 
 641              		.loc 1 90 0
 642 0074 A3F8F020 		strh	r2, [r3, #240]	@ movhi
 643              	.LVL56:
 644              	.LBB17:
  92:Core/Src/bms.c ****         {
 645              		.loc 1 92 0
 646 0078 D1E7     		b	.L53
 647              	.LVL57:
 648              	.L63:
 649              	.LBE17:
 650              	.LBE18:
 103:Core/Src/bms.c ****     charged = false;
 651              		.loc 1 103 0
 652 007a 0023     		movs	r3, #0
 653 007c 074A     		ldr	r2, .L64+4
 654              	.LVL58:
 655 007e 1370     		strb	r3, [r2]
 104:Core/Src/bms.c **** }
 656              		.loc 1 104 0
 657 0080 074A     		ldr	r2, .L64+8
 658 0082 1370     		strb	r3, [r2]
 105:Core/Src/bms.c **** 
 659              		.loc 1 105 0
 660 0084 5DF8044B 		ldr	r4, [sp], #4
 661              	.LCFI5:
 662              		.cfi_restore 4
 663              		.cfi_def_cfa_offset 0
 664 0088 7047     		bx	lr
 665              	.L62:
 103:Core/Src/bms.c ****     charged = false;
 666              		.loc 1 103 0
 667 008a 0023     		movs	r3, #0
 668 008c 034A     		ldr	r2, .L64+4
 669 008e 1370     		strb	r3, [r2]
 104:Core/Src/bms.c **** }
 670              		.loc 1 104 0
 671 0090 034A     		ldr	r2, .L64+8
 672 0092 1370     		strb	r3, [r2]
ARM GAS  /tmp/ccKxHDb6.s 			page 23


 673 0094 7047     		bx	lr
 674              	.L65:
 675 0096 00BF     		.align	2
 676              	.L64:
 677 0098 00000000 		.word	BMS
 678 009c 00000000 		.word	watchdogBits
 679 00a0 00000000 		.word	charged
 680              		.cfi_endproc
 681              	.LFE131:
 683              		.section	.text.bmsStateHandler,"ax",%progbits
 684              		.align	1
 685              		.global	bmsStateHandler
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 689              		.fpu fpv4-sp-d16
 691              	bmsStateHandler:
 692              	.LFB132:
 109:Core/Src/bms.c ****     switch (bms->state)
 693              		.loc 1 109 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 698              	.LVL59:
 110:Core/Src/bms.c ****     {
 699              		.loc 1 110 0
 700 0000 90F8F230 		ldrb	r3, [r0, #242]	@ zero_extendqisi2
 701 0004 042B     		cmp	r3, #4
 702 0006 5AD8     		bhi	.L66
 703 0008 DFE803F0 		tbb	[pc, r3]
 704              	.L69:
 705 000c 03       		.byte	(.L68-.L69)/2
 706 000d 0A       		.byte	(.L70-.L69)/2
 707 000e 59       		.byte	(.L66-.L69)/2
 708 000f 2F       		.byte	(.L71-.L69)/2
 709 0010 48       		.byte	(.L72-.L69)/2
 710 0011 00       		.p2align 1
 711              	.L68:
 113:Core/Src/bms.c ****         bms->state = Ready;
 712              		.loc 1 113 0
 713 0012 0023     		movs	r3, #0
 714 0014 80F8F430 		strb	r3, [r0, #244]
 114:Core/Src/bms.c ****        
 715              		.loc 1 114 0
 716 0018 0123     		movs	r3, #1
 717 001a 80F8F230 		strb	r3, [r0, #242]
 116:Core/Src/bms.c **** 
 718              		.loc 1 116 0
 719 001e 7047     		bx	lr
 720              	.L70:
 119:Core/Src/bms.c **** 
 721              		.loc 1 119 0
 722 0020 0023     		movs	r3, #0
 723 0022 80F8F430 		strb	r3, [r0, #244]
 121:Core/Src/bms.c ****         {
 724              		.loc 1 121 0
ARM GAS  /tmp/ccKxHDb6.s 			page 24


 725 0026 B0F8E620 		ldrh	r2, [r0, #230]
 726 002a 40F60A73 		movw	r3, #3850
 727 002e 9A42     		cmp	r2, r3
 728 0030 0ED9     		bls	.L73
 123:Core/Src/bms.c ****             {
 729              		.loc 1 123 0
 730 0032 B0F8E430 		ldrh	r3, [r0, #228]
 731 0036 B0F8E220 		ldrh	r2, [r0, #226]
 732 003a 9B1A     		subs	r3, r3, r2
 733 003c 052B     		cmp	r3, #5
 734 003e 03DD     		ble	.L74
 125:Core/Src/bms.c ****             }
 735              		.loc 1 125 0
 736 0040 0123     		movs	r3, #1
 737 0042 80F8F530 		strb	r3, [r0, #245]
 738 0046 06E0     		b	.L75
 739              	.L74:
 130:Core/Src/bms.c ****             }
 740              		.loc 1 130 0
 741 0048 0023     		movs	r3, #0
 742 004a 80F8F530 		strb	r3, [r0, #245]
 743 004e 02E0     		b	.L75
 744              	.L73:
 135:Core/Src/bms.c ****         }
 745              		.loc 1 135 0
 746 0050 0023     		movs	r3, #0
 747 0052 80F8F530 		strb	r3, [r0, #245]
 748              	.L75:
 138:Core/Src/bms.c ****         {
 749              		.loc 1 138 0
 750 0056 B0F8E420 		ldrh	r2, [r0, #228]
 751 005a 40F6B373 		movw	r3, #4019
 752 005e 9A42     		cmp	r2, r3
 753 0060 2DD8     		bhi	.L66
 140:Core/Src/bms.c ****         }
 754              		.loc 1 140 0
 755 0062 0323     		movs	r3, #3
 756 0064 80F8F230 		strb	r3, [r0, #242]
 757 0068 7047     		bx	lr
 758              	.L71:
 160:Core/Src/bms.c ****         bms->chargeRequest = 1;
 759              		.loc 1 160 0
 760 006a 0023     		movs	r3, #0
 761 006c 80F8F530 		strb	r3, [r0, #245]
 161:Core/Src/bms.c **** 
 762              		.loc 1 161 0
 763 0070 0123     		movs	r3, #1
 764 0072 80F8F430 		strb	r3, [r0, #244]
 163:Core/Src/bms.c ****         {
 765              		.loc 1 163 0
 766 0076 B0F8E420 		ldrh	r2, [r0, #228]
 767 007a 41F25403 		movw	r3, #4180
 768 007e 9A42     		cmp	r2, r3
 769 0080 05D8     		bhi	.L76
 163:Core/Src/bms.c ****         {
 770              		.loc 1 163 0 is_stmt 0 discriminator 1
 771 0082 B0F8EA20 		ldrh	r2, [r0, #234]
ARM GAS  /tmp/ccKxHDb6.s 			page 25


 772 0086 43F2B063 		movw	r3, #14000
 773 008a 9A42     		cmp	r2, r3
 774 008c 17D9     		bls	.L66
 775              	.L76:
 175:Core/Src/bms.c ****             bms->state = Ready;
 776              		.loc 1 175 0 is_stmt 1
 777 008e 0023     		movs	r3, #0
 778 0090 80F8F430 		strb	r3, [r0, #244]
 176:Core/Src/bms.c ****         }
 779              		.loc 1 176 0
 780 0094 0123     		movs	r3, #1
 781 0096 80F8F230 		strb	r3, [r0, #242]
 782 009a 7047     		bx	lr
 783              	.L72:
 181:Core/Src/bms.c **** 
 784              		.loc 1 181 0
 785 009c 0023     		movs	r3, #0
 786 009e 80F8F430 		strb	r3, [r0, #244]
 183:Core/Src/bms.c ****         {
 787              		.loc 1 183 0
 788 00a2 B0F8E230 		ldrh	r3, [r0, #226]
 789 00a6 B3F5FA6F 		cmp	r3, #2000
 790 00aa 08D9     		bls	.L66
 183:Core/Src/bms.c ****         {
 791              		.loc 1 183 0 is_stmt 0 discriminator 1
 792 00ac B0F8E420 		ldrh	r2, [r0, #228]
 793 00b0 41F29903 		movw	r3, #4249
 794 00b4 9A42     		cmp	r2, r3
 795 00b6 02D8     		bhi	.L66
 185:Core/Src/bms.c ****         }
 796              		.loc 1 185 0 is_stmt 1
 797 00b8 0123     		movs	r3, #1
 798 00ba 80F8F230 		strb	r3, [r0, #242]
 799              	.L66:
 800 00be 7047     		bx	lr
 801              		.cfi_endproc
 802              	.LFE132:
 804              		.section	.text.acChargeCommand,"ax",%progbits
 805              		.align	1
 806              		.global	acChargeCommand
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 810              		.fpu fpv4-sp-d16
 812              	acChargeCommand:
 813              	.LFB133:
 196:Core/Src/bms.c ****     uint8_t canTx2[8];
 814              		.loc 1 196 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 8
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818 0000 00B5     		push	{lr}
 819              	.LCFI6:
 820              		.cfi_def_cfa_offset 4
 821              		.cfi_offset 14, -4
 822 0002 83B0     		sub	sp, sp, #12
 823              	.LCFI7:
ARM GAS  /tmp/ccKxHDb6.s 			page 26


 824              		.cfi_def_cfa_offset 16
 198:Core/Src/bms.c ****     {
 825              		.loc 1 198 0
 826 0004 1D4B     		ldr	r3, .L82
 827 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 828 0008 E3B1     		cbz	r3, .L81
 829              	.LVL60:
 830              	.LBB19:
 220:Core/Src/bms.c ****         canTx2[1] = 0x00;
 831              		.loc 1 220 0
 832 000a 4023     		movs	r3, #64
 833 000c 8DF80030 		strb	r3, [sp]
 221:Core/Src/bms.c ****         canTx2[2] = 0x20;
 834              		.loc 1 221 0
 835 0010 0023     		movs	r3, #0
 836 0012 8DF80130 		strb	r3, [sp, #1]
 222:Core/Src/bms.c ****         canTx2[3] = 9;
 837              		.loc 1 222 0
 838 0016 2022     		movs	r2, #32
 839 0018 8DF80220 		strb	r2, [sp, #2]
 223:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 840              		.loc 1 223 0
 841 001c 0922     		movs	r2, #9
 842 001e 8DF80320 		strb	r2, [sp, #3]
 224:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 843              		.loc 1 224 0
 844 0022 8DF80430 		strb	r3, [sp, #4]
 225:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 845              		.loc 1 225 0
 846 0026 8DF80530 		strb	r3, [sp, #5]
 226:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 847              		.loc 1 226 0
 848 002a 8DF80630 		strb	r3, [sp, #6]
 227:Core/Src/bms.c ****         can2tx(0x605, 8, canTx2);
 849              		.loc 1 227 0
 850 002e 8DF80730 		strb	r3, [sp, #7]
 228:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 851              		.loc 1 228 0
 852 0032 6A46     		mov	r2, sp
 853 0034 0821     		movs	r1, #8
 854 0036 40F20560 		movw	r0, #1541
 855 003a FFF7FEFF 		bl	can2tx
 856              	.LVL61:
 857              	.L77:
 858              	.LBE19:
 231:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 859              		.loc 1 231 0
 860 003e 03B0     		add	sp, sp, #12
 861              	.LCFI8:
 862              		.cfi_remember_state
 863              		.cfi_def_cfa_offset 4
 864              		@ sp needed
 865 0040 5DF804FB 		ldr	pc, [sp], #4
 866              	.L81:
 867              	.LCFI9:
 868              		.cfi_restore_state
 869              	.LVL62:
ARM GAS  /tmp/ccKxHDb6.s 			page 27


 870              	.LBB20:
 203:Core/Src/bms.c ****         canTx2[1] = 0x00;
 871              		.loc 1 203 0
 872 0044 4023     		movs	r3, #64
 873 0046 8DF80030 		strb	r3, [sp]
 204:Core/Src/bms.c ****         canTx2[2] = 0x20;
 874              		.loc 1 204 0
 875 004a 0023     		movs	r3, #0
 876 004c 8DF80130 		strb	r3, [sp, #1]
 205:Core/Src/bms.c ****         canTx2[3] = 9;
 877              		.loc 1 205 0
 878 0050 2022     		movs	r2, #32
 879 0052 8DF80220 		strb	r2, [sp, #2]
 206:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 880              		.loc 1 206 0
 881 0056 0921     		movs	r1, #9
 882 0058 8DF80310 		strb	r1, [sp, #3]
 207:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 883              		.loc 1 207 0
 884 005c 8DF80420 		strb	r2, [sp, #4]
 208:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 885              		.loc 1 208 0
 886 0060 8DF80530 		strb	r3, [sp, #5]
 209:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 887              		.loc 1 209 0
 888 0064 8DF80630 		strb	r3, [sp, #6]
 210:Core/Src/bms.c ****         //c2tx(&txMsg2, canTx2);
 889              		.loc 1 210 0
 890 0068 8DF80730 		strb	r3, [sp, #7]
 212:Core/Src/bms.c ****     }
 891              		.loc 1 212 0
 892 006c 6A46     		mov	r2, sp
 893 006e 0821     		movs	r1, #8
 894 0070 40F20560 		movw	r0, #1541
 895 0074 FFF7FEFF 		bl	can2tx
 896              	.LVL63:
 897              	.LBE20:
 898 0078 E1E7     		b	.L77
 899              	.L83:
 900 007a 00BF     		.align	2
 901              	.L82:
 902 007c 00000000 		.word	charged
 903              		.cfi_endproc
 904              	.LFE133:
 906              		.section	.text.tx500kData,"ax",%progbits
 907              		.align	1
 908              		.global	tx500kData
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 912              		.fpu fpv4-sp-d16
 914              	tx500kData:
 915              	.LFB134:
 234:Core/Src/bms.c **** 
 916              		.loc 1 234 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccKxHDb6.s 			page 28


 919              		@ frame_needed = 0, uses_anonymous_args = 0
 920 0000 30B5     		push	{r4, r5, lr}
 921              	.LCFI10:
 922              		.cfi_def_cfa_offset 12
 923              		.cfi_offset 4, -12
 924              		.cfi_offset 5, -8
 925              		.cfi_offset 14, -4
 926 0002 85B0     		sub	sp, sp, #20
 927              	.LCFI11:
 928              		.cfi_def_cfa_offset 32
 237:Core/Src/bms.c ****     bms0[1] = (BMS[0].packVolt >> 8) & 0xFF;
 929              		.loc 1 237 0
 930 0004 224C     		ldr	r4, .L86
 931 0006 B4F8E030 		ldrh	r3, [r4, #224]
 932 000a 8DF80830 		strb	r3, [sp, #8]
 238:Core/Src/bms.c ****     bms0[2] = BMS[0].avgCellTemp & 0XFF;
 933              		.loc 1 238 0
 934 000e 1B0A     		lsrs	r3, r3, #8
 935 0010 8DF80930 		strb	r3, [sp, #9]
 239:Core/Src/bms.c ****     bms0[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 936              		.loc 1 239 0
 937 0014 B4F8EE30 		ldrh	r3, [r4, #238]
 938 0018 8DF80A30 		strb	r3, [sp, #10]
 240:Core/Src/bms.c ****     bms0[4] = BMS[0].cellDelta & 0XFF;
 939              		.loc 1 240 0
 940 001c 1B0A     		lsrs	r3, r3, #8
 941 001e 8DF80B30 		strb	r3, [sp, #11]
 241:Core/Src/bms.c ****     bms0[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 942              		.loc 1 241 0
 943 0022 B4F8E830 		ldrh	r3, [r4, #232]
 944 0026 8DF80C30 		strb	r3, [sp, #12]
 242:Core/Src/bms.c ****     bms0[6] = (BMS[0].SOC);
 945              		.loc 1 242 0
 946 002a 1B0A     		lsrs	r3, r3, #8
 947 002c 8DF80D30 		strb	r3, [sp, #13]
 243:Core/Src/bms.c ****     bms0[7] = 0;
 948              		.loc 1 243 0
 949 0030 94F8F330 		ldrb	r3, [r4, #243]	@ zero_extendqisi2
 950 0034 8DF80E30 		strb	r3, [sp, #14]
 244:Core/Src/bms.c ****     can2tx(0x138, 8, bms0);
 951              		.loc 1 244 0
 952 0038 0025     		movs	r5, #0
 953 003a 8DF80F50 		strb	r5, [sp, #15]
 245:Core/Src/bms.c **** 
 954              		.loc 1 245 0
 955 003e 02AA     		add	r2, sp, #8
 956 0040 0821     		movs	r1, #8
 957 0042 4FF49C70 		mov	r0, #312
 958 0046 FFF7FEFF 		bl	can2tx
 959              	.LVL64:
 248:Core/Src/bms.c ****     bms1[1] = (BMS[1].packVolt >> 8) & 0xFF;
 960              		.loc 1 248 0
 961 004a B4F8D631 		ldrh	r3, [r4, #470]
 962 004e 8DF80030 		strb	r3, [sp]
 249:Core/Src/bms.c ****     bms1[2] = BMS[1].avgCellTemp & 0XFF;
 963              		.loc 1 249 0
 964 0052 1B0A     		lsrs	r3, r3, #8
ARM GAS  /tmp/ccKxHDb6.s 			page 29


 965 0054 8DF80130 		strb	r3, [sp, #1]
 250:Core/Src/bms.c ****     bms1[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 966              		.loc 1 250 0
 967 0058 B4F8E431 		ldrh	r3, [r4, #484]
 968 005c 8DF80230 		strb	r3, [sp, #2]
 251:Core/Src/bms.c ****     bms1[4] = BMS[1].cellDelta & 0XFF;
 969              		.loc 1 251 0
 970 0060 1B0A     		lsrs	r3, r3, #8
 971 0062 8DF80330 		strb	r3, [sp, #3]
 252:Core/Src/bms.c ****     bms1[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 972              		.loc 1 252 0
 973 0066 B4F8DE31 		ldrh	r3, [r4, #478]
 974 006a 8DF80430 		strb	r3, [sp, #4]
 253:Core/Src/bms.c ****     bms1[6] = (BMS[1].SOC);
 975              		.loc 1 253 0
 976 006e 1B0A     		lsrs	r3, r3, #8
 977 0070 8DF80530 		strb	r3, [sp, #5]
 254:Core/Src/bms.c ****     bms1[7] = 0;
 978              		.loc 1 254 0
 979 0074 94F8E931 		ldrb	r3, [r4, #489]	@ zero_extendqisi2
 980 0078 8DF80630 		strb	r3, [sp, #6]
 255:Core/Src/bms.c ****     can2tx(0x139, 8, bms1);
 981              		.loc 1 255 0
 982 007c 8DF80750 		strb	r5, [sp, #7]
 256:Core/Src/bms.c **** }
 983              		.loc 1 256 0
 984 0080 6A46     		mov	r2, sp
 985 0082 0821     		movs	r1, #8
 986 0084 40F23910 		movw	r0, #313
 987 0088 FFF7FEFF 		bl	can2tx
 988              	.LVL65:
 257:Core/Src/bms.c **** 
 989              		.loc 1 257 0
 990 008c 05B0     		add	sp, sp, #20
 991              	.LCFI12:
 992              		.cfi_def_cfa_offset 12
 993              		@ sp needed
 994 008e 30BD     		pop	{r4, r5, pc}
 995              	.L87:
 996              		.align	2
 997              	.L86:
 998 0090 00000000 		.word	BMS
 999              		.cfi_endproc
 1000              	.LFE134:
 1002              		.section	.text.sendCommand,"ax",%progbits
 1003              		.align	1
 1004              		.global	sendCommand
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1008              		.fpu fpv4-sp-d16
 1010              	sendCommand:
 1011              	.LFB136:
 281:Core/Src/bms.c ****     uint8_t canTx[3];
 1012              		.loc 1 281 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccKxHDb6.s 			page 30


 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016              	.LVL66:
 1017 0000 00B5     		push	{lr}
 1018              	.LCFI13:
 1019              		.cfi_def_cfa_offset 4
 1020              		.cfi_offset 14, -4
 1021 0002 83B0     		sub	sp, sp, #12
 1022              	.LCFI14:
 1023              		.cfi_def_cfa_offset 16
 283:Core/Src/bms.c ****     canTx[1] = 0x00;
 1024              		.loc 1 283 0
 1025 0004 0223     		movs	r3, #2
 1026 0006 8DF80430 		strb	r3, [sp, #4]
 284:Core/Src/bms.c ****     canTx[2] = 0x00;
 1027              		.loc 1 284 0
 1028 000a 0023     		movs	r3, #0
 1029 000c 8DF80530 		strb	r3, [sp, #5]
 285:Core/Src/bms.c **** 
 1030              		.loc 1 285 0
 1031 0010 8DF80630 		strb	r3, [sp, #6]
 287:Core/Src/bms.c ****     {
 1032              		.loc 1 287 0
 1033 0014 20B1     		cbz	r0, .L90
 1034 0016 0128     		cmp	r0, #1
 1035 0018 09D0     		beq	.L91
 1036              	.LVL67:
 1037              	.L88:
 300:Core/Src/bms.c **** 
 1038              		.loc 1 300 0
 1039 001a 03B0     		add	sp, sp, #12
 1040              	.LCFI15:
 1041              		.cfi_remember_state
 1042              		.cfi_def_cfa_offset 4
 1043              		@ sp needed
 1044 001c 5DF804FB 		ldr	pc, [sp], #4
 1045              	.LVL68:
 1046              	.L90:
 1047              	.LCFI16:
 1048              		.cfi_restore_state
 290:Core/Src/bms.c ****         break;
 1049              		.loc 1 290 0
 1050 0020 01AA     		add	r2, sp, #4
 1051 0022 0321     		movs	r1, #3
 1052 0024 4FF40070 		mov	r0, #512
 1053              	.LVL69:
 1054 0028 FFF7FEFF 		bl	can1tx
 1055              	.LVL70:
 291:Core/Src/bms.c **** 
 1056              		.loc 1 291 0
 1057 002c F5E7     		b	.L88
 1058              	.LVL71:
 1059              	.L91:
 294:Core/Src/bms.c ****         break;
 1060              		.loc 1 294 0
 1061 002e 01AA     		add	r2, sp, #4
 1062 0030 0321     		movs	r1, #3
 1063 0032 4FF40070 		mov	r0, #512
ARM GAS  /tmp/ccKxHDb6.s 			page 31


 1064              	.LVL72:
 1065 0036 FFF7FEFF 		bl	can3tx
 1066              	.LVL73:
 300:Core/Src/bms.c **** 
 1067              		.loc 1 300 0
 1068 003a EEE7     		b	.L88
 1069              		.cfi_endproc
 1070              	.LFE136:
 1072              		.section	.text.requestBICMdata,"ax",%progbits
 1073              		.align	1
 1074              		.global	requestBICMdata
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu fpv4-sp-d16
 1080              	requestBICMdata:
 1081              	.LFB137:
 303:Core/Src/bms.c **** 
 1082              		.loc 1 303 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 8
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086              	.LVL74:
 306:Core/Src/bms.c ****     {
 1087              		.loc 1 306 0
 1088 0000 90F8F530 		ldrb	r3, [r0, #245]	@ zero_extendqisi2
 1089 0004 03B1     		cbz	r3, .L108
 1090 0006 7047     		bx	lr
 1091              	.L108:
 303:Core/Src/bms.c **** 
 1092              		.loc 1 303 0
 1093 0008 10B5     		push	{r4, lr}
 1094              	.LCFI17:
 1095              		.cfi_def_cfa_offset 8
 1096              		.cfi_offset 4, -8
 1097              		.cfi_offset 14, -4
 1098 000a 82B0     		sub	sp, sp, #8
 1099              	.LCFI18:
 1100              		.cfi_def_cfa_offset 16
 1101 000c 0C46     		mov	r4, r1
 308:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 1102              		.loc 1 308 0
 1103 000e 0846     		mov	r0, r1
 1104              	.LVL75:
 1105 0010 FFF7FEFF 		bl	sendCommand
 1106              	.LVL76:
 1107              	.LBB21:
 309:Core/Src/bms.c ****         {
 1108              		.loc 1 309 0
 1109 0014 0023     		movs	r3, #0
 1110 0016 05E0     		b	.L95
 1111              	.LVL77:
 1112              	.L96:
 311:Core/Src/bms.c ****         }
 1113              		.loc 1 311 0 discriminator 3
 1114 0018 02AA     		add	r2, sp, #8
 1115 001a 1A44     		add	r2, r2, r3
ARM GAS  /tmp/ccKxHDb6.s 			page 32


 1116 001c 0020     		movs	r0, #0
 1117 001e 02F8080C 		strb	r0, [r2, #-8]
 309:Core/Src/bms.c ****         {
 1118              		.loc 1 309 0 discriminator 3
 1119 0022 0133     		adds	r3, r3, #1
 1120              	.LVL78:
 1121              	.L95:
 309:Core/Src/bms.c ****         {
 1122              		.loc 1 309 0 is_stmt 0 discriminator 1
 1123 0024 072B     		cmp	r3, #7
 1124 0026 F7D9     		bls	.L96
 1125              	.LBE21:
 313:Core/Src/bms.c ****         {
 1126              		.loc 1 313 0 is_stmt 1
 1127 0028 1CB1     		cbz	r4, .L98
 1128 002a 012C     		cmp	r4, #1
 1129 002c 08D0     		beq	.L99
 1130              	.LVL79:
 1131              	.L97:
 1132              	.LBB22:
 309:Core/Src/bms.c ****         {
 1133              		.loc 1 309 0 discriminator 1
 1134 002e 0023     		movs	r3, #0
 1135 0030 13E0     		b	.L100
 1136              	.LVL80:
 1137              	.L98:
 1138              	.LBE22:
 316:Core/Src/bms.c ****             break;
 1139              		.loc 1 316 0
 1140 0032 6A46     		mov	r2, sp
 1141 0034 0821     		movs	r1, #8
 1142 0036 4FF44070 		mov	r0, #768
 1143 003a FFF7FEFF 		bl	can1tx
 1144              	.LVL81:
 317:Core/Src/bms.c **** 
 1145              		.loc 1 317 0
 1146 003e F6E7     		b	.L97
 1147              	.LVL82:
 1148              	.L99:
 320:Core/Src/bms.c ****             break;
 1149              		.loc 1 320 0
 1150 0040 6A46     		mov	r2, sp
 1151 0042 0821     		movs	r1, #8
 1152 0044 4FF44070 		mov	r0, #768
 1153 0048 FFF7FEFF 		bl	can3tx
 1154              	.LVL83:
 321:Core/Src/bms.c **** 
 1155              		.loc 1 321 0
 1156 004c EFE7     		b	.L97
 1157              	.LVL84:
 1158              	.L101:
 1159              	.LBB23:
 329:Core/Src/bms.c ****         }
 1160              		.loc 1 329 0 discriminator 3
 1161 004e 02AA     		add	r2, sp, #8
 1162 0050 1A44     		add	r2, r2, r3
 1163 0052 0020     		movs	r0, #0
ARM GAS  /tmp/ccKxHDb6.s 			page 33


 1164 0054 02F8080C 		strb	r0, [r2, #-8]
 327:Core/Src/bms.c ****         {
 1165              		.loc 1 327 0 discriminator 3
 1166 0058 0133     		adds	r3, r3, #1
 1167              	.LVL85:
 1168              	.L100:
 327:Core/Src/bms.c ****         {
 1169              		.loc 1 327 0 is_stmt 0 discriminator 1
 1170 005a 042B     		cmp	r3, #4
 1171 005c F7D9     		bls	.L101
 1172              	.LBE23:
 332:Core/Src/bms.c ****         {
 1173              		.loc 1 332 0 is_stmt 1
 1174 005e 1CB1     		cbz	r4, .L102
 1175 0060 012C     		cmp	r4, #1
 1176 0062 08D0     		beq	.L103
 1177              	.LVL86:
 1178              	.L93:
 346:Core/Src/bms.c **** 
 1179              		.loc 1 346 0
 1180 0064 02B0     		add	sp, sp, #8
 1181              	.LCFI19:
 1182              		.cfi_remember_state
 1183              		.cfi_def_cfa_offset 8
 1184              		@ sp needed
 1185 0066 10BD     		pop	{r4, pc}
 1186              	.LVL87:
 1187              	.L102:
 1188              	.LCFI20:
 1189              		.cfi_restore_state
 335:Core/Src/bms.c ****             break;
 1190              		.loc 1 335 0
 1191 0068 6A46     		mov	r2, sp
 1192 006a 0521     		movs	r1, #5
 1193 006c 4FF44470 		mov	r0, #784
 1194 0070 FFF7FEFF 		bl	can1tx
 1195              	.LVL88:
 336:Core/Src/bms.c **** 
 1196              		.loc 1 336 0
 1197 0074 F6E7     		b	.L93
 1198              	.LVL89:
 1199              	.L103:
 339:Core/Src/bms.c ****             break;
 1200              		.loc 1 339 0
 1201 0076 6A46     		mov	r2, sp
 1202 0078 0521     		movs	r1, #5
 1203 007a 4FF44470 		mov	r0, #784
 1204 007e FFF7FEFF 		bl	can3tx
 1205              	.LVL90:
 346:Core/Src/bms.c **** 
 1206              		.loc 1 346 0
 1207 0082 EFE7     		b	.L93
 1208              		.cfi_endproc
 1209              	.LFE137:
 1211              		.section	.text.refreshData,"ax",%progbits
 1212              		.align	1
 1213              		.global	refreshData
ARM GAS  /tmp/ccKxHDb6.s 			page 34


 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv4-sp-d16
 1219              	refreshData:
 1220              	.LFB135:
 260:Core/Src/bms.c **** 
 1221              		.loc 1 260 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225 0000 38B5     		push	{r3, r4, r5, lr}
 1226              	.LCFI21:
 1227              		.cfi_def_cfa_offset 16
 1228              		.cfi_offset 3, -16
 1229              		.cfi_offset 4, -12
 1230              		.cfi_offset 5, -8
 1231              		.cfi_offset 14, -4
 1232              	.LVL91:
 1233              	.LBB24:
 262:Core/Src/bms.c ****     {
 1234              		.loc 1 262 0
 1235 0002 0025     		movs	r5, #0
 1236 0004 2AE0     		b	.L110
 1237              	.LVL92:
 1238              	.L111:
 264:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 1239              		.loc 1 264 0 discriminator 3
 1240 0006 174B     		ldr	r3, .L113
 1241 0008 F624     		movs	r4, #246
 1242 000a 04FB0534 		mla	r4, r4, r5, r3
 1243 000e 2946     		mov	r1, r5
 1244 0010 2046     		mov	r0, r4
 1245 0012 FFF7FEFF 		bl	requestBICMdata
 1246              	.LVL93:
 265:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 1247              		.loc 1 265 0 discriminator 3
 1248 0016 2046     		mov	r0, r4
 1249 0018 FFF7FEFF 		bl	getPackVolt
 1250              	.LVL94:
 266:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 1251              		.loc 1 266 0 discriminator 3
 1252 001c 2046     		mov	r0, r4
 1253 001e FFF7FEFF 		bl	getAvgCellVolt
 1254              	.LVL95:
 267:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 1255              		.loc 1 267 0 discriminator 3
 1256 0022 2046     		mov	r0, r4
 1257 0024 FFF7FEFF 		bl	getLowCellVolt
 1258              	.LVL96:
 268:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 1259              		.loc 1 268 0 discriminator 3
 1260 0028 2046     		mov	r0, r4
 1261 002a FFF7FEFF 		bl	getHighCellVolt
 1262              	.LVL97:
 269:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 1263              		.loc 1 269 0 discriminator 3
ARM GAS  /tmp/ccKxHDb6.s 			page 35


 1264 002e 2046     		mov	r0, r4
 1265 0030 FFF7FEFF 		bl	getCellDelta
 1266              	.LVL98:
 270:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 1267              		.loc 1 270 0 discriminator 3
 1268 0034 2046     		mov	r0, r4
 1269 0036 FFF7FEFF 		bl	getLowCellTemp
 1270              	.LVL99:
 271:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 1271              		.loc 1 271 0 discriminator 3
 1272 003a 2046     		mov	r0, r4
 1273 003c FFF7FEFF 		bl	getHighCellTemp
 1274              	.LVL100:
 272:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 1275              		.loc 1 272 0 discriminator 3
 1276 0040 2046     		mov	r0, r4
 1277 0042 FFF7FEFF 		bl	getAvgCellTemp
 1278              	.LVL101:
 273:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 1279              		.loc 1 273 0 discriminator 3
 1280 0046 2046     		mov	r0, r4
 1281 0048 FFF7FEFF 		bl	getTempDelta
 1282              	.LVL102:
 274:Core/Src/bms.c ****         getSOC(&BMS[i]);
 1283              		.loc 1 274 0 discriminator 3
 1284 004c 2946     		mov	r1, r5
 1285 004e 2046     		mov	r0, r4
 1286 0050 FFF7FEFF 		bl	getCellCount
 1287              	.LVL103:
 275:Core/Src/bms.c ****     }
 1288              		.loc 1 275 0 discriminator 3
 1289 0054 2046     		mov	r0, r4
 1290 0056 FFF7FEFF 		bl	getSOC
 1291              	.LVL104:
 262:Core/Src/bms.c ****     {
 1292              		.loc 1 262 0 discriminator 3
 1293 005a 0135     		adds	r5, r5, #1
 1294              	.LVL105:
 1295              	.L110:
 262:Core/Src/bms.c ****     {
 1296              		.loc 1 262 0 is_stmt 0 discriminator 1
 1297 005c 012D     		cmp	r5, #1
 1298 005e D2D9     		bls	.L111
 1299              	.LBE24:
 277:Core/Src/bms.c **** 
 1300              		.loc 1 277 0 is_stmt 1
 1301 0060 38BD     		pop	{r3, r4, r5, pc}
 1302              	.LVL106:
 1303              	.L114:
 1304 0062 00BF     		.align	2
 1305              	.L113:
 1306 0064 00000000 		.word	BMS
 1307              		.cfi_endproc
 1308              	.LFE135:
 1310              		.section	.text.balanceCommand,"ax",%progbits
 1311              		.align	1
 1312              		.global	balanceCommand
ARM GAS  /tmp/ccKxHDb6.s 			page 36


 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1316              		.fpu fpv4-sp-d16
 1318              	balanceCommand:
 1319              	.LFB138:
 350:Core/Src/bms.c ****     sendCommand(pack);
 1320              		.loc 1 350 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 8
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              	.LVL107:
 1325 0000 30B5     		push	{r4, r5, lr}
 1326              	.LCFI22:
 1327              		.cfi_def_cfa_offset 12
 1328              		.cfi_offset 4, -12
 1329              		.cfi_offset 5, -8
 1330              		.cfi_offset 14, -4
 1331 0002 83B0     		sub	sp, sp, #12
 1332              	.LCFI23:
 1333              		.cfi_def_cfa_offset 24
 1334 0004 0446     		mov	r4, r0
 1335 0006 0D46     		mov	r5, r1
 351:Core/Src/bms.c ****     uint8_t balance[8];
 1336              		.loc 1 351 0
 1337 0008 0846     		mov	r0, r1
 1338              	.LVL108:
 1339 000a FFF7FEFF 		bl	sendCommand
 1340              	.LVL109:
 354:Core/Src/bms.c ****     {
 1341              		.loc 1 354 0
 1342 000e 6DB1     		cbz	r5, .L137
 1343 0010 012D     		cmp	r5, #1
 1344 0012 5AD0     		beq	.L138
 1345              	.L115:
 418:Core/Src/bms.c **** 
 1346              		.loc 1 418 0
 1347 0014 03B0     		add	sp, sp, #12
 1348              	.LCFI24:
 1349              		.cfi_remember_state
 1350              		.cfi_def_cfa_offset 12
 1351              		@ sp needed
 1352 0016 30BD     		pop	{r4, r5, pc}
 1353              	.LVL110:
 1354              	.L119:
 1355              	.LCFI25:
 1356              		.cfi_restore_state
 1357              	.LBB25:
 359:Core/Src/bms.c ****         }
 1358              		.loc 1 359 0 discriminator 3
 1359 0018 02AA     		add	r2, sp, #8
 1360 001a 1A44     		add	r2, r2, r3
 1361 001c 0021     		movs	r1, #0
 1362 001e 02F8081C 		strb	r1, [r2, #-8]
 357:Core/Src/bms.c ****         {
 1363              		.loc 1 357 0 discriminator 3
 1364 0022 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccKxHDb6.s 			page 37


 1365              	.LVL111:
 1366              	.L117:
 357:Core/Src/bms.c ****         {
 1367              		.loc 1 357 0 is_stmt 0 discriminator 1
 1368 0024 072B     		cmp	r3, #7
 1369 0026 F7D9     		bls	.L119
 1370 0028 0023     		movs	r3, #0
 1371              	.LVL112:
 1372 002a 02E0     		b	.L120
 1373              	.L137:
 1374              	.LBE25:
 354:Core/Src/bms.c ****     {
 1375              		.loc 1 354 0 is_stmt 1
 1376 002c 0023     		movs	r3, #0
 1377 002e F9E7     		b	.L117
 1378              	.LVL113:
 1379              	.L121:
 1380              	.LBB26:
 362:Core/Src/bms.c ****         {
 1381              		.loc 1 362 0 discriminator 2
 1382 0030 0133     		adds	r3, r3, #1
 1383              	.LVL114:
 1384              	.L120:
 362:Core/Src/bms.c ****         {
 1385              		.loc 1 362 0 is_stmt 0 discriminator 1
 1386 0032 3D2B     		cmp	r3, #61
 1387 0034 11D8     		bhi	.L140
 364:Core/Src/bms.c ****             {
 1388              		.loc 1 364 0 is_stmt 1
 1389 0036 B4F8E610 		ldrh	r1, [r4, #230]
 1390 003a 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1391 003e 9142     		cmp	r1, r2
 1392 0040 F6D2     		bcs	.L121
 366:Core/Src/bms.c ****             }
 1393              		.loc 1 366 0
 1394 0042 444A     		ldr	r2, .L144
 1395 0044 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1396 0046 4449     		ldr	r1, .L144+4
 1397 0048 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1398 004a 02A8     		add	r0, sp, #8
 1399 004c 0244     		add	r2, r2, r0
 1400 004e 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1401 0052 0143     		orrs	r1, r1, r0
 1402 0054 02F8081C 		strb	r1, [r2, #-8]
 1403 0058 EAE7     		b	.L121
 1404              	.L140:
 1405              	.LBE26:
 369:Core/Src/bms.c **** 
 1406              		.loc 1 369 0
 1407 005a 6A46     		mov	r2, sp
 1408 005c 0821     		movs	r1, #8
 1409 005e 4FF44070 		mov	r0, #768
 1410 0062 FFF7FEFF 		bl	can1tx
 1411              	.LVL115:
 1412              	.LBB27:
 371:Core/Src/bms.c ****         {
 1413              		.loc 1 371 0
ARM GAS  /tmp/ccKxHDb6.s 			page 38


 1414 0066 0023     		movs	r3, #0
 1415 0068 05E0     		b	.L123
 1416              	.LVL116:
 1417              	.L124:
 373:Core/Src/bms.c ****         }
 1418              		.loc 1 373 0 discriminator 3
 1419 006a 02AA     		add	r2, sp, #8
 1420 006c 1A44     		add	r2, r2, r3
 1421 006e 0021     		movs	r1, #0
 1422 0070 02F8081C 		strb	r1, [r2, #-8]
 371:Core/Src/bms.c ****         {
 1423              		.loc 1 371 0 discriminator 3
 1424 0074 0133     		adds	r3, r3, #1
 1425              	.LVL117:
 1426              	.L123:
 371:Core/Src/bms.c ****         {
 1427              		.loc 1 371 0 is_stmt 0 discriminator 1
 1428 0076 072B     		cmp	r3, #7
 1429 0078 F7D9     		bls	.L124
 1430 007a 3E23     		movs	r3, #62
 1431              	.LVL118:
 1432 007c 00E0     		b	.L125
 1433              	.LVL119:
 1434              	.L126:
 1435              	.LBE27:
 1436              	.LBB28:
 376:Core/Src/bms.c ****         {
 1437              		.loc 1 376 0 is_stmt 1 discriminator 2
 1438 007e 0133     		adds	r3, r3, #1
 1439              	.LVL120:
 1440              	.L125:
 376:Core/Src/bms.c ****         {
 1441              		.loc 1 376 0 is_stmt 0 discriminator 1
 1442 0080 5F2B     		cmp	r3, #95
 1443 0082 11D8     		bhi	.L141
 378:Core/Src/bms.c ****             {
 1444              		.loc 1 378 0 is_stmt 1
 1445 0084 B4F8E610 		ldrh	r1, [r4, #230]
 1446 0088 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1447 008c 9142     		cmp	r1, r2
 1448 008e F6D2     		bcs	.L126
 380:Core/Src/bms.c ****             }
 1449              		.loc 1 380 0
 1450 0090 304A     		ldr	r2, .L144
 1451 0092 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1452 0094 3049     		ldr	r1, .L144+4
 1453 0096 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1454 0098 02A8     		add	r0, sp, #8
 1455 009a 0244     		add	r2, r2, r0
 1456 009c 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1457 00a0 0143     		orrs	r1, r1, r0
 1458 00a2 02F8081C 		strb	r1, [r2, #-8]
 1459 00a6 EAE7     		b	.L126
 1460              	.L141:
 1461              	.LBE28:
 383:Core/Src/bms.c ****         break;
 1462              		.loc 1 383 0
ARM GAS  /tmp/ccKxHDb6.s 			page 39


 1463 00a8 6A46     		mov	r2, sp
 1464 00aa 0521     		movs	r1, #5
 1465 00ac 4FF44470 		mov	r0, #784
 1466 00b0 FFF7FEFF 		bl	can1tx
 1467              	.LVL121:
 384:Core/Src/bms.c **** 
 1468              		.loc 1 384 0
 1469 00b4 AEE7     		b	.L115
 1470              	.LVL122:
 1471              	.L128:
 1472              	.LBB29:
 390:Core/Src/bms.c ****         }
 1473              		.loc 1 390 0 discriminator 3
 1474 00b6 02AA     		add	r2, sp, #8
 1475 00b8 1A44     		add	r2, r2, r3
 1476 00ba 0021     		movs	r1, #0
 1477 00bc 02F8081C 		strb	r1, [r2, #-8]
 388:Core/Src/bms.c ****         {
 1478              		.loc 1 388 0 discriminator 3
 1479 00c0 0133     		adds	r3, r3, #1
 1480              	.LVL123:
 1481              	.L118:
 388:Core/Src/bms.c ****         {
 1482              		.loc 1 388 0 is_stmt 0 discriminator 1
 1483 00c2 072B     		cmp	r3, #7
 1484 00c4 F7D9     		bls	.L128
 1485 00c6 0023     		movs	r3, #0
 1486              	.LVL124:
 1487 00c8 02E0     		b	.L129
 1488              	.L138:
 1489              	.LBE29:
 354:Core/Src/bms.c ****     {
 1490              		.loc 1 354 0 is_stmt 1
 1491 00ca 0023     		movs	r3, #0
 1492 00cc F9E7     		b	.L118
 1493              	.LVL125:
 1494              	.L130:
 1495              	.LBB30:
 392:Core/Src/bms.c ****         {
 1496              		.loc 1 392 0 discriminator 2
 1497 00ce 0133     		adds	r3, r3, #1
 1498              	.LVL126:
 1499              	.L129:
 392:Core/Src/bms.c ****         {
 1500              		.loc 1 392 0 is_stmt 0 discriminator 1
 1501 00d0 3D2B     		cmp	r3, #61
 1502 00d2 11D8     		bhi	.L142
 394:Core/Src/bms.c ****             {
 1503              		.loc 1 394 0 is_stmt 1
 1504 00d4 B4F8E610 		ldrh	r1, [r4, #230]
 1505 00d8 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1506 00dc 9142     		cmp	r1, r2
 1507 00de F6D2     		bcs	.L130
 396:Core/Src/bms.c ****             }
 1508              		.loc 1 396 0
 1509 00e0 1C4A     		ldr	r2, .L144
 1510 00e2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccKxHDb6.s 			page 40


 1511 00e4 1C49     		ldr	r1, .L144+4
 1512 00e6 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1513 00e8 02A8     		add	r0, sp, #8
 1514 00ea 0244     		add	r2, r2, r0
 1515 00ec 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1516 00f0 0143     		orrs	r1, r1, r0
 1517 00f2 02F8081C 		strb	r1, [r2, #-8]
 1518 00f6 EAE7     		b	.L130
 1519              	.L142:
 1520              	.LBE30:
 399:Core/Src/bms.c **** 
 1521              		.loc 1 399 0
 1522 00f8 6A46     		mov	r2, sp
 1523 00fa 0821     		movs	r1, #8
 1524 00fc 4FF44070 		mov	r0, #768
 1525 0100 FFF7FEFF 		bl	can3tx
 1526              	.LVL127:
 1527              	.LBB31:
 401:Core/Src/bms.c ****         {
 1528              		.loc 1 401 0
 1529 0104 0023     		movs	r3, #0
 1530 0106 05E0     		b	.L132
 1531              	.LVL128:
 1532              	.L133:
 403:Core/Src/bms.c ****         }
 1533              		.loc 1 403 0 discriminator 3
 1534 0108 02AA     		add	r2, sp, #8
 1535 010a 1A44     		add	r2, r2, r3
 1536 010c 0021     		movs	r1, #0
 1537 010e 02F8081C 		strb	r1, [r2, #-8]
 401:Core/Src/bms.c ****         {
 1538              		.loc 1 401 0 discriminator 3
 1539 0112 0133     		adds	r3, r3, #1
 1540              	.LVL129:
 1541              	.L132:
 401:Core/Src/bms.c ****         {
 1542              		.loc 1 401 0 is_stmt 0 discriminator 1
 1543 0114 072B     		cmp	r3, #7
 1544 0116 F7D9     		bls	.L133
 1545 0118 3E23     		movs	r3, #62
 1546              	.LVL130:
 1547 011a 00E0     		b	.L134
 1548              	.LVL131:
 1549              	.L135:
 1550              	.LBE31:
 1551              	.LBB32:
 405:Core/Src/bms.c ****         {
 1552              		.loc 1 405 0 is_stmt 1 discriminator 2
 1553 011c 0133     		adds	r3, r3, #1
 1554              	.LVL132:
 1555              	.L134:
 405:Core/Src/bms.c ****         {
 1556              		.loc 1 405 0 is_stmt 0 discriminator 1
 1557 011e 5F2B     		cmp	r3, #95
 1558 0120 11D8     		bhi	.L143
 407:Core/Src/bms.c ****             {
 1559              		.loc 1 407 0 is_stmt 1
ARM GAS  /tmp/ccKxHDb6.s 			page 41


 1560 0122 B4F8E610 		ldrh	r1, [r4, #230]
 1561 0126 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1562 012a 9142     		cmp	r1, r2
 1563 012c F6D2     		bcs	.L135
 409:Core/Src/bms.c ****             }
 1564              		.loc 1 409 0
 1565 012e 094A     		ldr	r2, .L144
 1566 0130 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1567 0132 0949     		ldr	r1, .L144+4
 1568 0134 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1569 0136 02A8     		add	r0, sp, #8
 1570 0138 0244     		add	r2, r2, r0
 1571 013a 12F8080C 		ldrb	r0, [r2, #-8]	@ zero_extendqisi2
 1572 013e 0143     		orrs	r1, r1, r0
 1573 0140 02F8081C 		strb	r1, [r2, #-8]
 1574 0144 EAE7     		b	.L135
 1575              	.L143:
 1576              	.LBE32:
 412:Core/Src/bms.c ****         break;
 1577              		.loc 1 412 0
 1578 0146 6A46     		mov	r2, sp
 1579 0148 0521     		movs	r1, #5
 1580 014a 4FF44470 		mov	r0, #784
 1581 014e FFF7FEFF 		bl	can3tx
 1582              	.LVL133:
 418:Core/Src/bms.c **** 
 1583              		.loc 1 418 0
 1584 0152 5FE7     		b	.L115
 1585              	.L145:
 1586              		.align	2
 1587              	.L144:
 1588 0154 00000000 		.word	.LANCHOR0
 1589 0158 00000000 		.word	.LANCHOR1
 1590              		.cfi_endproc
 1591              	.LFE138:
 1593              		.section	.text.vehicleComms,"ax",%progbits
 1594              		.align	1
 1595              		.global	vehicleComms
 1596              		.syntax unified
 1597              		.thumb
 1598              		.thumb_func
 1599              		.fpu fpv4-sp-d16
 1601              	vehicleComms:
 1602              	.LFB150:
 567:Core/Src/bms.c **** 
 568:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 569:Core/Src/bms.c **** void vehicleComms(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 570:Core/Src/bms.c **** {
 1603              		.loc 1 570 0
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 0
 1606              		@ frame_needed = 0, uses_anonymous_args = 0
 1607              		@ link register save eliminated.
 1608              	.LVL134:
 1609 0000 7047     		bx	lr
 1610              		.cfi_endproc
 1611              	.LFE150:
ARM GAS  /tmp/ccKxHDb6.s 			page 42


 1613              		.section	.text.synchChargers,"ax",%progbits
 1614              		.align	1
 1615              		.global	synchChargers
 1616              		.syntax unified
 1617              		.thumb
 1618              		.thumb_func
 1619              		.fpu fpv4-sp-d16
 1621              	synchChargers:
 1622              	.LFB151:
 571:Core/Src/bms.c ****     switch (rxMsg->StdId)
 572:Core/Src/bms.c ****     {
 573:Core/Src/bms.c ****     case 0x313:
 574:Core/Src/bms.c ****         //vehicleState = canRx[0];
 575:Core/Src/bms.c ****         break;
 576:Core/Src/bms.c **** 
 577:Core/Src/bms.c ****     default:
 578:Core/Src/bms.c ****         break;
 579:Core/Src/bms.c ****     }
 580:Core/Src/bms.c **** }
 581:Core/Src/bms.c **** 
 582:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 583:Core/Src/bms.c **** void synchChargers(void)
 584:Core/Src/bms.c **** {
 1623              		.loc 1 584 0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 0
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
 1627              		@ link register save eliminated.
 585:Core/Src/bms.c ****     if (BMS[0].chargeRequest && BMS[1].chargeRequest)
 1628              		.loc 1 585 0
 1629 0000 094B     		ldr	r3, .L151
 1630 0002 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 1631 0006 33B1     		cbz	r3, .L148
 1632              		.loc 1 585 0 is_stmt 0 discriminator 1
 1633 0008 074A     		ldr	r2, .L151
 1634 000a 92F8EA21 		ldrb	r2, [r2, #490]	@ zero_extendqisi2
 1635 000e 12B1     		cbz	r2, .L148
 586:Core/Src/bms.c ****     {
 587:Core/Src/bms.c ****         charged = false;
 1636              		.loc 1 587 0 is_stmt 1
 1637 0010 0021     		movs	r1, #0
 1638 0012 064A     		ldr	r2, .L151+4
 1639 0014 1170     		strb	r1, [r2]
 1640              	.L148:
 588:Core/Src/bms.c ****     }
 589:Core/Src/bms.c **** 
 590:Core/Src/bms.c ****     if ((!BMS[0].chargeRequest) || (!BMS[1].chargeRequest))
 1641              		.loc 1 590 0
 1642 0016 1BB1     		cbz	r3, .L149
 1643              		.loc 1 590 0 is_stmt 0 discriminator 1
 1644 0018 034B     		ldr	r3, .L151
 1645 001a 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 1646 001e 13B9     		cbnz	r3, .L147
 1647              	.L149:
 591:Core/Src/bms.c ****     {
 592:Core/Src/bms.c ****         charged = true;
 1648              		.loc 1 592 0 is_stmt 1
ARM GAS  /tmp/ccKxHDb6.s 			page 43


 1649 0020 0122     		movs	r2, #1
 1650 0022 024B     		ldr	r3, .L151+4
 1651 0024 1A70     		strb	r2, [r3]
 1652              	.L147:
 1653 0026 7047     		bx	lr
 1654              	.L152:
 1655              		.align	2
 1656              	.L151:
 1657 0028 00000000 		.word	BMS
 1658 002c 00000000 		.word	charged
 1659              		.cfi_endproc
 1660              	.LFE151:
 1662              		.global	__aeabi_i2d
 1663              		.global	__aeabi_dmul
 1664              		.global	__aeabi_d2uiz
 1665              		.section	.text.decodeVolt,"ax",%progbits
 1666              		.align	1
 1667              		.global	decodeVolt
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1671              		.fpu fpv4-sp-d16
 1673              	decodeVolt:
 1674              	.LFB152:
 593:Core/Src/bms.c ****     }
 594:Core/Src/bms.c **** }
 595:Core/Src/bms.c **** 
 596:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 597:Core/Src/bms.c **** void decodeVolt(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // cell voltage in millivol
 598:Core/Src/bms.c **** {
 1675              		.loc 1 598 0
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 0
 1678              		@ frame_needed = 0, uses_anonymous_args = 0
 1679              	.LVL135:
 1680 0000 38B5     		push	{r3, r4, r5, lr}
 1681              	.LCFI26:
 1682              		.cfi_def_cfa_offset 16
 1683              		.cfi_offset 3, -16
 1684              		.cfi_offset 4, -12
 1685              		.cfi_offset 5, -8
 1686              		.cfi_offset 14, -4
 1687 0002 0546     		mov	r5, r0
 1688 0004 1446     		mov	r4, r2
 599:Core/Src/bms.c ****     switch (rxMsg->StdId)
 1689              		.loc 1 599 0
 1690 0006 0B68     		ldr	r3, [r1]
 1691 0008 A3F58C63 		sub	r3, r3, #1120
 1692 000c 1E2B     		cmp	r3, #30
 1693 000e 00F22186 		bhi	.L153
 1694 0012 DFE813F0 		tbh	[pc, r3, lsl #1]
 1695              	.LVL136:
 1696              	.L156:
 1697 0016 1F00     		.2byte	(.L155-.L156)/2
 1698 0018 7B00     		.2byte	(.L157-.L156)/2
 1699 001a F500     		.2byte	(.L158-.L156)/2
 1700 001c 6F01     		.2byte	(.L159-.L156)/2
ARM GAS  /tmp/ccKxHDb6.s 			page 44


 1701 001e EC01     		.2byte	(.L160-.L156)/2
 1702 0020 6C02     		.2byte	(.L161-.L156)/2
 1703 0022 EE02     		.2byte	(.L162-.L156)/2
 1704 0024 1F06     		.2byte	(.L153-.L156)/2
 1705 0026 7203     		.2byte	(.L163-.L156)/2
 1706 0028 F403     		.2byte	(.L164-.L156)/2
 1707 002a 7604     		.2byte	(.L165-.L156)/2
 1708 002c 1F06     		.2byte	(.L153-.L156)/2
 1709 002e FA04     		.2byte	(.L166-.L156)/2
 1710 0030 5C05     		.2byte	(.L167-.L156)/2
 1711 0032 BE05     		.2byte	(.L168-.L156)/2
 1712 0034 1F06     		.2byte	(.L153-.L156)/2
 1713 0036 4D00     		.2byte	(.L169-.L156)/2
 1714 0038 B800     		.2byte	(.L170-.L156)/2
 1715 003a 3201     		.2byte	(.L171-.L156)/2
 1716 003c AF01     		.2byte	(.L172-.L156)/2
 1717 003e 2B02     		.2byte	(.L173-.L156)/2
 1718 0040 AD02     		.2byte	(.L174-.L156)/2
 1719 0042 3103     		.2byte	(.L175-.L156)/2
 1720 0044 1F06     		.2byte	(.L153-.L156)/2
 1721 0046 B303     		.2byte	(.L176-.L156)/2
 1722 0048 3504     		.2byte	(.L177-.L156)/2
 1723 004a B904     		.2byte	(.L178-.L156)/2
 1724 004c 1F06     		.2byte	(.L153-.L156)/2
 1725 004e 2B05     		.2byte	(.L179-.L156)/2
 1726 0050 8D05     		.2byte	(.L180-.L156)/2
 1727 0052 EF05     		.2byte	(.L181-.L156)/2
 1728              		.p2align 1
 1729              	.L155:
 600:Core/Src/bms.c ****     {
 601:Core/Src/bms.c ****     case 0x460: // Begin module 1
 602:Core/Src/bms.c ****         bms->cellVolt[0] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1730              		.loc 1 602 0
 1731 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1732 0056 1B02     		lsls	r3, r3, #8
 1733 0058 03F47063 		and	r3, r3, #3840
 1734 005c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1735              	.LVL137:
 1736 005e 1844     		add	r0, r0, r3
 1737 0060 FFF7FEFF 		bl	__aeabi_i2d
 1738              	.LVL138:
 1739 0064 0022     		movs	r2, #0
 1740 0066 C24B     		ldr	r3, .L183
 1741 0068 FFF7FEFF 		bl	__aeabi_dmul
 1742              	.LVL139:
 1743 006c FFF7FEFF 		bl	__aeabi_d2uiz
 1744              	.LVL140:
 1745 0070 2880     		strh	r0, [r5]	@ movhi
 603:Core/Src/bms.c ****         bms->cellVolt[1] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1746              		.loc 1 603 0
 1747 0072 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1748 0074 1B02     		lsls	r3, r3, #8
 1749 0076 03F47063 		and	r3, r3, #3840
 1750 007a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1751 007c 1844     		add	r0, r0, r3
 1752 007e FFF7FEFF 		bl	__aeabi_i2d
 1753              	.LVL141:
ARM GAS  /tmp/ccKxHDb6.s 			page 45


 1754 0082 0022     		movs	r2, #0
 1755 0084 BA4B     		ldr	r3, .L183
 1756 0086 FFF7FEFF 		bl	__aeabi_dmul
 1757              	.LVL142:
 1758 008a FFF7FEFF 		bl	__aeabi_d2uiz
 1759              	.LVL143:
 1760 008e 6880     		strh	r0, [r5, #2]	@ movhi
 604:Core/Src/bms.c ****         bms->cellVolt[2] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1761              		.loc 1 604 0
 1762 0090 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1763 0092 1B02     		lsls	r3, r3, #8
 1764 0094 03F47063 		and	r3, r3, #3840
 1765 0098 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1766 009a 1844     		add	r0, r0, r3
 1767 009c FFF7FEFF 		bl	__aeabi_i2d
 1768              	.LVL144:
 1769 00a0 0022     		movs	r2, #0
 1770 00a2 B34B     		ldr	r3, .L183
 1771 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1772              	.LVL145:
 1773 00a8 FFF7FEFF 		bl	__aeabi_d2uiz
 1774              	.LVL146:
 1775 00ac A880     		strh	r0, [r5, #4]	@ movhi
 605:Core/Src/bms.c ****         break;
 1776              		.loc 1 605 0
 1777 00ae 38BD     		pop	{r3, r4, r5, pc}
 1778              	.LVL147:
 1779              	.L169:
 606:Core/Src/bms.c **** 
 607:Core/Src/bms.c ****     case 0x470:
 608:Core/Src/bms.c ****         bms->cellVolt[3] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1780              		.loc 1 608 0
 1781 00b0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1782 00b2 1B02     		lsls	r3, r3, #8
 1783 00b4 03F47063 		and	r3, r3, #3840
 1784 00b8 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1785              	.LVL148:
 1786 00ba 1844     		add	r0, r0, r3
 1787 00bc FFF7FEFF 		bl	__aeabi_i2d
 1788              	.LVL149:
 1789 00c0 0022     		movs	r2, #0
 1790 00c2 AB4B     		ldr	r3, .L183
 1791 00c4 FFF7FEFF 		bl	__aeabi_dmul
 1792              	.LVL150:
 1793 00c8 FFF7FEFF 		bl	__aeabi_d2uiz
 1794              	.LVL151:
 1795 00cc E880     		strh	r0, [r5, #6]	@ movhi
 609:Core/Src/bms.c ****         bms->cellVolt[4] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1796              		.loc 1 609 0
 1797 00ce A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1798 00d0 1B02     		lsls	r3, r3, #8
 1799 00d2 03F47063 		and	r3, r3, #3840
 1800 00d6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1801 00d8 1844     		add	r0, r0, r3
 1802 00da FFF7FEFF 		bl	__aeabi_i2d
 1803              	.LVL152:
 1804 00de 0022     		movs	r2, #0
ARM GAS  /tmp/ccKxHDb6.s 			page 46


 1805 00e0 A34B     		ldr	r3, .L183
 1806 00e2 FFF7FEFF 		bl	__aeabi_dmul
 1807              	.LVL153:
 1808 00e6 FFF7FEFF 		bl	__aeabi_d2uiz
 1809              	.LVL154:
 1810 00ea 2881     		strh	r0, [r5, #8]	@ movhi
 610:Core/Src/bms.c ****         bms->cellVolt[5] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1811              		.loc 1 610 0
 1812 00ec 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1813 00ee 1B02     		lsls	r3, r3, #8
 1814 00f0 03F47063 		and	r3, r3, #3840
 1815 00f4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1816 00f6 1844     		add	r0, r0, r3
 1817 00f8 FFF7FEFF 		bl	__aeabi_i2d
 1818              	.LVL155:
 1819 00fc 0022     		movs	r2, #0
 1820 00fe 9C4B     		ldr	r3, .L183
 1821 0100 FFF7FEFF 		bl	__aeabi_dmul
 1822              	.LVL156:
 1823 0104 FFF7FEFF 		bl	__aeabi_d2uiz
 1824              	.LVL157:
 1825 0108 6881     		strh	r0, [r5, #10]	@ movhi
 611:Core/Src/bms.c ****         break;
 1826              		.loc 1 611 0
 1827 010a 38BD     		pop	{r3, r4, r5, pc}
 1828              	.LVL158:
 1829              	.L157:
 612:Core/Src/bms.c **** 
 613:Core/Src/bms.c ****     case 0x461:
 614:Core/Src/bms.c ****         bms->cellVolt[6] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1830              		.loc 1 614 0
 1831 010c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1832 010e 1B02     		lsls	r3, r3, #8
 1833 0110 03F47063 		and	r3, r3, #3840
 1834 0114 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1835              	.LVL159:
 1836 0116 1844     		add	r0, r0, r3
 1837 0118 FFF7FEFF 		bl	__aeabi_i2d
 1838              	.LVL160:
 1839 011c 0022     		movs	r2, #0
 1840 011e 944B     		ldr	r3, .L183
 1841 0120 FFF7FEFF 		bl	__aeabi_dmul
 1842              	.LVL161:
 1843 0124 FFF7FEFF 		bl	__aeabi_d2uiz
 1844              	.LVL162:
 1845 0128 A881     		strh	r0, [r5, #12]	@ movhi
 615:Core/Src/bms.c ****         bms->cellVolt[7] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1846              		.loc 1 615 0
 1847 012a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1848 012c 1B02     		lsls	r3, r3, #8
 1849 012e 03F47063 		and	r3, r3, #3840
 1850 0132 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1851 0134 1844     		add	r0, r0, r3
 1852 0136 FFF7FEFF 		bl	__aeabi_i2d
 1853              	.LVL163:
 1854 013a 0022     		movs	r2, #0
 1855 013c 8C4B     		ldr	r3, .L183
ARM GAS  /tmp/ccKxHDb6.s 			page 47


 1856 013e FFF7FEFF 		bl	__aeabi_dmul
 1857              	.LVL164:
 1858 0142 FFF7FEFF 		bl	__aeabi_d2uiz
 1859              	.LVL165:
 1860 0146 E881     		strh	r0, [r5, #14]	@ movhi
 616:Core/Src/bms.c ****         bms->cellVolt[8] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1861              		.loc 1 616 0
 1862 0148 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1863 014a 1B02     		lsls	r3, r3, #8
 1864 014c 03F47063 		and	r3, r3, #3840
 1865 0150 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1866 0152 1844     		add	r0, r0, r3
 1867 0154 FFF7FEFF 		bl	__aeabi_i2d
 1868              	.LVL166:
 1869 0158 0022     		movs	r2, #0
 1870 015a 854B     		ldr	r3, .L183
 1871 015c FFF7FEFF 		bl	__aeabi_dmul
 1872              	.LVL167:
 1873 0160 FFF7FEFF 		bl	__aeabi_d2uiz
 1874              	.LVL168:
 1875 0164 2882     		strh	r0, [r5, #16]	@ movhi
 617:Core/Src/bms.c ****         bms->cellVolt[9] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1876              		.loc 1 617 0
 1877 0166 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1878 0168 1B02     		lsls	r3, r3, #8
 1879 016a 03F47063 		and	r3, r3, #3840
 1880 016e E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1881 0170 1844     		add	r0, r0, r3
 1882 0172 FFF7FEFF 		bl	__aeabi_i2d
 1883              	.LVL169:
 1884 0176 0022     		movs	r2, #0
 1885 0178 7D4B     		ldr	r3, .L183
 1886 017a FFF7FEFF 		bl	__aeabi_dmul
 1887              	.LVL170:
 1888 017e FFF7FEFF 		bl	__aeabi_d2uiz
 1889              	.LVL171:
 1890 0182 6882     		strh	r0, [r5, #18]	@ movhi
 618:Core/Src/bms.c ****         break;
 1891              		.loc 1 618 0
 1892 0184 38BD     		pop	{r3, r4, r5, pc}
 1893              	.LVL172:
 1894              	.L170:
 619:Core/Src/bms.c **** 
 620:Core/Src/bms.c ****     case 0x471:
 621:Core/Src/bms.c ****         bms->cellVolt[10] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1895              		.loc 1 621 0
 1896 0186 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1897 0188 1B02     		lsls	r3, r3, #8
 1898 018a 03F47063 		and	r3, r3, #3840
 1899 018e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1900              	.LVL173:
 1901 0190 1844     		add	r0, r0, r3
 1902 0192 FFF7FEFF 		bl	__aeabi_i2d
 1903              	.LVL174:
 1904 0196 0022     		movs	r2, #0
 1905 0198 754B     		ldr	r3, .L183
 1906 019a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccKxHDb6.s 			page 48


 1907              	.LVL175:
 1908 019e FFF7FEFF 		bl	__aeabi_d2uiz
 1909              	.LVL176:
 1910 01a2 A882     		strh	r0, [r5, #20]	@ movhi
 622:Core/Src/bms.c ****         bms->cellVolt[11] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1911              		.loc 1 622 0
 1912 01a4 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1913 01a6 1B02     		lsls	r3, r3, #8
 1914 01a8 03F47063 		and	r3, r3, #3840
 1915 01ac E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1916 01ae 1844     		add	r0, r0, r3
 1917 01b0 FFF7FEFF 		bl	__aeabi_i2d
 1918              	.LVL177:
 1919 01b4 0022     		movs	r2, #0
 1920 01b6 6E4B     		ldr	r3, .L183
 1921 01b8 FFF7FEFF 		bl	__aeabi_dmul
 1922              	.LVL178:
 1923 01bc FFF7FEFF 		bl	__aeabi_d2uiz
 1924              	.LVL179:
 1925 01c0 E882     		strh	r0, [r5, #22]	@ movhi
 623:Core/Src/bms.c ****         bms->cellVolt[12] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1926              		.loc 1 623 0
 1927 01c2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1928 01c4 1B02     		lsls	r3, r3, #8
 1929 01c6 03F47063 		and	r3, r3, #3840
 1930 01ca 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1931 01cc 1844     		add	r0, r0, r3
 1932 01ce FFF7FEFF 		bl	__aeabi_i2d
 1933              	.LVL180:
 1934 01d2 0022     		movs	r2, #0
 1935 01d4 664B     		ldr	r3, .L183
 1936 01d6 FFF7FEFF 		bl	__aeabi_dmul
 1937              	.LVL181:
 1938 01da FFF7FEFF 		bl	__aeabi_d2uiz
 1939              	.LVL182:
 1940 01de 2883     		strh	r0, [r5, #24]	@ movhi
 624:Core/Src/bms.c ****         bms->cellVolt[13] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1941              		.loc 1 624 0
 1942 01e0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1943 01e2 1B02     		lsls	r3, r3, #8
 1944 01e4 03F47063 		and	r3, r3, #3840
 1945 01e8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1946 01ea 1844     		add	r0, r0, r3
 1947 01ec FFF7FEFF 		bl	__aeabi_i2d
 1948              	.LVL183:
 1949 01f0 0022     		movs	r2, #0
 1950 01f2 5F4B     		ldr	r3, .L183
 1951 01f4 FFF7FEFF 		bl	__aeabi_dmul
 1952              	.LVL184:
 1953 01f8 FFF7FEFF 		bl	__aeabi_d2uiz
 1954              	.LVL185:
 1955 01fc 6883     		strh	r0, [r5, #26]	@ movhi
 625:Core/Src/bms.c ****         break;
 1956              		.loc 1 625 0
 1957 01fe 38BD     		pop	{r3, r4, r5, pc}
 1958              	.LVL186:
 1959              	.L158:
ARM GAS  /tmp/ccKxHDb6.s 			page 49


 626:Core/Src/bms.c **** 
 627:Core/Src/bms.c ****     case 0x462:
 628:Core/Src/bms.c ****         bms->cellVolt[14] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1960              		.loc 1 628 0
 1961 0200 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1962 0202 1B02     		lsls	r3, r3, #8
 1963 0204 03F47063 		and	r3, r3, #3840
 1964 0208 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1965              	.LVL187:
 1966 020a 1844     		add	r0, r0, r3
 1967 020c FFF7FEFF 		bl	__aeabi_i2d
 1968              	.LVL188:
 1969 0210 0022     		movs	r2, #0
 1970 0212 574B     		ldr	r3, .L183
 1971 0214 FFF7FEFF 		bl	__aeabi_dmul
 1972              	.LVL189:
 1973 0218 FFF7FEFF 		bl	__aeabi_d2uiz
 1974              	.LVL190:
 1975 021c A883     		strh	r0, [r5, #28]	@ movhi
 629:Core/Src/bms.c ****         bms->cellVolt[15] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1976              		.loc 1 629 0
 1977 021e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1978 0220 1B02     		lsls	r3, r3, #8
 1979 0222 03F47063 		and	r3, r3, #3840
 1980 0226 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1981 0228 1844     		add	r0, r0, r3
 1982 022a FFF7FEFF 		bl	__aeabi_i2d
 1983              	.LVL191:
 1984 022e 0022     		movs	r2, #0
 1985 0230 4F4B     		ldr	r3, .L183
 1986 0232 FFF7FEFF 		bl	__aeabi_dmul
 1987              	.LVL192:
 1988 0236 FFF7FEFF 		bl	__aeabi_d2uiz
 1989              	.LVL193:
 1990 023a E883     		strh	r0, [r5, #30]	@ movhi
 630:Core/Src/bms.c ****         bms->cellVolt[16] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1991              		.loc 1 630 0
 1992 023c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1993 023e 1B02     		lsls	r3, r3, #8
 1994 0240 03F47063 		and	r3, r3, #3840
 1995 0244 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1996 0246 1844     		add	r0, r0, r3
 1997 0248 FFF7FEFF 		bl	__aeabi_i2d
 1998              	.LVL194:
 1999 024c 0022     		movs	r2, #0
 2000 024e 484B     		ldr	r3, .L183
 2001 0250 FFF7FEFF 		bl	__aeabi_dmul
 2002              	.LVL195:
 2003 0254 FFF7FEFF 		bl	__aeabi_d2uiz
 2004              	.LVL196:
 2005 0258 2884     		strh	r0, [r5, #32]	@ movhi
 631:Core/Src/bms.c ****         bms->cellVolt[17] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2006              		.loc 1 631 0
 2007 025a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2008 025c 1B02     		lsls	r3, r3, #8
 2009 025e 03F47063 		and	r3, r3, #3840
 2010 0262 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccKxHDb6.s 			page 50


 2011 0264 1844     		add	r0, r0, r3
 2012 0266 FFF7FEFF 		bl	__aeabi_i2d
 2013              	.LVL197:
 2014 026a 0022     		movs	r2, #0
 2015 026c 404B     		ldr	r3, .L183
 2016 026e FFF7FEFF 		bl	__aeabi_dmul
 2017              	.LVL198:
 2018 0272 FFF7FEFF 		bl	__aeabi_d2uiz
 2019              	.LVL199:
 2020 0276 6884     		strh	r0, [r5, #34]	@ movhi
 632:Core/Src/bms.c ****         break;
 2021              		.loc 1 632 0
 2022 0278 38BD     		pop	{r3, r4, r5, pc}
 2023              	.LVL200:
 2024              	.L171:
 633:Core/Src/bms.c **** 
 634:Core/Src/bms.c ****     case 0x472:
 635:Core/Src/bms.c ****         bms->cellVolt[18] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2025              		.loc 1 635 0
 2026 027a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2027 027c 1B02     		lsls	r3, r3, #8
 2028 027e 03F47063 		and	r3, r3, #3840
 2029 0282 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2030              	.LVL201:
 2031 0284 1844     		add	r0, r0, r3
 2032 0286 FFF7FEFF 		bl	__aeabi_i2d
 2033              	.LVL202:
 2034 028a 0022     		movs	r2, #0
 2035 028c 384B     		ldr	r3, .L183
 2036 028e FFF7FEFF 		bl	__aeabi_dmul
 2037              	.LVL203:
 2038 0292 FFF7FEFF 		bl	__aeabi_d2uiz
 2039              	.LVL204:
 2040 0296 A884     		strh	r0, [r5, #36]	@ movhi
 636:Core/Src/bms.c ****         bms->cellVolt[19] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2041              		.loc 1 636 0
 2042 0298 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2043 029a 1B02     		lsls	r3, r3, #8
 2044 029c 03F47063 		and	r3, r3, #3840
 2045 02a0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2046 02a2 1844     		add	r0, r0, r3
 2047 02a4 FFF7FEFF 		bl	__aeabi_i2d
 2048              	.LVL205:
 2049 02a8 0022     		movs	r2, #0
 2050 02aa 314B     		ldr	r3, .L183
 2051 02ac FFF7FEFF 		bl	__aeabi_dmul
 2052              	.LVL206:
 2053 02b0 FFF7FEFF 		bl	__aeabi_d2uiz
 2054              	.LVL207:
 2055 02b4 E884     		strh	r0, [r5, #38]	@ movhi
 637:Core/Src/bms.c ****         bms->cellVolt[20] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2056              		.loc 1 637 0
 2057 02b6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2058 02b8 1B02     		lsls	r3, r3, #8
 2059 02ba 03F47063 		and	r3, r3, #3840
 2060 02be 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2061 02c0 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccKxHDb6.s 			page 51


 2062 02c2 FFF7FEFF 		bl	__aeabi_i2d
 2063              	.LVL208:
 2064 02c6 0022     		movs	r2, #0
 2065 02c8 294B     		ldr	r3, .L183
 2066 02ca FFF7FEFF 		bl	__aeabi_dmul
 2067              	.LVL209:
 2068 02ce FFF7FEFF 		bl	__aeabi_d2uiz
 2069              	.LVL210:
 2070 02d2 2885     		strh	r0, [r5, #40]	@ movhi
 638:Core/Src/bms.c ****         bms->cellVolt[21] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2071              		.loc 1 638 0
 2072 02d4 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2073 02d6 1B02     		lsls	r3, r3, #8
 2074 02d8 03F47063 		and	r3, r3, #3840
 2075 02dc E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2076 02de 1844     		add	r0, r0, r3
 2077 02e0 FFF7FEFF 		bl	__aeabi_i2d
 2078              	.LVL211:
 2079 02e4 0022     		movs	r2, #0
 2080 02e6 224B     		ldr	r3, .L183
 2081 02e8 FFF7FEFF 		bl	__aeabi_dmul
 2082              	.LVL212:
 2083 02ec FFF7FEFF 		bl	__aeabi_d2uiz
 2084              	.LVL213:
 2085 02f0 6885     		strh	r0, [r5, #42]	@ movhi
 639:Core/Src/bms.c ****         break;
 2086              		.loc 1 639 0
 2087 02f2 38BD     		pop	{r3, r4, r5, pc}
 2088              	.LVL214:
 2089              	.L159:
 640:Core/Src/bms.c ****     case 0x463:
 641:Core/Src/bms.c ****         bms->cellVolt[22] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2090              		.loc 1 641 0
 2091 02f4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2092 02f6 1B02     		lsls	r3, r3, #8
 2093 02f8 03F47063 		and	r3, r3, #3840
 2094 02fc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2095              	.LVL215:
 2096 02fe 1844     		add	r0, r0, r3
 2097 0300 FFF7FEFF 		bl	__aeabi_i2d
 2098              	.LVL216:
 2099 0304 0022     		movs	r2, #0
 2100 0306 1A4B     		ldr	r3, .L183
 2101 0308 FFF7FEFF 		bl	__aeabi_dmul
 2102              	.LVL217:
 2103 030c FFF7FEFF 		bl	__aeabi_d2uiz
 2104              	.LVL218:
 2105 0310 A885     		strh	r0, [r5, #44]	@ movhi
 642:Core/Src/bms.c ****         bms->cellVolt[23] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2106              		.loc 1 642 0
 2107 0312 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2108 0314 1B02     		lsls	r3, r3, #8
 2109 0316 03F47063 		and	r3, r3, #3840
 2110 031a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2111 031c 1844     		add	r0, r0, r3
 2112 031e FFF7FEFF 		bl	__aeabi_i2d
 2113              	.LVL219:
ARM GAS  /tmp/ccKxHDb6.s 			page 52


 2114 0322 0022     		movs	r2, #0
 2115 0324 124B     		ldr	r3, .L183
 2116 0326 FFF7FEFF 		bl	__aeabi_dmul
 2117              	.LVL220:
 2118 032a FFF7FEFF 		bl	__aeabi_d2uiz
 2119              	.LVL221:
 2120 032e E885     		strh	r0, [r5, #46]	@ movhi
 643:Core/Src/bms.c ****         bms->cellVolt[24] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2121              		.loc 1 643 0
 2122 0330 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2123 0332 1B02     		lsls	r3, r3, #8
 2124 0334 03F47063 		and	r3, r3, #3840
 2125 0338 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2126 033a 1844     		add	r0, r0, r3
 2127 033c FFF7FEFF 		bl	__aeabi_i2d
 2128              	.LVL222:
 2129 0340 0022     		movs	r2, #0
 2130 0342 0B4B     		ldr	r3, .L183
 2131 0344 FFF7FEFF 		bl	__aeabi_dmul
 2132              	.LVL223:
 2133 0348 FFF7FEFF 		bl	__aeabi_d2uiz
 2134              	.LVL224:
 2135 034c 2886     		strh	r0, [r5, #48]	@ movhi
 644:Core/Src/bms.c ****         bms->cellVolt[25] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2136              		.loc 1 644 0
 2137 034e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2138 0350 1B02     		lsls	r3, r3, #8
 2139 0352 03F47063 		and	r3, r3, #3840
 2140 0356 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2141 0358 1844     		add	r0, r0, r3
 2142 035a FFF7FEFF 		bl	__aeabi_i2d
 2143              	.LVL225:
 2144 035e 0022     		movs	r2, #0
 2145 0360 034B     		ldr	r3, .L183
 2146 0362 FFF7FEFF 		bl	__aeabi_dmul
 2147              	.LVL226:
 2148 0366 FFF7FEFF 		bl	__aeabi_d2uiz
 2149              	.LVL227:
 2150 036a 6886     		strh	r0, [r5, #50]	@ movhi
 645:Core/Src/bms.c ****         break;
 2151              		.loc 1 645 0
 2152 036c 38BD     		pop	{r3, r4, r5, pc}
 2153              	.LVL228:
 2154              	.L184:
 2155 036e 00BF     		.align	2
 2156              	.L183:
 2157 0370 0000F43F 		.word	1072955392
 2158              	.LVL229:
 2159              	.L172:
 646:Core/Src/bms.c **** 
 647:Core/Src/bms.c ****     case 0x473:
 648:Core/Src/bms.c ****         bms->cellVolt[26] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2160              		.loc 1 648 0
 2161 0374 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2162 0376 1B02     		lsls	r3, r3, #8
 2163 0378 03F47063 		and	r3, r3, #3840
 2164 037c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccKxHDb6.s 			page 53


 2165              	.LVL230:
 2166 037e 1844     		add	r0, r0, r3
 2167 0380 FFF7FEFF 		bl	__aeabi_i2d
 2168              	.LVL231:
 2169 0384 0022     		movs	r2, #0
 2170 0386 BB4B     		ldr	r3, .L185
 2171 0388 FFF7FEFF 		bl	__aeabi_dmul
 2172              	.LVL232:
 2173 038c FFF7FEFF 		bl	__aeabi_d2uiz
 2174              	.LVL233:
 2175 0390 A886     		strh	r0, [r5, #52]	@ movhi
 649:Core/Src/bms.c ****         bms->cellVolt[27] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2176              		.loc 1 649 0
 2177 0392 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2178 0394 1B02     		lsls	r3, r3, #8
 2179 0396 03F47063 		and	r3, r3, #3840
 2180 039a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2181 039c 1844     		add	r0, r0, r3
 2182 039e FFF7FEFF 		bl	__aeabi_i2d
 2183              	.LVL234:
 2184 03a2 0022     		movs	r2, #0
 2185 03a4 B34B     		ldr	r3, .L185
 2186 03a6 FFF7FEFF 		bl	__aeabi_dmul
 2187              	.LVL235:
 2188 03aa FFF7FEFF 		bl	__aeabi_d2uiz
 2189              	.LVL236:
 2190 03ae E886     		strh	r0, [r5, #54]	@ movhi
 650:Core/Src/bms.c ****         bms->cellVolt[28] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2191              		.loc 1 650 0
 2192 03b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2193 03b2 1B02     		lsls	r3, r3, #8
 2194 03b4 03F47063 		and	r3, r3, #3840
 2195 03b8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2196 03ba 1844     		add	r0, r0, r3
 2197 03bc FFF7FEFF 		bl	__aeabi_i2d
 2198              	.LVL237:
 2199 03c0 0022     		movs	r2, #0
 2200 03c2 AC4B     		ldr	r3, .L185
 2201 03c4 FFF7FEFF 		bl	__aeabi_dmul
 2202              	.LVL238:
 2203 03c8 FFF7FEFF 		bl	__aeabi_d2uiz
 2204              	.LVL239:
 2205 03cc 2887     		strh	r0, [r5, #56]	@ movhi
 651:Core/Src/bms.c ****         bms->cellVolt[29] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2206              		.loc 1 651 0
 2207 03ce A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2208 03d0 1B02     		lsls	r3, r3, #8
 2209 03d2 03F47063 		and	r3, r3, #3840
 2210 03d6 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2211 03d8 1844     		add	r0, r0, r3
 2212 03da FFF7FEFF 		bl	__aeabi_i2d
 2213              	.LVL240:
 2214 03de 0022     		movs	r2, #0
 2215 03e0 A44B     		ldr	r3, .L185
 2216 03e2 FFF7FEFF 		bl	__aeabi_dmul
 2217              	.LVL241:
 2218 03e6 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/ccKxHDb6.s 			page 54


 2219              	.LVL242:
 2220 03ea 6887     		strh	r0, [r5, #58]	@ movhi
 652:Core/Src/bms.c ****         break;
 2221              		.loc 1 652 0
 2222 03ec 38BD     		pop	{r3, r4, r5, pc}
 2223              	.LVL243:
 2224              	.L160:
 653:Core/Src/bms.c **** 
 654:Core/Src/bms.c ****     case 0x464:
 655:Core/Src/bms.c ****         bms->cellVolt[30] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); // Begin module 2
 2225              		.loc 1 655 0
 2226 03ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2227 03f0 1B02     		lsls	r3, r3, #8
 2228 03f2 03F47063 		and	r3, r3, #3840
 2229 03f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2230              	.LVL244:
 2231 03f8 1844     		add	r0, r0, r3
 2232 03fa FFF7FEFF 		bl	__aeabi_i2d
 2233              	.LVL245:
 2234 03fe 0022     		movs	r2, #0
 2235 0400 9C4B     		ldr	r3, .L185
 2236 0402 FFF7FEFF 		bl	__aeabi_dmul
 2237              	.LVL246:
 2238 0406 FFF7FEFF 		bl	__aeabi_d2uiz
 2239              	.LVL247:
 2240 040a A887     		strh	r0, [r5, #60]	@ movhi
 656:Core/Src/bms.c ****         bms->cellVolt[31] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2241              		.loc 1 656 0
 2242 040c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2243 040e 1B02     		lsls	r3, r3, #8
 2244 0410 03F47063 		and	r3, r3, #3840
 2245 0414 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2246 0416 1844     		add	r0, r0, r3
 2247 0418 FFF7FEFF 		bl	__aeabi_i2d
 2248              	.LVL248:
 2249 041c 0022     		movs	r2, #0
 2250 041e 954B     		ldr	r3, .L185
 2251 0420 FFF7FEFF 		bl	__aeabi_dmul
 2252              	.LVL249:
 2253 0424 FFF7FEFF 		bl	__aeabi_d2uiz
 2254              	.LVL250:
 2255 0428 E887     		strh	r0, [r5, #62]	@ movhi
 657:Core/Src/bms.c ****         bms->cellVolt[32] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2256              		.loc 1 657 0
 2257 042a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2258 042c 1B02     		lsls	r3, r3, #8
 2259 042e 03F47063 		and	r3, r3, #3840
 2260 0432 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2261 0434 1844     		add	r0, r0, r3
 2262 0436 FFF7FEFF 		bl	__aeabi_i2d
 2263              	.LVL251:
 2264 043a 0022     		movs	r2, #0
 2265 043c 8D4B     		ldr	r3, .L185
 2266 043e FFF7FEFF 		bl	__aeabi_dmul
 2267              	.LVL252:
 2268 0442 FFF7FEFF 		bl	__aeabi_d2uiz
 2269              	.LVL253:
ARM GAS  /tmp/ccKxHDb6.s 			page 55


 2270 0446 A5F84000 		strh	r0, [r5, #64]	@ movhi
 658:Core/Src/bms.c ****         bms->cellVolt[33] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2271              		.loc 1 658 0
 2272 044a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2273 044c 1B02     		lsls	r3, r3, #8
 2274 044e 03F47063 		and	r3, r3, #3840
 2275 0452 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2276 0454 1844     		add	r0, r0, r3
 2277 0456 FFF7FEFF 		bl	__aeabi_i2d
 2278              	.LVL254:
 2279 045a 0022     		movs	r2, #0
 2280 045c 854B     		ldr	r3, .L185
 2281 045e FFF7FEFF 		bl	__aeabi_dmul
 2282              	.LVL255:
 2283 0462 FFF7FEFF 		bl	__aeabi_d2uiz
 2284              	.LVL256:
 2285 0466 A5F84200 		strh	r0, [r5, #66]	@ movhi
 659:Core/Src/bms.c ****         break;
 2286              		.loc 1 659 0
 2287 046a 38BD     		pop	{r3, r4, r5, pc}
 2288              	.LVL257:
 2289              	.L173:
 660:Core/Src/bms.c **** 
 661:Core/Src/bms.c ****     case 0x474:
 662:Core/Src/bms.c ****         bms->cellVolt[34] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2290              		.loc 1 662 0
 2291 046c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2292 046e 1B02     		lsls	r3, r3, #8
 2293 0470 03F47063 		and	r3, r3, #3840
 2294 0474 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2295              	.LVL258:
 2296 0476 1844     		add	r0, r0, r3
 2297 0478 FFF7FEFF 		bl	__aeabi_i2d
 2298              	.LVL259:
 2299 047c 0022     		movs	r2, #0
 2300 047e 7D4B     		ldr	r3, .L185
 2301 0480 FFF7FEFF 		bl	__aeabi_dmul
 2302              	.LVL260:
 2303 0484 FFF7FEFF 		bl	__aeabi_d2uiz
 2304              	.LVL261:
 2305 0488 A5F84400 		strh	r0, [r5, #68]	@ movhi
 663:Core/Src/bms.c ****         bms->cellVolt[35] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2306              		.loc 1 663 0
 2307 048c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2308 048e 1B02     		lsls	r3, r3, #8
 2309 0490 03F47063 		and	r3, r3, #3840
 2310 0494 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2311 0496 1844     		add	r0, r0, r3
 2312 0498 FFF7FEFF 		bl	__aeabi_i2d
 2313              	.LVL262:
 2314 049c 0022     		movs	r2, #0
 2315 049e 754B     		ldr	r3, .L185
 2316 04a0 FFF7FEFF 		bl	__aeabi_dmul
 2317              	.LVL263:
 2318 04a4 FFF7FEFF 		bl	__aeabi_d2uiz
 2319              	.LVL264:
 2320 04a8 A5F84600 		strh	r0, [r5, #70]	@ movhi
ARM GAS  /tmp/ccKxHDb6.s 			page 56


 664:Core/Src/bms.c ****         bms->cellVolt[36] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2321              		.loc 1 664 0
 2322 04ac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2323 04ae 1B02     		lsls	r3, r3, #8
 2324 04b0 03F47063 		and	r3, r3, #3840
 2325 04b4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2326 04b6 1844     		add	r0, r0, r3
 2327 04b8 FFF7FEFF 		bl	__aeabi_i2d
 2328              	.LVL265:
 2329 04bc 0022     		movs	r2, #0
 2330 04be 6D4B     		ldr	r3, .L185
 2331 04c0 FFF7FEFF 		bl	__aeabi_dmul
 2332              	.LVL266:
 2333 04c4 FFF7FEFF 		bl	__aeabi_d2uiz
 2334              	.LVL267:
 2335 04c8 A5F84800 		strh	r0, [r5, #72]	@ movhi
 665:Core/Src/bms.c ****         bms->cellVolt[37] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2336              		.loc 1 665 0
 2337 04cc A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2338 04ce 1B02     		lsls	r3, r3, #8
 2339 04d0 03F47063 		and	r3, r3, #3840
 2340 04d4 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2341 04d6 1844     		add	r0, r0, r3
 2342 04d8 FFF7FEFF 		bl	__aeabi_i2d
 2343              	.LVL268:
 2344 04dc 0022     		movs	r2, #0
 2345 04de 654B     		ldr	r3, .L185
 2346 04e0 FFF7FEFF 		bl	__aeabi_dmul
 2347              	.LVL269:
 2348 04e4 FFF7FEFF 		bl	__aeabi_d2uiz
 2349              	.LVL270:
 2350 04e8 A5F84A00 		strh	r0, [r5, #74]	@ movhi
 666:Core/Src/bms.c ****         break;
 2351              		.loc 1 666 0
 2352 04ec 38BD     		pop	{r3, r4, r5, pc}
 2353              	.LVL271:
 2354              	.L161:
 667:Core/Src/bms.c **** 
 668:Core/Src/bms.c ****     case 0x465:
 669:Core/Src/bms.c ****         bms->cellVolt[38] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2355              		.loc 1 669 0
 2356 04ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2357 04f0 1B02     		lsls	r3, r3, #8
 2358 04f2 03F47063 		and	r3, r3, #3840
 2359 04f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2360              	.LVL272:
 2361 04f8 1844     		add	r0, r0, r3
 2362 04fa FFF7FEFF 		bl	__aeabi_i2d
 2363              	.LVL273:
 2364 04fe 0022     		movs	r2, #0
 2365 0500 5C4B     		ldr	r3, .L185
 2366 0502 FFF7FEFF 		bl	__aeabi_dmul
 2367              	.LVL274:
 2368 0506 FFF7FEFF 		bl	__aeabi_d2uiz
 2369              	.LVL275:
 2370 050a A5F84C00 		strh	r0, [r5, #76]	@ movhi
 670:Core/Src/bms.c ****         bms->cellVolt[39] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
ARM GAS  /tmp/ccKxHDb6.s 			page 57


 2371              		.loc 1 670 0
 2372 050e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2373 0510 1B02     		lsls	r3, r3, #8
 2374 0512 03F47063 		and	r3, r3, #3840
 2375 0516 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2376 0518 1844     		add	r0, r0, r3
 2377 051a FFF7FEFF 		bl	__aeabi_i2d
 2378              	.LVL276:
 2379 051e 0022     		movs	r2, #0
 2380 0520 544B     		ldr	r3, .L185
 2381 0522 FFF7FEFF 		bl	__aeabi_dmul
 2382              	.LVL277:
 2383 0526 FFF7FEFF 		bl	__aeabi_d2uiz
 2384              	.LVL278:
 2385 052a A5F84E00 		strh	r0, [r5, #78]	@ movhi
 671:Core/Src/bms.c ****         bms->cellVolt[40] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2386              		.loc 1 671 0
 2387 052e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2388 0530 1B02     		lsls	r3, r3, #8
 2389 0532 03F47063 		and	r3, r3, #3840
 2390 0536 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2391 0538 1844     		add	r0, r0, r3
 2392 053a FFF7FEFF 		bl	__aeabi_i2d
 2393              	.LVL279:
 2394 053e 0022     		movs	r2, #0
 2395 0540 4C4B     		ldr	r3, .L185
 2396 0542 FFF7FEFF 		bl	__aeabi_dmul
 2397              	.LVL280:
 2398 0546 FFF7FEFF 		bl	__aeabi_d2uiz
 2399              	.LVL281:
 2400 054a A5F85000 		strh	r0, [r5, #80]	@ movhi
 672:Core/Src/bms.c ****         bms->cellVolt[41] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2401              		.loc 1 672 0
 2402 054e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2403 0550 1B02     		lsls	r3, r3, #8
 2404 0552 03F47063 		and	r3, r3, #3840
 2405 0556 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2406 0558 1844     		add	r0, r0, r3
 2407 055a FFF7FEFF 		bl	__aeabi_i2d
 2408              	.LVL282:
 2409 055e 0022     		movs	r2, #0
 2410 0560 444B     		ldr	r3, .L185
 2411 0562 FFF7FEFF 		bl	__aeabi_dmul
 2412              	.LVL283:
 2413 0566 FFF7FEFF 		bl	__aeabi_d2uiz
 2414              	.LVL284:
 2415 056a A5F85200 		strh	r0, [r5, #82]	@ movhi
 673:Core/Src/bms.c ****         break;
 2416              		.loc 1 673 0
 2417 056e 38BD     		pop	{r3, r4, r5, pc}
 2418              	.LVL285:
 2419              	.L174:
 674:Core/Src/bms.c **** 
 675:Core/Src/bms.c ****     case 0x475:
 676:Core/Src/bms.c ****         bms->cellVolt[42] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2420              		.loc 1 676 0
 2421 0570 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccKxHDb6.s 			page 58


 2422 0572 1B02     		lsls	r3, r3, #8
 2423 0574 03F47063 		and	r3, r3, #3840
 2424 0578 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2425              	.LVL286:
 2426 057a 1844     		add	r0, r0, r3
 2427 057c FFF7FEFF 		bl	__aeabi_i2d
 2428              	.LVL287:
 2429 0580 0022     		movs	r2, #0
 2430 0582 3C4B     		ldr	r3, .L185
 2431 0584 FFF7FEFF 		bl	__aeabi_dmul
 2432              	.LVL288:
 2433 0588 FFF7FEFF 		bl	__aeabi_d2uiz
 2434              	.LVL289:
 2435 058c A5F85400 		strh	r0, [r5, #84]	@ movhi
 677:Core/Src/bms.c ****         bms->cellVolt[43] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2436              		.loc 1 677 0
 2437 0590 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2438 0592 1B02     		lsls	r3, r3, #8
 2439 0594 03F47063 		and	r3, r3, #3840
 2440 0598 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2441 059a 1844     		add	r0, r0, r3
 2442 059c FFF7FEFF 		bl	__aeabi_i2d
 2443              	.LVL290:
 2444 05a0 0022     		movs	r2, #0
 2445 05a2 344B     		ldr	r3, .L185
 2446 05a4 FFF7FEFF 		bl	__aeabi_dmul
 2447              	.LVL291:
 2448 05a8 FFF7FEFF 		bl	__aeabi_d2uiz
 2449              	.LVL292:
 2450 05ac A5F85600 		strh	r0, [r5, #86]	@ movhi
 678:Core/Src/bms.c ****         bms->cellVolt[44] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2451              		.loc 1 678 0
 2452 05b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2453 05b2 1B02     		lsls	r3, r3, #8
 2454 05b4 03F47063 		and	r3, r3, #3840
 2455 05b8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2456 05ba 1844     		add	r0, r0, r3
 2457 05bc FFF7FEFF 		bl	__aeabi_i2d
 2458              	.LVL293:
 2459 05c0 0022     		movs	r2, #0
 2460 05c2 2C4B     		ldr	r3, .L185
 2461 05c4 FFF7FEFF 		bl	__aeabi_dmul
 2462              	.LVL294:
 2463 05c8 FFF7FEFF 		bl	__aeabi_d2uiz
 2464              	.LVL295:
 2465 05cc A5F85800 		strh	r0, [r5, #88]	@ movhi
 679:Core/Src/bms.c ****         bms->cellVolt[45] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2466              		.loc 1 679 0
 2467 05d0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2468 05d2 1B02     		lsls	r3, r3, #8
 2469 05d4 03F47063 		and	r3, r3, #3840
 2470 05d8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2471 05da 1844     		add	r0, r0, r3
 2472 05dc FFF7FEFF 		bl	__aeabi_i2d
 2473              	.LVL296:
 2474 05e0 0022     		movs	r2, #0
 2475 05e2 244B     		ldr	r3, .L185
ARM GAS  /tmp/ccKxHDb6.s 			page 59


 2476 05e4 FFF7FEFF 		bl	__aeabi_dmul
 2477              	.LVL297:
 2478 05e8 FFF7FEFF 		bl	__aeabi_d2uiz
 2479              	.LVL298:
 2480 05ec A5F85A00 		strh	r0, [r5, #90]	@ movhi
 680:Core/Src/bms.c ****         break;
 2481              		.loc 1 680 0
 2482 05f0 38BD     		pop	{r3, r4, r5, pc}
 2483              	.LVL299:
 2484              	.L162:
 681:Core/Src/bms.c **** 
 682:Core/Src/bms.c ****     case 0x466:
 683:Core/Src/bms.c ****         bms->cellVolt[46] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2485              		.loc 1 683 0
 2486 05f2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2487 05f4 1B02     		lsls	r3, r3, #8
 2488 05f6 03F47063 		and	r3, r3, #3840
 2489 05fa 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2490              	.LVL300:
 2491 05fc 1844     		add	r0, r0, r3
 2492 05fe FFF7FEFF 		bl	__aeabi_i2d
 2493              	.LVL301:
 2494 0602 0022     		movs	r2, #0
 2495 0604 1B4B     		ldr	r3, .L185
 2496 0606 FFF7FEFF 		bl	__aeabi_dmul
 2497              	.LVL302:
 2498 060a FFF7FEFF 		bl	__aeabi_d2uiz
 2499              	.LVL303:
 2500 060e A5F85C00 		strh	r0, [r5, #92]	@ movhi
 684:Core/Src/bms.c ****         bms->cellVolt[47] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2501              		.loc 1 684 0
 2502 0612 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2503 0614 1B02     		lsls	r3, r3, #8
 2504 0616 03F47063 		and	r3, r3, #3840
 2505 061a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2506 061c 1844     		add	r0, r0, r3
 2507 061e FFF7FEFF 		bl	__aeabi_i2d
 2508              	.LVL304:
 2509 0622 0022     		movs	r2, #0
 2510 0624 134B     		ldr	r3, .L185
 2511 0626 FFF7FEFF 		bl	__aeabi_dmul
 2512              	.LVL305:
 2513 062a FFF7FEFF 		bl	__aeabi_d2uiz
 2514              	.LVL306:
 2515 062e A5F85E00 		strh	r0, [r5, #94]	@ movhi
 685:Core/Src/bms.c ****         bms->cellVolt[48] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2516              		.loc 1 685 0
 2517 0632 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2518 0634 1B02     		lsls	r3, r3, #8
 2519 0636 03F47063 		and	r3, r3, #3840
 2520 063a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2521 063c 1844     		add	r0, r0, r3
 2522 063e FFF7FEFF 		bl	__aeabi_i2d
 2523              	.LVL307:
 2524 0642 0022     		movs	r2, #0
 2525 0644 0B4B     		ldr	r3, .L185
 2526 0646 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccKxHDb6.s 			page 60


 2527              	.LVL308:
 2528 064a FFF7FEFF 		bl	__aeabi_d2uiz
 2529              	.LVL309:
 2530 064e A5F86000 		strh	r0, [r5, #96]	@ movhi
 686:Core/Src/bms.c ****         bms->cellVolt[49] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2531              		.loc 1 686 0
 2532 0652 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2533 0654 1B02     		lsls	r3, r3, #8
 2534 0656 03F47063 		and	r3, r3, #3840
 2535 065a E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2536 065c 1844     		add	r0, r0, r3
 2537 065e FFF7FEFF 		bl	__aeabi_i2d
 2538              	.LVL310:
 2539 0662 0022     		movs	r2, #0
 2540 0664 034B     		ldr	r3, .L185
 2541 0666 FFF7FEFF 		bl	__aeabi_dmul
 2542              	.LVL311:
 2543 066a FFF7FEFF 		bl	__aeabi_d2uiz
 2544              	.LVL312:
 2545 066e A5F86200 		strh	r0, [r5, #98]	@ movhi
 687:Core/Src/bms.c ****         break;
 2546              		.loc 1 687 0
 2547 0672 38BD     		pop	{r3, r4, r5, pc}
 2548              	.LVL313:
 2549              	.L186:
 2550              		.align	2
 2551              	.L185:
 2552 0674 0000F43F 		.word	1072955392
 2553              	.LVL314:
 2554              	.L175:
 688:Core/Src/bms.c **** 
 689:Core/Src/bms.c ****     case 0x476:
 690:Core/Src/bms.c ****         bms->cellVolt[50] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2555              		.loc 1 690 0
 2556 0678 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2557 067a 1B02     		lsls	r3, r3, #8
 2558 067c 03F47063 		and	r3, r3, #3840
 2559 0680 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2560              	.LVL315:
 2561 0682 1844     		add	r0, r0, r3
 2562 0684 FFF7FEFF 		bl	__aeabi_i2d
 2563              	.LVL316:
 2564 0688 0022     		movs	r2, #0
 2565 068a BE4B     		ldr	r3, .L187
 2566 068c FFF7FEFF 		bl	__aeabi_dmul
 2567              	.LVL317:
 2568 0690 FFF7FEFF 		bl	__aeabi_d2uiz
 2569              	.LVL318:
 2570 0694 A5F86400 		strh	r0, [r5, #100]	@ movhi
 691:Core/Src/bms.c ****         bms->cellVolt[51] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2571              		.loc 1 691 0
 2572 0698 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2573 069a 1B02     		lsls	r3, r3, #8
 2574 069c 03F47063 		and	r3, r3, #3840
 2575 06a0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2576 06a2 1844     		add	r0, r0, r3
 2577 06a4 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccKxHDb6.s 			page 61


 2578              	.LVL319:
 2579 06a8 0022     		movs	r2, #0
 2580 06aa B64B     		ldr	r3, .L187
 2581 06ac FFF7FEFF 		bl	__aeabi_dmul
 2582              	.LVL320:
 2583 06b0 FFF7FEFF 		bl	__aeabi_d2uiz
 2584              	.LVL321:
 2585 06b4 A5F86600 		strh	r0, [r5, #102]	@ movhi
 692:Core/Src/bms.c ****         bms->cellVolt[52] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2586              		.loc 1 692 0
 2587 06b8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2588 06ba 1B02     		lsls	r3, r3, #8
 2589 06bc 03F47063 		and	r3, r3, #3840
 2590 06c0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2591 06c2 1844     		add	r0, r0, r3
 2592 06c4 FFF7FEFF 		bl	__aeabi_i2d
 2593              	.LVL322:
 2594 06c8 0022     		movs	r2, #0
 2595 06ca AE4B     		ldr	r3, .L187
 2596 06cc FFF7FEFF 		bl	__aeabi_dmul
 2597              	.LVL323:
 2598 06d0 FFF7FEFF 		bl	__aeabi_d2uiz
 2599              	.LVL324:
 2600 06d4 A5F86800 		strh	r0, [r5, #104]	@ movhi
 693:Core/Src/bms.c ****         bms->cellVolt[53] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2601              		.loc 1 693 0
 2602 06d8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2603 06da 1B02     		lsls	r3, r3, #8
 2604 06dc 03F47063 		and	r3, r3, #3840
 2605 06e0 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2606 06e2 1844     		add	r0, r0, r3
 2607 06e4 FFF7FEFF 		bl	__aeabi_i2d
 2608              	.LVL325:
 2609 06e8 0022     		movs	r2, #0
 2610 06ea A64B     		ldr	r3, .L187
 2611 06ec FFF7FEFF 		bl	__aeabi_dmul
 2612              	.LVL326:
 2613 06f0 FFF7FEFF 		bl	__aeabi_d2uiz
 2614              	.LVL327:
 2615 06f4 A5F86A00 		strh	r0, [r5, #106]	@ movhi
 694:Core/Src/bms.c ****         break;
 2616              		.loc 1 694 0
 2617 06f8 38BD     		pop	{r3, r4, r5, pc}
 2618              	.LVL328:
 2619              	.L163:
 695:Core/Src/bms.c **** 
 696:Core/Src/bms.c ****     case 0x468:
 697:Core/Src/bms.c ****         bms->cellVolt[54] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 3
 2620              		.loc 1 697 0
 2621 06fa 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2622 06fc 1B02     		lsls	r3, r3, #8
 2623 06fe 03F47063 		and	r3, r3, #3840
 2624 0702 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2625              	.LVL329:
 2626 0704 1844     		add	r0, r0, r3
 2627 0706 FFF7FEFF 		bl	__aeabi_i2d
 2628              	.LVL330:
ARM GAS  /tmp/ccKxHDb6.s 			page 62


 2629 070a 0022     		movs	r2, #0
 2630 070c 9D4B     		ldr	r3, .L187
 2631 070e FFF7FEFF 		bl	__aeabi_dmul
 2632              	.LVL331:
 2633 0712 FFF7FEFF 		bl	__aeabi_d2uiz
 2634              	.LVL332:
 2635 0716 A5F86C00 		strh	r0, [r5, #108]	@ movhi
 698:Core/Src/bms.c ****         bms->cellVolt[55] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2636              		.loc 1 698 0
 2637 071a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2638 071c 1B02     		lsls	r3, r3, #8
 2639 071e 03F47063 		and	r3, r3, #3840
 2640 0722 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2641 0724 1844     		add	r0, r0, r3
 2642 0726 FFF7FEFF 		bl	__aeabi_i2d
 2643              	.LVL333:
 2644 072a 0022     		movs	r2, #0
 2645 072c 954B     		ldr	r3, .L187
 2646 072e FFF7FEFF 		bl	__aeabi_dmul
 2647              	.LVL334:
 2648 0732 FFF7FEFF 		bl	__aeabi_d2uiz
 2649              	.LVL335:
 2650 0736 A5F86E00 		strh	r0, [r5, #110]	@ movhi
 699:Core/Src/bms.c ****         bms->cellVolt[56] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2651              		.loc 1 699 0
 2652 073a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2653 073c 1B02     		lsls	r3, r3, #8
 2654 073e 03F47063 		and	r3, r3, #3840
 2655 0742 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2656 0744 1844     		add	r0, r0, r3
 2657 0746 FFF7FEFF 		bl	__aeabi_i2d
 2658              	.LVL336:
 2659 074a 0022     		movs	r2, #0
 2660 074c 8D4B     		ldr	r3, .L187
 2661 074e FFF7FEFF 		bl	__aeabi_dmul
 2662              	.LVL337:
 2663 0752 FFF7FEFF 		bl	__aeabi_d2uiz
 2664              	.LVL338:
 2665 0756 A5F87000 		strh	r0, [r5, #112]	@ movhi
 700:Core/Src/bms.c ****         bms->cellVolt[57] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2666              		.loc 1 700 0
 2667 075a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2668 075c 1B02     		lsls	r3, r3, #8
 2669 075e 03F47063 		and	r3, r3, #3840
 2670 0762 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2671 0764 1844     		add	r0, r0, r3
 2672 0766 FFF7FEFF 		bl	__aeabi_i2d
 2673              	.LVL339:
 2674 076a 0022     		movs	r2, #0
 2675 076c 854B     		ldr	r3, .L187
 2676 076e FFF7FEFF 		bl	__aeabi_dmul
 2677              	.LVL340:
 2678 0772 FFF7FEFF 		bl	__aeabi_d2uiz
 2679              	.LVL341:
 2680 0776 A5F87200 		strh	r0, [r5, #114]	@ movhi
 701:Core/Src/bms.c ****         break;
 2681              		.loc 1 701 0
ARM GAS  /tmp/ccKxHDb6.s 			page 63


 2682 077a 38BD     		pop	{r3, r4, r5, pc}
 2683              	.LVL342:
 2684              	.L176:
 702:Core/Src/bms.c **** 
 703:Core/Src/bms.c ****     case 0x478:
 704:Core/Src/bms.c ****         bms->cellVolt[58] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2685              		.loc 1 704 0
 2686 077c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2687 077e 1B02     		lsls	r3, r3, #8
 2688 0780 03F47063 		and	r3, r3, #3840
 2689 0784 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2690              	.LVL343:
 2691 0786 1844     		add	r0, r0, r3
 2692 0788 FFF7FEFF 		bl	__aeabi_i2d
 2693              	.LVL344:
 2694 078c 0022     		movs	r2, #0
 2695 078e 7D4B     		ldr	r3, .L187
 2696 0790 FFF7FEFF 		bl	__aeabi_dmul
 2697              	.LVL345:
 2698 0794 FFF7FEFF 		bl	__aeabi_d2uiz
 2699              	.LVL346:
 2700 0798 A5F87400 		strh	r0, [r5, #116]	@ movhi
 705:Core/Src/bms.c ****         bms->cellVolt[59] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2701              		.loc 1 705 0
 2702 079c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2703 079e 1B02     		lsls	r3, r3, #8
 2704 07a0 03F47063 		and	r3, r3, #3840
 2705 07a4 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2706 07a6 1844     		add	r0, r0, r3
 2707 07a8 FFF7FEFF 		bl	__aeabi_i2d
 2708              	.LVL347:
 2709 07ac 0022     		movs	r2, #0
 2710 07ae 754B     		ldr	r3, .L187
 2711 07b0 FFF7FEFF 		bl	__aeabi_dmul
 2712              	.LVL348:
 2713 07b4 FFF7FEFF 		bl	__aeabi_d2uiz
 2714              	.LVL349:
 2715 07b8 A5F87600 		strh	r0, [r5, #118]	@ movhi
 706:Core/Src/bms.c ****         bms->cellVolt[60] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2716              		.loc 1 706 0
 2717 07bc 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2718 07be 1B02     		lsls	r3, r3, #8
 2719 07c0 03F47063 		and	r3, r3, #3840
 2720 07c4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2721 07c6 1844     		add	r0, r0, r3
 2722 07c8 FFF7FEFF 		bl	__aeabi_i2d
 2723              	.LVL350:
 2724 07cc 0022     		movs	r2, #0
 2725 07ce 6D4B     		ldr	r3, .L187
 2726 07d0 FFF7FEFF 		bl	__aeabi_dmul
 2727              	.LVL351:
 2728 07d4 FFF7FEFF 		bl	__aeabi_d2uiz
 2729              	.LVL352:
 2730 07d8 A5F87800 		strh	r0, [r5, #120]	@ movhi
 707:Core/Src/bms.c ****         bms->cellVolt[61] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2731              		.loc 1 707 0
 2732 07dc A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
ARM GAS  /tmp/ccKxHDb6.s 			page 64


 2733 07de 1B02     		lsls	r3, r3, #8
 2734 07e0 03F47063 		and	r3, r3, #3840
 2735 07e4 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2736 07e6 1844     		add	r0, r0, r3
 2737 07e8 FFF7FEFF 		bl	__aeabi_i2d
 2738              	.LVL353:
 2739 07ec 0022     		movs	r2, #0
 2740 07ee 654B     		ldr	r3, .L187
 2741 07f0 FFF7FEFF 		bl	__aeabi_dmul
 2742              	.LVL354:
 2743 07f4 FFF7FEFF 		bl	__aeabi_d2uiz
 2744              	.LVL355:
 2745 07f8 A5F87A00 		strh	r0, [r5, #122]	@ movhi
 708:Core/Src/bms.c ****         break;
 2746              		.loc 1 708 0
 2747 07fc 38BD     		pop	{r3, r4, r5, pc}
 2748              	.LVL356:
 2749              	.L164:
 709:Core/Src/bms.c **** 
 710:Core/Src/bms.c ****     case 0x469:
 711:Core/Src/bms.c ****         bms->cellVolt[62] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2750              		.loc 1 711 0
 2751 07fe 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2752 0800 1B02     		lsls	r3, r3, #8
 2753 0802 03F47063 		and	r3, r3, #3840
 2754 0806 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2755              	.LVL357:
 2756 0808 1844     		add	r0, r0, r3
 2757 080a FFF7FEFF 		bl	__aeabi_i2d
 2758              	.LVL358:
 2759 080e 0022     		movs	r2, #0
 2760 0810 5C4B     		ldr	r3, .L187
 2761 0812 FFF7FEFF 		bl	__aeabi_dmul
 2762              	.LVL359:
 2763 0816 FFF7FEFF 		bl	__aeabi_d2uiz
 2764              	.LVL360:
 2765 081a A5F87C00 		strh	r0, [r5, #124]	@ movhi
 712:Core/Src/bms.c ****         bms->cellVolt[63] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2766              		.loc 1 712 0
 2767 081e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2768 0820 1B02     		lsls	r3, r3, #8
 2769 0822 03F47063 		and	r3, r3, #3840
 2770 0826 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2771 0828 1844     		add	r0, r0, r3
 2772 082a FFF7FEFF 		bl	__aeabi_i2d
 2773              	.LVL361:
 2774 082e 0022     		movs	r2, #0
 2775 0830 544B     		ldr	r3, .L187
 2776 0832 FFF7FEFF 		bl	__aeabi_dmul
 2777              	.LVL362:
 2778 0836 FFF7FEFF 		bl	__aeabi_d2uiz
 2779              	.LVL363:
 2780 083a A5F87E00 		strh	r0, [r5, #126]	@ movhi
 713:Core/Src/bms.c ****         bms->cellVolt[64] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2781              		.loc 1 713 0
 2782 083e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2783 0840 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp/ccKxHDb6.s 			page 65


 2784 0842 03F47063 		and	r3, r3, #3840
 2785 0846 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2786 0848 1844     		add	r0, r0, r3
 2787 084a FFF7FEFF 		bl	__aeabi_i2d
 2788              	.LVL364:
 2789 084e 0022     		movs	r2, #0
 2790 0850 4C4B     		ldr	r3, .L187
 2791 0852 FFF7FEFF 		bl	__aeabi_dmul
 2792              	.LVL365:
 2793 0856 FFF7FEFF 		bl	__aeabi_d2uiz
 2794              	.LVL366:
 2795 085a A5F88000 		strh	r0, [r5, #128]	@ movhi
 714:Core/Src/bms.c ****         bms->cellVolt[65] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2796              		.loc 1 714 0
 2797 085e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2798 0860 1B02     		lsls	r3, r3, #8
 2799 0862 03F47063 		and	r3, r3, #3840
 2800 0866 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2801 0868 1844     		add	r0, r0, r3
 2802 086a FFF7FEFF 		bl	__aeabi_i2d
 2803              	.LVL367:
 2804 086e 0022     		movs	r2, #0
 2805 0870 444B     		ldr	r3, .L187
 2806 0872 FFF7FEFF 		bl	__aeabi_dmul
 2807              	.LVL368:
 2808 0876 FFF7FEFF 		bl	__aeabi_d2uiz
 2809              	.LVL369:
 2810 087a A5F88200 		strh	r0, [r5, #130]	@ movhi
 715:Core/Src/bms.c ****         break;
 2811              		.loc 1 715 0
 2812 087e 38BD     		pop	{r3, r4, r5, pc}
 2813              	.LVL370:
 2814              	.L177:
 716:Core/Src/bms.c **** 
 717:Core/Src/bms.c ****     case 0x479:
 718:Core/Src/bms.c ****         bms->cellVolt[66] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2815              		.loc 1 718 0
 2816 0880 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2817 0882 1B02     		lsls	r3, r3, #8
 2818 0884 03F47063 		and	r3, r3, #3840
 2819 0888 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2820              	.LVL371:
 2821 088a 1844     		add	r0, r0, r3
 2822 088c FFF7FEFF 		bl	__aeabi_i2d
 2823              	.LVL372:
 2824 0890 0022     		movs	r2, #0
 2825 0892 3C4B     		ldr	r3, .L187
 2826 0894 FFF7FEFF 		bl	__aeabi_dmul
 2827              	.LVL373:
 2828 0898 FFF7FEFF 		bl	__aeabi_d2uiz
 2829              	.LVL374:
 2830 089c A5F88400 		strh	r0, [r5, #132]	@ movhi
 719:Core/Src/bms.c ****         bms->cellVolt[67] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2831              		.loc 1 719 0
 2832 08a0 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2833 08a2 1B02     		lsls	r3, r3, #8
 2834 08a4 03F47063 		and	r3, r3, #3840
ARM GAS  /tmp/ccKxHDb6.s 			page 66


 2835 08a8 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2836 08aa 1844     		add	r0, r0, r3
 2837 08ac FFF7FEFF 		bl	__aeabi_i2d
 2838              	.LVL375:
 2839 08b0 0022     		movs	r2, #0
 2840 08b2 344B     		ldr	r3, .L187
 2841 08b4 FFF7FEFF 		bl	__aeabi_dmul
 2842              	.LVL376:
 2843 08b8 FFF7FEFF 		bl	__aeabi_d2uiz
 2844              	.LVL377:
 2845 08bc A5F88600 		strh	r0, [r5, #134]	@ movhi
 720:Core/Src/bms.c ****         bms->cellVolt[68] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2846              		.loc 1 720 0
 2847 08c0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2848 08c2 1B02     		lsls	r3, r3, #8
 2849 08c4 03F47063 		and	r3, r3, #3840
 2850 08c8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2851 08ca 1844     		add	r0, r0, r3
 2852 08cc FFF7FEFF 		bl	__aeabi_i2d
 2853              	.LVL378:
 2854 08d0 0022     		movs	r2, #0
 2855 08d2 2C4B     		ldr	r3, .L187
 2856 08d4 FFF7FEFF 		bl	__aeabi_dmul
 2857              	.LVL379:
 2858 08d8 FFF7FEFF 		bl	__aeabi_d2uiz
 2859              	.LVL380:
 2860 08dc A5F88800 		strh	r0, [r5, #136]	@ movhi
 721:Core/Src/bms.c ****         bms->cellVolt[69] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2861              		.loc 1 721 0
 2862 08e0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2863 08e2 1B02     		lsls	r3, r3, #8
 2864 08e4 03F47063 		and	r3, r3, #3840
 2865 08e8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2866 08ea 1844     		add	r0, r0, r3
 2867 08ec FFF7FEFF 		bl	__aeabi_i2d
 2868              	.LVL381:
 2869 08f0 0022     		movs	r2, #0
 2870 08f2 244B     		ldr	r3, .L187
 2871 08f4 FFF7FEFF 		bl	__aeabi_dmul
 2872              	.LVL382:
 2873 08f8 FFF7FEFF 		bl	__aeabi_d2uiz
 2874              	.LVL383:
 2875 08fc A5F88A00 		strh	r0, [r5, #138]	@ movhi
 722:Core/Src/bms.c ****         break;
 2876              		.loc 1 722 0
 2877 0900 38BD     		pop	{r3, r4, r5, pc}
 2878              	.LVL384:
 2879              	.L165:
 723:Core/Src/bms.c **** 
 724:Core/Src/bms.c ****     case 0x46A:
 725:Core/Src/bms.c ****         bms->cellVolt[70] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2880              		.loc 1 725 0
 2881 0902 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2882 0904 1B02     		lsls	r3, r3, #8
 2883 0906 03F47063 		and	r3, r3, #3840
 2884 090a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2885              	.LVL385:
ARM GAS  /tmp/ccKxHDb6.s 			page 67


 2886 090c 1844     		add	r0, r0, r3
 2887 090e FFF7FEFF 		bl	__aeabi_i2d
 2888              	.LVL386:
 2889 0912 0022     		movs	r2, #0
 2890 0914 1B4B     		ldr	r3, .L187
 2891 0916 FFF7FEFF 		bl	__aeabi_dmul
 2892              	.LVL387:
 2893 091a FFF7FEFF 		bl	__aeabi_d2uiz
 2894              	.LVL388:
 2895 091e A5F88C00 		strh	r0, [r5, #140]	@ movhi
 726:Core/Src/bms.c ****         bms->cellVolt[71] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2896              		.loc 1 726 0
 2897 0922 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2898 0924 1B02     		lsls	r3, r3, #8
 2899 0926 03F47063 		and	r3, r3, #3840
 2900 092a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2901 092c 1844     		add	r0, r0, r3
 2902 092e FFF7FEFF 		bl	__aeabi_i2d
 2903              	.LVL389:
 2904 0932 0022     		movs	r2, #0
 2905 0934 134B     		ldr	r3, .L187
 2906 0936 FFF7FEFF 		bl	__aeabi_dmul
 2907              	.LVL390:
 2908 093a FFF7FEFF 		bl	__aeabi_d2uiz
 2909              	.LVL391:
 2910 093e A5F88E00 		strh	r0, [r5, #142]	@ movhi
 727:Core/Src/bms.c ****         bms->cellVolt[72] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2911              		.loc 1 727 0
 2912 0942 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2913 0944 1B02     		lsls	r3, r3, #8
 2914 0946 03F47063 		and	r3, r3, #3840
 2915 094a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2916 094c 1844     		add	r0, r0, r3
 2917 094e FFF7FEFF 		bl	__aeabi_i2d
 2918              	.LVL392:
 2919 0952 0022     		movs	r2, #0
 2920 0954 0B4B     		ldr	r3, .L187
 2921 0956 FFF7FEFF 		bl	__aeabi_dmul
 2922              	.LVL393:
 2923 095a FFF7FEFF 		bl	__aeabi_d2uiz
 2924              	.LVL394:
 2925 095e A5F89000 		strh	r0, [r5, #144]	@ movhi
 728:Core/Src/bms.c ****         bms->cellVolt[73] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2926              		.loc 1 728 0
 2927 0962 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2928 0964 1B02     		lsls	r3, r3, #8
 2929 0966 03F47063 		and	r3, r3, #3840
 2930 096a E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2931 096c 1844     		add	r0, r0, r3
 2932 096e FFF7FEFF 		bl	__aeabi_i2d
 2933              	.LVL395:
 2934 0972 0022     		movs	r2, #0
 2935 0974 034B     		ldr	r3, .L187
 2936 0976 FFF7FEFF 		bl	__aeabi_dmul
 2937              	.LVL396:
 2938 097a FFF7FEFF 		bl	__aeabi_d2uiz
 2939              	.LVL397:
ARM GAS  /tmp/ccKxHDb6.s 			page 68


 2940 097e A5F89200 		strh	r0, [r5, #146]	@ movhi
 729:Core/Src/bms.c ****         break;
 2941              		.loc 1 729 0
 2942 0982 38BD     		pop	{r3, r4, r5, pc}
 2943              	.LVL398:
 2944              	.L188:
 2945              		.align	2
 2946              	.L187:
 2947 0984 0000F43F 		.word	1072955392
 2948              	.LVL399:
 2949              	.L178:
 730:Core/Src/bms.c **** 
 731:Core/Src/bms.c ****     case 0x47A:
 732:Core/Src/bms.c ****         bms->cellVolt[74] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2950              		.loc 1 732 0
 2951 0988 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2952 098a 1B02     		lsls	r3, r3, #8
 2953 098c 03F47063 		and	r3, r3, #3840
 2954 0990 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2955              	.LVL400:
 2956 0992 1844     		add	r0, r0, r3
 2957 0994 FFF7FEFF 		bl	__aeabi_i2d
 2958              	.LVL401:
 2959 0998 0022     		movs	r2, #0
 2960 099a AF4B     		ldr	r3, .L189
 2961 099c FFF7FEFF 		bl	__aeabi_dmul
 2962              	.LVL402:
 2963 09a0 FFF7FEFF 		bl	__aeabi_d2uiz
 2964              	.LVL403:
 2965 09a4 A5F89400 		strh	r0, [r5, #148]	@ movhi
 733:Core/Src/bms.c ****         bms->cellVolt[75] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2966              		.loc 1 733 0
 2967 09a8 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2968 09aa 1B02     		lsls	r3, r3, #8
 2969 09ac 03F47063 		and	r3, r3, #3840
 2970 09b0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2971 09b2 1844     		add	r0, r0, r3
 2972 09b4 FFF7FEFF 		bl	__aeabi_i2d
 2973              	.LVL404:
 2974 09b8 0022     		movs	r2, #0
 2975 09ba A74B     		ldr	r3, .L189
 2976 09bc FFF7FEFF 		bl	__aeabi_dmul
 2977              	.LVL405:
 2978 09c0 FFF7FEFF 		bl	__aeabi_d2uiz
 2979              	.LVL406:
 2980 09c4 A5F89600 		strh	r0, [r5, #150]	@ movhi
 734:Core/Src/bms.c ****         bms->cellVolt[76] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2981              		.loc 1 734 0
 2982 09c8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2983 09ca 1B02     		lsls	r3, r3, #8
 2984 09cc 03F47063 		and	r3, r3, #3840
 2985 09d0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2986 09d2 1844     		add	r0, r0, r3
 2987 09d4 FFF7FEFF 		bl	__aeabi_i2d
 2988              	.LVL407:
 2989 09d8 0022     		movs	r2, #0
 2990 09da 9F4B     		ldr	r3, .L189
ARM GAS  /tmp/ccKxHDb6.s 			page 69


 2991 09dc FFF7FEFF 		bl	__aeabi_dmul
 2992              	.LVL408:
 2993 09e0 FFF7FEFF 		bl	__aeabi_d2uiz
 2994              	.LVL409:
 2995 09e4 A5F89800 		strh	r0, [r5, #152]	@ movhi
 735:Core/Src/bms.c ****         bms->cellVolt[77] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2996              		.loc 1 735 0
 2997 09e8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2998 09ea 1B02     		lsls	r3, r3, #8
 2999 09ec 03F47063 		and	r3, r3, #3840
 3000 09f0 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 3001 09f2 1844     		add	r0, r0, r3
 3002 09f4 FFF7FEFF 		bl	__aeabi_i2d
 3003              	.LVL410:
 3004 09f8 0022     		movs	r2, #0
 3005 09fa 974B     		ldr	r3, .L189
 3006 09fc FFF7FEFF 		bl	__aeabi_dmul
 3007              	.LVL411:
 3008 0a00 FFF7FEFF 		bl	__aeabi_d2uiz
 3009              	.LVL412:
 3010 0a04 A5F89A00 		strh	r0, [r5, #154]	@ movhi
 736:Core/Src/bms.c ****         break;
 3011              		.loc 1 736 0
 3012 0a08 38BD     		pop	{r3, r4, r5, pc}
 3013              	.LVL413:
 3014              	.L166:
 737:Core/Src/bms.c **** 
 738:Core/Src/bms.c ****     case 0x46C:
 739:Core/Src/bms.c ****         bms->cellVolt[78] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 4
 3015              		.loc 1 739 0
 3016 0a0a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3017 0a0c 1B02     		lsls	r3, r3, #8
 3018 0a0e 03F47063 		and	r3, r3, #3840
 3019 0a12 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3020              	.LVL414:
 3021 0a14 1844     		add	r0, r0, r3
 3022 0a16 FFF7FEFF 		bl	__aeabi_i2d
 3023              	.LVL415:
 3024 0a1a 0022     		movs	r2, #0
 3025 0a1c 8E4B     		ldr	r3, .L189
 3026 0a1e FFF7FEFF 		bl	__aeabi_dmul
 3027              	.LVL416:
 3028 0a22 FFF7FEFF 		bl	__aeabi_d2uiz
 3029              	.LVL417:
 3030 0a26 A5F89C00 		strh	r0, [r5, #156]	@ movhi
 740:Core/Src/bms.c ****         bms->cellVolt[79] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3031              		.loc 1 740 0
 3032 0a2a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3033 0a2c 1B02     		lsls	r3, r3, #8
 3034 0a2e 03F47063 		and	r3, r3, #3840
 3035 0a32 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3036 0a34 1844     		add	r0, r0, r3
 3037 0a36 FFF7FEFF 		bl	__aeabi_i2d
 3038              	.LVL418:
 3039 0a3a 0022     		movs	r2, #0
 3040 0a3c 864B     		ldr	r3, .L189
 3041 0a3e FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccKxHDb6.s 			page 70


 3042              	.LVL419:
 3043 0a42 FFF7FEFF 		bl	__aeabi_d2uiz
 3044              	.LVL420:
 3045 0a46 A5F89E00 		strh	r0, [r5, #158]	@ movhi
 741:Core/Src/bms.c ****         bms->cellVolt[80] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3046              		.loc 1 741 0
 3047 0a4a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3048 0a4c 1B02     		lsls	r3, r3, #8
 3049 0a4e 03F47063 		and	r3, r3, #3840
 3050 0a52 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3051 0a54 1844     		add	r0, r0, r3
 3052 0a56 FFF7FEFF 		bl	__aeabi_i2d
 3053              	.LVL421:
 3054 0a5a 0022     		movs	r2, #0
 3055 0a5c 7E4B     		ldr	r3, .L189
 3056 0a5e FFF7FEFF 		bl	__aeabi_dmul
 3057              	.LVL422:
 3058 0a62 FFF7FEFF 		bl	__aeabi_d2uiz
 3059              	.LVL423:
 3060 0a66 A5F8A000 		strh	r0, [r5, #160]	@ movhi
 742:Core/Src/bms.c ****         break;
 3061              		.loc 1 742 0
 3062 0a6a 38BD     		pop	{r3, r4, r5, pc}
 3063              	.LVL424:
 3064              	.L179:
 743:Core/Src/bms.c **** 
 744:Core/Src/bms.c ****     case 0x47C:
 745:Core/Src/bms.c ****         bms->cellVolt[81] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3065              		.loc 1 745 0
 3066 0a6c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3067 0a6e 1B02     		lsls	r3, r3, #8
 3068 0a70 03F47063 		and	r3, r3, #3840
 3069 0a74 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3070              	.LVL425:
 3071 0a76 1844     		add	r0, r0, r3
 3072 0a78 FFF7FEFF 		bl	__aeabi_i2d
 3073              	.LVL426:
 3074 0a7c 0022     		movs	r2, #0
 3075 0a7e 764B     		ldr	r3, .L189
 3076 0a80 FFF7FEFF 		bl	__aeabi_dmul
 3077              	.LVL427:
 3078 0a84 FFF7FEFF 		bl	__aeabi_d2uiz
 3079              	.LVL428:
 3080 0a88 A5F8A200 		strh	r0, [r5, #162]	@ movhi
 746:Core/Src/bms.c ****         bms->cellVolt[82] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3081              		.loc 1 746 0
 3082 0a8c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3083 0a8e 1B02     		lsls	r3, r3, #8
 3084 0a90 03F47063 		and	r3, r3, #3840
 3085 0a94 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3086 0a96 1844     		add	r0, r0, r3
 3087 0a98 FFF7FEFF 		bl	__aeabi_i2d
 3088              	.LVL429:
 3089 0a9c 0022     		movs	r2, #0
 3090 0a9e 6E4B     		ldr	r3, .L189
 3091 0aa0 FFF7FEFF 		bl	__aeabi_dmul
 3092              	.LVL430:
ARM GAS  /tmp/ccKxHDb6.s 			page 71


 3093 0aa4 FFF7FEFF 		bl	__aeabi_d2uiz
 3094              	.LVL431:
 3095 0aa8 A5F8A400 		strh	r0, [r5, #164]	@ movhi
 747:Core/Src/bms.c ****         bms->cellVolt[83] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3096              		.loc 1 747 0
 3097 0aac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3098 0aae 1B02     		lsls	r3, r3, #8
 3099 0ab0 03F47063 		and	r3, r3, #3840
 3100 0ab4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3101 0ab6 1844     		add	r0, r0, r3
 3102 0ab8 FFF7FEFF 		bl	__aeabi_i2d
 3103              	.LVL432:
 3104 0abc 0022     		movs	r2, #0
 3105 0abe 664B     		ldr	r3, .L189
 3106 0ac0 FFF7FEFF 		bl	__aeabi_dmul
 3107              	.LVL433:
 3108 0ac4 FFF7FEFF 		bl	__aeabi_d2uiz
 3109              	.LVL434:
 3110 0ac8 A5F8A600 		strh	r0, [r5, #166]	@ movhi
 748:Core/Src/bms.c ****         break;
 3111              		.loc 1 748 0
 3112 0acc 38BD     		pop	{r3, r4, r5, pc}
 3113              	.LVL435:
 3114              	.L167:
 749:Core/Src/bms.c **** 
 750:Core/Src/bms.c ****     case 0x46D:
 751:Core/Src/bms.c ****         bms->cellVolt[84] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3115              		.loc 1 751 0
 3116 0ace 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3117 0ad0 1B02     		lsls	r3, r3, #8
 3118 0ad2 03F47063 		and	r3, r3, #3840
 3119 0ad6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3120              	.LVL436:
 3121 0ad8 1844     		add	r0, r0, r3
 3122 0ada FFF7FEFF 		bl	__aeabi_i2d
 3123              	.LVL437:
 3124 0ade 0022     		movs	r2, #0
 3125 0ae0 5D4B     		ldr	r3, .L189
 3126 0ae2 FFF7FEFF 		bl	__aeabi_dmul
 3127              	.LVL438:
 3128 0ae6 FFF7FEFF 		bl	__aeabi_d2uiz
 3129              	.LVL439:
 3130 0aea A5F8A800 		strh	r0, [r5, #168]	@ movhi
 752:Core/Src/bms.c ****         bms->cellVolt[85] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3131              		.loc 1 752 0
 3132 0aee A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3133 0af0 1B02     		lsls	r3, r3, #8
 3134 0af2 03F47063 		and	r3, r3, #3840
 3135 0af6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3136 0af8 1844     		add	r0, r0, r3
 3137 0afa FFF7FEFF 		bl	__aeabi_i2d
 3138              	.LVL440:
 3139 0afe 0022     		movs	r2, #0
 3140 0b00 554B     		ldr	r3, .L189
 3141 0b02 FFF7FEFF 		bl	__aeabi_dmul
 3142              	.LVL441:
 3143 0b06 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/ccKxHDb6.s 			page 72


 3144              	.LVL442:
 3145 0b0a A5F8AA00 		strh	r0, [r5, #170]	@ movhi
 753:Core/Src/bms.c ****         bms->cellVolt[86] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3146              		.loc 1 753 0
 3147 0b0e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3148 0b10 1B02     		lsls	r3, r3, #8
 3149 0b12 03F47063 		and	r3, r3, #3840
 3150 0b16 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3151 0b18 1844     		add	r0, r0, r3
 3152 0b1a FFF7FEFF 		bl	__aeabi_i2d
 3153              	.LVL443:
 3154 0b1e 0022     		movs	r2, #0
 3155 0b20 4D4B     		ldr	r3, .L189
 3156 0b22 FFF7FEFF 		bl	__aeabi_dmul
 3157              	.LVL444:
 3158 0b26 FFF7FEFF 		bl	__aeabi_d2uiz
 3159              	.LVL445:
 3160 0b2a A5F8AC00 		strh	r0, [r5, #172]	@ movhi
 754:Core/Src/bms.c ****         break;
 3161              		.loc 1 754 0
 3162 0b2e 38BD     		pop	{r3, r4, r5, pc}
 3163              	.LVL446:
 3164              	.L180:
 755:Core/Src/bms.c **** 
 756:Core/Src/bms.c ****     case 0x47D:
 757:Core/Src/bms.c ****         bms->cellVolt[87] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3165              		.loc 1 757 0
 3166 0b30 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3167 0b32 1B02     		lsls	r3, r3, #8
 3168 0b34 03F47063 		and	r3, r3, #3840
 3169 0b38 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3170              	.LVL447:
 3171 0b3a 1844     		add	r0, r0, r3
 3172 0b3c FFF7FEFF 		bl	__aeabi_i2d
 3173              	.LVL448:
 3174 0b40 0022     		movs	r2, #0
 3175 0b42 454B     		ldr	r3, .L189
 3176 0b44 FFF7FEFF 		bl	__aeabi_dmul
 3177              	.LVL449:
 3178 0b48 FFF7FEFF 		bl	__aeabi_d2uiz
 3179              	.LVL450:
 3180 0b4c A5F8AE00 		strh	r0, [r5, #174]	@ movhi
 758:Core/Src/bms.c ****         bms->cellVolt[88] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3181              		.loc 1 758 0
 3182 0b50 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3183 0b52 1B02     		lsls	r3, r3, #8
 3184 0b54 03F47063 		and	r3, r3, #3840
 3185 0b58 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3186 0b5a 1844     		add	r0, r0, r3
 3187 0b5c FFF7FEFF 		bl	__aeabi_i2d
 3188              	.LVL451:
 3189 0b60 0022     		movs	r2, #0
 3190 0b62 3D4B     		ldr	r3, .L189
 3191 0b64 FFF7FEFF 		bl	__aeabi_dmul
 3192              	.LVL452:
 3193 0b68 FFF7FEFF 		bl	__aeabi_d2uiz
 3194              	.LVL453:
ARM GAS  /tmp/ccKxHDb6.s 			page 73


 3195 0b6c A5F8B000 		strh	r0, [r5, #176]	@ movhi
 759:Core/Src/bms.c ****         bms->cellVolt[89] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3196              		.loc 1 759 0
 3197 0b70 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3198 0b72 1B02     		lsls	r3, r3, #8
 3199 0b74 03F47063 		and	r3, r3, #3840
 3200 0b78 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3201 0b7a 1844     		add	r0, r0, r3
 3202 0b7c FFF7FEFF 		bl	__aeabi_i2d
 3203              	.LVL454:
 3204 0b80 0022     		movs	r2, #0
 3205 0b82 354B     		ldr	r3, .L189
 3206 0b84 FFF7FEFF 		bl	__aeabi_dmul
 3207              	.LVL455:
 3208 0b88 FFF7FEFF 		bl	__aeabi_d2uiz
 3209              	.LVL456:
 3210 0b8c A5F8B200 		strh	r0, [r5, #178]	@ movhi
 760:Core/Src/bms.c ****         break;
 3211              		.loc 1 760 0
 3212 0b90 38BD     		pop	{r3, r4, r5, pc}
 3213              	.LVL457:
 3214              	.L168:
 761:Core/Src/bms.c **** 
 762:Core/Src/bms.c ****     case 0x46E:
 763:Core/Src/bms.c ****         bms->cellVolt[90] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3215              		.loc 1 763 0
 3216 0b92 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3217 0b94 1B02     		lsls	r3, r3, #8
 3218 0b96 03F47063 		and	r3, r3, #3840
 3219 0b9a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3220              	.LVL458:
 3221 0b9c 1844     		add	r0, r0, r3
 3222 0b9e FFF7FEFF 		bl	__aeabi_i2d
 3223              	.LVL459:
 3224 0ba2 0022     		movs	r2, #0
 3225 0ba4 2C4B     		ldr	r3, .L189
 3226 0ba6 FFF7FEFF 		bl	__aeabi_dmul
 3227              	.LVL460:
 3228 0baa FFF7FEFF 		bl	__aeabi_d2uiz
 3229              	.LVL461:
 3230 0bae A5F8B400 		strh	r0, [r5, #180]	@ movhi
 764:Core/Src/bms.c ****         bms->cellVolt[91] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3231              		.loc 1 764 0
 3232 0bb2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3233 0bb4 1B02     		lsls	r3, r3, #8
 3234 0bb6 03F47063 		and	r3, r3, #3840
 3235 0bba E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3236 0bbc 1844     		add	r0, r0, r3
 3237 0bbe FFF7FEFF 		bl	__aeabi_i2d
 3238              	.LVL462:
 3239 0bc2 0022     		movs	r2, #0
 3240 0bc4 244B     		ldr	r3, .L189
 3241 0bc6 FFF7FEFF 		bl	__aeabi_dmul
 3242              	.LVL463:
 3243 0bca FFF7FEFF 		bl	__aeabi_d2uiz
 3244              	.LVL464:
 3245 0bce A5F8B600 		strh	r0, [r5, #182]	@ movhi
ARM GAS  /tmp/ccKxHDb6.s 			page 74


 765:Core/Src/bms.c ****         bms->cellVolt[92] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3246              		.loc 1 765 0
 3247 0bd2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3248 0bd4 1B02     		lsls	r3, r3, #8
 3249 0bd6 03F47063 		and	r3, r3, #3840
 3250 0bda 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3251 0bdc 1844     		add	r0, r0, r3
 3252 0bde FFF7FEFF 		bl	__aeabi_i2d
 3253              	.LVL465:
 3254 0be2 0022     		movs	r2, #0
 3255 0be4 1C4B     		ldr	r3, .L189
 3256 0be6 FFF7FEFF 		bl	__aeabi_dmul
 3257              	.LVL466:
 3258 0bea FFF7FEFF 		bl	__aeabi_d2uiz
 3259              	.LVL467:
 3260 0bee A5F8B800 		strh	r0, [r5, #184]	@ movhi
 766:Core/Src/bms.c ****         break;
 3261              		.loc 1 766 0
 3262 0bf2 38BD     		pop	{r3, r4, r5, pc}
 3263              	.LVL468:
 3264              	.L181:
 767:Core/Src/bms.c **** 
 768:Core/Src/bms.c ****     case 0x47E:
 769:Core/Src/bms.c ****         bms->cellVolt[93] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3265              		.loc 1 769 0
 3266 0bf4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3267 0bf6 1B02     		lsls	r3, r3, #8
 3268 0bf8 03F47063 		and	r3, r3, #3840
 3269 0bfc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3270              	.LVL469:
 3271 0bfe 1844     		add	r0, r0, r3
 3272 0c00 FFF7FEFF 		bl	__aeabi_i2d
 3273              	.LVL470:
 3274 0c04 0022     		movs	r2, #0
 3275 0c06 144B     		ldr	r3, .L189
 3276 0c08 FFF7FEFF 		bl	__aeabi_dmul
 3277              	.LVL471:
 3278 0c0c FFF7FEFF 		bl	__aeabi_d2uiz
 3279              	.LVL472:
 3280 0c10 A5F8BA00 		strh	r0, [r5, #186]	@ movhi
 770:Core/Src/bms.c ****         bms->cellVolt[94] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3281              		.loc 1 770 0
 3282 0c14 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3283 0c16 1B02     		lsls	r3, r3, #8
 3284 0c18 03F47063 		and	r3, r3, #3840
 3285 0c1c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3286 0c1e 1844     		add	r0, r0, r3
 3287 0c20 FFF7FEFF 		bl	__aeabi_i2d
 3288              	.LVL473:
 3289 0c24 0022     		movs	r2, #0
 3290 0c26 0C4B     		ldr	r3, .L189
 3291 0c28 FFF7FEFF 		bl	__aeabi_dmul
 3292              	.LVL474:
 3293 0c2c FFF7FEFF 		bl	__aeabi_d2uiz
 3294              	.LVL475:
 3295 0c30 A5F8BC00 		strh	r0, [r5, #188]	@ movhi
 771:Core/Src/bms.c ****         bms->cellVolt[95] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
ARM GAS  /tmp/ccKxHDb6.s 			page 75


 3296              		.loc 1 771 0
 3297 0c34 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3298 0c36 1B02     		lsls	r3, r3, #8
 3299 0c38 03F47063 		and	r3, r3, #3840
 3300 0c3c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3301 0c3e 1844     		add	r0, r0, r3
 3302 0c40 FFF7FEFF 		bl	__aeabi_i2d
 3303              	.LVL476:
 3304 0c44 0022     		movs	r2, #0
 3305 0c46 044B     		ldr	r3, .L189
 3306 0c48 FFF7FEFF 		bl	__aeabi_dmul
 3307              	.LVL477:
 3308 0c4c FFF7FEFF 		bl	__aeabi_d2uiz
 3309              	.LVL478:
 3310 0c50 A5F8BE00 		strh	r0, [r5, #190]	@ movhi
 3311              	.L153:
 3312 0c54 38BD     		pop	{r3, r4, r5, pc}
 3313              	.LVL479:
 3314              	.L190:
 3315 0c56 00BF     		.align	2
 3316              	.L189:
 3317 0c58 0000F43F 		.word	1072955392
 3318              		.cfi_endproc
 3319              	.LFE152:
 3321              		.section	.text.decodeTemp,"ax",%progbits
 3322              		.align	1
 3323              		.global	decodeTemp
 3324              		.syntax unified
 3325              		.thumb
 3326              		.thumb_func
 3327              		.fpu fpv4-sp-d16
 3329              	decodeTemp:
 3330              	.LFB153:
 772:Core/Src/bms.c ****         break;
 773:Core/Src/bms.c **** 
 774:Core/Src/bms.c ****     default:
 775:Core/Src/bms.c ****         break;
 776:Core/Src/bms.c ****     }
 777:Core/Src/bms.c **** }
 778:Core/Src/bms.c **** 
 779:Core/Src/bms.c **** void decodeTemp(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // in degrees F x 100
 780:Core/Src/bms.c **** {
 3331              		.loc 1 780 0
 3332              		.cfi_startproc
 3333              		@ args = 0, pretend = 0, frame = 0
 3334              		@ frame_needed = 0, uses_anonymous_args = 0
 3335              		@ link register save eliminated.
 3336              	.LVL480:
 781:Core/Src/bms.c ****     switch (rxMsg->StdId)
 3337              		.loc 1 781 0
 3338 0000 0B68     		ldr	r3, [r1]
 3339 0002 A3F5FC63 		sub	r3, r3, #2016
 3340 0006 0E2B     		cmp	r3, #14
 3341 0008 00F28E80 		bhi	.L191
 3342 000c DFE803F0 		tbb	[pc, r3]
 3343              	.LVL481:
 3344              	.L194:
ARM GAS  /tmp/ccKxHDb6.s 			page 76


 3345 0010 08       		.byte	(.L193-.L194)/2
 3346 0011 14       		.byte	(.L195-.L194)/2
 3347 0012 20       		.byte	(.L196-.L194)/2
 3348 0013 2F       		.byte	(.L197-.L194)/2
 3349 0014 33       		.byte	(.L198-.L194)/2
 3350 0015 3F       		.byte	(.L199-.L194)/2
 3351 0016 4E       		.byte	(.L200-.L194)/2
 3352 0017 8C       		.byte	(.L191-.L194)/2
 3353 0018 52       		.byte	(.L201-.L194)/2
 3354 0019 5E       		.byte	(.L202-.L194)/2
 3355 001a 6D       		.byte	(.L203-.L194)/2
 3356 001b 8C       		.byte	(.L191-.L194)/2
 3357 001c 71       		.byte	(.L204-.L194)/2
 3358 001d 7D       		.byte	(.L205-.L194)/2
 3359 001e 89       		.byte	(.L206-.L194)/2
 3360 001f 00       		.p2align 1
 3361              	.L193:
 782:Core/Src/bms.c ****     {
 783:Core/Src/bms.c ****     case 0x7E0: //Begin module 1 temp sensors
 784:Core/Src/bms.c ****         bms->tempSensor[0] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3362              		.loc 1 784 0
 3363 0020 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3364 0022 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3365 0024 03EB0123 		add	r3, r3, r1, lsl #8
 3366 0028 A3EBC303 		sub	r3, r3, r3, lsl #3
 3367 002c 03F5E043 		add	r3, r3, #28672
 3368 0030 1C33     		adds	r3, r3, #28
 3369 0032 A0F8C030 		strh	r3, [r0, #192]	@ movhi
 785:Core/Src/bms.c ****         break;
 3370              		.loc 1 785 0
 3371 0036 7047     		bx	lr
 3372              	.L195:
 786:Core/Src/bms.c **** 
 787:Core/Src/bms.c ****     case 0x7E1:
 788:Core/Src/bms.c ****         bms->tempSensor[1] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3373              		.loc 1 788 0
 3374 0038 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3375 003a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3376 003c 03EB0123 		add	r3, r3, r1, lsl #8
 3377 0040 A3EBC303 		sub	r3, r3, r3, lsl #3
 3378 0044 03F5E043 		add	r3, r3, #28672
 3379 0048 1C33     		adds	r3, r3, #28
 3380 004a A0F8C230 		strh	r3, [r0, #194]	@ movhi
 789:Core/Src/bms.c ****         break;
 3381              		.loc 1 789 0
 3382 004e 7047     		bx	lr
 3383              	.L196:
 790:Core/Src/bms.c **** 
 791:Core/Src/bms.c ****     case 0x7E2:
 792:Core/Src/bms.c ****         bms->tempSensor[2] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3384              		.loc 1 792 0
 3385 0050 0023     		movs	r3, #0
 3386 0052 A0F8C430 		strh	r3, [r0, #196]	@ movhi
 793:Core/Src/bms.c ****         bms->tempSensor[3] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3387              		.loc 1 793 0
 3388 0056 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3389 0058 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
ARM GAS  /tmp/ccKxHDb6.s 			page 77


 3390 005a 03EB0123 		add	r3, r3, r1, lsl #8
 3391 005e A3EBC303 		sub	r3, r3, r3, lsl #3
 3392 0062 03F5E043 		add	r3, r3, #28672
 3393 0066 1C33     		adds	r3, r3, #28
 3394 0068 A0F8C630 		strh	r3, [r0, #198]	@ movhi
 794:Core/Src/bms.c ****         break;
 3395              		.loc 1 794 0
 3396 006c 7047     		bx	lr
 3397              	.L197:
 795:Core/Src/bms.c **** 
 796:Core/Src/bms.c ****     case 0x7E3:
 797:Core/Src/bms.c ****         bms->tempSensor[4] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3398              		.loc 1 797 0
 3399 006e 0023     		movs	r3, #0
 3400 0070 A0F8C830 		strh	r3, [r0, #200]	@ movhi
 798:Core/Src/bms.c ****         break;
 3401              		.loc 1 798 0
 3402 0074 7047     		bx	lr
 3403              	.L198:
 799:Core/Src/bms.c **** 
 800:Core/Src/bms.c ****     case 0x7E4: //Begin module 2 temp sensors
 801:Core/Src/bms.c ****         bms->tempSensor[5] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3404              		.loc 1 801 0
 3405 0076 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3406 0078 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3407 007a 03EB0123 		add	r3, r3, r1, lsl #8
 3408 007e A3EBC303 		sub	r3, r3, r3, lsl #3
 3409 0082 03F5E043 		add	r3, r3, #28672
 3410 0086 1C33     		adds	r3, r3, #28
 3411 0088 A0F8CA30 		strh	r3, [r0, #202]	@ movhi
 802:Core/Src/bms.c ****         break;
 3412              		.loc 1 802 0
 3413 008c 7047     		bx	lr
 3414              	.L199:
 803:Core/Src/bms.c **** 
 804:Core/Src/bms.c ****     case 0x7E5:
 805:Core/Src/bms.c ****         bms->tempSensor[6] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3415              		.loc 1 805 0
 3416 008e 0023     		movs	r3, #0
 3417 0090 A0F8CC30 		strh	r3, [r0, #204]	@ movhi
 806:Core/Src/bms.c ****         bms->tempSensor[7] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3418              		.loc 1 806 0
 3419 0094 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3420 0096 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3421 0098 03EB0123 		add	r3, r3, r1, lsl #8
 3422 009c A3EBC303 		sub	r3, r3, r3, lsl #3
 3423 00a0 03F5E043 		add	r3, r3, #28672
 3424 00a4 1C33     		adds	r3, r3, #28
 3425 00a6 A0F8CE30 		strh	r3, [r0, #206]	@ movhi
 807:Core/Src/bms.c ****         break;
 3426              		.loc 1 807 0
 3427 00aa 7047     		bx	lr
 3428              	.L200:
 808:Core/Src/bms.c **** 
 809:Core/Src/bms.c ****     case 0x7E6:
 810:Core/Src/bms.c ****         bms->tempSensor[8] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3429              		.loc 1 810 0
ARM GAS  /tmp/ccKxHDb6.s 			page 78


 3430 00ac 0023     		movs	r3, #0
 3431 00ae A0F8D030 		strh	r3, [r0, #208]	@ movhi
 811:Core/Src/bms.c ****         break;
 3432              		.loc 1 811 0
 3433 00b2 7047     		bx	lr
 3434              	.L201:
 812:Core/Src/bms.c **** 
 813:Core/Src/bms.c ****     case 0x7E8: //Begin module 3 temp sensors
 814:Core/Src/bms.c ****         bms->tempSensor[9] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3435              		.loc 1 814 0
 3436 00b4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3437 00b6 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3438 00b8 03EB0123 		add	r3, r3, r1, lsl #8
 3439 00bc A3EBC303 		sub	r3, r3, r3, lsl #3
 3440 00c0 03F5E043 		add	r3, r3, #28672
 3441 00c4 1C33     		adds	r3, r3, #28
 3442 00c6 A0F8D230 		strh	r3, [r0, #210]	@ movhi
 815:Core/Src/bms.c ****         break;
 3443              		.loc 1 815 0
 3444 00ca 7047     		bx	lr
 3445              	.L202:
 816:Core/Src/bms.c **** 
 817:Core/Src/bms.c ****     case 0x7E9:
 818:Core/Src/bms.c ****         bms->tempSensor[10] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3446              		.loc 1 818 0
 3447 00cc 0023     		movs	r3, #0
 3448 00ce A0F8D430 		strh	r3, [r0, #212]	@ movhi
 819:Core/Src/bms.c ****         bms->tempSensor[11] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3449              		.loc 1 819 0
 3450 00d2 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 3451 00d4 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3452 00d6 03EB0123 		add	r3, r3, r1, lsl #8
 3453 00da A3EBC303 		sub	r3, r3, r3, lsl #3
 3454 00de 03F5E043 		add	r3, r3, #28672
 3455 00e2 1C33     		adds	r3, r3, #28
 3456 00e4 A0F8D630 		strh	r3, [r0, #214]	@ movhi
 820:Core/Src/bms.c ****         break;
 3457              		.loc 1 820 0
 3458 00e8 7047     		bx	lr
 3459              	.L203:
 821:Core/Src/bms.c **** 
 822:Core/Src/bms.c ****     case 0x7EA:
 823:Core/Src/bms.c ****         bms->tempSensor[12] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3460              		.loc 1 823 0
 3461 00ea 0023     		movs	r3, #0
 3462 00ec A0F8D830 		strh	r3, [r0, #216]	@ movhi
 824:Core/Src/bms.c ****         break;
 3463              		.loc 1 824 0
 3464 00f0 7047     		bx	lr
 3465              	.L204:
 825:Core/Src/bms.c **** 
 826:Core/Src/bms.c ****     case 0x7EC: //Begin module 4 temp sensors
 827:Core/Src/bms.c ****         bms->tempSensor[13] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3466              		.loc 1 827 0
 3467 00f2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3468 00f4 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3469 00f6 03EB0123 		add	r3, r3, r1, lsl #8
ARM GAS  /tmp/ccKxHDb6.s 			page 79


 3470 00fa A3EBC303 		sub	r3, r3, r3, lsl #3
 3471 00fe 03F5E043 		add	r3, r3, #28672
 3472 0102 1C33     		adds	r3, r3, #28
 3473 0104 A0F8DA30 		strh	r3, [r0, #218]	@ movhi
 828:Core/Src/bms.c ****         break;
 3474              		.loc 1 828 0
 3475 0108 7047     		bx	lr
 3476              	.L205:
 829:Core/Src/bms.c **** 
 830:Core/Src/bms.c ****     case 0x7ED:
 831:Core/Src/bms.c ****         bms->tempSensor[14] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3477              		.loc 1 831 0
 3478 010a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3479 010c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3480 010e 03EB0123 		add	r3, r3, r1, lsl #8
 3481 0112 A3EBC303 		sub	r3, r3, r3, lsl #3
 3482 0116 03F5E043 		add	r3, r3, #28672
 3483 011a 1C33     		adds	r3, r3, #28
 3484 011c A0F8DC30 		strh	r3, [r0, #220]	@ movhi
 832:Core/Src/bms.c ****         break;
 3485              		.loc 1 832 0
 3486 0120 7047     		bx	lr
 3487              	.L206:
 833:Core/Src/bms.c **** 
 834:Core/Src/bms.c ****     case 0x7EE:
 835:Core/Src/bms.c ****         bms->tempSensor[15] = 0; //-((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3488              		.loc 1 835 0
 3489 0122 0023     		movs	r3, #0
 3490 0124 A0F8DE30 		strh	r3, [r0, #222]	@ movhi
 3491              	.L191:
 3492 0128 7047     		bx	lr
 3493              		.cfi_endproc
 3494              	.LFE153:
 3496              		.comm	watchdogBits,1,1
 3497              		.comm	charged,1,1
 3498              		.comm	BMS,492,4
 3499              		.comm	txCycle3,4,4
 3500              		.comm	txCycle2,4,4
 3501              		.comm	txCycle,4,4
 3502              		.comm	canMailbox3,4,4
 3503              		.comm	canMailbox2,4,4
 3504              		.comm	canMailbox,4,4
 3505              		.comm	canRx3,8,4
 3506              		.comm	canRx2,8,4
 3507              		.comm	canRx,8,4
 3508              		.comm	txMsgExt3,24,4
 3509              		.comm	txMsg3,24,4
 3510              		.comm	rxMsg3,28,4
 3511              		.comm	txMsgExt2,24,4
 3512              		.comm	txMsg2,24,4
 3513              		.comm	rxMsg2,28,4
 3514              		.comm	txMsgExt,24,4
 3515              		.comm	txMsg,24,4
 3516              		.comm	rxMsg,28,4
 3517              		.comm	sf5,40,4
 3518              		.comm	sf4,40,4
 3519              		.comm	sf3,40,4
ARM GAS  /tmp/ccKxHDb6.s 			page 80


 3520              		.comm	sf2,40,4
 3521              		.comm	sf,40,4
 3522              		.comm	hcan3,40,4
 3523              		.comm	hcan2,40,4
 3524              		.comm	hcan1,40,4
 3525              		.section	.rodata.balanceByte,"a",%progbits
 3526              		.align	2
 3527              		.set	.LANCHOR0,. + 0
 3530              	balanceByte:
 3531 0000 00       		.byte	0
 3532 0001 00       		.byte	0
 3533 0002 00       		.byte	0
 3534 0003 00       		.byte	0
 3535 0004 00       		.byte	0
 3536 0005 00       		.byte	0
 3537 0006 01       		.byte	1
 3538 0007 01       		.byte	1
 3539 0008 01       		.byte	1
 3540 0009 01       		.byte	1
 3541 000a 01       		.byte	1
 3542 000b 01       		.byte	1
 3543 000c 01       		.byte	1
 3544 000d 01       		.byte	1
 3545 000e 02       		.byte	2
 3546 000f 02       		.byte	2
 3547 0010 02       		.byte	2
 3548 0011 02       		.byte	2
 3549 0012 02       		.byte	2
 3550 0013 02       		.byte	2
 3551 0014 02       		.byte	2
 3552 0015 02       		.byte	2
 3553 0016 03       		.byte	3
 3554 0017 03       		.byte	3
 3555 0018 03       		.byte	3
 3556 0019 03       		.byte	3
 3557 001a 03       		.byte	3
 3558 001b 03       		.byte	3
 3559 001c 03       		.byte	3
 3560 001d 03       		.byte	3
 3561 001e 04       		.byte	4
 3562 001f 04       		.byte	4
 3563 0020 04       		.byte	4
 3564 0021 04       		.byte	4
 3565 0022 04       		.byte	4
 3566 0023 04       		.byte	4
 3567 0024 04       		.byte	4
 3568 0025 04       		.byte	4
 3569 0026 05       		.byte	5
 3570 0027 05       		.byte	5
 3571 0028 05       		.byte	5
 3572 0029 05       		.byte	5
 3573 002a 05       		.byte	5
 3574 002b 05       		.byte	5
 3575 002c 05       		.byte	5
 3576 002d 05       		.byte	5
 3577 002e 06       		.byte	6
 3578 002f 06       		.byte	6
ARM GAS  /tmp/ccKxHDb6.s 			page 81


 3579 0030 06       		.byte	6
 3580 0031 06       		.byte	6
 3581 0032 06       		.byte	6
 3582 0033 06       		.byte	6
 3583 0034 06       		.byte	6
 3584 0035 06       		.byte	6
 3585 0036 07       		.byte	7
 3586 0037 07       		.byte	7
 3587 0038 07       		.byte	7
 3588 0039 07       		.byte	7
 3589 003a 07       		.byte	7
 3590 003b 07       		.byte	7
 3591 003c 07       		.byte	7
 3592 003d 07       		.byte	7
 3593 003e 00       		.byte	0
 3594 003f 00       		.byte	0
 3595 0040 00       		.byte	0
 3596 0041 00       		.byte	0
 3597 0042 00       		.byte	0
 3598 0043 00       		.byte	0
 3599 0044 00       		.byte	0
 3600 0045 00       		.byte	0
 3601 0046 01       		.byte	1
 3602 0047 01       		.byte	1
 3603 0048 01       		.byte	1
 3604 0049 01       		.byte	1
 3605 004a 01       		.byte	1
 3606 004b 01       		.byte	1
 3607 004c 01       		.byte	1
 3608 004d 01       		.byte	1
 3609 004e 02       		.byte	2
 3610 004f 02       		.byte	2
 3611 0050 02       		.byte	2
 3612 0051 02       		.byte	2
 3613 0052 02       		.byte	2
 3614 0053 02       		.byte	2
 3615 0054 03       		.byte	3
 3616 0055 03       		.byte	3
 3617 0056 03       		.byte	3
 3618 0057 03       		.byte	3
 3619 0058 03       		.byte	3
 3620 0059 03       		.byte	3
 3621 005a 04       		.byte	4
 3622 005b 04       		.byte	4
 3623 005c 04       		.byte	4
 3624 005d 04       		.byte	4
 3625 005e 04       		.byte	4
 3626 005f 04       		.byte	4
 3627              		.section	.rodata.balanceShift,"a",%progbits
 3628              		.align	2
 3629              		.set	.LANCHOR1,. + 0
 3632              	balanceShift:
 3633 0000 01       		.byte	1
 3634 0001 02       		.byte	2
 3635 0002 04       		.byte	4
 3636 0003 08       		.byte	8
 3637 0004 10       		.byte	16
ARM GAS  /tmp/ccKxHDb6.s 			page 82


 3638 0005 20       		.byte	32
 3639 0006 01       		.byte	1
 3640 0007 02       		.byte	2
 3641 0008 04       		.byte	4
 3642 0009 08       		.byte	8
 3643 000a 10       		.byte	16
 3644 000b 20       		.byte	32
 3645 000c 40       		.byte	64
 3646 000d 80       		.byte	-128
 3647 000e 01       		.byte	1
 3648 000f 02       		.byte	2
 3649 0010 04       		.byte	4
 3650 0011 08       		.byte	8
 3651 0012 10       		.byte	16
 3652 0013 20       		.byte	32
 3653 0014 40       		.byte	64
 3654 0015 80       		.byte	-128
 3655 0016 01       		.byte	1
 3656 0017 02       		.byte	2
 3657 0018 04       		.byte	4
 3658 0019 08       		.byte	8
 3659 001a 10       		.byte	16
 3660 001b 20       		.byte	32
 3661 001c 40       		.byte	64
 3662 001d 80       		.byte	-128
 3663 001e 01       		.byte	1
 3664 001f 02       		.byte	2
 3665 0020 04       		.byte	4
 3666 0021 08       		.byte	8
 3667 0022 10       		.byte	16
 3668 0023 20       		.byte	32
 3669 0024 40       		.byte	64
 3670 0025 80       		.byte	-128
 3671 0026 01       		.byte	1
 3672 0027 02       		.byte	2
 3673 0028 04       		.byte	4
 3674 0029 08       		.byte	8
 3675 002a 10       		.byte	16
 3676 002b 20       		.byte	32
 3677 002c 40       		.byte	64
 3678 002d 80       		.byte	-128
 3679 002e 01       		.byte	1
 3680 002f 02       		.byte	2
 3681 0030 04       		.byte	4
 3682 0031 08       		.byte	8
 3683 0032 10       		.byte	16
 3684 0033 20       		.byte	32
 3685 0034 40       		.byte	64
 3686 0035 80       		.byte	-128
 3687 0036 01       		.byte	1
 3688 0037 02       		.byte	2
 3689 0038 04       		.byte	4
 3690 0039 08       		.byte	8
 3691 003a 10       		.byte	16
 3692 003b 20       		.byte	32
 3693 003c 40       		.byte	64
 3694 003d 80       		.byte	-128
ARM GAS  /tmp/ccKxHDb6.s 			page 83


 3695 003e 01       		.byte	1
 3696 003f 02       		.byte	2
 3697 0040 04       		.byte	4
 3698 0041 08       		.byte	8
 3699 0042 10       		.byte	16
 3700 0043 20       		.byte	32
 3701 0044 40       		.byte	64
 3702 0045 80       		.byte	-128
 3703 0046 01       		.byte	1
 3704 0047 02       		.byte	2
 3705 0048 04       		.byte	4
 3706 0049 08       		.byte	8
 3707 004a 10       		.byte	16
 3708 004b 20       		.byte	32
 3709 004c 40       		.byte	64
 3710 004d 80       		.byte	-128
 3711 004e 01       		.byte	1
 3712 004f 02       		.byte	2
 3713 0050 04       		.byte	4
 3714 0051 08       		.byte	8
 3715 0052 10       		.byte	16
 3716 0053 20       		.byte	32
 3717 0054 01       		.byte	1
 3718 0055 02       		.byte	2
 3719 0056 04       		.byte	4
 3720 0057 08       		.byte	8
 3721 0058 10       		.byte	16
 3722 0059 20       		.byte	32
 3723 005a 01       		.byte	1
 3724 005b 02       		.byte	2
 3725 005c 04       		.byte	4
 3726 005d 08       		.byte	8
 3727 005e 10       		.byte	16
 3728 005f 20       		.byte	32
 3729              		.text
 3730              	.Letext0:
 3731              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3732              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3733              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3734              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3735              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 3736              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3737              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3738              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3739              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3740              		.file 11 "/usr/include/newlib/sys/lock.h"
 3741              		.file 12 "/usr/include/newlib/sys/_types.h"
 3742              		.file 13 "/usr/include/newlib/sys/reent.h"
 3743              		.file 14 "Core/Inc/can_setup.h"
 3744              		.file 15 "Core/Inc/bms.h"
ARM GAS  /tmp/ccKxHDb6.s 			page 84


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bms.c
     /tmp/ccKxHDb6.s:18     .text.getSOC:0000000000000000 $t
     /tmp/ccKxHDb6.s:24     .text.getSOC:0000000000000000 getSOC
     /tmp/ccKxHDb6.s:48     .text.getSOC:0000000000000024 $d
     /tmp/ccKxHDb6.s:53     .text.getHighCellVolt:0000000000000000 $t
     /tmp/ccKxHDb6.s:59     .text.getHighCellVolt:0000000000000000 getHighCellVolt
     /tmp/ccKxHDb6.s:99     .text.getHighCellTemp:0000000000000000 $t
     /tmp/ccKxHDb6.s:105    .text.getHighCellTemp:0000000000000000 getHighCellTemp
     /tmp/ccKxHDb6.s:146    .text.getLowCellTemp:0000000000000000 $t
     /tmp/ccKxHDb6.s:152    .text.getLowCellTemp:0000000000000000 getLowCellTemp
     /tmp/ccKxHDb6.s:197    .text.getAvgCellTemp:0000000000000000 $t
     /tmp/ccKxHDb6.s:203    .text.getAvgCellTemp:0000000000000000 getAvgCellTemp
     /tmp/ccKxHDb6.s:266    .text.getTempDelta:0000000000000000 $t
     /tmp/ccKxHDb6.s:272    .text.getTempDelta:0000000000000000 getTempDelta
     /tmp/ccKxHDb6.s:290    .text.getCellDelta:0000000000000000 $t
     /tmp/ccKxHDb6.s:296    .text.getCellDelta:0000000000000000 getCellDelta
     /tmp/ccKxHDb6.s:314    .text.getLowCellVolt:0000000000000000 $t
     /tmp/ccKxHDb6.s:320    .text.getLowCellVolt:0000000000000000 getLowCellVolt
     /tmp/ccKxHDb6.s:361    .text.getAvgCellVolt:0000000000000000 $t
     /tmp/ccKxHDb6.s:367    .text.getAvgCellVolt:0000000000000000 getAvgCellVolt
     /tmp/ccKxHDb6.s:409    .text.getAvgCellVolt:0000000000000024 $d
     /tmp/ccKxHDb6.s:414    .text.getPackVolt:0000000000000000 $t
     /tmp/ccKxHDb6.s:420    .text.getPackVolt:0000000000000000 getPackVolt
     /tmp/ccKxHDb6.s:462    .text.getPackVolt:0000000000000020 $d
     /tmp/ccKxHDb6.s:467    .text.getCellCount:0000000000000000 $t
     /tmp/ccKxHDb6.s:473    .text.getCellCount:0000000000000000 getCellCount
     /tmp/ccKxHDb6.s:538    .text.getCellCount:0000000000000038 $d
                            *COM*:00000000000001ec BMS
     /tmp/ccKxHDb6.s:543    .text.initBMS:0000000000000000 $t
     /tmp/ccKxHDb6.s:550    .text.initBMS:0000000000000000 initBMS
     /tmp/ccKxHDb6.s:677    .text.initBMS:0000000000000098 $d
                            *COM*:0000000000000001 watchdogBits
                            *COM*:0000000000000001 charged
     /tmp/ccKxHDb6.s:684    .text.bmsStateHandler:0000000000000000 $t
     /tmp/ccKxHDb6.s:691    .text.bmsStateHandler:0000000000000000 bmsStateHandler
     /tmp/ccKxHDb6.s:705    .text.bmsStateHandler:000000000000000c $d
     /tmp/ccKxHDb6.s:805    .text.acChargeCommand:0000000000000000 $t
     /tmp/ccKxHDb6.s:812    .text.acChargeCommand:0000000000000000 acChargeCommand
     /tmp/ccKxHDb6.s:902    .text.acChargeCommand:000000000000007c $d
     /tmp/ccKxHDb6.s:907    .text.tx500kData:0000000000000000 $t
     /tmp/ccKxHDb6.s:914    .text.tx500kData:0000000000000000 tx500kData
     /tmp/ccKxHDb6.s:998    .text.tx500kData:0000000000000090 $d
     /tmp/ccKxHDb6.s:1003   .text.sendCommand:0000000000000000 $t
     /tmp/ccKxHDb6.s:1010   .text.sendCommand:0000000000000000 sendCommand
     /tmp/ccKxHDb6.s:1073   .text.requestBICMdata:0000000000000000 $t
     /tmp/ccKxHDb6.s:1080   .text.requestBICMdata:0000000000000000 requestBICMdata
     /tmp/ccKxHDb6.s:1212   .text.refreshData:0000000000000000 $t
     /tmp/ccKxHDb6.s:1219   .text.refreshData:0000000000000000 refreshData
     /tmp/ccKxHDb6.s:1306   .text.refreshData:0000000000000064 $d
     /tmp/ccKxHDb6.s:1311   .text.balanceCommand:0000000000000000 $t
     /tmp/ccKxHDb6.s:1318   .text.balanceCommand:0000000000000000 balanceCommand
     /tmp/ccKxHDb6.s:1588   .text.balanceCommand:0000000000000154 $d
     /tmp/ccKxHDb6.s:1594   .text.vehicleComms:0000000000000000 $t
     /tmp/ccKxHDb6.s:1601   .text.vehicleComms:0000000000000000 vehicleComms
     /tmp/ccKxHDb6.s:1614   .text.synchChargers:0000000000000000 $t
     /tmp/ccKxHDb6.s:1621   .text.synchChargers:0000000000000000 synchChargers
ARM GAS  /tmp/ccKxHDb6.s 			page 85


     /tmp/ccKxHDb6.s:1657   .text.synchChargers:0000000000000028 $d
     /tmp/ccKxHDb6.s:1666   .text.decodeVolt:0000000000000000 $t
     /tmp/ccKxHDb6.s:1673   .text.decodeVolt:0000000000000000 decodeVolt
     /tmp/ccKxHDb6.s:1697   .text.decodeVolt:0000000000000016 $d
     /tmp/ccKxHDb6.s:1728   .text.decodeVolt:0000000000000054 $t
     /tmp/ccKxHDb6.s:2157   .text.decodeVolt:0000000000000370 $d
     /tmp/ccKxHDb6.s:2161   .text.decodeVolt:0000000000000374 $t
     /tmp/ccKxHDb6.s:2552   .text.decodeVolt:0000000000000674 $d
     /tmp/ccKxHDb6.s:2556   .text.decodeVolt:0000000000000678 $t
     /tmp/ccKxHDb6.s:2947   .text.decodeVolt:0000000000000984 $d
     /tmp/ccKxHDb6.s:2951   .text.decodeVolt:0000000000000988 $t
     /tmp/ccKxHDb6.s:3317   .text.decodeVolt:0000000000000c58 $d
     /tmp/ccKxHDb6.s:3322   .text.decodeTemp:0000000000000000 $t
     /tmp/ccKxHDb6.s:3329   .text.decodeTemp:0000000000000000 decodeTemp
     /tmp/ccKxHDb6.s:3345   .text.decodeTemp:0000000000000010 $d
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000004 canMailbox3
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx3
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000018 txMsg3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000018 txMsg2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000018 txMsg
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan3
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
     /tmp/ccKxHDb6.s:3526   .rodata.balanceByte:0000000000000000 $d
     /tmp/ccKxHDb6.s:3530   .rodata.balanceByte:0000000000000000 balanceByte
     /tmp/ccKxHDb6.s:3628   .rodata.balanceShift:0000000000000000 $d
     /tmp/ccKxHDb6.s:3632   .rodata.balanceShift:0000000000000000 balanceShift
                     .debug_frame:0000000000000010 $d
     /tmp/ccKxHDb6.s:710    .text.bmsStateHandler:0000000000000011 $d
     /tmp/ccKxHDb6.s:710    .text.bmsStateHandler:0000000000000012 $t
     /tmp/ccKxHDb6.s:3360   .text.decodeTemp:000000000000001f $d
     /tmp/ccKxHDb6.s:3360   .text.decodeTemp:0000000000000020 $t

UNDEFINED SYMBOLS
can2tx
can1tx
can3tx
__aeabi_i2d
__aeabi_dmul
ARM GAS  /tmp/ccKxHDb6.s 			page 86


__aeabi_d2uiz
