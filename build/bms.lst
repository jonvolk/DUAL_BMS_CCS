ARM GAS  /tmp/ccBIZiye.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bms.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.getSOC,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	getSOC:
  25              	.LFB139:
  26              		.file 1 "Core/Src/bms.c"
   1:Core/Src/bms.c **** #include "bms.h"
   2:Core/Src/bms.c **** #include "settings.h"
   3:Core/Src/bms.c **** #include "my_math.h"
   4:Core/Src/bms.c **** 
   5:Core/Src/bms.c **** static void getPackVolt(bms_t *bms);
   6:Core/Src/bms.c **** static void getAvgCellVolt(bms_t *bms);
   7:Core/Src/bms.c **** static void getLowCellVolt(bms_t *bms);
   8:Core/Src/bms.c **** static void getHighCellVolt(bms_t *bms);
   9:Core/Src/bms.c **** static void getCellDelta(bms_t *bms);
  10:Core/Src/bms.c **** static void getLowCellTemp(bms_t *bms);
  11:Core/Src/bms.c **** static void getHighCellTemp(bms_t *bms);
  12:Core/Src/bms.c **** static void getAvgCellTemp(bms_t *bms);
  13:Core/Src/bms.c **** static void getTempDelta(bms_t *bms);
  14:Core/Src/bms.c **** static void getCellCount(bms_t *bms, int pack);
  15:Core/Src/bms.c **** static void getSOC(bms_t *bms);
  16:Core/Src/bms.c **** 
  17:Core/Src/bms.c **** enum
  18:Core/Src/bms.c **** {
  19:Core/Src/bms.c ****     Boot,
  20:Core/Src/bms.c ****     Ready,
  21:Core/Src/bms.c ****     Drive,
  22:Core/Src/bms.c ****     Charge,
  23:Core/Src/bms.c ****     Error
  24:Core/Src/bms.c **** };
  25:Core/Src/bms.c **** 
  26:Core/Src/bms.c **** enum
  27:Core/Src/bms.c **** {
  28:Core/Src/bms.c ****     off,
  29:Core/Src/bms.c ****     on, //key on, inverter off
  30:Core/Src/bms.c ****     charge_keyOff,
  31:Core/Src/bms.c ****     charge_keyOn, //who even does that
  32:Core/Src/bms.c ****     idle,         //key on, inverter on
ARM GAS  /tmp/ccBIZiye.s 			page 2


  33:Core/Src/bms.c ****     run,          //key on direction selected
  34:Core/Src/bms.c ****     launchMode,   //break shit
  35:Core/Src/bms.c ****     burnout,      //destroy tires
  36:Core/Src/bms.c **** };
  37:Core/Src/bms.c **** 
  38:Core/Src/bms.c **** //SOC filtering
  39:Core/Src/bms.c **** static const int numReadings = 10;
  40:Core/Src/bms.c **** static int readings[10];  // the readings from the analog input
  41:Core/Src/bms.c **** static int readIndex = 0; // the index of the current reading
  42:Core/Src/bms.c **** static int total = 0;     // the running total
  43:Core/Src/bms.c **** static int average = 0;   // the average
  44:Core/Src/bms.c **** 
  45:Core/Src/bms.c **** static const uint8_t balanceByte[96] =
  46:Core/Src/bms.c ****     {0, 0, 0, 0, 0, 0,
  47:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  48:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2, 2, 2,
  49:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3, 3, 3,
  50:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4, 4, 4,
  51:Core/Src/bms.c ****      5, 5, 5, 5, 5, 5, 5, 5,
  52:Core/Src/bms.c ****      6, 6, 6, 6, 6, 6, 6, 6,
  53:Core/Src/bms.c ****      7, 7, 7, 7, 7, 7, 7, 7,
  54:Core/Src/bms.c ****      0, 0, 0, 0, 0, 0, 0, 0,
  55:Core/Src/bms.c ****      1, 1, 1, 1, 1, 1, 1, 1,
  56:Core/Src/bms.c ****      2, 2, 2, 2, 2, 2,
  57:Core/Src/bms.c ****      3, 3, 3, 3, 3, 3,
  58:Core/Src/bms.c ****      4, 4, 4, 4, 4, 4};
  59:Core/Src/bms.c **** 
  60:Core/Src/bms.c **** static const uint8_t balanceShift[96] =
  61:Core/Src/bms.c ****     {1, 2, 4, 8, 10, 20,
  62:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  63:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  64:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  65:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  66:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  67:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  68:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  69:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  70:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20, 40, 80,
  71:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20,
  72:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20,
  73:Core/Src/bms.c ****      1, 2, 4, 8, 10, 20};
  74:Core/Src/bms.c **** 
  75:Core/Src/bms.c **** // Initialize BMS //////////////////////////////////////////////////////////////////
  76:Core/Src/bms.c **** void initBMS(void)
  77:Core/Src/bms.c **** {
  78:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
  79:Core/Src/bms.c ****     {
  80:Core/Src/bms.c ****         BMS[i].state = Boot;
  81:Core/Src/bms.c ****     }
  82:Core/Src/bms.c ****     vechicleState = off;
  83:Core/Src/bms.c ****     charged = false;
  84:Core/Src/bms.c **** }
  85:Core/Src/bms.c **** 
  86:Core/Src/bms.c **** // Primary State Machine ///////////////////////////////////////////////////////////////
  87:Core/Src/bms.c **** void bmsStateHandler(bms_t *bms)
  88:Core/Src/bms.c **** {
  89:Core/Src/bms.c ****     switch (bms->state)
ARM GAS  /tmp/ccBIZiye.s 			page 3


  90:Core/Src/bms.c ****     {
  91:Core/Src/bms.c ****     case Boot:
  92:Core/Src/bms.c ****         bms->chargeRequest = 0;
  93:Core/Src/bms.c ****         bms->state = Ready;
  94:Core/Src/bms.c ****         break;
  95:Core/Src/bms.c **** 
  96:Core/Src/bms.c ****     case Ready:
  97:Core/Src/bms.c ****         bms->chargeRequest = 0;
  98:Core/Src/bms.c **** 
  99:Core/Src/bms.c ****         if (bms->avgCellVolt > BALANCE_VOLTAGE)
 100:Core/Src/bms.c ****         {
 101:Core/Src/bms.c ****             if ((bms->highCellVolt - bms->lowCellVolt) > (BALANCE_HYS * 2.5))
 102:Core/Src/bms.c ****             {
 103:Core/Src/bms.c ****                 bms->balancecells = true;
 104:Core/Src/bms.c ****             }
 105:Core/Src/bms.c **** 
 106:Core/Src/bms.c ****             else if ((bms->highCellVolt - bms->lowCellVolt) <= BALANCE_HYS)
 107:Core/Src/bms.c ****             {
 108:Core/Src/bms.c ****                 bms->balancecells = false;
 109:Core/Src/bms.c ****             }
 110:Core/Src/bms.c ****         }
 111:Core/Src/bms.c ****         else
 112:Core/Src/bms.c ****         {
 113:Core/Src/bms.c ****             bms->balancecells = false;
 114:Core/Src/bms.c ****         }
 115:Core/Src/bms.c **** 
 116:Core/Src/bms.c ****         if (bms->highCellVolt < (CHARGE_V_SETPOINT - CHARGE_HYS))
 117:Core/Src/bms.c ****         {
 118:Core/Src/bms.c ****             bms->state = Charge;
 119:Core/Src/bms.c ****         }
 120:Core/Src/bms.c **** 
 121:Core/Src/bms.c ****         if (vechicleState == idle || run)
 122:Core/Src/bms.c ****         {
 123:Core/Src/bms.c ****             bms->balancecells = false;
 124:Core/Src/bms.c ****             bms->state = Drive;
 125:Core/Src/bms.c ****         }
 126:Core/Src/bms.c ****         break;
 127:Core/Src/bms.c **** 
 128:Core/Src/bms.c ****     case Drive:
 129:Core/Src/bms.c **** 
 130:Core/Src/bms.c ****         if (vechicleState == off)
 131:Core/Src/bms.c ****         {
 132:Core/Src/bms.c ****             bms->state = Ready;
 133:Core/Src/bms.c ****         }
 134:Core/Src/bms.c ****         break;
 135:Core/Src/bms.c **** 
 136:Core/Src/bms.c ****     case Charge:
 137:Core/Src/bms.c ****         bms->balancecells = false;
 138:Core/Src/bms.c ****         bms->chargeRequest = 1;
 139:Core/Src/bms.c **** 
 140:Core/Src/bms.c ****         if (bms->highCellVolt > CHARGE_V_SETPOINT || bms->highCellTemp > OVER_T_SETPOINT)
 141:Core/Src/bms.c ****         {
 142:Core/Src/bms.c ****             if (bms->avgCellVolt > CHARGE_V_SETPOINT - BALANCE_HYS)
 143:Core/Src/bms.c ****             {
 144:Core/Src/bms.c ****                 //SOC charged func
 145:Core/Src/bms.c ****             }
 146:Core/Src/bms.c ****             else
ARM GAS  /tmp/ccBIZiye.s 			page 4


 147:Core/Src/bms.c ****             {
 148:Core/Src/bms.c ****                 //SOC charged func
 149:Core/Src/bms.c ****             }
 150:Core/Src/bms.c ****             bms->chargeRequest = 0;
 151:Core/Src/bms.c ****             bms->state = Ready;
 152:Core/Src/bms.c ****         }
 153:Core/Src/bms.c **** 
 154:Core/Src/bms.c ****         if (charged)
 155:Core/Src/bms.c ****         {
 156:Core/Src/bms.c ****             bms->chargeRequest = 0;
 157:Core/Src/bms.c ****             bms->state = Ready;
 158:Core/Src/bms.c ****         }
 159:Core/Src/bms.c **** 
 160:Core/Src/bms.c ****         break;
 161:Core/Src/bms.c **** 
 162:Core/Src/bms.c ****     case Error:
 163:Core/Src/bms.c ****         bms->chargeRequest = 0;
 164:Core/Src/bms.c **** 
 165:Core/Src/bms.c ****         if (bms->lowCellVolt > UNDER_V_SETPOINT && bms->highCellVolt < OVER_V_SETPOINT)
 166:Core/Src/bms.c ****         {
 167:Core/Src/bms.c ****             bms->state = Ready;
 168:Core/Src/bms.c ****         }
 169:Core/Src/bms.c ****         break;
 170:Core/Src/bms.c **** 
 171:Core/Src/bms.c ****     default:
 172:Core/Src/bms.c ****         break;
 173:Core/Src/bms.c ****     }
 174:Core/Src/bms.c **** }
 175:Core/Src/bms.c **** 
 176:Core/Src/bms.c **** // 10kw Tesla Charger /////////////////////////////////////////////////////////////////////
 177:Core/Src/bms.c **** void acChargeCommand(void)
 178:Core/Src/bms.c **** {
 179:Core/Src/bms.c **** 
 180:Core/Src/bms.c ****     if (BMS[0].chargeRequest && BMS[1].chargeRequest)
 181:Core/Src/bms.c ****     {
 182:Core/Src/bms.c ****         charged = false;
 183:Core/Src/bms.c ****         int val = 32;
 184:Core/Src/bms.c ****         txMsg2.StdId = 0x605; //set parameter ID
 185:Core/Src/bms.c ****         txMsg2.DLC = 8;
 186:Core/Src/bms.c ****         canTx2[0] = 0x40;
 187:Core/Src/bms.c ****         canTx2[1] = 0x00;
 188:Core/Src/bms.c ****         canTx2[2] = 0x20;
 189:Core/Src/bms.c ****         canTx2[3] = 9;
 190:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 191:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 192:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 193:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 194:Core/Src/bms.c ****         c2tx(&txMsg, canTx);
 195:Core/Src/bms.c ****     }
 196:Core/Src/bms.c **** 
 197:Core/Src/bms.c ****     if (!BMS[0].chargeRequest || !BMS[1].chargeRequest)
 198:Core/Src/bms.c ****     {
 199:Core/Src/bms.c ****         int val = 0;
 200:Core/Src/bms.c ****         txMsg2.StdId = 0x605; //set parameter ID
 201:Core/Src/bms.c ****         txMsg2.DLC = 8;
 202:Core/Src/bms.c ****         canTx2[0] = 0x40;
 203:Core/Src/bms.c ****         canTx2[1] = 0x00;
ARM GAS  /tmp/ccBIZiye.s 			page 5


 204:Core/Src/bms.c ****         canTx2[2] = 0x20;
 205:Core/Src/bms.c ****         canTx2[3] = 9;
 206:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 207:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 208:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 209:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 210:Core/Src/bms.c ****         c2tx(&txMsg, canTx);
 211:Core/Src/bms.c ****         charged = true;
 212:Core/Src/bms.c ****     }
 213:Core/Src/bms.c **** }
 214:Core/Src/bms.c **** // Send CAN Data /////////////////////////////////////////////////////////////////////
 215:Core/Src/bms.c **** void tx500kData(void)
 216:Core/Src/bms.c **** {
 217:Core/Src/bms.c **** 
 218:Core/Src/bms.c ****     txMsg2.StdId = 0x138; //BMS1
 219:Core/Src/bms.c ****     txMsg2.DLC = 8;
 220:Core/Src/bms.c ****     canTx2[0] = BMS[0].packVolt & 0xFF;
 221:Core/Src/bms.c ****     canTx2[1] = (BMS[0].packVolt >> 8) & 0xFF;
 222:Core/Src/bms.c ****     canTx2[2] = BMS[0].avgCellTemp & 0XFF;
 223:Core/Src/bms.c ****     canTx2[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 224:Core/Src/bms.c ****     canTx2[4] = BMS[0].cellDelta & 0XFF;
 225:Core/Src/bms.c ****     canTx2[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 226:Core/Src/bms.c ****     canTx2[6] = 0;
 227:Core/Src/bms.c ****     canTx2[7] = 0;
 228:Core/Src/bms.c ****     c2tx(&txMsg2, canTx2);
 229:Core/Src/bms.c **** 
 230:Core/Src/bms.c ****     txMsg2.StdId = 0x139; //BMS2
 231:Core/Src/bms.c ****     txMsg2.DLC = 8;
 232:Core/Src/bms.c ****     canTx2[0] = BMS[1].packVolt & 0xFF;
 233:Core/Src/bms.c ****     canTx2[1] = (BMS[1].packVolt >> 8) & 0xFF;
 234:Core/Src/bms.c ****     canTx2[2] = BMS[1].avgCellTemp & 0XFF;
 235:Core/Src/bms.c ****     canTx2[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 236:Core/Src/bms.c ****     canTx2[4] = BMS[1].cellDelta & 0XFF;
 237:Core/Src/bms.c ****     canTx2[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 238:Core/Src/bms.c ****     canTx2[6] = 0;
 239:Core/Src/bms.c ****     canTx2[7] = 0;
 240:Core/Src/bms.c ****     c2tx(&txMsg2, canTx2);
 241:Core/Src/bms.c **** }
 242:Core/Src/bms.c **** 
 243:Core/Src/bms.c **** void refreshData(void)
 244:Core/Src/bms.c **** {
 245:Core/Src/bms.c **** 
 246:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 247:Core/Src/bms.c ****     {
 248:Core/Src/bms.c ****         requestBICMdata(&BMS[i]);
 249:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 250:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 251:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 252:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 253:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 254:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 255:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 256:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 257:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 258:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 259:Core/Src/bms.c ****         getSOC(&BMS[i]);
 260:Core/Src/bms.c ****     }
ARM GAS  /tmp/ccBIZiye.s 			page 6


 261:Core/Src/bms.c **** }
 262:Core/Src/bms.c **** 
 263:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 264:Core/Src/bms.c **** void sendCommand(void)
 265:Core/Src/bms.c **** {
 266:Core/Src/bms.c ****     txMsg.StdId = 0x200;
 267:Core/Src/bms.c ****     txMsg.DLC = 3;
 268:Core/Src/bms.c ****     canTx[0] = 0x02;
 269:Core/Src/bms.c ****     canTx[1] = 0x00;
 270:Core/Src/bms.c ****     canTx[2] = 0x00;
 271:Core/Src/bms.c ****     c1tx(&txMsg, canTx); //pack 1
 272:Core/Src/bms.c ****     txMsg3.StdId = 0x200;
 273:Core/Src/bms.c ****     txMsg3.DLC = 3;
 274:Core/Src/bms.c ****     canTx3[0] = 0x02;
 275:Core/Src/bms.c ****     canTx3[1] = 0x00;
 276:Core/Src/bms.c ****     canTx3[2] = 0x00;
 277:Core/Src/bms.c ****     c3tx(&txMsg3, canTx3); // pack 2
 278:Core/Src/bms.c **** }
 279:Core/Src/bms.c **** 
 280:Core/Src/bms.c **** void requestBICMdata(bms_t *bms)
 281:Core/Src/bms.c **** {
 282:Core/Src/bms.c ****     sendCommand();
 283:Core/Src/bms.c **** 
 284:Core/Src/bms.c ****     if (!bms->balancecells)
 285:Core/Src/bms.c ****     {
 286:Core/Src/bms.c **** 
 287:Core/Src/bms.c ****         txMsg.StdId = 0x300;
 288:Core/Src/bms.c ****         txMsg.DLC = 8;
 289:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 290:Core/Src/bms.c ****         {
 291:Core/Src/bms.c ****             canTx[i] = 0x00;
 292:Core/Src/bms.c ****         }
 293:Core/Src/bms.c ****         c1tx(&txMsg, canTx); //pack 1
 294:Core/Src/bms.c **** 
 295:Core/Src/bms.c ****         txMsg.StdId = 0x310;
 296:Core/Src/bms.c ****         txMsg.DLC = 5;
 297:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 298:Core/Src/bms.c ****         {
 299:Core/Src/bms.c ****             canTx[i] = 0x00;
 300:Core/Src/bms.c ****         }
 301:Core/Src/bms.c ****         c1tx(&txMsg, canTx); //pack 1
 302:Core/Src/bms.c ****     }
 303:Core/Src/bms.c **** 
 304:Core/Src/bms.c ****     if (!bms->balancecells)
 305:Core/Src/bms.c ****     {
 306:Core/Src/bms.c ****         txMsg3.StdId = 0x300;
 307:Core/Src/bms.c ****         txMsg3.DLC = 8;
 308:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 309:Core/Src/bms.c ****         {
 310:Core/Src/bms.c ****             canTx3[i] = 0x00;
 311:Core/Src/bms.c ****         }
 312:Core/Src/bms.c ****         c3tx(&txMsg3, canTx3); //pack 2
 313:Core/Src/bms.c **** 
 314:Core/Src/bms.c ****         txMsg3.StdId = 0x310;
 315:Core/Src/bms.c ****         txMsg3.DLC = 5;
 316:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 317:Core/Src/bms.c ****         {
ARM GAS  /tmp/ccBIZiye.s 			page 7


 318:Core/Src/bms.c ****             canTx3[i] = 0x00;
 319:Core/Src/bms.c ****         }
 320:Core/Src/bms.c ****         c3tx(&txMsg3, canTx3); //pack 2
 321:Core/Src/bms.c ****     }
 322:Core/Src/bms.c **** }
 323:Core/Src/bms.c **** 
 324:Core/Src/bms.c **** // send every 200ms //////////////////////////////////////////////////////////////////
 325:Core/Src/bms.c **** void balanceCommand(bms_t *bms, int pack)
 326:Core/Src/bms.c **** {
 327:Core/Src/bms.c ****     if (pack == 0)
 328:Core/Src/bms.c ****     {
 329:Core/Src/bms.c ****         txMsg.StdId = 0x300;
 330:Core/Src/bms.c ****         txMsg.DLC = 8;
 331:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 332:Core/Src/bms.c ****         {
 333:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 334:Core/Src/bms.c ****             {
 335:Core/Src/bms.c ****                 canTx[balanceByte[i]] |= balanceShift[i];
 336:Core/Src/bms.c ****             }
 337:Core/Src/bms.c ****         }
 338:Core/Src/bms.c ****         c1tx(&txMsg, canTx);
 339:Core/Src/bms.c **** 
 340:Core/Src/bms.c ****         txMsg.StdId = 0x310;
 341:Core/Src/bms.c ****         txMsg.DLC = 5;
 342:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 343:Core/Src/bms.c ****         {
 344:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 345:Core/Src/bms.c ****             {
 346:Core/Src/bms.c ****                 canTx[balanceByte[i]] |= balanceShift[i];
 347:Core/Src/bms.c ****             }
 348:Core/Src/bms.c ****         }
 349:Core/Src/bms.c ****         c1tx(&txMsg, canTx);
 350:Core/Src/bms.c ****     }
 351:Core/Src/bms.c **** 
 352:Core/Src/bms.c ****     if (pack == 1)
 353:Core/Src/bms.c ****     {
 354:Core/Src/bms.c ****         txMsg3.StdId = 0x300;
 355:Core/Src/bms.c ****         txMsg3.DLC = 8;
 356:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 357:Core/Src/bms.c ****         {
 358:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 359:Core/Src/bms.c ****             {
 360:Core/Src/bms.c ****                 canTx3[balanceByte[i]] |= balanceShift[i];
 361:Core/Src/bms.c ****             }
 362:Core/Src/bms.c ****         }
 363:Core/Src/bms.c ****         c3tx(&txMsg3, canTx3);
 364:Core/Src/bms.c **** 
 365:Core/Src/bms.c ****         txMsg3.StdId = 0x310;
 366:Core/Src/bms.c ****         txMsg3.DLC = 5;
 367:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 368:Core/Src/bms.c ****         {
 369:Core/Src/bms.c ****             if (bms->avgCellVolt < bms->cellVolt[i])
 370:Core/Src/bms.c ****             {
 371:Core/Src/bms.c ****                 canTx3[balanceByte[i]] |= balanceShift[i];
 372:Core/Src/bms.c ****             }
 373:Core/Src/bms.c ****         }
 374:Core/Src/bms.c ****         c3tx(&txMsg3, canTx3);
ARM GAS  /tmp/ccBIZiye.s 			page 8


 375:Core/Src/bms.c ****     }
 376:Core/Src/bms.c **** }
 377:Core/Src/bms.c **** 
 378:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 379:Core/Src/bms.c **** void getSOC(bms_t *bms)
 380:Core/Src/bms.c **** {
  27              		.loc 1 380 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 70B4     		push	{r4, r5, r6}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 6, -4
 381:Core/Src/bms.c ****     bms->SOC = MAP(bms->avgCellVolt, SOC_VOLT_10, SOC_VOLT_90, 10, 90);
  39              		.loc 1 381 0
  40 0002 B0F8E630 		ldrh	r3, [r0, #230]
  41 0006 A3F61C43 		subw	r3, r3, #3100
  42 000a 03EB8303 		add	r3, r3, r3, lsl #2
  43 000e 1A01     		lsls	r2, r3, #4
  44 0010 0E49     		ldr	r1, .L4
  45 0012 81FB0231 		smull	r3, r1, r1, r2
  46 0016 D317     		asrs	r3, r2, #31
  47 0018 C3EBA113 		rsb	r3, r3, r1, asr #6
  48 001c 0A33     		adds	r3, r3, #10
  49 001e DBB2     		uxtb	r3, r3
  50 0020 80F8F330 		strb	r3, [r0, #243]
 382:Core/Src/bms.c **** 
 383:Core/Src/bms.c ****     // subtract the last reading:
 384:Core/Src/bms.c ****     total = total - readings[readIndex];
  51              		.loc 1 384 0
  52 0024 0A48     		ldr	r0, .L4+4
  53              	.LVL1:
  54 0026 0268     		ldr	r2, [r0]
  55 0028 0A4D     		ldr	r5, .L4+8
  56 002a 55F82260 		ldr	r6, [r5, r2, lsl #2]
  57 002e 0A4C     		ldr	r4, .L4+12
  58 0030 2168     		ldr	r1, [r4]
  59 0032 891B     		subs	r1, r1, r6
 385:Core/Src/bms.c ****     // read from the sensor:
 386:Core/Src/bms.c ****     readings[readIndex] = bms->SOC;
  60              		.loc 1 386 0
  61 0034 45F82230 		str	r3, [r5, r2, lsl #2]
 387:Core/Src/bms.c ****     // add the reading to the total:
 388:Core/Src/bms.c ****     total = total + readings[readIndex];
  62              		.loc 1 388 0
  63 0038 0B44     		add	r3, r3, r1
  64 003a 2360     		str	r3, [r4]
 389:Core/Src/bms.c ****     // advance to the next position in the array:
 390:Core/Src/bms.c ****     readIndex = readIndex + 1;
  65              		.loc 1 390 0
  66 003c 0132     		adds	r2, r2, #1
  67 003e 0260     		str	r2, [r0]
ARM GAS  /tmp/ccBIZiye.s 			page 9


 391:Core/Src/bms.c ****     // if we're at the end of the array...
 392:Core/Src/bms.c ****     if (readIndex >= numReadings)
  68              		.loc 1 392 0
  69 0040 092A     		cmp	r2, #9
  70 0042 01DD     		ble	.L1
 393:Core/Src/bms.c ****     {
 394:Core/Src/bms.c ****         // ...wrap around to the beginning:
 395:Core/Src/bms.c ****         readIndex = 0;
  71              		.loc 1 395 0
  72 0044 0022     		movs	r2, #0
  73 0046 0260     		str	r2, [r0]
  74              	.L1:
 396:Core/Src/bms.c ****     }
 397:Core/Src/bms.c ****     // calculate the average:
 398:Core/Src/bms.c ****     average = total / numReadings;
 399:Core/Src/bms.c **** }
  75              		.loc 1 399 0
  76 0048 70BC     		pop	{r4, r5, r6}
  77              	.LCFI1:
  78              		.cfi_restore 6
  79              		.cfi_restore 5
  80              		.cfi_restore 4
  81              		.cfi_def_cfa_offset 0
  82 004a 7047     		bx	lr
  83              	.L5:
  84              		.align	2
  85              	.L4:
  86 004c D34D6210 		.word	274877907
  87 0050 00000000 		.word	.LANCHOR0
  88 0054 00000000 		.word	.LANCHOR1
  89 0058 00000000 		.word	.LANCHOR2
  90              		.cfi_endproc
  91              	.LFE139:
  93              		.section	.text.getHighCellVolt,"ax",%progbits
  94              		.align	1
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	getHighCellVolt:
 101              	.LFB140:
 400:Core/Src/bms.c **** 
 401:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 402:Core/Src/bms.c **** void getHighCellVolt(bms_t *bms)
 403:Core/Src/bms.c **** {
 102              		.loc 1 403 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.LVL2:
 404:Core/Src/bms.c ****     bms->highCellVolt = 0;
 108              		.loc 1 404 0
 109 0000 0023     		movs	r3, #0
 110 0002 A0F8E430 		strh	r3, [r0, #228]	@ movhi
 111              	.LVL3:
 112              	.LBB2:
ARM GAS  /tmp/ccBIZiye.s 			page 10


 405:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 113              		.loc 1 405 0
 114 0006 00E0     		b	.L7
 115              	.LVL4:
 116              	.L8:
 117              		.loc 1 405 0 is_stmt 0 discriminator 2
 118 0008 0133     		adds	r3, r3, #1
 119              	.LVL5:
 120              	.L7:
 121              		.loc 1 405 0 discriminator 1
 122 000a 5F2B     		cmp	r3, #95
 123 000c 08D8     		bhi	.L10
 406:Core/Src/bms.c ****     {
 407:Core/Src/bms.c ****         if (bms->cellVolt[i] > bms->highCellVolt)
 124              		.loc 1 407 0 is_stmt 1
 125 000e 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 126 0012 B0F8E410 		ldrh	r1, [r0, #228]
 127 0016 8A42     		cmp	r2, r1
 128 0018 F6D9     		bls	.L8
 408:Core/Src/bms.c ****         {
 409:Core/Src/bms.c ****             bms->highCellVolt = bms->cellVolt[i];
 129              		.loc 1 409 0
 130 001a A0F8E420 		strh	r2, [r0, #228]	@ movhi
 131 001e F3E7     		b	.L8
 132              	.L10:
 133              	.LBE2:
 410:Core/Src/bms.c ****         }
 411:Core/Src/bms.c ****     }
 412:Core/Src/bms.c **** }
 134              		.loc 1 412 0
 135 0020 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE140:
 139              		.section	.text.getHighCellTemp,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	getHighCellTemp:
 147              	.LFB141:
 413:Core/Src/bms.c **** 
 414:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 415:Core/Src/bms.c **** void getHighCellTemp(bms_t *bms)
 416:Core/Src/bms.c **** {
 148              		.loc 1 416 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL6:
 417:Core/Src/bms.c ****     bms->highCellTemp = 0;
 154              		.loc 1 417 0
 155 0000 0023     		movs	r3, #0
 156 0002 A0F8EA30 		strh	r3, [r0, #234]	@ movhi
 157              	.LVL7:
 158              	.LBB3:
ARM GAS  /tmp/ccBIZiye.s 			page 11


 418:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 159              		.loc 1 418 0
 160 0006 00E0     		b	.L12
 161              	.LVL8:
 162              	.L13:
 163              		.loc 1 418 0 is_stmt 0 discriminator 2
 164 0008 0133     		adds	r3, r3, #1
 165              	.LVL9:
 166              	.L12:
 167              		.loc 1 418 0 discriminator 1
 168 000a 0F2B     		cmp	r3, #15
 169 000c 0CD8     		bhi	.L15
 419:Core/Src/bms.c ****     {
 420:Core/Src/bms.c ****         if ((bms->tempSensor[i] > bms->highCellTemp) && (bms->tempSensor[i] > 0))
 170              		.loc 1 420 0 is_stmt 1
 171 000e 03F16002 		add	r2, r3, #96
 172 0012 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 173 0016 B0F8EA10 		ldrh	r1, [r0, #234]
 174 001a 8A42     		cmp	r2, r1
 175 001c F4D9     		bls	.L13
 176              		.loc 1 420 0 is_stmt 0 discriminator 1
 177 001e 002A     		cmp	r2, #0
 178 0020 F2D0     		beq	.L13
 421:Core/Src/bms.c ****         {
 422:Core/Src/bms.c ****             bms->highCellTemp = bms->tempSensor[i];
 179              		.loc 1 422 0 is_stmt 1
 180 0022 A0F8EA20 		strh	r2, [r0, #234]	@ movhi
 181 0026 EFE7     		b	.L13
 182              	.L15:
 183              	.LBE3:
 423:Core/Src/bms.c ****         }
 424:Core/Src/bms.c ****     }
 425:Core/Src/bms.c **** }
 184              		.loc 1 425 0
 185 0028 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE141:
 189              		.section	.text.getLowCellTemp,"ax",%progbits
 190              		.align	1
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	getLowCellTemp:
 197              	.LFB142:
 426:Core/Src/bms.c **** 
 427:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 428:Core/Src/bms.c **** void getLowCellTemp(bms_t *bms)
 429:Core/Src/bms.c **** {
 198              		.loc 1 429 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203              	.LVL10:
 430:Core/Src/bms.c ****     bms->lowCellTemp = 0;
 204              		.loc 1 430 0
ARM GAS  /tmp/ccBIZiye.s 			page 12


 205 0000 0023     		movs	r3, #0
 206 0002 A0F8EC30 		strh	r3, [r0, #236]	@ movhi
 207              	.LVL11:
 208              	.LBB4:
 431:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 209              		.loc 1 431 0
 210 0006 00E0     		b	.L17
 211              	.LVL12:
 212              	.L18:
 213              		.loc 1 431 0 is_stmt 0 discriminator 2
 214 0008 0133     		adds	r3, r3, #1
 215              	.LVL13:
 216              	.L17:
 217              		.loc 1 431 0 discriminator 1
 218 000a 0F2B     		cmp	r3, #15
 219 000c 0AD8     		bhi	.L20
 432:Core/Src/bms.c ****     {
 433:Core/Src/bms.c ****         if (bms->tempSensor[i] > bms->lowCellTemp)
 220              		.loc 1 433 0 is_stmt 1
 221 000e 03F16002 		add	r2, r3, #96
 222 0012 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 223 0016 B0F8EC10 		ldrh	r1, [r0, #236]
 224 001a 8A42     		cmp	r2, r1
 225 001c F4D9     		bls	.L18
 434:Core/Src/bms.c ****         {
 435:Core/Src/bms.c ****             bms->lowCellTemp = bms->tempSensor[i];
 226              		.loc 1 435 0
 227 001e A0F8EC20 		strh	r2, [r0, #236]	@ movhi
 228 0022 F1E7     		b	.L18
 229              	.L20:
 230              	.LBE4:
 436:Core/Src/bms.c ****         }
 437:Core/Src/bms.c ****     }
 438:Core/Src/bms.c **** }
 231              		.loc 1 438 0
 232 0024 7047     		bx	lr
 233              		.cfi_endproc
 234              	.LFE142:
 236              		.section	.text.getAvgCellTemp,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	getAvgCellTemp:
 244              	.LFB143:
 439:Core/Src/bms.c **** 
 440:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 441:Core/Src/bms.c **** void getAvgCellTemp(bms_t *bms)
 442:Core/Src/bms.c **** {
 245              		.loc 1 442 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              	.LVL14:
 251 0000 30B4     		push	{r4, r5}
ARM GAS  /tmp/ccBIZiye.s 			page 13


 252              	.LCFI2:
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 4, -8
 255              		.cfi_offset 5, -4
 256              	.LVL15:
 257              	.LBB5:
 443:Core/Src/bms.c ****     int zeroCounter = 0;
 444:Core/Src/bms.c ****     int sumTemp = 0;
 445:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 258              		.loc 1 445 0
 259 0002 0023     		movs	r3, #0
 260              	.LBE5:
 444:Core/Src/bms.c ****     for (size_t i = 0; i < 16; i++)
 261              		.loc 1 444 0
 262 0004 1946     		mov	r1, r3
 443:Core/Src/bms.c ****     int zeroCounter = 0;
 263              		.loc 1 443 0
 264 0006 1D46     		mov	r5, r3
 265              	.LBB6:
 266              		.loc 1 445 0
 267 0008 01E0     		b	.L22
 268              	.LVL16:
 269              	.L23:
 446:Core/Src/bms.c ****     {
 447:Core/Src/bms.c ****         if (bms->tempSensor[i] == IGNORE_TEMP)
 448:Core/Src/bms.c ****         {
 449:Core/Src/bms.c ****             zeroCounter++;
 450:Core/Src/bms.c ****         }
 451:Core/Src/bms.c **** 
 452:Core/Src/bms.c ****         sumTemp += bms->tempSensor[i];
 270              		.loc 1 452 0 discriminator 2
 271 000a 1144     		add	r1, r1, r2
 272              	.LVL17:
 445:Core/Src/bms.c ****     {
 273              		.loc 1 445 0 discriminator 2
 274 000c 0133     		adds	r3, r3, #1
 275              	.LVL18:
 276              	.L22:
 445:Core/Src/bms.c ****     {
 277              		.loc 1 445 0 is_stmt 0 discriminator 1
 278 000e 0F2B     		cmp	r3, #15
 279 0010 09D8     		bhi	.L26
 447:Core/Src/bms.c ****         {
 280              		.loc 1 447 0 is_stmt 1
 281 0012 03F16002 		add	r2, r3, #96
 282 0016 30F81220 		ldrh	r2, [r0, r2, lsl #1]
 283 001a 47F21C04 		movw	r4, #28700
 284 001e A242     		cmp	r2, r4
 285 0020 F3D1     		bne	.L23
 449:Core/Src/bms.c ****         }
 286              		.loc 1 449 0
 287 0022 0135     		adds	r5, r5, #1
 288              	.LVL19:
 289 0024 F1E7     		b	.L23
 290              	.L26:
 291              	.LBE6:
 453:Core/Src/bms.c ****     }
ARM GAS  /tmp/ccBIZiye.s 			page 14


 454:Core/Src/bms.c ****     bms->avgCellTemp = (sumTemp - (zeroCounter * IGNORE_TEMP) / (16 - zeroCounter));
 292              		.loc 1 454 0
 293 0026 064B     		ldr	r3, .L27
 294              	.LVL20:
 295 0028 03FB05F3 		mul	r3, r3, r5
 296 002c C5F11005 		rsb	r5, r5, #16
 297              	.LVL21:
 298 0030 93FBF5F5 		sdiv	r5, r3, r5
 299 0034 2944     		add	r1, r1, r5
 300              	.LVL22:
 301 0036 A0F8EE10 		strh	r1, [r0, #238]	@ movhi
 455:Core/Src/bms.c **** }
 302              		.loc 1 455 0
 303 003a 30BC     		pop	{r4, r5}
 304              	.LCFI3:
 305              		.cfi_restore 5
 306              		.cfi_restore 4
 307              		.cfi_def_cfa_offset 0
 308 003c 7047     		bx	lr
 309              	.L28:
 310 003e 00BF     		.align	2
 311              	.L27:
 312 0040 E48FFFFF 		.word	-28700
 313              		.cfi_endproc
 314              	.LFE143:
 316              		.section	.text.getTempDelta,"ax",%progbits
 317              		.align	1
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 321              		.fpu fpv4-sp-d16
 323              	getTempDelta:
 324              	.LFB144:
 456:Core/Src/bms.c **** 
 457:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 458:Core/Src/bms.c **** void getTempDelta(bms_t *bms)
 459:Core/Src/bms.c **** {
 325              		.loc 1 459 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		@ link register save eliminated.
 330              	.LVL23:
 460:Core/Src/bms.c ****     bms->tempDelta = bms->highCellTemp - bms->lowCellTemp;
 331              		.loc 1 460 0
 332 0000 B0F8EA30 		ldrh	r3, [r0, #234]
 333 0004 B0F8EC20 		ldrh	r2, [r0, #236]
 334 0008 9B1A     		subs	r3, r3, r2
 335 000a A0F8F030 		strh	r3, [r0, #240]	@ movhi
 336 000e 7047     		bx	lr
 337              		.cfi_endproc
 338              	.LFE144:
 340              		.section	.text.getCellDelta,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
ARM GAS  /tmp/ccBIZiye.s 			page 15


 345              		.fpu fpv4-sp-d16
 347              	getCellDelta:
 348              	.LFB145:
 461:Core/Src/bms.c **** }
 462:Core/Src/bms.c **** 
 463:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 464:Core/Src/bms.c **** void getCellDelta(bms_t *bms)
 465:Core/Src/bms.c **** {
 349              		.loc 1 465 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LVL24:
 466:Core/Src/bms.c ****     bms->cellDelta = bms->highCellVolt - bms->lowCellVolt;
 355              		.loc 1 466 0
 356 0000 B0F8E430 		ldrh	r3, [r0, #228]
 357 0004 B0F8E220 		ldrh	r2, [r0, #226]
 358 0008 9B1A     		subs	r3, r3, r2
 359 000a A0F8E830 		strh	r3, [r0, #232]	@ movhi
 360 000e 7047     		bx	lr
 361              		.cfi_endproc
 362              	.LFE145:
 364              		.section	.text.getLowCellVolt,"ax",%progbits
 365              		.align	1
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	getLowCellVolt:
 372              	.LFB146:
 467:Core/Src/bms.c **** }
 468:Core/Src/bms.c **** 
 469:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 470:Core/Src/bms.c **** void getLowCellVolt(bms_t *bms)
 471:Core/Src/bms.c **** {
 373              		.loc 1 471 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              	.LVL25:
 472:Core/Src/bms.c ****     bms->lowCellVolt = 5000;
 379              		.loc 1 472 0
 380 0000 41F28833 		movw	r3, #5000
 381 0004 A0F8E230 		strh	r3, [r0, #226]	@ movhi
 382              	.LVL26:
 383              	.LBB7:
 473:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 384              		.loc 1 473 0
 385 0008 0023     		movs	r3, #0
 386 000a 00E0     		b	.L32
 387              	.LVL27:
 388              	.L33:
 389              		.loc 1 473 0 is_stmt 0 discriminator 2
 390 000c 0133     		adds	r3, r3, #1
 391              	.LVL28:
ARM GAS  /tmp/ccBIZiye.s 			page 16


 392              	.L32:
 393              		.loc 1 473 0 discriminator 1
 394 000e 5F2B     		cmp	r3, #95
 395 0010 08D8     		bhi	.L35
 474:Core/Src/bms.c ****     {
 475:Core/Src/bms.c ****         if (bms->cellVolt[i] < bms->lowCellVolt)
 396              		.loc 1 475 0 is_stmt 1
 397 0012 30F81320 		ldrh	r2, [r0, r3, lsl #1]
 398 0016 B0F8E210 		ldrh	r1, [r0, #226]
 399 001a 8A42     		cmp	r2, r1
 400 001c F6D2     		bcs	.L33
 476:Core/Src/bms.c ****         {
 477:Core/Src/bms.c ****             bms->lowCellVolt = bms->cellVolt[i];
 401              		.loc 1 477 0
 402 001e A0F8E220 		strh	r2, [r0, #226]	@ movhi
 403 0022 F3E7     		b	.L33
 404              	.L35:
 405              	.LBE7:
 478:Core/Src/bms.c ****         }
 479:Core/Src/bms.c ****     }
 480:Core/Src/bms.c **** }
 406              		.loc 1 480 0
 407 0024 7047     		bx	lr
 408              		.cfi_endproc
 409              	.LFE146:
 411              		.section	.text.getAvgCellVolt,"ax",%progbits
 412              		.align	1
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu fpv4-sp-d16
 418              	getAvgCellVolt:
 419              	.LFB147:
 481:Core/Src/bms.c **** 
 482:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 483:Core/Src/bms.c **** void getAvgCellVolt(bms_t *bms)
 484:Core/Src/bms.c **** {
 420              		.loc 1 484 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425              	.LVL29:
 426              	.LBB8:
 485:Core/Src/bms.c **** 
 486:Core/Src/bms.c ****     int cellSum = 0;
 487:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 427              		.loc 1 487 0
 428 0000 0023     		movs	r3, #0
 429              	.LBE8:
 486:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 430              		.loc 1 486 0
 431 0002 1A46     		mov	r2, r3
 432              	.LBB9:
 433              		.loc 1 487 0
 434 0004 03E0     		b	.L37
 435              	.LVL30:
ARM GAS  /tmp/ccBIZiye.s 			page 17


 436              	.L38:
 488:Core/Src/bms.c ****     {
 489:Core/Src/bms.c **** 
 490:Core/Src/bms.c ****         cellSum += bms->cellVolt[i];
 437              		.loc 1 490 0 discriminator 3
 438 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 439 000a 0A44     		add	r2, r2, r1
 440              	.LVL31:
 487:Core/Src/bms.c ****     {
 441              		.loc 1 487 0 discriminator 3
 442 000c 0133     		adds	r3, r3, #1
 443              	.LVL32:
 444              	.L37:
 487:Core/Src/bms.c ****     {
 445              		.loc 1 487 0 is_stmt 0 discriminator 1
 446 000e 5F2B     		cmp	r3, #95
 447 0010 F9D9     		bls	.L38
 448              	.LBE9:
 491:Core/Src/bms.c ****     }
 492:Core/Src/bms.c ****     bms->avgCellTemp = cellSum / 96;
 449              		.loc 1 492 0 is_stmt 1
 450 0012 0449     		ldr	r1, .L39
 451 0014 81FB0231 		smull	r3, r1, r1, r2
 452              	.LVL33:
 453 0018 D317     		asrs	r3, r2, #31
 454 001a C3EB2113 		rsb	r3, r3, r1, asr #4
 455 001e A0F8EE30 		strh	r3, [r0, #238]	@ movhi
 456 0022 7047     		bx	lr
 457              	.L40:
 458              		.align	2
 459              	.L39:
 460 0024 ABAAAA2A 		.word	715827883
 461              		.cfi_endproc
 462              	.LFE147:
 464              		.section	.text.getPackVolt,"ax",%progbits
 465              		.align	1
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	getPackVolt:
 472              	.LFB148:
 493:Core/Src/bms.c **** }
 494:Core/Src/bms.c **** 
 495:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 496:Core/Src/bms.c **** void getPackVolt(bms_t *bms)
 497:Core/Src/bms.c **** {
 473              		.loc 1 497 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478              	.LVL34:
 479              	.LBB10:
 498:Core/Src/bms.c ****     uint32_t packSum = 0;
 499:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 480              		.loc 1 499 0
ARM GAS  /tmp/ccBIZiye.s 			page 18


 481 0000 0023     		movs	r3, #0
 482              	.LBE10:
 498:Core/Src/bms.c ****     uint32_t packSum = 0;
 483              		.loc 1 498 0
 484 0002 1A46     		mov	r2, r3
 485              	.LBB11:
 486              		.loc 1 499 0
 487 0004 03E0     		b	.L42
 488              	.LVL35:
 489              	.L43:
 500:Core/Src/bms.c ****     {
 501:Core/Src/bms.c ****         packSum += bms->cellVolt[i];
 490              		.loc 1 501 0 discriminator 3
 491 0006 30F81310 		ldrh	r1, [r0, r3, lsl #1]
 492 000a 0A44     		add	r2, r2, r1
 493              	.LVL36:
 499:Core/Src/bms.c ****     {
 494              		.loc 1 499 0 discriminator 3
 495 000c 0133     		adds	r3, r3, #1
 496              	.LVL37:
 497              	.L42:
 499:Core/Src/bms.c ****     {
 498              		.loc 1 499 0 is_stmt 0 discriminator 1
 499 000e 5F2B     		cmp	r3, #95
 500 0010 F9D9     		bls	.L43
 501              	.LBE11:
 502:Core/Src/bms.c ****     }
 503:Core/Src/bms.c ****     bms->packVolt = packSum / 10;
 502              		.loc 1 503 0 is_stmt 1
 503 0012 034B     		ldr	r3, .L44
 504              	.LVL38:
 505 0014 A3FB0223 		umull	r2, r3, r3, r2
 506              	.LVL39:
 507 0018 DB08     		lsrs	r3, r3, #3
 508 001a A0F8E030 		strh	r3, [r0, #224]	@ movhi
 509 001e 7047     		bx	lr
 510              	.L45:
 511              		.align	2
 512              	.L44:
 513 0020 CDCCCCCC 		.word	-858993459
 514              		.cfi_endproc
 515              	.LFE148:
 517              		.section	.text.getCellCount,"ax",%progbits
 518              		.align	1
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu fpv4-sp-d16
 524              	getCellCount:
 525              	.LFB149:
 504:Core/Src/bms.c **** }
 505:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 506:Core/Src/bms.c **** void getCellCount(bms_t *bms, int pack)
 507:Core/Src/bms.c **** {
 526              		.loc 1 507 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccBIZiye.s 			page 19


 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531              	.LVL40:
 532 0000 10B4     		push	{r4}
 533              	.LCFI4:
 534              		.cfi_def_cfa_offset 4
 535              		.cfi_offset 4, -4
 536              	.LVL41:
 537              	.LBB12:
 508:Core/Src/bms.c ****     uint16_t cellCount = 0;
 509:Core/Src/bms.c ****     for (size_t i = 0; i < 96; i++)
 538              		.loc 1 509 0
 539 0002 0023     		movs	r3, #0
 540              	.LBE12:
 508:Core/Src/bms.c ****     uint16_t cellCount = 0;
 541              		.loc 1 508 0
 542 0004 1A46     		mov	r2, r3
 543              	.LBB13:
 544              		.loc 1 509 0
 545 0006 00E0     		b	.L47
 546              	.LVL42:
 547              	.L48:
 548              		.loc 1 509 0 is_stmt 0 discriminator 2
 549 0008 0133     		adds	r3, r3, #1
 550              	.LVL43:
 551              	.L47:
 552              		.loc 1 509 0 discriminator 1
 553 000a 5F2B     		cmp	r3, #95
 554 000c 07D8     		bhi	.L52
 510:Core/Src/bms.c ****     {
 511:Core/Src/bms.c ****         if (bms->cellVolt[i] > IGNORE_VOLT)
 555              		.loc 1 511 0 is_stmt 1
 556 000e 30F81340 		ldrh	r4, [r0, r3, lsl #1]
 557 0012 B4F5FA7F 		cmp	r4, #500
 558 0016 F7D9     		bls	.L48
 512:Core/Src/bms.c ****         {
 513:Core/Src/bms.c ****             cellCount++;
 559              		.loc 1 513 0
 560 0018 0132     		adds	r2, r2, #1
 561              	.LVL44:
 562 001a 92B2     		uxth	r2, r2
 563              	.LVL45:
 564 001c F4E7     		b	.L48
 565              	.L52:
 566              	.LBE13:
 514:Core/Src/bms.c ****         }
 515:Core/Src/bms.c ****     }
 516:Core/Src/bms.c ****     if (cellCount != 96)
 567              		.loc 1 516 0
 568 001e 602A     		cmp	r2, #96
 569 0020 06D0     		beq	.L46
 517:Core/Src/bms.c ****     {
 518:Core/Src/bms.c ****         BMS[pack].state = Error;
 570              		.loc 1 518 0
 571 0022 F622     		movs	r2, #246
 572              	.LVL46:
 573 0024 044B     		ldr	r3, .L53
ARM GAS  /tmp/ccBIZiye.s 			page 20


 574              	.LVL47:
 575 0026 02FB0131 		mla	r1, r2, r1, r3
 576              	.LVL48:
 577 002a 0423     		movs	r3, #4
 578 002c 81F8F230 		strb	r3, [r1, #242]
 579              	.L46:
 519:Core/Src/bms.c ****     }
 520:Core/Src/bms.c **** }
 580              		.loc 1 520 0
 581 0030 5DF8044B 		ldr	r4, [sp], #4
 582              	.LCFI5:
 583              		.cfi_restore 4
 584              		.cfi_def_cfa_offset 0
 585 0034 7047     		bx	lr
 586              	.L54:
 587 0036 00BF     		.align	2
 588              	.L53:
 589 0038 00000000 		.word	BMS
 590              		.cfi_endproc
 591              	.LFE149:
 593              		.section	.text.initBMS,"ax",%progbits
 594              		.align	1
 595              		.global	initBMS
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu fpv4-sp-d16
 601              	initBMS:
 602              	.LFB131:
  77:Core/Src/bms.c ****     for (size_t i = 0; i < 2; i++)
 603              		.loc 1 77 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL49:
 609              	.LBB14:
  78:Core/Src/bms.c ****     {
 610              		.loc 1 78 0
 611 0000 0023     		movs	r3, #0
 612 0002 07E0     		b	.L56
 613              	.LVL50:
 614              	.L57:
  80:Core/Src/bms.c ****     }
 615              		.loc 1 80 0 discriminator 3
 616 0004 F622     		movs	r2, #246
 617 0006 0749     		ldr	r1, .L58
 618 0008 02FB0312 		mla	r2, r2, r3, r1
 619 000c 0021     		movs	r1, #0
 620 000e 82F8F210 		strb	r1, [r2, #242]
  78:Core/Src/bms.c ****     {
 621              		.loc 1 78 0 discriminator 3
 622 0012 0133     		adds	r3, r3, #1
 623              	.LVL51:
 624              	.L56:
  78:Core/Src/bms.c ****     {
 625              		.loc 1 78 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccBIZiye.s 			page 21


 626 0014 012B     		cmp	r3, #1
 627 0016 F5D9     		bls	.L57
 628              	.LBE14:
  82:Core/Src/bms.c ****     charged = false;
 629              		.loc 1 82 0 is_stmt 1
 630 0018 0023     		movs	r3, #0
 631              	.LVL52:
 632 001a 034A     		ldr	r2, .L58+4
 633 001c 1370     		strb	r3, [r2]
  83:Core/Src/bms.c **** }
 634              		.loc 1 83 0
 635 001e 034A     		ldr	r2, .L58+8
 636 0020 1370     		strb	r3, [r2]
 637 0022 7047     		bx	lr
 638              	.L59:
 639              		.align	2
 640              	.L58:
 641 0024 00000000 		.word	BMS
 642 0028 00000000 		.word	vechicleState
 643 002c 00000000 		.word	charged
 644              		.cfi_endproc
 645              	.LFE131:
 647              		.global	__aeabi_i2d
 648              		.global	__aeabi_dcmpgt
 649              		.section	.text.bmsStateHandler,"ax",%progbits
 650              		.align	1
 651              		.global	bmsStateHandler
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu fpv4-sp-d16
 657              	bmsStateHandler:
 658              	.LFB132:
  88:Core/Src/bms.c ****     switch (bms->state)
 659              		.loc 1 88 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              	.LVL53:
 664 0000 38B5     		push	{r3, r4, r5, lr}
 665              	.LCFI6:
 666              		.cfi_def_cfa_offset 16
 667              		.cfi_offset 3, -16
 668              		.cfi_offset 4, -12
 669              		.cfi_offset 5, -8
 670              		.cfi_offset 14, -4
  89:Core/Src/bms.c ****     {
 671              		.loc 1 89 0
 672 0002 90F8F230 		ldrb	r3, [r0, #242]	@ zero_extendqisi2
 673 0006 042B     		cmp	r3, #4
 674 0008 6ED8     		bhi	.L60
 675 000a DFE803F0 		tbb	[pc, r3]
 676              	.L63:
 677 000e 03       		.byte	(.L62-.L63)/2
 678 000f 0A       		.byte	(.L64-.L63)/2
 679 0010 35       		.byte	(.L65-.L63)/2
 680 0011 3C       		.byte	(.L66-.L63)/2
ARM GAS  /tmp/ccBIZiye.s 			page 22


 681 0012 5C       		.byte	(.L67-.L63)/2
 682 0013 00       		.p2align 1
 683              	.L62:
  92:Core/Src/bms.c ****         bms->state = Ready;
 684              		.loc 1 92 0
 685 0014 0023     		movs	r3, #0
 686 0016 80F8F430 		strb	r3, [r0, #244]
  93:Core/Src/bms.c ****         break;
 687              		.loc 1 93 0
 688 001a 0123     		movs	r3, #1
 689 001c 80F8F230 		strb	r3, [r0, #242]
  94:Core/Src/bms.c **** 
 690              		.loc 1 94 0
 691 0020 38BD     		pop	{r3, r4, r5, pc}
 692              	.L64:
 693 0022 0446     		mov	r4, r0
  97:Core/Src/bms.c **** 
 694              		.loc 1 97 0
 695 0024 0023     		movs	r3, #0
 696 0026 80F8F430 		strb	r3, [r0, #244]
  99:Core/Src/bms.c ****         {
 697              		.loc 1 99 0
 698 002a B0F8E620 		ldrh	r2, [r0, #230]
 699 002e 40F60A73 		movw	r3, #3850
 700 0032 9A42     		cmp	r2, r3
 701 0034 16D9     		bls	.L68
 101:Core/Src/bms.c ****             {
 702              		.loc 1 101 0
 703 0036 B0F8E450 		ldrh	r5, [r0, #228]
 704 003a B0F8E230 		ldrh	r3, [r0, #226]
 705 003e ED1A     		subs	r5, r5, r3
 706 0040 2846     		mov	r0, r5
 707              	.LVL54:
 708 0042 FFF7FEFF 		bl	__aeabi_i2d
 709              	.LVL55:
 710 0046 0022     		movs	r2, #0
 711 0048 284B     		ldr	r3, .L77
 712 004a FFF7FEFF 		bl	__aeabi_dcmpgt
 713              	.LVL56:
 714 004e 18B1     		cbz	r0, .L75
 103:Core/Src/bms.c ****             }
 715              		.loc 1 103 0
 716 0050 0123     		movs	r3, #1
 717 0052 84F8F530 		strb	r3, [r4, #245]
 718 0056 08E0     		b	.L71
 719              	.L75:
 106:Core/Src/bms.c ****             {
 720              		.loc 1 106 0
 721 0058 072D     		cmp	r5, #7
 722 005a 06DC     		bgt	.L71
 108:Core/Src/bms.c ****             }
 723              		.loc 1 108 0
 724 005c 0023     		movs	r3, #0
 725 005e 84F8F530 		strb	r3, [r4, #245]
 726 0062 02E0     		b	.L71
 727              	.LVL57:
 728              	.L68:
ARM GAS  /tmp/ccBIZiye.s 			page 23


 113:Core/Src/bms.c ****         }
 729              		.loc 1 113 0
 730 0064 0023     		movs	r3, #0
 731 0066 80F8F530 		strb	r3, [r0, #245]
 732              	.LVL58:
 733              	.L71:
 123:Core/Src/bms.c ****             bms->state = Drive;
 734              		.loc 1 123 0
 735 006a 0023     		movs	r3, #0
 736 006c 84F8F530 		strb	r3, [r4, #245]
 124:Core/Src/bms.c ****         }
 737              		.loc 1 124 0
 738 0070 0223     		movs	r3, #2
 739 0072 84F8F230 		strb	r3, [r4, #242]
 126:Core/Src/bms.c **** 
 740              		.loc 1 126 0
 741 0076 38BD     		pop	{r3, r4, r5, pc}
 742              	.LVL59:
 743              	.L65:
 130:Core/Src/bms.c ****         {
 744              		.loc 1 130 0
 745 0078 1D4B     		ldr	r3, .L77+4
 746 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 747 007c A3BB     		cbnz	r3, .L60
 132:Core/Src/bms.c ****         }
 748              		.loc 1 132 0
 749 007e 0123     		movs	r3, #1
 750 0080 80F8F230 		strb	r3, [r0, #242]
 751 0084 38BD     		pop	{r3, r4, r5, pc}
 752              	.L66:
 137:Core/Src/bms.c ****         bms->chargeRequest = 1;
 753              		.loc 1 137 0
 754 0086 0023     		movs	r3, #0
 755 0088 80F8F530 		strb	r3, [r0, #245]
 138:Core/Src/bms.c **** 
 756              		.loc 1 138 0
 757 008c 0123     		movs	r3, #1
 758 008e 80F8F430 		strb	r3, [r0, #244]
 140:Core/Src/bms.c ****         {
 759              		.loc 1 140 0
 760 0092 B0F8E420 		ldrh	r2, [r0, #228]
 761 0096 41F25403 		movw	r3, #4180
 762 009a 9A42     		cmp	r2, r3
 763 009c 03D8     		bhi	.L72
 140:Core/Src/bms.c ****         {
 764              		.loc 1 140 0 is_stmt 0 discriminator 1
 765 009e B0F8EA30 		ldrh	r3, [r0, #234]
 766 00a2 952B     		cmp	r3, #149
 767 00a4 05D9     		bls	.L73
 768              	.L72:
 150:Core/Src/bms.c ****             bms->state = Ready;
 769              		.loc 1 150 0 is_stmt 1
 770 00a6 0023     		movs	r3, #0
 771 00a8 80F8F430 		strb	r3, [r0, #244]
 151:Core/Src/bms.c ****         }
 772              		.loc 1 151 0
 773 00ac 0123     		movs	r3, #1
ARM GAS  /tmp/ccBIZiye.s 			page 24


 774 00ae 80F8F230 		strb	r3, [r0, #242]
 775              	.L73:
 154:Core/Src/bms.c ****         {
 776              		.loc 1 154 0
 777 00b2 104B     		ldr	r3, .L77+8
 778 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 779 00b6 BBB1     		cbz	r3, .L60
 156:Core/Src/bms.c ****             bms->state = Ready;
 780              		.loc 1 156 0
 781 00b8 0023     		movs	r3, #0
 782 00ba 80F8F430 		strb	r3, [r0, #244]
 157:Core/Src/bms.c ****         }
 783              		.loc 1 157 0
 784 00be 0123     		movs	r3, #1
 785 00c0 80F8F230 		strb	r3, [r0, #242]
 786 00c4 38BD     		pop	{r3, r4, r5, pc}
 787              	.L67:
 163:Core/Src/bms.c **** 
 788              		.loc 1 163 0
 789 00c6 0023     		movs	r3, #0
 790 00c8 80F8F430 		strb	r3, [r0, #244]
 165:Core/Src/bms.c ****         {
 791              		.loc 1 165 0
 792 00cc B0F8E230 		ldrh	r3, [r0, #226]
 793 00d0 B3F5FA6F 		cmp	r3, #2000
 794 00d4 08D9     		bls	.L60
 165:Core/Src/bms.c ****         {
 795              		.loc 1 165 0 is_stmt 0 discriminator 1
 796 00d6 B0F8E420 		ldrh	r2, [r0, #228]
 797 00da 41F29903 		movw	r3, #4249
 798 00de 9A42     		cmp	r2, r3
 799 00e0 02D8     		bhi	.L60
 167:Core/Src/bms.c ****         }
 800              		.loc 1 167 0 is_stmt 1
 801 00e2 0123     		movs	r3, #1
 802 00e4 80F8F230 		strb	r3, [r0, #242]
 803              	.L60:
 804 00e8 38BD     		pop	{r3, r4, r5, pc}
 805              	.L78:
 806 00ea 00BF     		.align	2
 807              	.L77:
 808 00ec 00803140 		.word	1076985856
 809 00f0 00000000 		.word	vechicleState
 810 00f4 00000000 		.word	charged
 811              		.cfi_endproc
 812              	.LFE132:
 814              		.section	.text.acChargeCommand,"ax",%progbits
 815              		.align	1
 816              		.global	acChargeCommand
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	acChargeCommand:
 823              	.LFB133:
 178:Core/Src/bms.c **** 
 824              		.loc 1 178 0
ARM GAS  /tmp/ccBIZiye.s 			page 25


 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828 0000 08B5     		push	{r3, lr}
 829              	.LCFI7:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 3, -8
 832              		.cfi_offset 14, -4
 180:Core/Src/bms.c ****     {
 833              		.loc 1 180 0
 834 0002 224B     		ldr	r3, .L85
 835 0004 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 836 0008 1BB1     		cbz	r3, .L80
 180:Core/Src/bms.c ****     {
 837              		.loc 1 180 0 is_stmt 0 discriminator 1
 838 000a 204B     		ldr	r3, .L85
 839 000c 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 840 0010 13BB     		cbnz	r3, .L84
 841              	.L80:
 197:Core/Src/bms.c ****     {
 842              		.loc 1 197 0 is_stmt 1
 843 0012 1E4B     		ldr	r3, .L85
 844 0014 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 845 0018 1BB1     		cbz	r3, .L81
 197:Core/Src/bms.c ****     {
 846              		.loc 1 197 0 is_stmt 0 discriminator 1
 847 001a 1C4B     		ldr	r3, .L85
 848 001c 93F8EA31 		ldrb	r3, [r3, #490]	@ zero_extendqisi2
 849 0020 CBB9     		cbnz	r3, .L79
 850              	.L81:
 851              	.LVL60:
 852              	.LBB15:
 200:Core/Src/bms.c ****         txMsg2.DLC = 8;
 853              		.loc 1 200 0 is_stmt 1
 854 0022 1B4B     		ldr	r3, .L85+4
 855 0024 40F20562 		movw	r2, #1541
 856 0028 1A60     		str	r2, [r3]
 201:Core/Src/bms.c ****         canTx2[0] = 0x40;
 857              		.loc 1 201 0
 858 002a 0822     		movs	r2, #8
 859 002c 1A61     		str	r2, [r3, #16]
 202:Core/Src/bms.c ****         canTx2[1] = 0x00;
 860              		.loc 1 202 0
 861 002e 194B     		ldr	r3, .L85+8
 862 0030 4022     		movs	r2, #64
 863 0032 1A70     		strb	r2, [r3]
 203:Core/Src/bms.c ****         canTx2[2] = 0x20;
 864              		.loc 1 203 0
 865 0034 0022     		movs	r2, #0
 866 0036 5A70     		strb	r2, [r3, #1]
 204:Core/Src/bms.c ****         canTx2[3] = 9;
 867              		.loc 1 204 0
 868 0038 2021     		movs	r1, #32
 869 003a 9970     		strb	r1, [r3, #2]
 205:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 870              		.loc 1 205 0
 871 003c 0921     		movs	r1, #9
ARM GAS  /tmp/ccBIZiye.s 			page 26


 872 003e D970     		strb	r1, [r3, #3]
 206:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 873              		.loc 1 206 0
 874 0040 1A71     		strb	r2, [r3, #4]
 207:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 875              		.loc 1 207 0
 876 0042 5A71     		strb	r2, [r3, #5]
 208:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 877              		.loc 1 208 0
 878 0044 9A71     		strb	r2, [r3, #6]
 209:Core/Src/bms.c ****         c2tx(&txMsg, canTx);
 879              		.loc 1 209 0
 880 0046 DA71     		strb	r2, [r3, #7]
 210:Core/Src/bms.c ****         charged = true;
 881              		.loc 1 210 0
 882 0048 1349     		ldr	r1, .L85+12
 883 004a 1448     		ldr	r0, .L85+16
 884 004c FFF7FEFF 		bl	c2tx
 885              	.LVL61:
 211:Core/Src/bms.c ****     }
 886              		.loc 1 211 0
 887 0050 0122     		movs	r2, #1
 888 0052 134B     		ldr	r3, .L85+20
 889 0054 1A70     		strb	r2, [r3]
 890              	.LVL62:
 891              	.L79:
 892 0056 08BD     		pop	{r3, pc}
 893              	.L84:
 894              	.LBE15:
 895              	.LBB16:
 182:Core/Src/bms.c ****         int val = 32;
 896              		.loc 1 182 0
 897 0058 0022     		movs	r2, #0
 898 005a 114B     		ldr	r3, .L85+20
 899 005c 1A70     		strb	r2, [r3]
 900              	.LVL63:
 184:Core/Src/bms.c ****         txMsg2.DLC = 8;
 901              		.loc 1 184 0
 902 005e 0C4B     		ldr	r3, .L85+4
 903 0060 40F20561 		movw	r1, #1541
 904 0064 1960     		str	r1, [r3]
 185:Core/Src/bms.c ****         canTx2[0] = 0x40;
 905              		.loc 1 185 0
 906 0066 0821     		movs	r1, #8
 907 0068 1961     		str	r1, [r3, #16]
 186:Core/Src/bms.c ****         canTx2[1] = 0x00;
 908              		.loc 1 186 0
 909 006a 0A4B     		ldr	r3, .L85+8
 910 006c 4021     		movs	r1, #64
 911 006e 1970     		strb	r1, [r3]
 187:Core/Src/bms.c ****         canTx2[2] = 0x20;
 912              		.loc 1 187 0
 913 0070 5A70     		strb	r2, [r3, #1]
 188:Core/Src/bms.c ****         canTx2[3] = 9;
 914              		.loc 1 188 0
 915 0072 2021     		movs	r1, #32
 916 0074 9970     		strb	r1, [r3, #2]
ARM GAS  /tmp/ccBIZiye.s 			page 27


 189:Core/Src/bms.c ****         canTx2[4] = val & 0xFF;
 917              		.loc 1 189 0
 918 0076 0920     		movs	r0, #9
 919 0078 D870     		strb	r0, [r3, #3]
 190:Core/Src/bms.c ****         canTx2[5] = (val >> 8) & 0xFF;
 920              		.loc 1 190 0
 921 007a 1971     		strb	r1, [r3, #4]
 191:Core/Src/bms.c ****         canTx2[6] = (val >> 16) & 0xFF;
 922              		.loc 1 191 0
 923 007c 5A71     		strb	r2, [r3, #5]
 192:Core/Src/bms.c ****         canTx2[7] = (val >> 24) & 0xFF;
 924              		.loc 1 192 0
 925 007e 9A71     		strb	r2, [r3, #6]
 193:Core/Src/bms.c ****         c2tx(&txMsg, canTx);
 926              		.loc 1 193 0
 927 0080 DA71     		strb	r2, [r3, #7]
 194:Core/Src/bms.c ****     }
 928              		.loc 1 194 0
 929 0082 0549     		ldr	r1, .L85+12
 930 0084 0548     		ldr	r0, .L85+16
 931 0086 FFF7FEFF 		bl	c2tx
 932              	.LVL64:
 933 008a C2E7     		b	.L80
 934              	.L86:
 935              		.align	2
 936              	.L85:
 937 008c 00000000 		.word	BMS
 938 0090 00000000 		.word	txMsg2
 939 0094 00000000 		.word	canTx2
 940 0098 00000000 		.word	canTx
 941 009c 00000000 		.word	txMsg
 942 00a0 00000000 		.word	charged
 943              	.LBE16:
 944              		.cfi_endproc
 945              	.LFE133:
 947              		.section	.text.tx500kData,"ax",%progbits
 948              		.align	1
 949              		.global	tx500kData
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 953              		.fpu fpv4-sp-d16
 955              	tx500kData:
 956              	.LFB134:
 216:Core/Src/bms.c **** 
 957              		.loc 1 216 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
 961 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 962              	.LCFI8:
 963              		.cfi_def_cfa_offset 24
 964              		.cfi_offset 4, -24
 965              		.cfi_offset 5, -20
 966              		.cfi_offset 6, -16
 967              		.cfi_offset 7, -12
 968              		.cfi_offset 8, -8
ARM GAS  /tmp/ccBIZiye.s 			page 28


 969              		.cfi_offset 14, -4
 218:Core/Src/bms.c ****     txMsg2.DLC = 8;
 970              		.loc 1 218 0
 971 0004 204D     		ldr	r5, .L89
 972 0006 4FF49C73 		mov	r3, #312
 973 000a 2B60     		str	r3, [r5]
 219:Core/Src/bms.c ****     canTx2[0] = BMS[0].packVolt & 0xFF;
 974              		.loc 1 219 0
 975 000c 4FF00808 		mov	r8, #8
 976 0010 C5F81080 		str	r8, [r5, #16]
 220:Core/Src/bms.c ****     canTx2[1] = (BMS[0].packVolt >> 8) & 0xFF;
 977              		.loc 1 220 0
 978 0014 1D4E     		ldr	r6, .L89+4
 979 0016 B6F8E030 		ldrh	r3, [r6, #224]
 980 001a 1D4C     		ldr	r4, .L89+8
 981 001c 2370     		strb	r3, [r4]
 221:Core/Src/bms.c ****     canTx2[2] = BMS[0].avgCellTemp & 0XFF;
 982              		.loc 1 221 0
 983 001e 23FA08F3 		lsr	r3, r3, r8
 984 0022 6370     		strb	r3, [r4, #1]
 222:Core/Src/bms.c ****     canTx2[3] = (BMS[0].avgCellTemp >> 8) & 0XFF;
 985              		.loc 1 222 0
 986 0024 B6F8EE30 		ldrh	r3, [r6, #238]
 987 0028 A370     		strb	r3, [r4, #2]
 223:Core/Src/bms.c ****     canTx2[4] = BMS[0].cellDelta & 0XFF;
 988              		.loc 1 223 0
 989 002a 23FA08F3 		lsr	r3, r3, r8
 990 002e E370     		strb	r3, [r4, #3]
 224:Core/Src/bms.c ****     canTx2[5] = (BMS[0].cellDelta >> 8) & 0XFF;
 991              		.loc 1 224 0
 992 0030 B6F8E830 		ldrh	r3, [r6, #232]
 993 0034 2371     		strb	r3, [r4, #4]
 225:Core/Src/bms.c ****     canTx2[6] = 0;
 994              		.loc 1 225 0
 995 0036 23FA08F3 		lsr	r3, r3, r8
 996 003a 6371     		strb	r3, [r4, #5]
 226:Core/Src/bms.c ****     canTx2[7] = 0;
 997              		.loc 1 226 0
 998 003c 0027     		movs	r7, #0
 999 003e A771     		strb	r7, [r4, #6]
 227:Core/Src/bms.c ****     c2tx(&txMsg2, canTx2);
 1000              		.loc 1 227 0
 1001 0040 E771     		strb	r7, [r4, #7]
 228:Core/Src/bms.c **** 
 1002              		.loc 1 228 0
 1003 0042 2146     		mov	r1, r4
 1004 0044 2846     		mov	r0, r5
 1005 0046 FFF7FEFF 		bl	c2tx
 1006              	.LVL65:
 230:Core/Src/bms.c ****     txMsg2.DLC = 8;
 1007              		.loc 1 230 0
 1008 004a 40F23913 		movw	r3, #313
 1009 004e 2B60     		str	r3, [r5]
 231:Core/Src/bms.c ****     canTx2[0] = BMS[1].packVolt & 0xFF;
 1010              		.loc 1 231 0
 1011 0050 C5F81080 		str	r8, [r5, #16]
 232:Core/Src/bms.c ****     canTx2[1] = (BMS[1].packVolt >> 8) & 0xFF;
ARM GAS  /tmp/ccBIZiye.s 			page 29


 1012              		.loc 1 232 0
 1013 0054 B6F8D631 		ldrh	r3, [r6, #470]
 1014 0058 2370     		strb	r3, [r4]
 233:Core/Src/bms.c ****     canTx2[2] = BMS[1].avgCellTemp & 0XFF;
 1015              		.loc 1 233 0
 1016 005a 23FA08F3 		lsr	r3, r3, r8
 1017 005e 6370     		strb	r3, [r4, #1]
 234:Core/Src/bms.c ****     canTx2[3] = (BMS[1].avgCellTemp >> 8) & 0XFF;
 1018              		.loc 1 234 0
 1019 0060 B6F8E431 		ldrh	r3, [r6, #484]
 1020 0064 A370     		strb	r3, [r4, #2]
 235:Core/Src/bms.c ****     canTx2[4] = BMS[1].cellDelta & 0XFF;
 1021              		.loc 1 235 0
 1022 0066 23FA08F3 		lsr	r3, r3, r8
 1023 006a E370     		strb	r3, [r4, #3]
 236:Core/Src/bms.c ****     canTx2[5] = (BMS[1].cellDelta >> 8) & 0XFF;
 1024              		.loc 1 236 0
 1025 006c B6F8DE31 		ldrh	r3, [r6, #478]
 1026 0070 2371     		strb	r3, [r4, #4]
 237:Core/Src/bms.c ****     canTx2[6] = 0;
 1027              		.loc 1 237 0
 1028 0072 23FA08F3 		lsr	r3, r3, r8
 1029 0076 6371     		strb	r3, [r4, #5]
 238:Core/Src/bms.c ****     canTx2[7] = 0;
 1030              		.loc 1 238 0
 1031 0078 A771     		strb	r7, [r4, #6]
 239:Core/Src/bms.c ****     c2tx(&txMsg2, canTx2);
 1032              		.loc 1 239 0
 1033 007a E771     		strb	r7, [r4, #7]
 240:Core/Src/bms.c **** }
 1034              		.loc 1 240 0
 1035 007c 2146     		mov	r1, r4
 1036 007e 2846     		mov	r0, r5
 1037 0080 FFF7FEFF 		bl	c2tx
 1038              	.LVL66:
 1039 0084 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1040              	.L90:
 1041              		.align	2
 1042              	.L89:
 1043 0088 00000000 		.word	txMsg2
 1044 008c 00000000 		.word	BMS
 1045 0090 00000000 		.word	canTx2
 1046              		.cfi_endproc
 1047              	.LFE134:
 1049              		.section	.text.sendCommand,"ax",%progbits
 1050              		.align	1
 1051              		.global	sendCommand
 1052              		.syntax unified
 1053              		.thumb
 1054              		.thumb_func
 1055              		.fpu fpv4-sp-d16
 1057              	sendCommand:
 1058              	.LFB136:
 265:Core/Src/bms.c ****     txMsg.StdId = 0x200;
 1059              		.loc 1 265 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccBIZiye.s 			page 30


 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1064              	.LCFI9:
 1065              		.cfi_def_cfa_offset 24
 1066              		.cfi_offset 3, -24
 1067              		.cfi_offset 4, -20
 1068              		.cfi_offset 5, -16
 1069              		.cfi_offset 6, -12
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 266:Core/Src/bms.c ****     txMsg.DLC = 3;
 1072              		.loc 1 266 0
 1073 0002 0C48     		ldr	r0, .L93
 1074 0004 4FF40077 		mov	r7, #512
 1075 0008 0760     		str	r7, [r0]
 267:Core/Src/bms.c ****     canTx[0] = 0x02;
 1076              		.loc 1 267 0
 1077 000a 0326     		movs	r6, #3
 1078 000c 0661     		str	r6, [r0, #16]
 268:Core/Src/bms.c ****     canTx[1] = 0x00;
 1079              		.loc 1 268 0
 1080 000e 0A49     		ldr	r1, .L93+4
 1081 0010 0225     		movs	r5, #2
 1082 0012 0D70     		strb	r5, [r1]
 269:Core/Src/bms.c ****     canTx[2] = 0x00;
 1083              		.loc 1 269 0
 1084 0014 0024     		movs	r4, #0
 1085 0016 4C70     		strb	r4, [r1, #1]
 270:Core/Src/bms.c ****     c1tx(&txMsg, canTx); //pack 1
 1086              		.loc 1 270 0
 1087 0018 8C70     		strb	r4, [r1, #2]
 271:Core/Src/bms.c ****     txMsg3.StdId = 0x200;
 1088              		.loc 1 271 0
 1089 001a FFF7FEFF 		bl	c1tx
 1090              	.LVL67:
 272:Core/Src/bms.c ****     txMsg3.DLC = 3;
 1091              		.loc 1 272 0
 1092 001e 0748     		ldr	r0, .L93+8
 1093 0020 0760     		str	r7, [r0]
 273:Core/Src/bms.c ****     canTx3[0] = 0x02;
 1094              		.loc 1 273 0
 1095 0022 0661     		str	r6, [r0, #16]
 274:Core/Src/bms.c ****     canTx3[1] = 0x00;
 1096              		.loc 1 274 0
 1097 0024 0649     		ldr	r1, .L93+12
 1098 0026 0D70     		strb	r5, [r1]
 275:Core/Src/bms.c ****     canTx3[2] = 0x00;
 1099              		.loc 1 275 0
 1100 0028 4C70     		strb	r4, [r1, #1]
 276:Core/Src/bms.c ****     c3tx(&txMsg3, canTx3); // pack 2
 1101              		.loc 1 276 0
 1102 002a 8C70     		strb	r4, [r1, #2]
 277:Core/Src/bms.c **** }
 1103              		.loc 1 277 0
 1104 002c FFF7FEFF 		bl	c3tx
 1105              	.LVL68:
 1106 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccBIZiye.s 			page 31


 1107              	.L94:
 1108 0032 00BF     		.align	2
 1109              	.L93:
 1110 0034 00000000 		.word	txMsg
 1111 0038 00000000 		.word	canTx
 1112 003c 00000000 		.word	txMsg3
 1113 0040 00000000 		.word	canTx3
 1114              		.cfi_endproc
 1115              	.LFE136:
 1117              		.section	.text.requestBICMdata,"ax",%progbits
 1118              		.align	1
 1119              		.global	requestBICMdata
 1120              		.syntax unified
 1121              		.thumb
 1122              		.thumb_func
 1123              		.fpu fpv4-sp-d16
 1125              	requestBICMdata:
 1126              	.LFB137:
 281:Core/Src/bms.c ****     sendCommand();
 1127              		.loc 1 281 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              	.LVL69:
 1132 0000 38B5     		push	{r3, r4, r5, lr}
 1133              	.LCFI10:
 1134              		.cfi_def_cfa_offset 16
 1135              		.cfi_offset 3, -16
 1136              		.cfi_offset 4, -12
 1137              		.cfi_offset 5, -8
 1138              		.cfi_offset 14, -4
 1139 0002 0446     		mov	r4, r0
 282:Core/Src/bms.c **** 
 1140              		.loc 1 282 0
 1141 0004 FFF7FEFF 		bl	sendCommand
 1142              	.LVL70:
 284:Core/Src/bms.c ****     {
 1143              		.loc 1 284 0
 1144 0008 94F8F530 		ldrb	r3, [r4, #245]	@ zero_extendqisi2
 1145 000c 1BBB     		cbnz	r3, .L96
 287:Core/Src/bms.c ****         txMsg.DLC = 8;
 1146              		.loc 1 287 0
 1147 000e 264B     		ldr	r3, .L107
 1148 0010 4FF44072 		mov	r2, #768
 1149 0014 1A60     		str	r2, [r3]
 288:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 1150              		.loc 1 288 0
 1151 0016 0822     		movs	r2, #8
 1152 0018 1A61     		str	r2, [r3, #16]
 1153              	.LVL71:
 1154              	.LBB17:
 289:Core/Src/bms.c ****         {
 1155              		.loc 1 289 0
 1156 001a 0023     		movs	r3, #0
 1157 001c 03E0     		b	.L97
 1158              	.LVL72:
 1159              	.L98:
ARM GAS  /tmp/ccBIZiye.s 			page 32


 291:Core/Src/bms.c ****         }
 1160              		.loc 1 291 0 discriminator 3
 1161 001e 0021     		movs	r1, #0
 1162 0020 224A     		ldr	r2, .L107+4
 1163 0022 D154     		strb	r1, [r2, r3]
 289:Core/Src/bms.c ****         {
 1164              		.loc 1 289 0 discriminator 3
 1165 0024 0133     		adds	r3, r3, #1
 1166              	.LVL73:
 1167              	.L97:
 289:Core/Src/bms.c ****         {
 1168              		.loc 1 289 0 is_stmt 0 discriminator 1
 1169 0026 072B     		cmp	r3, #7
 1170 0028 F9D9     		bls	.L98
 1171              	.LBE17:
 293:Core/Src/bms.c **** 
 1172              		.loc 1 293 0 is_stmt 1
 1173 002a 1F4D     		ldr	r5, .L107
 1174 002c 1F49     		ldr	r1, .L107+4
 1175 002e 2846     		mov	r0, r5
 1176 0030 FFF7FEFF 		bl	c1tx
 1177              	.LVL74:
 295:Core/Src/bms.c ****         txMsg.DLC = 5;
 1178              		.loc 1 295 0
 1179 0034 4FF44473 		mov	r3, #784
 1180 0038 2B60     		str	r3, [r5]
 296:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 1181              		.loc 1 296 0
 1182 003a 0523     		movs	r3, #5
 1183 003c 2B61     		str	r3, [r5, #16]
 1184              	.LVL75:
 1185              	.LBB18:
 297:Core/Src/bms.c ****         {
 1186              		.loc 1 297 0
 1187 003e 0023     		movs	r3, #0
 1188 0040 03E0     		b	.L99
 1189              	.LVL76:
 1190              	.L100:
 299:Core/Src/bms.c ****         }
 1191              		.loc 1 299 0 discriminator 3
 1192 0042 0021     		movs	r1, #0
 1193 0044 194A     		ldr	r2, .L107+4
 1194 0046 D154     		strb	r1, [r2, r3]
 297:Core/Src/bms.c ****         {
 1195              		.loc 1 297 0 discriminator 3
 1196 0048 0133     		adds	r3, r3, #1
 1197              	.LVL77:
 1198              	.L99:
 297:Core/Src/bms.c ****         {
 1199              		.loc 1 297 0 is_stmt 0 discriminator 1
 1200 004a 042B     		cmp	r3, #4
 1201 004c F9D9     		bls	.L100
 1202              	.LBE18:
 301:Core/Src/bms.c ****     }
 1203              		.loc 1 301 0 is_stmt 1
 1204 004e 1749     		ldr	r1, .L107+4
 1205 0050 1548     		ldr	r0, .L107
ARM GAS  /tmp/ccBIZiye.s 			page 33


 1206 0052 FFF7FEFF 		bl	c1tx
 1207              	.LVL78:
 1208              	.L96:
 304:Core/Src/bms.c ****     {
 1209              		.loc 1 304 0
 1210 0056 94F8F530 		ldrb	r3, [r4, #245]	@ zero_extendqisi2
 1211 005a 1BBB     		cbnz	r3, .L95
 306:Core/Src/bms.c ****         txMsg3.DLC = 8;
 1212              		.loc 1 306 0
 1213 005c 144B     		ldr	r3, .L107+8
 1214 005e 4FF44072 		mov	r2, #768
 1215 0062 1A60     		str	r2, [r3]
 307:Core/Src/bms.c ****         for (size_t i = 0; i < 8; i++)
 1216              		.loc 1 307 0
 1217 0064 0822     		movs	r2, #8
 1218 0066 1A61     		str	r2, [r3, #16]
 1219              	.LVL79:
 1220              	.LBB19:
 308:Core/Src/bms.c ****         {
 1221              		.loc 1 308 0
 1222 0068 0023     		movs	r3, #0
 1223 006a 03E0     		b	.L102
 1224              	.LVL80:
 1225              	.L103:
 310:Core/Src/bms.c ****         }
 1226              		.loc 1 310 0 discriminator 3
 1227 006c 0021     		movs	r1, #0
 1228 006e 114A     		ldr	r2, .L107+12
 1229 0070 D154     		strb	r1, [r2, r3]
 308:Core/Src/bms.c ****         {
 1230              		.loc 1 308 0 discriminator 3
 1231 0072 0133     		adds	r3, r3, #1
 1232              	.LVL81:
 1233              	.L102:
 308:Core/Src/bms.c ****         {
 1234              		.loc 1 308 0 is_stmt 0 discriminator 1
 1235 0074 072B     		cmp	r3, #7
 1236 0076 F9D9     		bls	.L103
 1237              	.LBE19:
 312:Core/Src/bms.c **** 
 1238              		.loc 1 312 0 is_stmt 1
 1239 0078 0D4C     		ldr	r4, .L107+8
 1240              	.LVL82:
 1241 007a 0E49     		ldr	r1, .L107+12
 1242 007c 2046     		mov	r0, r4
 1243 007e FFF7FEFF 		bl	c3tx
 1244              	.LVL83:
 314:Core/Src/bms.c ****         txMsg3.DLC = 5;
 1245              		.loc 1 314 0
 1246 0082 4FF44473 		mov	r3, #784
 1247 0086 2360     		str	r3, [r4]
 315:Core/Src/bms.c ****         for (size_t i = 0; i < 5; i++)
 1248              		.loc 1 315 0
 1249 0088 0523     		movs	r3, #5
 1250 008a 2361     		str	r3, [r4, #16]
 1251              	.LVL84:
 1252              	.LBB20:
ARM GAS  /tmp/ccBIZiye.s 			page 34


 316:Core/Src/bms.c ****         {
 1253              		.loc 1 316 0
 1254 008c 0023     		movs	r3, #0
 1255 008e 03E0     		b	.L104
 1256              	.LVL85:
 1257              	.L105:
 318:Core/Src/bms.c ****         }
 1258              		.loc 1 318 0 discriminator 3
 1259 0090 0021     		movs	r1, #0
 1260 0092 084A     		ldr	r2, .L107+12
 1261 0094 D154     		strb	r1, [r2, r3]
 316:Core/Src/bms.c ****         {
 1262              		.loc 1 316 0 discriminator 3
 1263 0096 0133     		adds	r3, r3, #1
 1264              	.LVL86:
 1265              	.L104:
 316:Core/Src/bms.c ****         {
 1266              		.loc 1 316 0 is_stmt 0 discriminator 1
 1267 0098 042B     		cmp	r3, #4
 1268 009a F9D9     		bls	.L105
 1269              	.LBE20:
 320:Core/Src/bms.c ****     }
 1270              		.loc 1 320 0 is_stmt 1
 1271 009c 0549     		ldr	r1, .L107+12
 1272 009e 0448     		ldr	r0, .L107+8
 1273 00a0 FFF7FEFF 		bl	c3tx
 1274              	.LVL87:
 1275              	.L95:
 1276 00a4 38BD     		pop	{r3, r4, r5, pc}
 1277              	.L108:
 1278 00a6 00BF     		.align	2
 1279              	.L107:
 1280 00a8 00000000 		.word	txMsg
 1281 00ac 00000000 		.word	canTx
 1282 00b0 00000000 		.word	txMsg3
 1283 00b4 00000000 		.word	canTx3
 1284              		.cfi_endproc
 1285              	.LFE137:
 1287              		.section	.text.refreshData,"ax",%progbits
 1288              		.align	1
 1289              		.global	refreshData
 1290              		.syntax unified
 1291              		.thumb
 1292              		.thumb_func
 1293              		.fpu fpv4-sp-d16
 1295              	refreshData:
 1296              	.LFB135:
 244:Core/Src/bms.c **** 
 1297              		.loc 1 244 0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 0, uses_anonymous_args = 0
 1301 0000 38B5     		push	{r3, r4, r5, lr}
 1302              	.LCFI11:
 1303              		.cfi_def_cfa_offset 16
 1304              		.cfi_offset 3, -16
 1305              		.cfi_offset 4, -12
ARM GAS  /tmp/ccBIZiye.s 			page 35


 1306              		.cfi_offset 5, -8
 1307              		.cfi_offset 14, -4
 1308              	.LVL88:
 1309              	.LBB21:
 246:Core/Src/bms.c ****     {
 1310              		.loc 1 246 0
 1311 0002 0025     		movs	r5, #0
 1312 0004 29E0     		b	.L110
 1313              	.LVL89:
 1314              	.L111:
 248:Core/Src/bms.c ****         getPackVolt(&BMS[i]);
 1315              		.loc 1 248 0 discriminator 3
 1316 0006 164B     		ldr	r3, .L113
 1317 0008 F624     		movs	r4, #246
 1318 000a 04FB0534 		mla	r4, r4, r5, r3
 1319 000e 2046     		mov	r0, r4
 1320 0010 FFF7FEFF 		bl	requestBICMdata
 1321              	.LVL90:
 249:Core/Src/bms.c ****         getAvgCellVolt(&BMS[i]);
 1322              		.loc 1 249 0 discriminator 3
 1323 0014 2046     		mov	r0, r4
 1324 0016 FFF7FEFF 		bl	getPackVolt
 1325              	.LVL91:
 250:Core/Src/bms.c ****         getLowCellVolt(&BMS[i]);
 1326              		.loc 1 250 0 discriminator 3
 1327 001a 2046     		mov	r0, r4
 1328 001c FFF7FEFF 		bl	getAvgCellVolt
 1329              	.LVL92:
 251:Core/Src/bms.c ****         getHighCellVolt(&BMS[i]);
 1330              		.loc 1 251 0 discriminator 3
 1331 0020 2046     		mov	r0, r4
 1332 0022 FFF7FEFF 		bl	getLowCellVolt
 1333              	.LVL93:
 252:Core/Src/bms.c ****         getCellDelta(&BMS[i]);
 1334              		.loc 1 252 0 discriminator 3
 1335 0026 2046     		mov	r0, r4
 1336 0028 FFF7FEFF 		bl	getHighCellVolt
 1337              	.LVL94:
 253:Core/Src/bms.c ****         getLowCellTemp(&BMS[i]);
 1338              		.loc 1 253 0 discriminator 3
 1339 002c 2046     		mov	r0, r4
 1340 002e FFF7FEFF 		bl	getCellDelta
 1341              	.LVL95:
 254:Core/Src/bms.c ****         getHighCellTemp(&BMS[i]);
 1342              		.loc 1 254 0 discriminator 3
 1343 0032 2046     		mov	r0, r4
 1344 0034 FFF7FEFF 		bl	getLowCellTemp
 1345              	.LVL96:
 255:Core/Src/bms.c ****         getAvgCellTemp(&BMS[i]);
 1346              		.loc 1 255 0 discriminator 3
 1347 0038 2046     		mov	r0, r4
 1348 003a FFF7FEFF 		bl	getHighCellTemp
 1349              	.LVL97:
 256:Core/Src/bms.c ****         getTempDelta(&BMS[i]);
 1350              		.loc 1 256 0 discriminator 3
 1351 003e 2046     		mov	r0, r4
 1352 0040 FFF7FEFF 		bl	getAvgCellTemp
ARM GAS  /tmp/ccBIZiye.s 			page 36


 1353              	.LVL98:
 257:Core/Src/bms.c ****         getCellCount(&BMS[i], i);
 1354              		.loc 1 257 0 discriminator 3
 1355 0044 2046     		mov	r0, r4
 1356 0046 FFF7FEFF 		bl	getTempDelta
 1357              	.LVL99:
 258:Core/Src/bms.c ****         getSOC(&BMS[i]);
 1358              		.loc 1 258 0 discriminator 3
 1359 004a 2946     		mov	r1, r5
 1360 004c 2046     		mov	r0, r4
 1361 004e FFF7FEFF 		bl	getCellCount
 1362              	.LVL100:
 259:Core/Src/bms.c ****     }
 1363              		.loc 1 259 0 discriminator 3
 1364 0052 2046     		mov	r0, r4
 1365 0054 FFF7FEFF 		bl	getSOC
 1366              	.LVL101:
 246:Core/Src/bms.c ****     {
 1367              		.loc 1 246 0 discriminator 3
 1368 0058 0135     		adds	r5, r5, #1
 1369              	.LVL102:
 1370              	.L110:
 246:Core/Src/bms.c ****     {
 1371              		.loc 1 246 0 is_stmt 0 discriminator 1
 1372 005a 012D     		cmp	r5, #1
 1373 005c D3D9     		bls	.L111
 1374              	.LBE21:
 261:Core/Src/bms.c **** 
 1375              		.loc 1 261 0 is_stmt 1
 1376 005e 38BD     		pop	{r3, r4, r5, pc}
 1377              	.LVL103:
 1378              	.L114:
 1379              		.align	2
 1380              	.L113:
 1381 0060 00000000 		.word	BMS
 1382              		.cfi_endproc
 1383              	.LFE135:
 1385              		.section	.text.balanceCommand,"ax",%progbits
 1386              		.align	1
 1387              		.global	balanceCommand
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1391              		.fpu fpv4-sp-d16
 1393              	balanceCommand:
 1394              	.LFB138:
 326:Core/Src/bms.c ****     if (pack == 0)
 1395              		.loc 1 326 0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 0
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              	.LVL104:
 1400 0000 70B5     		push	{r4, r5, r6, lr}
 1401              	.LCFI12:
 1402              		.cfi_def_cfa_offset 16
 1403              		.cfi_offset 4, -16
 1404              		.cfi_offset 5, -12
ARM GAS  /tmp/ccBIZiye.s 			page 37


 1405              		.cfi_offset 6, -8
 1406              		.cfi_offset 14, -4
 1407 0002 0446     		mov	r4, r0
 327:Core/Src/bms.c ****     {
 1408              		.loc 1 327 0
 1409 0004 0D46     		mov	r5, r1
 1410 0006 0029     		cmp	r1, #0
 1411 0008 3BD1     		bne	.L116
 329:Core/Src/bms.c ****         txMsg.DLC = 8;
 1412              		.loc 1 329 0
 1413 000a 3E4B     		ldr	r3, .L136
 1414 000c 4FF44072 		mov	r2, #768
 1415 0010 1A60     		str	r2, [r3]
 330:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 1416              		.loc 1 330 0
 1417 0012 0822     		movs	r2, #8
 1418 0014 1A61     		str	r2, [r3, #16]
 1419              	.LVL105:
 1420              	.LBB22:
 331:Core/Src/bms.c ****         {
 1421              		.loc 1 331 0
 1422 0016 0023     		movs	r3, #0
 1423 0018 00E0     		b	.L117
 1424              	.LVL106:
 1425              	.L118:
 331:Core/Src/bms.c ****         {
 1426              		.loc 1 331 0 is_stmt 0 discriminator 2
 1427 001a 0133     		adds	r3, r3, #1
 1428              	.LVL107:
 1429              	.L117:
 331:Core/Src/bms.c ****         {
 1430              		.loc 1 331 0 discriminator 1
 1431 001c 3D2B     		cmp	r3, #61
 1432 001e 0ED8     		bhi	.L131
 333:Core/Src/bms.c ****             {
 1433              		.loc 1 333 0 is_stmt 1
 1434 0020 B4F8E610 		ldrh	r1, [r4, #230]
 1435 0024 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1436 0028 9142     		cmp	r1, r2
 1437 002a F6D2     		bcs	.L118
 335:Core/Src/bms.c ****             }
 1438              		.loc 1 335 0
 1439 002c 364A     		ldr	r2, .L136+4
 1440 002e D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1441 0030 364A     		ldr	r2, .L136+8
 1442 0032 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1443 0034 3648     		ldr	r0, .L136+12
 1444 0036 465C     		ldrb	r6, [r0, r1]	@ zero_extendqisi2
 1445 0038 3243     		orrs	r2, r2, r6
 1446 003a 4254     		strb	r2, [r0, r1]
 1447 003c EDE7     		b	.L118
 1448              	.L131:
 1449              	.LBE22:
 338:Core/Src/bms.c **** 
 1450              		.loc 1 338 0
 1451 003e 314E     		ldr	r6, .L136
 1452 0040 3349     		ldr	r1, .L136+12
ARM GAS  /tmp/ccBIZiye.s 			page 38


 1453 0042 3046     		mov	r0, r6
 1454 0044 FFF7FEFF 		bl	c1tx
 1455              	.LVL108:
 340:Core/Src/bms.c ****         txMsg.DLC = 5;
 1456              		.loc 1 340 0
 1457 0048 4FF44473 		mov	r3, #784
 1458 004c 3360     		str	r3, [r6]
 341:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 1459              		.loc 1 341 0
 1460 004e 0523     		movs	r3, #5
 1461 0050 3361     		str	r3, [r6, #16]
 1462              	.LVL109:
 1463              	.LBB23:
 342:Core/Src/bms.c ****         {
 1464              		.loc 1 342 0
 1465 0052 3E23     		movs	r3, #62
 1466 0054 00E0     		b	.L120
 1467              	.LVL110:
 1468              	.L121:
 342:Core/Src/bms.c ****         {
 1469              		.loc 1 342 0 is_stmt 0 discriminator 2
 1470 0056 0133     		adds	r3, r3, #1
 1471              	.LVL111:
 1472              	.L120:
 342:Core/Src/bms.c ****         {
 1473              		.loc 1 342 0 discriminator 1
 1474 0058 5F2B     		cmp	r3, #95
 1475 005a 0ED8     		bhi	.L132
 344:Core/Src/bms.c ****             {
 1476              		.loc 1 344 0 is_stmt 1
 1477 005c B4F8E610 		ldrh	r1, [r4, #230]
 1478 0060 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1479 0064 9142     		cmp	r1, r2
 1480 0066 F6D2     		bcs	.L121
 346:Core/Src/bms.c ****             }
 1481              		.loc 1 346 0
 1482 0068 274A     		ldr	r2, .L136+4
 1483 006a D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1484 006c 274A     		ldr	r2, .L136+8
 1485 006e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1486 0070 2748     		ldr	r0, .L136+12
 1487 0072 465C     		ldrb	r6, [r0, r1]	@ zero_extendqisi2
 1488 0074 3243     		orrs	r2, r2, r6
 1489 0076 4254     		strb	r2, [r0, r1]
 1490 0078 EDE7     		b	.L121
 1491              	.L132:
 1492              	.LBE23:
 349:Core/Src/bms.c ****     }
 1493              		.loc 1 349 0
 1494 007a 2549     		ldr	r1, .L136+12
 1495 007c 2148     		ldr	r0, .L136
 1496 007e FFF7FEFF 		bl	c1tx
 1497              	.LVL112:
 1498              	.L116:
 352:Core/Src/bms.c ****     {
 1499              		.loc 1 352 0
 1500 0082 012D     		cmp	r5, #1
ARM GAS  /tmp/ccBIZiye.s 			page 39


 1501 0084 00D0     		beq	.L133
 1502              	.LVL113:
 1503              	.L115:
 1504 0086 70BD     		pop	{r4, r5, r6, pc}
 1505              	.LVL114:
 1506              	.L133:
 354:Core/Src/bms.c ****         txMsg3.DLC = 8;
 1507              		.loc 1 354 0
 1508 0088 224B     		ldr	r3, .L136+16
 1509 008a 4FF44072 		mov	r2, #768
 1510 008e 1A60     		str	r2, [r3]
 355:Core/Src/bms.c ****         for (size_t i = 0; i < 62; i++)
 1511              		.loc 1 355 0
 1512 0090 0822     		movs	r2, #8
 1513 0092 1A61     		str	r2, [r3, #16]
 1514              	.LVL115:
 1515              	.LBB24:
 356:Core/Src/bms.c ****         {
 1516              		.loc 1 356 0
 1517 0094 0023     		movs	r3, #0
 1518 0096 00E0     		b	.L124
 1519              	.LVL116:
 1520              	.L125:
 356:Core/Src/bms.c ****         {
 1521              		.loc 1 356 0 is_stmt 0 discriminator 2
 1522 0098 0133     		adds	r3, r3, #1
 1523              	.LVL117:
 1524              	.L124:
 356:Core/Src/bms.c ****         {
 1525              		.loc 1 356 0 discriminator 1
 1526 009a 3D2B     		cmp	r3, #61
 1527 009c 0ED8     		bhi	.L134
 358:Core/Src/bms.c ****             {
 1528              		.loc 1 358 0 is_stmt 1
 1529 009e B4F8E610 		ldrh	r1, [r4, #230]
 1530 00a2 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1531 00a6 9142     		cmp	r1, r2
 1532 00a8 F6D2     		bcs	.L125
 360:Core/Src/bms.c ****             }
 1533              		.loc 1 360 0
 1534 00aa 174A     		ldr	r2, .L136+4
 1535 00ac D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1536 00ae 174A     		ldr	r2, .L136+8
 1537 00b0 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1538 00b2 1948     		ldr	r0, .L136+20
 1539 00b4 455C     		ldrb	r5, [r0, r1]	@ zero_extendqisi2
 1540 00b6 2A43     		orrs	r2, r2, r5
 1541 00b8 4254     		strb	r2, [r0, r1]
 1542 00ba EDE7     		b	.L125
 1543              	.L134:
 1544              	.LBE24:
 363:Core/Src/bms.c **** 
 1545              		.loc 1 363 0
 1546 00bc 154D     		ldr	r5, .L136+16
 1547 00be 1649     		ldr	r1, .L136+20
 1548 00c0 2846     		mov	r0, r5
 1549 00c2 FFF7FEFF 		bl	c3tx
ARM GAS  /tmp/ccBIZiye.s 			page 40


 1550              	.LVL118:
 365:Core/Src/bms.c ****         txMsg3.DLC = 5;
 1551              		.loc 1 365 0
 1552 00c6 4FF44473 		mov	r3, #784
 1553 00ca 2B60     		str	r3, [r5]
 366:Core/Src/bms.c ****         for (size_t i = 62; i < 96; i++)
 1554              		.loc 1 366 0
 1555 00cc 0523     		movs	r3, #5
 1556 00ce 2B61     		str	r3, [r5, #16]
 1557              	.LVL119:
 1558              	.LBB25:
 367:Core/Src/bms.c ****         {
 1559              		.loc 1 367 0
 1560 00d0 3E23     		movs	r3, #62
 1561 00d2 00E0     		b	.L127
 1562              	.LVL120:
 1563              	.L128:
 367:Core/Src/bms.c ****         {
 1564              		.loc 1 367 0 is_stmt 0 discriminator 2
 1565 00d4 0133     		adds	r3, r3, #1
 1566              	.LVL121:
 1567              	.L127:
 367:Core/Src/bms.c ****         {
 1568              		.loc 1 367 0 discriminator 1
 1569 00d6 5F2B     		cmp	r3, #95
 1570 00d8 0ED8     		bhi	.L135
 369:Core/Src/bms.c ****             {
 1571              		.loc 1 369 0 is_stmt 1
 1572 00da B4F8E610 		ldrh	r1, [r4, #230]
 1573 00de 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 1574 00e2 9142     		cmp	r1, r2
 1575 00e4 F6D2     		bcs	.L128
 371:Core/Src/bms.c ****             }
 1576              		.loc 1 371 0
 1577 00e6 084A     		ldr	r2, .L136+4
 1578 00e8 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 1579 00ea 084A     		ldr	r2, .L136+8
 1580 00ec D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1581 00ee 0A48     		ldr	r0, .L136+20
 1582 00f0 455C     		ldrb	r5, [r0, r1]	@ zero_extendqisi2
 1583 00f2 2A43     		orrs	r2, r2, r5
 1584 00f4 4254     		strb	r2, [r0, r1]
 1585 00f6 EDE7     		b	.L128
 1586              	.L135:
 1587              	.LBE25:
 374:Core/Src/bms.c ****     }
 1588              		.loc 1 374 0
 1589 00f8 0749     		ldr	r1, .L136+20
 1590 00fa 0648     		ldr	r0, .L136+16
 1591 00fc FFF7FEFF 		bl	c3tx
 1592              	.LVL122:
 376:Core/Src/bms.c **** 
 1593              		.loc 1 376 0
 1594 0100 C1E7     		b	.L115
 1595              	.L137:
 1596 0102 00BF     		.align	2
 1597              	.L136:
ARM GAS  /tmp/ccBIZiye.s 			page 41


 1598 0104 00000000 		.word	txMsg
 1599 0108 00000000 		.word	.LANCHOR3
 1600 010c 00000000 		.word	.LANCHOR4
 1601 0110 00000000 		.word	canTx
 1602 0114 00000000 		.word	txMsg3
 1603 0118 00000000 		.word	canTx3
 1604              		.cfi_endproc
 1605              	.LFE138:
 1607              		.section	.text.vehicleComms,"ax",%progbits
 1608              		.align	1
 1609              		.global	vehicleComms
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv4-sp-d16
 1615              	vehicleComms:
 1616              	.LFB150:
 521:Core/Src/bms.c **** 
 522:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 523:Core/Src/bms.c **** void vehicleComms(CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 524:Core/Src/bms.c **** {
 1617              		.loc 1 524 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621              		@ link register save eliminated.
 1622              	.LVL123:
 525:Core/Src/bms.c ****     switch (rxMsg->StdId)
 1623              		.loc 1 525 0
 1624 0000 0268     		ldr	r2, [r0]
 1625 0002 40F21333 		movw	r3, #787
 1626 0006 9A42     		cmp	r2, r3
 1627 0008 02D1     		bne	.L138
 526:Core/Src/bms.c ****     {
 527:Core/Src/bms.c ****     case 0x313:
 528:Core/Src/bms.c ****         vechicleState = canRx[0];
 1628              		.loc 1 528 0
 1629 000a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1630 000c 014B     		ldr	r3, .L141
 1631 000e 1A70     		strb	r2, [r3]
 1632              	.L138:
 1633 0010 7047     		bx	lr
 1634              	.L142:
 1635 0012 00BF     		.align	2
 1636              	.L141:
 1637 0014 00000000 		.word	vechicleState
 1638              		.cfi_endproc
 1639              	.LFE150:
 1641              		.global	__aeabi_dmul
 1642              		.global	__aeabi_d2uiz
 1643              		.section	.text.decodeVolt,"ax",%progbits
 1644              		.align	1
 1645              		.global	decodeVolt
 1646              		.syntax unified
 1647              		.thumb
 1648              		.thumb_func
 1649              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccBIZiye.s 			page 42


 1651              	decodeVolt:
 1652              	.LFB151:
 529:Core/Src/bms.c ****         break;
 530:Core/Src/bms.c **** 
 531:Core/Src/bms.c ****     default:
 532:Core/Src/bms.c ****         break;
 533:Core/Src/bms.c ****     }
 534:Core/Src/bms.c **** }
 535:Core/Src/bms.c **** 
 536:Core/Src/bms.c **** ///////////////////////////////////////////////////////////////////////////////////////
 537:Core/Src/bms.c **** void decodeVolt(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx) // cell voltage in millivol
 538:Core/Src/bms.c **** {
 1653              		.loc 1 538 0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 0
 1656              		@ frame_needed = 0, uses_anonymous_args = 0
 1657              	.LVL124:
 1658 0000 38B5     		push	{r3, r4, r5, lr}
 1659              	.LCFI13:
 1660              		.cfi_def_cfa_offset 16
 1661              		.cfi_offset 3, -16
 1662              		.cfi_offset 4, -12
 1663              		.cfi_offset 5, -8
 1664              		.cfi_offset 14, -4
 1665 0002 0546     		mov	r5, r0
 1666 0004 1446     		mov	r4, r2
 539:Core/Src/bms.c ****     switch (rxMsg->StdId)
 1667              		.loc 1 539 0
 1668 0006 0B68     		ldr	r3, [r1]
 1669 0008 A3F58C63 		sub	r3, r3, #1120
 1670 000c 1E2B     		cmp	r3, #30
 1671 000e 00F22186 		bhi	.L143
 1672 0012 DFE813F0 		tbh	[pc, r3, lsl #1]
 1673              	.LVL125:
 1674              	.L146:
 1675 0016 1F00     		.2byte	(.L145-.L146)/2
 1676 0018 7B00     		.2byte	(.L147-.L146)/2
 1677 001a F500     		.2byte	(.L148-.L146)/2
 1678 001c 6F01     		.2byte	(.L149-.L146)/2
 1679 001e EC01     		.2byte	(.L150-.L146)/2
 1680 0020 6C02     		.2byte	(.L151-.L146)/2
 1681 0022 EE02     		.2byte	(.L152-.L146)/2
 1682 0024 1F06     		.2byte	(.L143-.L146)/2
 1683 0026 7203     		.2byte	(.L153-.L146)/2
 1684 0028 F403     		.2byte	(.L154-.L146)/2
 1685 002a 7604     		.2byte	(.L155-.L146)/2
 1686 002c 1F06     		.2byte	(.L143-.L146)/2
 1687 002e FA04     		.2byte	(.L156-.L146)/2
 1688 0030 5C05     		.2byte	(.L157-.L146)/2
 1689 0032 BE05     		.2byte	(.L158-.L146)/2
 1690 0034 1F06     		.2byte	(.L143-.L146)/2
 1691 0036 4D00     		.2byte	(.L159-.L146)/2
 1692 0038 B800     		.2byte	(.L160-.L146)/2
 1693 003a 3201     		.2byte	(.L161-.L146)/2
 1694 003c AF01     		.2byte	(.L162-.L146)/2
 1695 003e 2B02     		.2byte	(.L163-.L146)/2
 1696 0040 AD02     		.2byte	(.L164-.L146)/2
ARM GAS  /tmp/ccBIZiye.s 			page 43


 1697 0042 3103     		.2byte	(.L165-.L146)/2
 1698 0044 1F06     		.2byte	(.L143-.L146)/2
 1699 0046 B303     		.2byte	(.L166-.L146)/2
 1700 0048 3504     		.2byte	(.L167-.L146)/2
 1701 004a B904     		.2byte	(.L168-.L146)/2
 1702 004c 1F06     		.2byte	(.L143-.L146)/2
 1703 004e 2B05     		.2byte	(.L169-.L146)/2
 1704 0050 8D05     		.2byte	(.L170-.L146)/2
 1705 0052 EF05     		.2byte	(.L171-.L146)/2
 1706              		.p2align 1
 1707              	.L145:
 540:Core/Src/bms.c ****     {
 541:Core/Src/bms.c ****     case 0x460: // Begin module 1
 542:Core/Src/bms.c ****         bms->cellVolt[0] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1708              		.loc 1 542 0
 1709 0054 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1710 0056 1B02     		lsls	r3, r3, #8
 1711 0058 03F47063 		and	r3, r3, #3840
 1712 005c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1713              	.LVL126:
 1714 005e 1844     		add	r0, r0, r3
 1715 0060 FFF7FEFF 		bl	__aeabi_i2d
 1716              	.LVL127:
 1717 0064 0022     		movs	r2, #0
 1718 0066 C24B     		ldr	r3, .L173
 1719 0068 FFF7FEFF 		bl	__aeabi_dmul
 1720              	.LVL128:
 1721 006c FFF7FEFF 		bl	__aeabi_d2uiz
 1722              	.LVL129:
 1723 0070 2880     		strh	r0, [r5]	@ movhi
 543:Core/Src/bms.c ****         bms->cellVolt[1] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1724              		.loc 1 543 0
 1725 0072 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1726 0074 1B02     		lsls	r3, r3, #8
 1727 0076 03F47063 		and	r3, r3, #3840
 1728 007a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1729 007c 1844     		add	r0, r0, r3
 1730 007e FFF7FEFF 		bl	__aeabi_i2d
 1731              	.LVL130:
 1732 0082 0022     		movs	r2, #0
 1733 0084 BA4B     		ldr	r3, .L173
 1734 0086 FFF7FEFF 		bl	__aeabi_dmul
 1735              	.LVL131:
 1736 008a FFF7FEFF 		bl	__aeabi_d2uiz
 1737              	.LVL132:
 1738 008e 6880     		strh	r0, [r5, #2]	@ movhi
 544:Core/Src/bms.c ****         bms->cellVolt[2] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1739              		.loc 1 544 0
 1740 0090 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1741 0092 1B02     		lsls	r3, r3, #8
 1742 0094 03F47063 		and	r3, r3, #3840
 1743 0098 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1744 009a 1844     		add	r0, r0, r3
 1745 009c FFF7FEFF 		bl	__aeabi_i2d
 1746              	.LVL133:
 1747 00a0 0022     		movs	r2, #0
 1748 00a2 B34B     		ldr	r3, .L173
ARM GAS  /tmp/ccBIZiye.s 			page 44


 1749 00a4 FFF7FEFF 		bl	__aeabi_dmul
 1750              	.LVL134:
 1751 00a8 FFF7FEFF 		bl	__aeabi_d2uiz
 1752              	.LVL135:
 1753 00ac A880     		strh	r0, [r5, #4]	@ movhi
 545:Core/Src/bms.c ****         break;
 1754              		.loc 1 545 0
 1755 00ae 38BD     		pop	{r3, r4, r5, pc}
 1756              	.LVL136:
 1757              	.L159:
 546:Core/Src/bms.c **** 
 547:Core/Src/bms.c ****     case 0x470:
 548:Core/Src/bms.c ****         bms->cellVolt[3] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1758              		.loc 1 548 0
 1759 00b0 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1760 00b2 1B02     		lsls	r3, r3, #8
 1761 00b4 03F47063 		and	r3, r3, #3840
 1762 00b8 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1763              	.LVL137:
 1764 00ba 1844     		add	r0, r0, r3
 1765 00bc FFF7FEFF 		bl	__aeabi_i2d
 1766              	.LVL138:
 1767 00c0 0022     		movs	r2, #0
 1768 00c2 AB4B     		ldr	r3, .L173
 1769 00c4 FFF7FEFF 		bl	__aeabi_dmul
 1770              	.LVL139:
 1771 00c8 FFF7FEFF 		bl	__aeabi_d2uiz
 1772              	.LVL140:
 1773 00cc E880     		strh	r0, [r5, #6]	@ movhi
 549:Core/Src/bms.c ****         bms->cellVolt[4] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1774              		.loc 1 549 0
 1775 00ce A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1776 00d0 1B02     		lsls	r3, r3, #8
 1777 00d2 03F47063 		and	r3, r3, #3840
 1778 00d6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1779 00d8 1844     		add	r0, r0, r3
 1780 00da FFF7FEFF 		bl	__aeabi_i2d
 1781              	.LVL141:
 1782 00de 0022     		movs	r2, #0
 1783 00e0 A34B     		ldr	r3, .L173
 1784 00e2 FFF7FEFF 		bl	__aeabi_dmul
 1785              	.LVL142:
 1786 00e6 FFF7FEFF 		bl	__aeabi_d2uiz
 1787              	.LVL143:
 1788 00ea 2881     		strh	r0, [r5, #8]	@ movhi
 550:Core/Src/bms.c ****         bms->cellVolt[5] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1789              		.loc 1 550 0
 1790 00ec 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1791 00ee 1B02     		lsls	r3, r3, #8
 1792 00f0 03F47063 		and	r3, r3, #3840
 1793 00f4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1794 00f6 1844     		add	r0, r0, r3
 1795 00f8 FFF7FEFF 		bl	__aeabi_i2d
 1796              	.LVL144:
 1797 00fc 0022     		movs	r2, #0
 1798 00fe 9C4B     		ldr	r3, .L173
 1799 0100 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccBIZiye.s 			page 45


 1800              	.LVL145:
 1801 0104 FFF7FEFF 		bl	__aeabi_d2uiz
 1802              	.LVL146:
 1803 0108 6881     		strh	r0, [r5, #10]	@ movhi
 551:Core/Src/bms.c ****         break;
 1804              		.loc 1 551 0
 1805 010a 38BD     		pop	{r3, r4, r5, pc}
 1806              	.LVL147:
 1807              	.L147:
 552:Core/Src/bms.c **** 
 553:Core/Src/bms.c ****     case 0x461:
 554:Core/Src/bms.c ****         bms->cellVolt[6] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1808              		.loc 1 554 0
 1809 010c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1810 010e 1B02     		lsls	r3, r3, #8
 1811 0110 03F47063 		and	r3, r3, #3840
 1812 0114 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1813              	.LVL148:
 1814 0116 1844     		add	r0, r0, r3
 1815 0118 FFF7FEFF 		bl	__aeabi_i2d
 1816              	.LVL149:
 1817 011c 0022     		movs	r2, #0
 1818 011e 944B     		ldr	r3, .L173
 1819 0120 FFF7FEFF 		bl	__aeabi_dmul
 1820              	.LVL150:
 1821 0124 FFF7FEFF 		bl	__aeabi_d2uiz
 1822              	.LVL151:
 1823 0128 A881     		strh	r0, [r5, #12]	@ movhi
 555:Core/Src/bms.c ****         bms->cellVolt[7] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1824              		.loc 1 555 0
 1825 012a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1826 012c 1B02     		lsls	r3, r3, #8
 1827 012e 03F47063 		and	r3, r3, #3840
 1828 0132 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1829 0134 1844     		add	r0, r0, r3
 1830 0136 FFF7FEFF 		bl	__aeabi_i2d
 1831              	.LVL152:
 1832 013a 0022     		movs	r2, #0
 1833 013c 8C4B     		ldr	r3, .L173
 1834 013e FFF7FEFF 		bl	__aeabi_dmul
 1835              	.LVL153:
 1836 0142 FFF7FEFF 		bl	__aeabi_d2uiz
 1837              	.LVL154:
 1838 0146 E881     		strh	r0, [r5, #14]	@ movhi
 556:Core/Src/bms.c ****         bms->cellVolt[8] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1839              		.loc 1 556 0
 1840 0148 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1841 014a 1B02     		lsls	r3, r3, #8
 1842 014c 03F47063 		and	r3, r3, #3840
 1843 0150 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1844 0152 1844     		add	r0, r0, r3
 1845 0154 FFF7FEFF 		bl	__aeabi_i2d
 1846              	.LVL155:
 1847 0158 0022     		movs	r2, #0
 1848 015a 854B     		ldr	r3, .L173
 1849 015c FFF7FEFF 		bl	__aeabi_dmul
 1850              	.LVL156:
ARM GAS  /tmp/ccBIZiye.s 			page 46


 1851 0160 FFF7FEFF 		bl	__aeabi_d2uiz
 1852              	.LVL157:
 1853 0164 2882     		strh	r0, [r5, #16]	@ movhi
 557:Core/Src/bms.c ****         bms->cellVolt[9] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1854              		.loc 1 557 0
 1855 0166 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1856 0168 1B02     		lsls	r3, r3, #8
 1857 016a 03F47063 		and	r3, r3, #3840
 1858 016e E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1859 0170 1844     		add	r0, r0, r3
 1860 0172 FFF7FEFF 		bl	__aeabi_i2d
 1861              	.LVL158:
 1862 0176 0022     		movs	r2, #0
 1863 0178 7D4B     		ldr	r3, .L173
 1864 017a FFF7FEFF 		bl	__aeabi_dmul
 1865              	.LVL159:
 1866 017e FFF7FEFF 		bl	__aeabi_d2uiz
 1867              	.LVL160:
 1868 0182 6882     		strh	r0, [r5, #18]	@ movhi
 558:Core/Src/bms.c ****         break;
 1869              		.loc 1 558 0
 1870 0184 38BD     		pop	{r3, r4, r5, pc}
 1871              	.LVL161:
 1872              	.L160:
 559:Core/Src/bms.c **** 
 560:Core/Src/bms.c ****     case 0x471:
 561:Core/Src/bms.c ****         bms->cellVolt[10] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1873              		.loc 1 561 0
 1874 0186 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1875 0188 1B02     		lsls	r3, r3, #8
 1876 018a 03F47063 		and	r3, r3, #3840
 1877 018e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1878              	.LVL162:
 1879 0190 1844     		add	r0, r0, r3
 1880 0192 FFF7FEFF 		bl	__aeabi_i2d
 1881              	.LVL163:
 1882 0196 0022     		movs	r2, #0
 1883 0198 754B     		ldr	r3, .L173
 1884 019a FFF7FEFF 		bl	__aeabi_dmul
 1885              	.LVL164:
 1886 019e FFF7FEFF 		bl	__aeabi_d2uiz
 1887              	.LVL165:
 1888 01a2 A882     		strh	r0, [r5, #20]	@ movhi
 562:Core/Src/bms.c ****         bms->cellVolt[11] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1889              		.loc 1 562 0
 1890 01a4 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1891 01a6 1B02     		lsls	r3, r3, #8
 1892 01a8 03F47063 		and	r3, r3, #3840
 1893 01ac E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1894 01ae 1844     		add	r0, r0, r3
 1895 01b0 FFF7FEFF 		bl	__aeabi_i2d
 1896              	.LVL166:
 1897 01b4 0022     		movs	r2, #0
 1898 01b6 6E4B     		ldr	r3, .L173
 1899 01b8 FFF7FEFF 		bl	__aeabi_dmul
 1900              	.LVL167:
 1901 01bc FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/ccBIZiye.s 			page 47


 1902              	.LVL168:
 1903 01c0 E882     		strh	r0, [r5, #22]	@ movhi
 563:Core/Src/bms.c ****         bms->cellVolt[12] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1904              		.loc 1 563 0
 1905 01c2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1906 01c4 1B02     		lsls	r3, r3, #8
 1907 01c6 03F47063 		and	r3, r3, #3840
 1908 01ca 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1909 01cc 1844     		add	r0, r0, r3
 1910 01ce FFF7FEFF 		bl	__aeabi_i2d
 1911              	.LVL169:
 1912 01d2 0022     		movs	r2, #0
 1913 01d4 664B     		ldr	r3, .L173
 1914 01d6 FFF7FEFF 		bl	__aeabi_dmul
 1915              	.LVL170:
 1916 01da FFF7FEFF 		bl	__aeabi_d2uiz
 1917              	.LVL171:
 1918 01de 2883     		strh	r0, [r5, #24]	@ movhi
 564:Core/Src/bms.c ****         bms->cellVolt[13] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1919              		.loc 1 564 0
 1920 01e0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1921 01e2 1B02     		lsls	r3, r3, #8
 1922 01e4 03F47063 		and	r3, r3, #3840
 1923 01e8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1924 01ea 1844     		add	r0, r0, r3
 1925 01ec FFF7FEFF 		bl	__aeabi_i2d
 1926              	.LVL172:
 1927 01f0 0022     		movs	r2, #0
 1928 01f2 5F4B     		ldr	r3, .L173
 1929 01f4 FFF7FEFF 		bl	__aeabi_dmul
 1930              	.LVL173:
 1931 01f8 FFF7FEFF 		bl	__aeabi_d2uiz
 1932              	.LVL174:
 1933 01fc 6883     		strh	r0, [r5, #26]	@ movhi
 565:Core/Src/bms.c ****         break;
 1934              		.loc 1 565 0
 1935 01fe 38BD     		pop	{r3, r4, r5, pc}
 1936              	.LVL175:
 1937              	.L148:
 566:Core/Src/bms.c **** 
 567:Core/Src/bms.c ****     case 0x462:
 568:Core/Src/bms.c ****         bms->cellVolt[14] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 1938              		.loc 1 568 0
 1939 0200 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1940 0202 1B02     		lsls	r3, r3, #8
 1941 0204 03F47063 		and	r3, r3, #3840
 1942 0208 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1943              	.LVL176:
 1944 020a 1844     		add	r0, r0, r3
 1945 020c FFF7FEFF 		bl	__aeabi_i2d
 1946              	.LVL177:
 1947 0210 0022     		movs	r2, #0
 1948 0212 574B     		ldr	r3, .L173
 1949 0214 FFF7FEFF 		bl	__aeabi_dmul
 1950              	.LVL178:
 1951 0218 FFF7FEFF 		bl	__aeabi_d2uiz
 1952              	.LVL179:
ARM GAS  /tmp/ccBIZiye.s 			page 48


 1953 021c A883     		strh	r0, [r5, #28]	@ movhi
 569:Core/Src/bms.c ****         bms->cellVolt[15] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 1954              		.loc 1 569 0
 1955 021e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 1956 0220 1B02     		lsls	r3, r3, #8
 1957 0222 03F47063 		and	r3, r3, #3840
 1958 0226 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 1959 0228 1844     		add	r0, r0, r3
 1960 022a FFF7FEFF 		bl	__aeabi_i2d
 1961              	.LVL180:
 1962 022e 0022     		movs	r2, #0
 1963 0230 4F4B     		ldr	r3, .L173
 1964 0232 FFF7FEFF 		bl	__aeabi_dmul
 1965              	.LVL181:
 1966 0236 FFF7FEFF 		bl	__aeabi_d2uiz
 1967              	.LVL182:
 1968 023a E883     		strh	r0, [r5, #30]	@ movhi
 570:Core/Src/bms.c ****         bms->cellVolt[16] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 1969              		.loc 1 570 0
 1970 023c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 1971 023e 1B02     		lsls	r3, r3, #8
 1972 0240 03F47063 		and	r3, r3, #3840
 1973 0244 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 1974 0246 1844     		add	r0, r0, r3
 1975 0248 FFF7FEFF 		bl	__aeabi_i2d
 1976              	.LVL183:
 1977 024c 0022     		movs	r2, #0
 1978 024e 484B     		ldr	r3, .L173
 1979 0250 FFF7FEFF 		bl	__aeabi_dmul
 1980              	.LVL184:
 1981 0254 FFF7FEFF 		bl	__aeabi_d2uiz
 1982              	.LVL185:
 1983 0258 2884     		strh	r0, [r5, #32]	@ movhi
 571:Core/Src/bms.c ****         bms->cellVolt[17] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 1984              		.loc 1 571 0
 1985 025a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1986 025c 1B02     		lsls	r3, r3, #8
 1987 025e 03F47063 		and	r3, r3, #3840
 1988 0262 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 1989 0264 1844     		add	r0, r0, r3
 1990 0266 FFF7FEFF 		bl	__aeabi_i2d
 1991              	.LVL186:
 1992 026a 0022     		movs	r2, #0
 1993 026c 404B     		ldr	r3, .L173
 1994 026e FFF7FEFF 		bl	__aeabi_dmul
 1995              	.LVL187:
 1996 0272 FFF7FEFF 		bl	__aeabi_d2uiz
 1997              	.LVL188:
 1998 0276 6884     		strh	r0, [r5, #34]	@ movhi
 572:Core/Src/bms.c ****         break;
 1999              		.loc 1 572 0
 2000 0278 38BD     		pop	{r3, r4, r5, pc}
 2001              	.LVL189:
 2002              	.L161:
 573:Core/Src/bms.c **** 
 574:Core/Src/bms.c ****     case 0x472:
 575:Core/Src/bms.c ****         bms->cellVolt[18] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
ARM GAS  /tmp/ccBIZiye.s 			page 49


 2003              		.loc 1 575 0
 2004 027a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2005 027c 1B02     		lsls	r3, r3, #8
 2006 027e 03F47063 		and	r3, r3, #3840
 2007 0282 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2008              	.LVL190:
 2009 0284 1844     		add	r0, r0, r3
 2010 0286 FFF7FEFF 		bl	__aeabi_i2d
 2011              	.LVL191:
 2012 028a 0022     		movs	r2, #0
 2013 028c 384B     		ldr	r3, .L173
 2014 028e FFF7FEFF 		bl	__aeabi_dmul
 2015              	.LVL192:
 2016 0292 FFF7FEFF 		bl	__aeabi_d2uiz
 2017              	.LVL193:
 2018 0296 A884     		strh	r0, [r5, #36]	@ movhi
 576:Core/Src/bms.c ****         bms->cellVolt[19] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2019              		.loc 1 576 0
 2020 0298 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2021 029a 1B02     		lsls	r3, r3, #8
 2022 029c 03F47063 		and	r3, r3, #3840
 2023 02a0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2024 02a2 1844     		add	r0, r0, r3
 2025 02a4 FFF7FEFF 		bl	__aeabi_i2d
 2026              	.LVL194:
 2027 02a8 0022     		movs	r2, #0
 2028 02aa 314B     		ldr	r3, .L173
 2029 02ac FFF7FEFF 		bl	__aeabi_dmul
 2030              	.LVL195:
 2031 02b0 FFF7FEFF 		bl	__aeabi_d2uiz
 2032              	.LVL196:
 2033 02b4 E884     		strh	r0, [r5, #38]	@ movhi
 577:Core/Src/bms.c ****         bms->cellVolt[20] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2034              		.loc 1 577 0
 2035 02b6 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2036 02b8 1B02     		lsls	r3, r3, #8
 2037 02ba 03F47063 		and	r3, r3, #3840
 2038 02be 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2039 02c0 1844     		add	r0, r0, r3
 2040 02c2 FFF7FEFF 		bl	__aeabi_i2d
 2041              	.LVL197:
 2042 02c6 0022     		movs	r2, #0
 2043 02c8 294B     		ldr	r3, .L173
 2044 02ca FFF7FEFF 		bl	__aeabi_dmul
 2045              	.LVL198:
 2046 02ce FFF7FEFF 		bl	__aeabi_d2uiz
 2047              	.LVL199:
 2048 02d2 2885     		strh	r0, [r5, #40]	@ movhi
 578:Core/Src/bms.c ****         bms->cellVolt[21] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2049              		.loc 1 578 0
 2050 02d4 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2051 02d6 1B02     		lsls	r3, r3, #8
 2052 02d8 03F47063 		and	r3, r3, #3840
 2053 02dc E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2054 02de 1844     		add	r0, r0, r3
 2055 02e0 FFF7FEFF 		bl	__aeabi_i2d
 2056              	.LVL200:
ARM GAS  /tmp/ccBIZiye.s 			page 50


 2057 02e4 0022     		movs	r2, #0
 2058 02e6 224B     		ldr	r3, .L173
 2059 02e8 FFF7FEFF 		bl	__aeabi_dmul
 2060              	.LVL201:
 2061 02ec FFF7FEFF 		bl	__aeabi_d2uiz
 2062              	.LVL202:
 2063 02f0 6885     		strh	r0, [r5, #42]	@ movhi
 579:Core/Src/bms.c ****         break;
 2064              		.loc 1 579 0
 2065 02f2 38BD     		pop	{r3, r4, r5, pc}
 2066              	.LVL203:
 2067              	.L149:
 580:Core/Src/bms.c ****     case 0x463:
 581:Core/Src/bms.c ****         bms->cellVolt[22] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2068              		.loc 1 581 0
 2069 02f4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2070 02f6 1B02     		lsls	r3, r3, #8
 2071 02f8 03F47063 		and	r3, r3, #3840
 2072 02fc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2073              	.LVL204:
 2074 02fe 1844     		add	r0, r0, r3
 2075 0300 FFF7FEFF 		bl	__aeabi_i2d
 2076              	.LVL205:
 2077 0304 0022     		movs	r2, #0
 2078 0306 1A4B     		ldr	r3, .L173
 2079 0308 FFF7FEFF 		bl	__aeabi_dmul
 2080              	.LVL206:
 2081 030c FFF7FEFF 		bl	__aeabi_d2uiz
 2082              	.LVL207:
 2083 0310 A885     		strh	r0, [r5, #44]	@ movhi
 582:Core/Src/bms.c ****         bms->cellVolt[23] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2084              		.loc 1 582 0
 2085 0312 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2086 0314 1B02     		lsls	r3, r3, #8
 2087 0316 03F47063 		and	r3, r3, #3840
 2088 031a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2089 031c 1844     		add	r0, r0, r3
 2090 031e FFF7FEFF 		bl	__aeabi_i2d
 2091              	.LVL208:
 2092 0322 0022     		movs	r2, #0
 2093 0324 124B     		ldr	r3, .L173
 2094 0326 FFF7FEFF 		bl	__aeabi_dmul
 2095              	.LVL209:
 2096 032a FFF7FEFF 		bl	__aeabi_d2uiz
 2097              	.LVL210:
 2098 032e E885     		strh	r0, [r5, #46]	@ movhi
 583:Core/Src/bms.c ****         bms->cellVolt[24] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2099              		.loc 1 583 0
 2100 0330 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2101 0332 1B02     		lsls	r3, r3, #8
 2102 0334 03F47063 		and	r3, r3, #3840
 2103 0338 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2104 033a 1844     		add	r0, r0, r3
 2105 033c FFF7FEFF 		bl	__aeabi_i2d
 2106              	.LVL211:
 2107 0340 0022     		movs	r2, #0
 2108 0342 0B4B     		ldr	r3, .L173
ARM GAS  /tmp/ccBIZiye.s 			page 51


 2109 0344 FFF7FEFF 		bl	__aeabi_dmul
 2110              	.LVL212:
 2111 0348 FFF7FEFF 		bl	__aeabi_d2uiz
 2112              	.LVL213:
 2113 034c 2886     		strh	r0, [r5, #48]	@ movhi
 584:Core/Src/bms.c ****         bms->cellVolt[25] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2114              		.loc 1 584 0
 2115 034e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2116 0350 1B02     		lsls	r3, r3, #8
 2117 0352 03F47063 		and	r3, r3, #3840
 2118 0356 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2119 0358 1844     		add	r0, r0, r3
 2120 035a FFF7FEFF 		bl	__aeabi_i2d
 2121              	.LVL214:
 2122 035e 0022     		movs	r2, #0
 2123 0360 034B     		ldr	r3, .L173
 2124 0362 FFF7FEFF 		bl	__aeabi_dmul
 2125              	.LVL215:
 2126 0366 FFF7FEFF 		bl	__aeabi_d2uiz
 2127              	.LVL216:
 2128 036a 6886     		strh	r0, [r5, #50]	@ movhi
 585:Core/Src/bms.c ****         break;
 2129              		.loc 1 585 0
 2130 036c 38BD     		pop	{r3, r4, r5, pc}
 2131              	.LVL217:
 2132              	.L174:
 2133 036e 00BF     		.align	2
 2134              	.L173:
 2135 0370 0000F43F 		.word	1072955392
 2136              	.LVL218:
 2137              	.L162:
 586:Core/Src/bms.c **** 
 587:Core/Src/bms.c ****     case 0x473:
 588:Core/Src/bms.c ****         bms->cellVolt[26] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2138              		.loc 1 588 0
 2139 0374 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2140 0376 1B02     		lsls	r3, r3, #8
 2141 0378 03F47063 		and	r3, r3, #3840
 2142 037c 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2143              	.LVL219:
 2144 037e 1844     		add	r0, r0, r3
 2145 0380 FFF7FEFF 		bl	__aeabi_i2d
 2146              	.LVL220:
 2147 0384 0022     		movs	r2, #0
 2148 0386 BB4B     		ldr	r3, .L175
 2149 0388 FFF7FEFF 		bl	__aeabi_dmul
 2150              	.LVL221:
 2151 038c FFF7FEFF 		bl	__aeabi_d2uiz
 2152              	.LVL222:
 2153 0390 A886     		strh	r0, [r5, #52]	@ movhi
 589:Core/Src/bms.c ****         bms->cellVolt[27] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2154              		.loc 1 589 0
 2155 0392 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2156 0394 1B02     		lsls	r3, r3, #8
 2157 0396 03F47063 		and	r3, r3, #3840
 2158 039a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2159 039c 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccBIZiye.s 			page 52


 2160 039e FFF7FEFF 		bl	__aeabi_i2d
 2161              	.LVL223:
 2162 03a2 0022     		movs	r2, #0
 2163 03a4 B34B     		ldr	r3, .L175
 2164 03a6 FFF7FEFF 		bl	__aeabi_dmul
 2165              	.LVL224:
 2166 03aa FFF7FEFF 		bl	__aeabi_d2uiz
 2167              	.LVL225:
 2168 03ae E886     		strh	r0, [r5, #54]	@ movhi
 590:Core/Src/bms.c ****         bms->cellVolt[28] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2169              		.loc 1 590 0
 2170 03b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2171 03b2 1B02     		lsls	r3, r3, #8
 2172 03b4 03F47063 		and	r3, r3, #3840
 2173 03b8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2174 03ba 1844     		add	r0, r0, r3
 2175 03bc FFF7FEFF 		bl	__aeabi_i2d
 2176              	.LVL226:
 2177 03c0 0022     		movs	r2, #0
 2178 03c2 AC4B     		ldr	r3, .L175
 2179 03c4 FFF7FEFF 		bl	__aeabi_dmul
 2180              	.LVL227:
 2181 03c8 FFF7FEFF 		bl	__aeabi_d2uiz
 2182              	.LVL228:
 2183 03cc 2887     		strh	r0, [r5, #56]	@ movhi
 591:Core/Src/bms.c ****         bms->cellVolt[29] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2184              		.loc 1 591 0
 2185 03ce A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2186 03d0 1B02     		lsls	r3, r3, #8
 2187 03d2 03F47063 		and	r3, r3, #3840
 2188 03d6 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2189 03d8 1844     		add	r0, r0, r3
 2190 03da FFF7FEFF 		bl	__aeabi_i2d
 2191              	.LVL229:
 2192 03de 0022     		movs	r2, #0
 2193 03e0 A44B     		ldr	r3, .L175
 2194 03e2 FFF7FEFF 		bl	__aeabi_dmul
 2195              	.LVL230:
 2196 03e6 FFF7FEFF 		bl	__aeabi_d2uiz
 2197              	.LVL231:
 2198 03ea 6887     		strh	r0, [r5, #58]	@ movhi
 592:Core/Src/bms.c ****         break;
 2199              		.loc 1 592 0
 2200 03ec 38BD     		pop	{r3, r4, r5, pc}
 2201              	.LVL232:
 2202              	.L150:
 593:Core/Src/bms.c **** 
 594:Core/Src/bms.c ****     case 0x464:
 595:Core/Src/bms.c ****         bms->cellVolt[30] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); // Begin module 2
 2203              		.loc 1 595 0
 2204 03ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2205 03f0 1B02     		lsls	r3, r3, #8
 2206 03f2 03F47063 		and	r3, r3, #3840
 2207 03f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2208              	.LVL233:
 2209 03f8 1844     		add	r0, r0, r3
 2210 03fa FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccBIZiye.s 			page 53


 2211              	.LVL234:
 2212 03fe 0022     		movs	r2, #0
 2213 0400 9C4B     		ldr	r3, .L175
 2214 0402 FFF7FEFF 		bl	__aeabi_dmul
 2215              	.LVL235:
 2216 0406 FFF7FEFF 		bl	__aeabi_d2uiz
 2217              	.LVL236:
 2218 040a A887     		strh	r0, [r5, #60]	@ movhi
 596:Core/Src/bms.c ****         bms->cellVolt[31] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2219              		.loc 1 596 0
 2220 040c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2221 040e 1B02     		lsls	r3, r3, #8
 2222 0410 03F47063 		and	r3, r3, #3840
 2223 0414 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2224 0416 1844     		add	r0, r0, r3
 2225 0418 FFF7FEFF 		bl	__aeabi_i2d
 2226              	.LVL237:
 2227 041c 0022     		movs	r2, #0
 2228 041e 954B     		ldr	r3, .L175
 2229 0420 FFF7FEFF 		bl	__aeabi_dmul
 2230              	.LVL238:
 2231 0424 FFF7FEFF 		bl	__aeabi_d2uiz
 2232              	.LVL239:
 2233 0428 E887     		strh	r0, [r5, #62]	@ movhi
 597:Core/Src/bms.c ****         bms->cellVolt[32] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2234              		.loc 1 597 0
 2235 042a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2236 042c 1B02     		lsls	r3, r3, #8
 2237 042e 03F47063 		and	r3, r3, #3840
 2238 0432 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2239 0434 1844     		add	r0, r0, r3
 2240 0436 FFF7FEFF 		bl	__aeabi_i2d
 2241              	.LVL240:
 2242 043a 0022     		movs	r2, #0
 2243 043c 8D4B     		ldr	r3, .L175
 2244 043e FFF7FEFF 		bl	__aeabi_dmul
 2245              	.LVL241:
 2246 0442 FFF7FEFF 		bl	__aeabi_d2uiz
 2247              	.LVL242:
 2248 0446 A5F84000 		strh	r0, [r5, #64]	@ movhi
 598:Core/Src/bms.c ****         bms->cellVolt[33] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2249              		.loc 1 598 0
 2250 044a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2251 044c 1B02     		lsls	r3, r3, #8
 2252 044e 03F47063 		and	r3, r3, #3840
 2253 0452 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2254 0454 1844     		add	r0, r0, r3
 2255 0456 FFF7FEFF 		bl	__aeabi_i2d
 2256              	.LVL243:
 2257 045a 0022     		movs	r2, #0
 2258 045c 854B     		ldr	r3, .L175
 2259 045e FFF7FEFF 		bl	__aeabi_dmul
 2260              	.LVL244:
 2261 0462 FFF7FEFF 		bl	__aeabi_d2uiz
 2262              	.LVL245:
 2263 0466 A5F84200 		strh	r0, [r5, #66]	@ movhi
 599:Core/Src/bms.c ****         break;
ARM GAS  /tmp/ccBIZiye.s 			page 54


 2264              		.loc 1 599 0
 2265 046a 38BD     		pop	{r3, r4, r5, pc}
 2266              	.LVL246:
 2267              	.L163:
 600:Core/Src/bms.c **** 
 601:Core/Src/bms.c ****     case 0x474:
 602:Core/Src/bms.c ****         bms->cellVolt[34] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2268              		.loc 1 602 0
 2269 046c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2270 046e 1B02     		lsls	r3, r3, #8
 2271 0470 03F47063 		and	r3, r3, #3840
 2272 0474 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2273              	.LVL247:
 2274 0476 1844     		add	r0, r0, r3
 2275 0478 FFF7FEFF 		bl	__aeabi_i2d
 2276              	.LVL248:
 2277 047c 0022     		movs	r2, #0
 2278 047e 7D4B     		ldr	r3, .L175
 2279 0480 FFF7FEFF 		bl	__aeabi_dmul
 2280              	.LVL249:
 2281 0484 FFF7FEFF 		bl	__aeabi_d2uiz
 2282              	.LVL250:
 2283 0488 A5F84400 		strh	r0, [r5, #68]	@ movhi
 603:Core/Src/bms.c ****         bms->cellVolt[35] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2284              		.loc 1 603 0
 2285 048c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2286 048e 1B02     		lsls	r3, r3, #8
 2287 0490 03F47063 		and	r3, r3, #3840
 2288 0494 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2289 0496 1844     		add	r0, r0, r3
 2290 0498 FFF7FEFF 		bl	__aeabi_i2d
 2291              	.LVL251:
 2292 049c 0022     		movs	r2, #0
 2293 049e 754B     		ldr	r3, .L175
 2294 04a0 FFF7FEFF 		bl	__aeabi_dmul
 2295              	.LVL252:
 2296 04a4 FFF7FEFF 		bl	__aeabi_d2uiz
 2297              	.LVL253:
 2298 04a8 A5F84600 		strh	r0, [r5, #70]	@ movhi
 604:Core/Src/bms.c ****         bms->cellVolt[36] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2299              		.loc 1 604 0
 2300 04ac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2301 04ae 1B02     		lsls	r3, r3, #8
 2302 04b0 03F47063 		and	r3, r3, #3840
 2303 04b4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2304 04b6 1844     		add	r0, r0, r3
 2305 04b8 FFF7FEFF 		bl	__aeabi_i2d
 2306              	.LVL254:
 2307 04bc 0022     		movs	r2, #0
 2308 04be 6D4B     		ldr	r3, .L175
 2309 04c0 FFF7FEFF 		bl	__aeabi_dmul
 2310              	.LVL255:
 2311 04c4 FFF7FEFF 		bl	__aeabi_d2uiz
 2312              	.LVL256:
 2313 04c8 A5F84800 		strh	r0, [r5, #72]	@ movhi
 605:Core/Src/bms.c ****         bms->cellVolt[37] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2314              		.loc 1 605 0
ARM GAS  /tmp/ccBIZiye.s 			page 55


 2315 04cc A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2316 04ce 1B02     		lsls	r3, r3, #8
 2317 04d0 03F47063 		and	r3, r3, #3840
 2318 04d4 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2319 04d6 1844     		add	r0, r0, r3
 2320 04d8 FFF7FEFF 		bl	__aeabi_i2d
 2321              	.LVL257:
 2322 04dc 0022     		movs	r2, #0
 2323 04de 654B     		ldr	r3, .L175
 2324 04e0 FFF7FEFF 		bl	__aeabi_dmul
 2325              	.LVL258:
 2326 04e4 FFF7FEFF 		bl	__aeabi_d2uiz
 2327              	.LVL259:
 2328 04e8 A5F84A00 		strh	r0, [r5, #74]	@ movhi
 606:Core/Src/bms.c ****         break;
 2329              		.loc 1 606 0
 2330 04ec 38BD     		pop	{r3, r4, r5, pc}
 2331              	.LVL260:
 2332              	.L151:
 607:Core/Src/bms.c **** 
 608:Core/Src/bms.c ****     case 0x465:
 609:Core/Src/bms.c ****         bms->cellVolt[38] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2333              		.loc 1 609 0
 2334 04ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2335 04f0 1B02     		lsls	r3, r3, #8
 2336 04f2 03F47063 		and	r3, r3, #3840
 2337 04f6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2338              	.LVL261:
 2339 04f8 1844     		add	r0, r0, r3
 2340 04fa FFF7FEFF 		bl	__aeabi_i2d
 2341              	.LVL262:
 2342 04fe 0022     		movs	r2, #0
 2343 0500 5C4B     		ldr	r3, .L175
 2344 0502 FFF7FEFF 		bl	__aeabi_dmul
 2345              	.LVL263:
 2346 0506 FFF7FEFF 		bl	__aeabi_d2uiz
 2347              	.LVL264:
 2348 050a A5F84C00 		strh	r0, [r5, #76]	@ movhi
 610:Core/Src/bms.c ****         bms->cellVolt[39] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2349              		.loc 1 610 0
 2350 050e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2351 0510 1B02     		lsls	r3, r3, #8
 2352 0512 03F47063 		and	r3, r3, #3840
 2353 0516 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2354 0518 1844     		add	r0, r0, r3
 2355 051a FFF7FEFF 		bl	__aeabi_i2d
 2356              	.LVL265:
 2357 051e 0022     		movs	r2, #0
 2358 0520 544B     		ldr	r3, .L175
 2359 0522 FFF7FEFF 		bl	__aeabi_dmul
 2360              	.LVL266:
 2361 0526 FFF7FEFF 		bl	__aeabi_d2uiz
 2362              	.LVL267:
 2363 052a A5F84E00 		strh	r0, [r5, #78]	@ movhi
 611:Core/Src/bms.c ****         bms->cellVolt[40] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2364              		.loc 1 611 0
 2365 052e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
ARM GAS  /tmp/ccBIZiye.s 			page 56


 2366 0530 1B02     		lsls	r3, r3, #8
 2367 0532 03F47063 		and	r3, r3, #3840
 2368 0536 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2369 0538 1844     		add	r0, r0, r3
 2370 053a FFF7FEFF 		bl	__aeabi_i2d
 2371              	.LVL268:
 2372 053e 0022     		movs	r2, #0
 2373 0540 4C4B     		ldr	r3, .L175
 2374 0542 FFF7FEFF 		bl	__aeabi_dmul
 2375              	.LVL269:
 2376 0546 FFF7FEFF 		bl	__aeabi_d2uiz
 2377              	.LVL270:
 2378 054a A5F85000 		strh	r0, [r5, #80]	@ movhi
 612:Core/Src/bms.c ****         bms->cellVolt[41] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2379              		.loc 1 612 0
 2380 054e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2381 0550 1B02     		lsls	r3, r3, #8
 2382 0552 03F47063 		and	r3, r3, #3840
 2383 0556 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2384 0558 1844     		add	r0, r0, r3
 2385 055a FFF7FEFF 		bl	__aeabi_i2d
 2386              	.LVL271:
 2387 055e 0022     		movs	r2, #0
 2388 0560 444B     		ldr	r3, .L175
 2389 0562 FFF7FEFF 		bl	__aeabi_dmul
 2390              	.LVL272:
 2391 0566 FFF7FEFF 		bl	__aeabi_d2uiz
 2392              	.LVL273:
 2393 056a A5F85200 		strh	r0, [r5, #82]	@ movhi
 613:Core/Src/bms.c ****         break;
 2394              		.loc 1 613 0
 2395 056e 38BD     		pop	{r3, r4, r5, pc}
 2396              	.LVL274:
 2397              	.L164:
 614:Core/Src/bms.c **** 
 615:Core/Src/bms.c ****     case 0x475:
 616:Core/Src/bms.c ****         bms->cellVolt[42] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2398              		.loc 1 616 0
 2399 0570 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2400 0572 1B02     		lsls	r3, r3, #8
 2401 0574 03F47063 		and	r3, r3, #3840
 2402 0578 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2403              	.LVL275:
 2404 057a 1844     		add	r0, r0, r3
 2405 057c FFF7FEFF 		bl	__aeabi_i2d
 2406              	.LVL276:
 2407 0580 0022     		movs	r2, #0
 2408 0582 3C4B     		ldr	r3, .L175
 2409 0584 FFF7FEFF 		bl	__aeabi_dmul
 2410              	.LVL277:
 2411 0588 FFF7FEFF 		bl	__aeabi_d2uiz
 2412              	.LVL278:
 2413 058c A5F85400 		strh	r0, [r5, #84]	@ movhi
 617:Core/Src/bms.c ****         bms->cellVolt[43] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2414              		.loc 1 617 0
 2415 0590 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2416 0592 1B02     		lsls	r3, r3, #8
ARM GAS  /tmp/ccBIZiye.s 			page 57


 2417 0594 03F47063 		and	r3, r3, #3840
 2418 0598 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2419 059a 1844     		add	r0, r0, r3
 2420 059c FFF7FEFF 		bl	__aeabi_i2d
 2421              	.LVL279:
 2422 05a0 0022     		movs	r2, #0
 2423 05a2 344B     		ldr	r3, .L175
 2424 05a4 FFF7FEFF 		bl	__aeabi_dmul
 2425              	.LVL280:
 2426 05a8 FFF7FEFF 		bl	__aeabi_d2uiz
 2427              	.LVL281:
 2428 05ac A5F85600 		strh	r0, [r5, #86]	@ movhi
 618:Core/Src/bms.c ****         bms->cellVolt[44] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2429              		.loc 1 618 0
 2430 05b0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2431 05b2 1B02     		lsls	r3, r3, #8
 2432 05b4 03F47063 		and	r3, r3, #3840
 2433 05b8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2434 05ba 1844     		add	r0, r0, r3
 2435 05bc FFF7FEFF 		bl	__aeabi_i2d
 2436              	.LVL282:
 2437 05c0 0022     		movs	r2, #0
 2438 05c2 2C4B     		ldr	r3, .L175
 2439 05c4 FFF7FEFF 		bl	__aeabi_dmul
 2440              	.LVL283:
 2441 05c8 FFF7FEFF 		bl	__aeabi_d2uiz
 2442              	.LVL284:
 2443 05cc A5F85800 		strh	r0, [r5, #88]	@ movhi
 619:Core/Src/bms.c ****         bms->cellVolt[45] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2444              		.loc 1 619 0
 2445 05d0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2446 05d2 1B02     		lsls	r3, r3, #8
 2447 05d4 03F47063 		and	r3, r3, #3840
 2448 05d8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2449 05da 1844     		add	r0, r0, r3
 2450 05dc FFF7FEFF 		bl	__aeabi_i2d
 2451              	.LVL285:
 2452 05e0 0022     		movs	r2, #0
 2453 05e2 244B     		ldr	r3, .L175
 2454 05e4 FFF7FEFF 		bl	__aeabi_dmul
 2455              	.LVL286:
 2456 05e8 FFF7FEFF 		bl	__aeabi_d2uiz
 2457              	.LVL287:
 2458 05ec A5F85A00 		strh	r0, [r5, #90]	@ movhi
 620:Core/Src/bms.c ****         break;
 2459              		.loc 1 620 0
 2460 05f0 38BD     		pop	{r3, r4, r5, pc}
 2461              	.LVL288:
 2462              	.L152:
 621:Core/Src/bms.c **** 
 622:Core/Src/bms.c ****     case 0x466:
 623:Core/Src/bms.c ****         bms->cellVolt[46] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2463              		.loc 1 623 0
 2464 05f2 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2465 05f4 1B02     		lsls	r3, r3, #8
 2466 05f6 03F47063 		and	r3, r3, #3840
 2467 05fa 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
ARM GAS  /tmp/ccBIZiye.s 			page 58


 2468              	.LVL289:
 2469 05fc 1844     		add	r0, r0, r3
 2470 05fe FFF7FEFF 		bl	__aeabi_i2d
 2471              	.LVL290:
 2472 0602 0022     		movs	r2, #0
 2473 0604 1B4B     		ldr	r3, .L175
 2474 0606 FFF7FEFF 		bl	__aeabi_dmul
 2475              	.LVL291:
 2476 060a FFF7FEFF 		bl	__aeabi_d2uiz
 2477              	.LVL292:
 2478 060e A5F85C00 		strh	r0, [r5, #92]	@ movhi
 624:Core/Src/bms.c ****         bms->cellVolt[47] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2479              		.loc 1 624 0
 2480 0612 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2481 0614 1B02     		lsls	r3, r3, #8
 2482 0616 03F47063 		and	r3, r3, #3840
 2483 061a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2484 061c 1844     		add	r0, r0, r3
 2485 061e FFF7FEFF 		bl	__aeabi_i2d
 2486              	.LVL293:
 2487 0622 0022     		movs	r2, #0
 2488 0624 134B     		ldr	r3, .L175
 2489 0626 FFF7FEFF 		bl	__aeabi_dmul
 2490              	.LVL294:
 2491 062a FFF7FEFF 		bl	__aeabi_d2uiz
 2492              	.LVL295:
 2493 062e A5F85E00 		strh	r0, [r5, #94]	@ movhi
 625:Core/Src/bms.c ****         bms->cellVolt[48] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2494              		.loc 1 625 0
 2495 0632 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2496 0634 1B02     		lsls	r3, r3, #8
 2497 0636 03F47063 		and	r3, r3, #3840
 2498 063a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2499 063c 1844     		add	r0, r0, r3
 2500 063e FFF7FEFF 		bl	__aeabi_i2d
 2501              	.LVL296:
 2502 0642 0022     		movs	r2, #0
 2503 0644 0B4B     		ldr	r3, .L175
 2504 0646 FFF7FEFF 		bl	__aeabi_dmul
 2505              	.LVL297:
 2506 064a FFF7FEFF 		bl	__aeabi_d2uiz
 2507              	.LVL298:
 2508 064e A5F86000 		strh	r0, [r5, #96]	@ movhi
 626:Core/Src/bms.c ****         bms->cellVolt[49] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2509              		.loc 1 626 0
 2510 0652 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2511 0654 1B02     		lsls	r3, r3, #8
 2512 0656 03F47063 		and	r3, r3, #3840
 2513 065a E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2514 065c 1844     		add	r0, r0, r3
 2515 065e FFF7FEFF 		bl	__aeabi_i2d
 2516              	.LVL299:
 2517 0662 0022     		movs	r2, #0
 2518 0664 034B     		ldr	r3, .L175
 2519 0666 FFF7FEFF 		bl	__aeabi_dmul
 2520              	.LVL300:
 2521 066a FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/ccBIZiye.s 			page 59


 2522              	.LVL301:
 2523 066e A5F86200 		strh	r0, [r5, #98]	@ movhi
 627:Core/Src/bms.c ****         break;
 2524              		.loc 1 627 0
 2525 0672 38BD     		pop	{r3, r4, r5, pc}
 2526              	.LVL302:
 2527              	.L176:
 2528              		.align	2
 2529              	.L175:
 2530 0674 0000F43F 		.word	1072955392
 2531              	.LVL303:
 2532              	.L165:
 628:Core/Src/bms.c **** 
 629:Core/Src/bms.c ****     case 0x476:
 630:Core/Src/bms.c ****         bms->cellVolt[50] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2533              		.loc 1 630 0
 2534 0678 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2535 067a 1B02     		lsls	r3, r3, #8
 2536 067c 03F47063 		and	r3, r3, #3840
 2537 0680 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2538              	.LVL304:
 2539 0682 1844     		add	r0, r0, r3
 2540 0684 FFF7FEFF 		bl	__aeabi_i2d
 2541              	.LVL305:
 2542 0688 0022     		movs	r2, #0
 2543 068a BE4B     		ldr	r3, .L177
 2544 068c FFF7FEFF 		bl	__aeabi_dmul
 2545              	.LVL306:
 2546 0690 FFF7FEFF 		bl	__aeabi_d2uiz
 2547              	.LVL307:
 2548 0694 A5F86400 		strh	r0, [r5, #100]	@ movhi
 631:Core/Src/bms.c ****         bms->cellVolt[51] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2549              		.loc 1 631 0
 2550 0698 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2551 069a 1B02     		lsls	r3, r3, #8
 2552 069c 03F47063 		and	r3, r3, #3840
 2553 06a0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2554 06a2 1844     		add	r0, r0, r3
 2555 06a4 FFF7FEFF 		bl	__aeabi_i2d
 2556              	.LVL308:
 2557 06a8 0022     		movs	r2, #0
 2558 06aa B64B     		ldr	r3, .L177
 2559 06ac FFF7FEFF 		bl	__aeabi_dmul
 2560              	.LVL309:
 2561 06b0 FFF7FEFF 		bl	__aeabi_d2uiz
 2562              	.LVL310:
 2563 06b4 A5F86600 		strh	r0, [r5, #102]	@ movhi
 632:Core/Src/bms.c ****         bms->cellVolt[52] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2564              		.loc 1 632 0
 2565 06b8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2566 06ba 1B02     		lsls	r3, r3, #8
 2567 06bc 03F47063 		and	r3, r3, #3840
 2568 06c0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2569 06c2 1844     		add	r0, r0, r3
 2570 06c4 FFF7FEFF 		bl	__aeabi_i2d
 2571              	.LVL311:
 2572 06c8 0022     		movs	r2, #0
ARM GAS  /tmp/ccBIZiye.s 			page 60


 2573 06ca AE4B     		ldr	r3, .L177
 2574 06cc FFF7FEFF 		bl	__aeabi_dmul
 2575              	.LVL312:
 2576 06d0 FFF7FEFF 		bl	__aeabi_d2uiz
 2577              	.LVL313:
 2578 06d4 A5F86800 		strh	r0, [r5, #104]	@ movhi
 633:Core/Src/bms.c ****         bms->cellVolt[53] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2579              		.loc 1 633 0
 2580 06d8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2581 06da 1B02     		lsls	r3, r3, #8
 2582 06dc 03F47063 		and	r3, r3, #3840
 2583 06e0 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2584 06e2 1844     		add	r0, r0, r3
 2585 06e4 FFF7FEFF 		bl	__aeabi_i2d
 2586              	.LVL314:
 2587 06e8 0022     		movs	r2, #0
 2588 06ea A64B     		ldr	r3, .L177
 2589 06ec FFF7FEFF 		bl	__aeabi_dmul
 2590              	.LVL315:
 2591 06f0 FFF7FEFF 		bl	__aeabi_d2uiz
 2592              	.LVL316:
 2593 06f4 A5F86A00 		strh	r0, [r5, #106]	@ movhi
 634:Core/Src/bms.c ****         break;
 2594              		.loc 1 634 0
 2595 06f8 38BD     		pop	{r3, r4, r5, pc}
 2596              	.LVL317:
 2597              	.L153:
 635:Core/Src/bms.c **** 
 636:Core/Src/bms.c ****     case 0x468:
 637:Core/Src/bms.c ****         bms->cellVolt[54] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 3
 2598              		.loc 1 637 0
 2599 06fa 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2600 06fc 1B02     		lsls	r3, r3, #8
 2601 06fe 03F47063 		and	r3, r3, #3840
 2602 0702 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2603              	.LVL318:
 2604 0704 1844     		add	r0, r0, r3
 2605 0706 FFF7FEFF 		bl	__aeabi_i2d
 2606              	.LVL319:
 2607 070a 0022     		movs	r2, #0
 2608 070c 9D4B     		ldr	r3, .L177
 2609 070e FFF7FEFF 		bl	__aeabi_dmul
 2610              	.LVL320:
 2611 0712 FFF7FEFF 		bl	__aeabi_d2uiz
 2612              	.LVL321:
 2613 0716 A5F86C00 		strh	r0, [r5, #108]	@ movhi
 638:Core/Src/bms.c ****         bms->cellVolt[55] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2614              		.loc 1 638 0
 2615 071a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2616 071c 1B02     		lsls	r3, r3, #8
 2617 071e 03F47063 		and	r3, r3, #3840
 2618 0722 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2619 0724 1844     		add	r0, r0, r3
 2620 0726 FFF7FEFF 		bl	__aeabi_i2d
 2621              	.LVL322:
 2622 072a 0022     		movs	r2, #0
 2623 072c 954B     		ldr	r3, .L177
ARM GAS  /tmp/ccBIZiye.s 			page 61


 2624 072e FFF7FEFF 		bl	__aeabi_dmul
 2625              	.LVL323:
 2626 0732 FFF7FEFF 		bl	__aeabi_d2uiz
 2627              	.LVL324:
 2628 0736 A5F86E00 		strh	r0, [r5, #110]	@ movhi
 639:Core/Src/bms.c ****         bms->cellVolt[56] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2629              		.loc 1 639 0
 2630 073a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2631 073c 1B02     		lsls	r3, r3, #8
 2632 073e 03F47063 		and	r3, r3, #3840
 2633 0742 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2634 0744 1844     		add	r0, r0, r3
 2635 0746 FFF7FEFF 		bl	__aeabi_i2d
 2636              	.LVL325:
 2637 074a 0022     		movs	r2, #0
 2638 074c 8D4B     		ldr	r3, .L177
 2639 074e FFF7FEFF 		bl	__aeabi_dmul
 2640              	.LVL326:
 2641 0752 FFF7FEFF 		bl	__aeabi_d2uiz
 2642              	.LVL327:
 2643 0756 A5F87000 		strh	r0, [r5, #112]	@ movhi
 640:Core/Src/bms.c ****         bms->cellVolt[57] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2644              		.loc 1 640 0
 2645 075a A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2646 075c 1B02     		lsls	r3, r3, #8
 2647 075e 03F47063 		and	r3, r3, #3840
 2648 0762 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2649 0764 1844     		add	r0, r0, r3
 2650 0766 FFF7FEFF 		bl	__aeabi_i2d
 2651              	.LVL328:
 2652 076a 0022     		movs	r2, #0
 2653 076c 854B     		ldr	r3, .L177
 2654 076e FFF7FEFF 		bl	__aeabi_dmul
 2655              	.LVL329:
 2656 0772 FFF7FEFF 		bl	__aeabi_d2uiz
 2657              	.LVL330:
 2658 0776 A5F87200 		strh	r0, [r5, #114]	@ movhi
 641:Core/Src/bms.c ****         break;
 2659              		.loc 1 641 0
 2660 077a 38BD     		pop	{r3, r4, r5, pc}
 2661              	.LVL331:
 2662              	.L166:
 642:Core/Src/bms.c **** 
 643:Core/Src/bms.c ****     case 0x478:
 644:Core/Src/bms.c ****         bms->cellVolt[58] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2663              		.loc 1 644 0
 2664 077c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2665 077e 1B02     		lsls	r3, r3, #8
 2666 0780 03F47063 		and	r3, r3, #3840
 2667 0784 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2668              	.LVL332:
 2669 0786 1844     		add	r0, r0, r3
 2670 0788 FFF7FEFF 		bl	__aeabi_i2d
 2671              	.LVL333:
 2672 078c 0022     		movs	r2, #0
 2673 078e 7D4B     		ldr	r3, .L177
 2674 0790 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /tmp/ccBIZiye.s 			page 62


 2675              	.LVL334:
 2676 0794 FFF7FEFF 		bl	__aeabi_d2uiz
 2677              	.LVL335:
 2678 0798 A5F87400 		strh	r0, [r5, #116]	@ movhi
 645:Core/Src/bms.c ****         bms->cellVolt[59] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2679              		.loc 1 645 0
 2680 079c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2681 079e 1B02     		lsls	r3, r3, #8
 2682 07a0 03F47063 		and	r3, r3, #3840
 2683 07a4 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2684 07a6 1844     		add	r0, r0, r3
 2685 07a8 FFF7FEFF 		bl	__aeabi_i2d
 2686              	.LVL336:
 2687 07ac 0022     		movs	r2, #0
 2688 07ae 754B     		ldr	r3, .L177
 2689 07b0 FFF7FEFF 		bl	__aeabi_dmul
 2690              	.LVL337:
 2691 07b4 FFF7FEFF 		bl	__aeabi_d2uiz
 2692              	.LVL338:
 2693 07b8 A5F87600 		strh	r0, [r5, #118]	@ movhi
 646:Core/Src/bms.c ****         bms->cellVolt[60] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2694              		.loc 1 646 0
 2695 07bc 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2696 07be 1B02     		lsls	r3, r3, #8
 2697 07c0 03F47063 		and	r3, r3, #3840
 2698 07c4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2699 07c6 1844     		add	r0, r0, r3
 2700 07c8 FFF7FEFF 		bl	__aeabi_i2d
 2701              	.LVL339:
 2702 07cc 0022     		movs	r2, #0
 2703 07ce 6D4B     		ldr	r3, .L177
 2704 07d0 FFF7FEFF 		bl	__aeabi_dmul
 2705              	.LVL340:
 2706 07d4 FFF7FEFF 		bl	__aeabi_d2uiz
 2707              	.LVL341:
 2708 07d8 A5F87800 		strh	r0, [r5, #120]	@ movhi
 647:Core/Src/bms.c ****         bms->cellVolt[61] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2709              		.loc 1 647 0
 2710 07dc A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2711 07de 1B02     		lsls	r3, r3, #8
 2712 07e0 03F47063 		and	r3, r3, #3840
 2713 07e4 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2714 07e6 1844     		add	r0, r0, r3
 2715 07e8 FFF7FEFF 		bl	__aeabi_i2d
 2716              	.LVL342:
 2717 07ec 0022     		movs	r2, #0
 2718 07ee 654B     		ldr	r3, .L177
 2719 07f0 FFF7FEFF 		bl	__aeabi_dmul
 2720              	.LVL343:
 2721 07f4 FFF7FEFF 		bl	__aeabi_d2uiz
 2722              	.LVL344:
 2723 07f8 A5F87A00 		strh	r0, [r5, #122]	@ movhi
 648:Core/Src/bms.c ****         break;
 2724              		.loc 1 648 0
 2725 07fc 38BD     		pop	{r3, r4, r5, pc}
 2726              	.LVL345:
 2727              	.L154:
ARM GAS  /tmp/ccBIZiye.s 			page 63


 649:Core/Src/bms.c **** 
 650:Core/Src/bms.c ****     case 0x469:
 651:Core/Src/bms.c ****         bms->cellVolt[62] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2728              		.loc 1 651 0
 2729 07fe 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2730 0800 1B02     		lsls	r3, r3, #8
 2731 0802 03F47063 		and	r3, r3, #3840
 2732 0806 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2733              	.LVL346:
 2734 0808 1844     		add	r0, r0, r3
 2735 080a FFF7FEFF 		bl	__aeabi_i2d
 2736              	.LVL347:
 2737 080e 0022     		movs	r2, #0
 2738 0810 5C4B     		ldr	r3, .L177
 2739 0812 FFF7FEFF 		bl	__aeabi_dmul
 2740              	.LVL348:
 2741 0816 FFF7FEFF 		bl	__aeabi_d2uiz
 2742              	.LVL349:
 2743 081a A5F87C00 		strh	r0, [r5, #124]	@ movhi
 652:Core/Src/bms.c ****         bms->cellVolt[63] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2744              		.loc 1 652 0
 2745 081e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2746 0820 1B02     		lsls	r3, r3, #8
 2747 0822 03F47063 		and	r3, r3, #3840
 2748 0826 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2749 0828 1844     		add	r0, r0, r3
 2750 082a FFF7FEFF 		bl	__aeabi_i2d
 2751              	.LVL350:
 2752 082e 0022     		movs	r2, #0
 2753 0830 544B     		ldr	r3, .L177
 2754 0832 FFF7FEFF 		bl	__aeabi_dmul
 2755              	.LVL351:
 2756 0836 FFF7FEFF 		bl	__aeabi_d2uiz
 2757              	.LVL352:
 2758 083a A5F87E00 		strh	r0, [r5, #126]	@ movhi
 653:Core/Src/bms.c ****         bms->cellVolt[64] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2759              		.loc 1 653 0
 2760 083e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2761 0840 1B02     		lsls	r3, r3, #8
 2762 0842 03F47063 		and	r3, r3, #3840
 2763 0846 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2764 0848 1844     		add	r0, r0, r3
 2765 084a FFF7FEFF 		bl	__aeabi_i2d
 2766              	.LVL353:
 2767 084e 0022     		movs	r2, #0
 2768 0850 4C4B     		ldr	r3, .L177
 2769 0852 FFF7FEFF 		bl	__aeabi_dmul
 2770              	.LVL354:
 2771 0856 FFF7FEFF 		bl	__aeabi_d2uiz
 2772              	.LVL355:
 2773 085a A5F88000 		strh	r0, [r5, #128]	@ movhi
 654:Core/Src/bms.c ****         bms->cellVolt[65] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2774              		.loc 1 654 0
 2775 085e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2776 0860 1B02     		lsls	r3, r3, #8
 2777 0862 03F47063 		and	r3, r3, #3840
 2778 0866 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccBIZiye.s 			page 64


 2779 0868 1844     		add	r0, r0, r3
 2780 086a FFF7FEFF 		bl	__aeabi_i2d
 2781              	.LVL356:
 2782 086e 0022     		movs	r2, #0
 2783 0870 444B     		ldr	r3, .L177
 2784 0872 FFF7FEFF 		bl	__aeabi_dmul
 2785              	.LVL357:
 2786 0876 FFF7FEFF 		bl	__aeabi_d2uiz
 2787              	.LVL358:
 2788 087a A5F88200 		strh	r0, [r5, #130]	@ movhi
 655:Core/Src/bms.c ****         break;
 2789              		.loc 1 655 0
 2790 087e 38BD     		pop	{r3, r4, r5, pc}
 2791              	.LVL359:
 2792              	.L167:
 656:Core/Src/bms.c **** 
 657:Core/Src/bms.c ****     case 0x479:
 658:Core/Src/bms.c ****         bms->cellVolt[66] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2793              		.loc 1 658 0
 2794 0880 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2795 0882 1B02     		lsls	r3, r3, #8
 2796 0884 03F47063 		and	r3, r3, #3840
 2797 0888 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2798              	.LVL360:
 2799 088a 1844     		add	r0, r0, r3
 2800 088c FFF7FEFF 		bl	__aeabi_i2d
 2801              	.LVL361:
 2802 0890 0022     		movs	r2, #0
 2803 0892 3C4B     		ldr	r3, .L177
 2804 0894 FFF7FEFF 		bl	__aeabi_dmul
 2805              	.LVL362:
 2806 0898 FFF7FEFF 		bl	__aeabi_d2uiz
 2807              	.LVL363:
 2808 089c A5F88400 		strh	r0, [r5, #132]	@ movhi
 659:Core/Src/bms.c ****         bms->cellVolt[67] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2809              		.loc 1 659 0
 2810 08a0 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2811 08a2 1B02     		lsls	r3, r3, #8
 2812 08a4 03F47063 		and	r3, r3, #3840
 2813 08a8 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2814 08aa 1844     		add	r0, r0, r3
 2815 08ac FFF7FEFF 		bl	__aeabi_i2d
 2816              	.LVL364:
 2817 08b0 0022     		movs	r2, #0
 2818 08b2 344B     		ldr	r3, .L177
 2819 08b4 FFF7FEFF 		bl	__aeabi_dmul
 2820              	.LVL365:
 2821 08b8 FFF7FEFF 		bl	__aeabi_d2uiz
 2822              	.LVL366:
 2823 08bc A5F88600 		strh	r0, [r5, #134]	@ movhi
 660:Core/Src/bms.c ****         bms->cellVolt[68] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2824              		.loc 1 660 0
 2825 08c0 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2826 08c2 1B02     		lsls	r3, r3, #8
 2827 08c4 03F47063 		and	r3, r3, #3840
 2828 08c8 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2829 08ca 1844     		add	r0, r0, r3
ARM GAS  /tmp/ccBIZiye.s 			page 65


 2830 08cc FFF7FEFF 		bl	__aeabi_i2d
 2831              	.LVL367:
 2832 08d0 0022     		movs	r2, #0
 2833 08d2 2C4B     		ldr	r3, .L177
 2834 08d4 FFF7FEFF 		bl	__aeabi_dmul
 2835              	.LVL368:
 2836 08d8 FFF7FEFF 		bl	__aeabi_d2uiz
 2837              	.LVL369:
 2838 08dc A5F88800 		strh	r0, [r5, #136]	@ movhi
 661:Core/Src/bms.c ****         bms->cellVolt[69] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2839              		.loc 1 661 0
 2840 08e0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2841 08e2 1B02     		lsls	r3, r3, #8
 2842 08e4 03F47063 		and	r3, r3, #3840
 2843 08e8 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2844 08ea 1844     		add	r0, r0, r3
 2845 08ec FFF7FEFF 		bl	__aeabi_i2d
 2846              	.LVL370:
 2847 08f0 0022     		movs	r2, #0
 2848 08f2 244B     		ldr	r3, .L177
 2849 08f4 FFF7FEFF 		bl	__aeabi_dmul
 2850              	.LVL371:
 2851 08f8 FFF7FEFF 		bl	__aeabi_d2uiz
 2852              	.LVL372:
 2853 08fc A5F88A00 		strh	r0, [r5, #138]	@ movhi
 662:Core/Src/bms.c ****         break;
 2854              		.loc 1 662 0
 2855 0900 38BD     		pop	{r3, r4, r5, pc}
 2856              	.LVL373:
 2857              	.L155:
 663:Core/Src/bms.c **** 
 664:Core/Src/bms.c ****     case 0x46A:
 665:Core/Src/bms.c ****         bms->cellVolt[70] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2858              		.loc 1 665 0
 2859 0902 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2860 0904 1B02     		lsls	r3, r3, #8
 2861 0906 03F47063 		and	r3, r3, #3840
 2862 090a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2863              	.LVL374:
 2864 090c 1844     		add	r0, r0, r3
 2865 090e FFF7FEFF 		bl	__aeabi_i2d
 2866              	.LVL375:
 2867 0912 0022     		movs	r2, #0
 2868 0914 1B4B     		ldr	r3, .L177
 2869 0916 FFF7FEFF 		bl	__aeabi_dmul
 2870              	.LVL376:
 2871 091a FFF7FEFF 		bl	__aeabi_d2uiz
 2872              	.LVL377:
 2873 091e A5F88C00 		strh	r0, [r5, #140]	@ movhi
 666:Core/Src/bms.c ****         bms->cellVolt[71] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2874              		.loc 1 666 0
 2875 0922 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2876 0924 1B02     		lsls	r3, r3, #8
 2877 0926 03F47063 		and	r3, r3, #3840
 2878 092a E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2879 092c 1844     		add	r0, r0, r3
 2880 092e FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /tmp/ccBIZiye.s 			page 66


 2881              	.LVL378:
 2882 0932 0022     		movs	r2, #0
 2883 0934 134B     		ldr	r3, .L177
 2884 0936 FFF7FEFF 		bl	__aeabi_dmul
 2885              	.LVL379:
 2886 093a FFF7FEFF 		bl	__aeabi_d2uiz
 2887              	.LVL380:
 2888 093e A5F88E00 		strh	r0, [r5, #142]	@ movhi
 667:Core/Src/bms.c ****         bms->cellVolt[72] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2889              		.loc 1 667 0
 2890 0942 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2891 0944 1B02     		lsls	r3, r3, #8
 2892 0946 03F47063 		and	r3, r3, #3840
 2893 094a 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2894 094c 1844     		add	r0, r0, r3
 2895 094e FFF7FEFF 		bl	__aeabi_i2d
 2896              	.LVL381:
 2897 0952 0022     		movs	r2, #0
 2898 0954 0B4B     		ldr	r3, .L177
 2899 0956 FFF7FEFF 		bl	__aeabi_dmul
 2900              	.LVL382:
 2901 095a FFF7FEFF 		bl	__aeabi_d2uiz
 2902              	.LVL383:
 2903 095e A5F89000 		strh	r0, [r5, #144]	@ movhi
 668:Core/Src/bms.c ****         bms->cellVolt[73] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2904              		.loc 1 668 0
 2905 0962 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2906 0964 1B02     		lsls	r3, r3, #8
 2907 0966 03F47063 		and	r3, r3, #3840
 2908 096a E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2909 096c 1844     		add	r0, r0, r3
 2910 096e FFF7FEFF 		bl	__aeabi_i2d
 2911              	.LVL384:
 2912 0972 0022     		movs	r2, #0
 2913 0974 034B     		ldr	r3, .L177
 2914 0976 FFF7FEFF 		bl	__aeabi_dmul
 2915              	.LVL385:
 2916 097a FFF7FEFF 		bl	__aeabi_d2uiz
 2917              	.LVL386:
 2918 097e A5F89200 		strh	r0, [r5, #146]	@ movhi
 669:Core/Src/bms.c ****         break;
 2919              		.loc 1 669 0
 2920 0982 38BD     		pop	{r3, r4, r5, pc}
 2921              	.LVL387:
 2922              	.L178:
 2923              		.align	2
 2924              	.L177:
 2925 0984 0000F43F 		.word	1072955392
 2926              	.LVL388:
 2927              	.L168:
 670:Core/Src/bms.c **** 
 671:Core/Src/bms.c ****     case 0x47A:
 672:Core/Src/bms.c ****         bms->cellVolt[74] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 2928              		.loc 1 672 0
 2929 0988 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2930 098a 1B02     		lsls	r3, r3, #8
 2931 098c 03F47063 		and	r3, r3, #3840
ARM GAS  /tmp/ccBIZiye.s 			page 67


 2932 0990 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2933              	.LVL389:
 2934 0992 1844     		add	r0, r0, r3
 2935 0994 FFF7FEFF 		bl	__aeabi_i2d
 2936              	.LVL390:
 2937 0998 0022     		movs	r2, #0
 2938 099a AF4B     		ldr	r3, .L179
 2939 099c FFF7FEFF 		bl	__aeabi_dmul
 2940              	.LVL391:
 2941 09a0 FFF7FEFF 		bl	__aeabi_d2uiz
 2942              	.LVL392:
 2943 09a4 A5F89400 		strh	r0, [r5, #148]	@ movhi
 673:Core/Src/bms.c ****         bms->cellVolt[75] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 2944              		.loc 1 673 0
 2945 09a8 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 2946 09aa 1B02     		lsls	r3, r3, #8
 2947 09ac 03F47063 		and	r3, r3, #3840
 2948 09b0 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 2949 09b2 1844     		add	r0, r0, r3
 2950 09b4 FFF7FEFF 		bl	__aeabi_i2d
 2951              	.LVL393:
 2952 09b8 0022     		movs	r2, #0
 2953 09ba A74B     		ldr	r3, .L179
 2954 09bc FFF7FEFF 		bl	__aeabi_dmul
 2955              	.LVL394:
 2956 09c0 FFF7FEFF 		bl	__aeabi_d2uiz
 2957              	.LVL395:
 2958 09c4 A5F89600 		strh	r0, [r5, #150]	@ movhi
 674:Core/Src/bms.c ****         bms->cellVolt[76] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 2959              		.loc 1 674 0
 2960 09c8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2961 09ca 1B02     		lsls	r3, r3, #8
 2962 09cc 03F47063 		and	r3, r3, #3840
 2963 09d0 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 2964 09d2 1844     		add	r0, r0, r3
 2965 09d4 FFF7FEFF 		bl	__aeabi_i2d
 2966              	.LVL396:
 2967 09d8 0022     		movs	r2, #0
 2968 09da 9F4B     		ldr	r3, .L179
 2969 09dc FFF7FEFF 		bl	__aeabi_dmul
 2970              	.LVL397:
 2971 09e0 FFF7FEFF 		bl	__aeabi_d2uiz
 2972              	.LVL398:
 2973 09e4 A5F89800 		strh	r0, [r5, #152]	@ movhi
 675:Core/Src/bms.c ****         bms->cellVolt[77] = ((((canRx[6] & 0x0F) << 8) + canRx[7]) * 1.25);
 2974              		.loc 1 675 0
 2975 09e8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 2976 09ea 1B02     		lsls	r3, r3, #8
 2977 09ec 03F47063 		and	r3, r3, #3840
 2978 09f0 E079     		ldrb	r0, [r4, #7]	@ zero_extendqisi2
 2979 09f2 1844     		add	r0, r0, r3
 2980 09f4 FFF7FEFF 		bl	__aeabi_i2d
 2981              	.LVL399:
 2982 09f8 0022     		movs	r2, #0
 2983 09fa 974B     		ldr	r3, .L179
 2984 09fc FFF7FEFF 		bl	__aeabi_dmul
 2985              	.LVL400:
ARM GAS  /tmp/ccBIZiye.s 			page 68


 2986 0a00 FFF7FEFF 		bl	__aeabi_d2uiz
 2987              	.LVL401:
 2988 0a04 A5F89A00 		strh	r0, [r5, #154]	@ movhi
 676:Core/Src/bms.c ****         break;
 2989              		.loc 1 676 0
 2990 0a08 38BD     		pop	{r3, r4, r5, pc}
 2991              	.LVL402:
 2992              	.L156:
 677:Core/Src/bms.c **** 
 678:Core/Src/bms.c ****     case 0x46C:
 679:Core/Src/bms.c ****         bms->cellVolt[78] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25); //Begin module 4
 2993              		.loc 1 679 0
 2994 0a0a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2995 0a0c 1B02     		lsls	r3, r3, #8
 2996 0a0e 03F47063 		and	r3, r3, #3840
 2997 0a12 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 2998              	.LVL403:
 2999 0a14 1844     		add	r0, r0, r3
 3000 0a16 FFF7FEFF 		bl	__aeabi_i2d
 3001              	.LVL404:
 3002 0a1a 0022     		movs	r2, #0
 3003 0a1c 8E4B     		ldr	r3, .L179
 3004 0a1e FFF7FEFF 		bl	__aeabi_dmul
 3005              	.LVL405:
 3006 0a22 FFF7FEFF 		bl	__aeabi_d2uiz
 3007              	.LVL406:
 3008 0a26 A5F89C00 		strh	r0, [r5, #156]	@ movhi
 680:Core/Src/bms.c ****         bms->cellVolt[79] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3009              		.loc 1 680 0
 3010 0a2a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3011 0a2c 1B02     		lsls	r3, r3, #8
 3012 0a2e 03F47063 		and	r3, r3, #3840
 3013 0a32 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3014 0a34 1844     		add	r0, r0, r3
 3015 0a36 FFF7FEFF 		bl	__aeabi_i2d
 3016              	.LVL407:
 3017 0a3a 0022     		movs	r2, #0
 3018 0a3c 864B     		ldr	r3, .L179
 3019 0a3e FFF7FEFF 		bl	__aeabi_dmul
 3020              	.LVL408:
 3021 0a42 FFF7FEFF 		bl	__aeabi_d2uiz
 3022              	.LVL409:
 3023 0a46 A5F89E00 		strh	r0, [r5, #158]	@ movhi
 681:Core/Src/bms.c ****         bms->cellVolt[80] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3024              		.loc 1 681 0
 3025 0a4a 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3026 0a4c 1B02     		lsls	r3, r3, #8
 3027 0a4e 03F47063 		and	r3, r3, #3840
 3028 0a52 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3029 0a54 1844     		add	r0, r0, r3
 3030 0a56 FFF7FEFF 		bl	__aeabi_i2d
 3031              	.LVL410:
 3032 0a5a 0022     		movs	r2, #0
 3033 0a5c 7E4B     		ldr	r3, .L179
 3034 0a5e FFF7FEFF 		bl	__aeabi_dmul
 3035              	.LVL411:
 3036 0a62 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /tmp/ccBIZiye.s 			page 69


 3037              	.LVL412:
 3038 0a66 A5F8A000 		strh	r0, [r5, #160]	@ movhi
 682:Core/Src/bms.c ****         break;
 3039              		.loc 1 682 0
 3040 0a6a 38BD     		pop	{r3, r4, r5, pc}
 3041              	.LVL413:
 3042              	.L169:
 683:Core/Src/bms.c **** 
 684:Core/Src/bms.c ****     case 0x47C:
 685:Core/Src/bms.c ****         bms->cellVolt[81] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3043              		.loc 1 685 0
 3044 0a6c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3045 0a6e 1B02     		lsls	r3, r3, #8
 3046 0a70 03F47063 		and	r3, r3, #3840
 3047 0a74 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3048              	.LVL414:
 3049 0a76 1844     		add	r0, r0, r3
 3050 0a78 FFF7FEFF 		bl	__aeabi_i2d
 3051              	.LVL415:
 3052 0a7c 0022     		movs	r2, #0
 3053 0a7e 764B     		ldr	r3, .L179
 3054 0a80 FFF7FEFF 		bl	__aeabi_dmul
 3055              	.LVL416:
 3056 0a84 FFF7FEFF 		bl	__aeabi_d2uiz
 3057              	.LVL417:
 3058 0a88 A5F8A200 		strh	r0, [r5, #162]	@ movhi
 686:Core/Src/bms.c ****         bms->cellVolt[82] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3059              		.loc 1 686 0
 3060 0a8c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3061 0a8e 1B02     		lsls	r3, r3, #8
 3062 0a90 03F47063 		and	r3, r3, #3840
 3063 0a94 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3064 0a96 1844     		add	r0, r0, r3
 3065 0a98 FFF7FEFF 		bl	__aeabi_i2d
 3066              	.LVL418:
 3067 0a9c 0022     		movs	r2, #0
 3068 0a9e 6E4B     		ldr	r3, .L179
 3069 0aa0 FFF7FEFF 		bl	__aeabi_dmul
 3070              	.LVL419:
 3071 0aa4 FFF7FEFF 		bl	__aeabi_d2uiz
 3072              	.LVL420:
 3073 0aa8 A5F8A400 		strh	r0, [r5, #164]	@ movhi
 687:Core/Src/bms.c ****         bms->cellVolt[83] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3074              		.loc 1 687 0
 3075 0aac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3076 0aae 1B02     		lsls	r3, r3, #8
 3077 0ab0 03F47063 		and	r3, r3, #3840
 3078 0ab4 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3079 0ab6 1844     		add	r0, r0, r3
 3080 0ab8 FFF7FEFF 		bl	__aeabi_i2d
 3081              	.LVL421:
 3082 0abc 0022     		movs	r2, #0
 3083 0abe 664B     		ldr	r3, .L179
 3084 0ac0 FFF7FEFF 		bl	__aeabi_dmul
 3085              	.LVL422:
 3086 0ac4 FFF7FEFF 		bl	__aeabi_d2uiz
 3087              	.LVL423:
ARM GAS  /tmp/ccBIZiye.s 			page 70


 3088 0ac8 A5F8A600 		strh	r0, [r5, #166]	@ movhi
 688:Core/Src/bms.c ****         break;
 3089              		.loc 1 688 0
 3090 0acc 38BD     		pop	{r3, r4, r5, pc}
 3091              	.LVL424:
 3092              	.L157:
 689:Core/Src/bms.c **** 
 690:Core/Src/bms.c ****     case 0x46D:
 691:Core/Src/bms.c ****         bms->cellVolt[84] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3093              		.loc 1 691 0
 3094 0ace 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3095 0ad0 1B02     		lsls	r3, r3, #8
 3096 0ad2 03F47063 		and	r3, r3, #3840
 3097 0ad6 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3098              	.LVL425:
 3099 0ad8 1844     		add	r0, r0, r3
 3100 0ada FFF7FEFF 		bl	__aeabi_i2d
 3101              	.LVL426:
 3102 0ade 0022     		movs	r2, #0
 3103 0ae0 5D4B     		ldr	r3, .L179
 3104 0ae2 FFF7FEFF 		bl	__aeabi_dmul
 3105              	.LVL427:
 3106 0ae6 FFF7FEFF 		bl	__aeabi_d2uiz
 3107              	.LVL428:
 3108 0aea A5F8A800 		strh	r0, [r5, #168]	@ movhi
 692:Core/Src/bms.c ****         bms->cellVolt[85] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3109              		.loc 1 692 0
 3110 0aee A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3111 0af0 1B02     		lsls	r3, r3, #8
 3112 0af2 03F47063 		and	r3, r3, #3840
 3113 0af6 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3114 0af8 1844     		add	r0, r0, r3
 3115 0afa FFF7FEFF 		bl	__aeabi_i2d
 3116              	.LVL429:
 3117 0afe 0022     		movs	r2, #0
 3118 0b00 554B     		ldr	r3, .L179
 3119 0b02 FFF7FEFF 		bl	__aeabi_dmul
 3120              	.LVL430:
 3121 0b06 FFF7FEFF 		bl	__aeabi_d2uiz
 3122              	.LVL431:
 3123 0b0a A5F8AA00 		strh	r0, [r5, #170]	@ movhi
 693:Core/Src/bms.c ****         bms->cellVolt[86] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3124              		.loc 1 693 0
 3125 0b0e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3126 0b10 1B02     		lsls	r3, r3, #8
 3127 0b12 03F47063 		and	r3, r3, #3840
 3128 0b16 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3129 0b18 1844     		add	r0, r0, r3
 3130 0b1a FFF7FEFF 		bl	__aeabi_i2d
 3131              	.LVL432:
 3132 0b1e 0022     		movs	r2, #0
 3133 0b20 4D4B     		ldr	r3, .L179
 3134 0b22 FFF7FEFF 		bl	__aeabi_dmul
 3135              	.LVL433:
 3136 0b26 FFF7FEFF 		bl	__aeabi_d2uiz
 3137              	.LVL434:
 3138 0b2a A5F8AC00 		strh	r0, [r5, #172]	@ movhi
ARM GAS  /tmp/ccBIZiye.s 			page 71


 694:Core/Src/bms.c ****         break;
 3139              		.loc 1 694 0
 3140 0b2e 38BD     		pop	{r3, r4, r5, pc}
 3141              	.LVL435:
 3142              	.L170:
 695:Core/Src/bms.c **** 
 696:Core/Src/bms.c ****     case 0x47D:
 697:Core/Src/bms.c ****         bms->cellVolt[87] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3143              		.loc 1 697 0
 3144 0b30 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3145 0b32 1B02     		lsls	r3, r3, #8
 3146 0b34 03F47063 		and	r3, r3, #3840
 3147 0b38 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3148              	.LVL436:
 3149 0b3a 1844     		add	r0, r0, r3
 3150 0b3c FFF7FEFF 		bl	__aeabi_i2d
 3151              	.LVL437:
 3152 0b40 0022     		movs	r2, #0
 3153 0b42 454B     		ldr	r3, .L179
 3154 0b44 FFF7FEFF 		bl	__aeabi_dmul
 3155              	.LVL438:
 3156 0b48 FFF7FEFF 		bl	__aeabi_d2uiz
 3157              	.LVL439:
 3158 0b4c A5F8AE00 		strh	r0, [r5, #174]	@ movhi
 698:Core/Src/bms.c ****         bms->cellVolt[88] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3159              		.loc 1 698 0
 3160 0b50 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3161 0b52 1B02     		lsls	r3, r3, #8
 3162 0b54 03F47063 		and	r3, r3, #3840
 3163 0b58 E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3164 0b5a 1844     		add	r0, r0, r3
 3165 0b5c FFF7FEFF 		bl	__aeabi_i2d
 3166              	.LVL440:
 3167 0b60 0022     		movs	r2, #0
 3168 0b62 3D4B     		ldr	r3, .L179
 3169 0b64 FFF7FEFF 		bl	__aeabi_dmul
 3170              	.LVL441:
 3171 0b68 FFF7FEFF 		bl	__aeabi_d2uiz
 3172              	.LVL442:
 3173 0b6c A5F8B000 		strh	r0, [r5, #176]	@ movhi
 699:Core/Src/bms.c ****         bms->cellVolt[89] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3174              		.loc 1 699 0
 3175 0b70 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3176 0b72 1B02     		lsls	r3, r3, #8
 3177 0b74 03F47063 		and	r3, r3, #3840
 3178 0b78 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3179 0b7a 1844     		add	r0, r0, r3
 3180 0b7c FFF7FEFF 		bl	__aeabi_i2d
 3181              	.LVL443:
 3182 0b80 0022     		movs	r2, #0
 3183 0b82 354B     		ldr	r3, .L179
 3184 0b84 FFF7FEFF 		bl	__aeabi_dmul
 3185              	.LVL444:
 3186 0b88 FFF7FEFF 		bl	__aeabi_d2uiz
 3187              	.LVL445:
 3188 0b8c A5F8B200 		strh	r0, [r5, #178]	@ movhi
 700:Core/Src/bms.c ****         break;
ARM GAS  /tmp/ccBIZiye.s 			page 72


 3189              		.loc 1 700 0
 3190 0b90 38BD     		pop	{r3, r4, r5, pc}
 3191              	.LVL446:
 3192              	.L158:
 701:Core/Src/bms.c **** 
 702:Core/Src/bms.c ****     case 0x46E:
 703:Core/Src/bms.c ****         bms->cellVolt[90] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3193              		.loc 1 703 0
 3194 0b92 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3195 0b94 1B02     		lsls	r3, r3, #8
 3196 0b96 03F47063 		and	r3, r3, #3840
 3197 0b9a 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3198              	.LVL447:
 3199 0b9c 1844     		add	r0, r0, r3
 3200 0b9e FFF7FEFF 		bl	__aeabi_i2d
 3201              	.LVL448:
 3202 0ba2 0022     		movs	r2, #0
 3203 0ba4 2C4B     		ldr	r3, .L179
 3204 0ba6 FFF7FEFF 		bl	__aeabi_dmul
 3205              	.LVL449:
 3206 0baa FFF7FEFF 		bl	__aeabi_d2uiz
 3207              	.LVL450:
 3208 0bae A5F8B400 		strh	r0, [r5, #180]	@ movhi
 704:Core/Src/bms.c ****         bms->cellVolt[91] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3209              		.loc 1 704 0
 3210 0bb2 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3211 0bb4 1B02     		lsls	r3, r3, #8
 3212 0bb6 03F47063 		and	r3, r3, #3840
 3213 0bba E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3214 0bbc 1844     		add	r0, r0, r3
 3215 0bbe FFF7FEFF 		bl	__aeabi_i2d
 3216              	.LVL451:
 3217 0bc2 0022     		movs	r2, #0
 3218 0bc4 244B     		ldr	r3, .L179
 3219 0bc6 FFF7FEFF 		bl	__aeabi_dmul
 3220              	.LVL452:
 3221 0bca FFF7FEFF 		bl	__aeabi_d2uiz
 3222              	.LVL453:
 3223 0bce A5F8B600 		strh	r0, [r5, #182]	@ movhi
 705:Core/Src/bms.c ****         bms->cellVolt[92] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3224              		.loc 1 705 0
 3225 0bd2 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3226 0bd4 1B02     		lsls	r3, r3, #8
 3227 0bd6 03F47063 		and	r3, r3, #3840
 3228 0bda 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3229 0bdc 1844     		add	r0, r0, r3
 3230 0bde FFF7FEFF 		bl	__aeabi_i2d
 3231              	.LVL454:
 3232 0be2 0022     		movs	r2, #0
 3233 0be4 1C4B     		ldr	r3, .L179
 3234 0be6 FFF7FEFF 		bl	__aeabi_dmul
 3235              	.LVL455:
 3236 0bea FFF7FEFF 		bl	__aeabi_d2uiz
 3237              	.LVL456:
 3238 0bee A5F8B800 		strh	r0, [r5, #184]	@ movhi
 706:Core/Src/bms.c ****         break;
 3239              		.loc 1 706 0
ARM GAS  /tmp/ccBIZiye.s 			page 73


 3240 0bf2 38BD     		pop	{r3, r4, r5, pc}
 3241              	.LVL457:
 3242              	.L171:
 707:Core/Src/bms.c **** 
 708:Core/Src/bms.c ****     case 0x47E:
 709:Core/Src/bms.c ****         bms->cellVolt[93] = ((((canRx[0] & 0x0F) << 8) + canRx[1]) * 1.25);
 3243              		.loc 1 709 0
 3244 0bf4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3245 0bf6 1B02     		lsls	r3, r3, #8
 3246 0bf8 03F47063 		and	r3, r3, #3840
 3247 0bfc 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 3248              	.LVL458:
 3249 0bfe 1844     		add	r0, r0, r3
 3250 0c00 FFF7FEFF 		bl	__aeabi_i2d
 3251              	.LVL459:
 3252 0c04 0022     		movs	r2, #0
 3253 0c06 144B     		ldr	r3, .L179
 3254 0c08 FFF7FEFF 		bl	__aeabi_dmul
 3255              	.LVL460:
 3256 0c0c FFF7FEFF 		bl	__aeabi_d2uiz
 3257              	.LVL461:
 3258 0c10 A5F8BA00 		strh	r0, [r5, #186]	@ movhi
 710:Core/Src/bms.c ****         bms->cellVolt[94] = ((((canRx[2] & 0x0F) << 8) + canRx[3]) * 1.25);
 3259              		.loc 1 710 0
 3260 0c14 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3261 0c16 1B02     		lsls	r3, r3, #8
 3262 0c18 03F47063 		and	r3, r3, #3840
 3263 0c1c E078     		ldrb	r0, [r4, #3]	@ zero_extendqisi2
 3264 0c1e 1844     		add	r0, r0, r3
 3265 0c20 FFF7FEFF 		bl	__aeabi_i2d
 3266              	.LVL462:
 3267 0c24 0022     		movs	r2, #0
 3268 0c26 0C4B     		ldr	r3, .L179
 3269 0c28 FFF7FEFF 		bl	__aeabi_dmul
 3270              	.LVL463:
 3271 0c2c FFF7FEFF 		bl	__aeabi_d2uiz
 3272              	.LVL464:
 3273 0c30 A5F8BC00 		strh	r0, [r5, #188]	@ movhi
 711:Core/Src/bms.c ****         bms->cellVolt[95] = ((((canRx[4] & 0x0F) << 8) + canRx[5]) * 1.25);
 3274              		.loc 1 711 0
 3275 0c34 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 3276 0c36 1B02     		lsls	r3, r3, #8
 3277 0c38 03F47063 		and	r3, r3, #3840
 3278 0c3c 6079     		ldrb	r0, [r4, #5]	@ zero_extendqisi2
 3279 0c3e 1844     		add	r0, r0, r3
 3280 0c40 FFF7FEFF 		bl	__aeabi_i2d
 3281              	.LVL465:
 3282 0c44 0022     		movs	r2, #0
 3283 0c46 044B     		ldr	r3, .L179
 3284 0c48 FFF7FEFF 		bl	__aeabi_dmul
 3285              	.LVL466:
 3286 0c4c FFF7FEFF 		bl	__aeabi_d2uiz
 3287              	.LVL467:
 3288 0c50 A5F8BE00 		strh	r0, [r5, #190]	@ movhi
 3289              	.L143:
 3290 0c54 38BD     		pop	{r3, r4, r5, pc}
 3291              	.LVL468:
ARM GAS  /tmp/ccBIZiye.s 			page 74


 3292              	.L180:
 3293 0c56 00BF     		.align	2
 3294              	.L179:
 3295 0c58 0000F43F 		.word	1072955392
 3296              		.cfi_endproc
 3297              	.LFE151:
 3299              		.section	.text.decodeTemp,"ax",%progbits
 3300              		.align	1
 3301              		.global	decodeTemp
 3302              		.syntax unified
 3303              		.thumb
 3304              		.thumb_func
 3305              		.fpu fpv4-sp-d16
 3307              	decodeTemp:
 3308              	.LFB152:
 712:Core/Src/bms.c ****         break;
 713:Core/Src/bms.c **** 
 714:Core/Src/bms.c ****     default:
 715:Core/Src/bms.c ****         break;
 716:Core/Src/bms.c ****     }
 717:Core/Src/bms.c **** }
 718:Core/Src/bms.c **** 
 719:Core/Src/bms.c **** void decodeTemp(bms_t *bms, CAN_RxHeaderTypeDef *rxMsg, uint8_t *canRx)
 720:Core/Src/bms.c **** {
 3309              		.loc 1 720 0
 3310              		.cfi_startproc
 3311              		@ args = 0, pretend = 0, frame = 0
 3312              		@ frame_needed = 0, uses_anonymous_args = 0
 3313              		@ link register save eliminated.
 3314              	.LVL469:
 3315 0000 10B4     		push	{r4}
 3316              	.LCFI14:
 3317              		.cfi_def_cfa_offset 4
 3318              		.cfi_offset 4, -4
 721:Core/Src/bms.c ****     switch (rxMsg->StdId)
 3319              		.loc 1 721 0
 3320 0002 0B68     		ldr	r3, [r1]
 3321 0004 A3F5FC63 		sub	r3, r3, #2016
 3322 0008 0E2B     		cmp	r3, #14
 3323 000a 14D8     		bhi	.L181
 3324 000c DFE803F0 		tbb	[pc, r3]
 3325              	.LVL470:
 3326              	.L184:
 3327 0010 08       		.byte	(.L183-.L184)/2
 3328 0011 16       		.byte	(.L185-.L184)/2
 3329 0012 22       		.byte	(.L186-.L184)/2
 3330 0013 37       		.byte	(.L187-.L184)/2
 3331 0014 43       		.byte	(.L188-.L184)/2
 3332 0015 4F       		.byte	(.L189-.L184)/2
 3333 0016 64       		.byte	(.L190-.L184)/2
 3334 0017 13       		.byte	(.L181-.L184)/2
 3335 0018 70       		.byte	(.L191-.L184)/2
 3336 0019 7C       		.byte	(.L192-.L184)/2
 3337 001a 91       		.byte	(.L193-.L184)/2
 3338 001b 13       		.byte	(.L181-.L184)/2
 3339 001c 9D       		.byte	(.L194-.L184)/2
 3340 001d A9       		.byte	(.L195-.L184)/2
ARM GAS  /tmp/ccBIZiye.s 			page 75


 3341 001e B5       		.byte	(.L196-.L184)/2
 3342 001f 00       		.p2align 1
 3343              	.L183:
 722:Core/Src/bms.c ****     {
 723:Core/Src/bms.c ****     case 0x7E0: //Begin module 1 temp sensors
 724:Core/Src/bms.c ****         bms->tempSensor[0] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3344              		.loc 1 724 0
 3345 0020 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3346 0022 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3347 0024 03EB0123 		add	r3, r3, r1, lsl #8
 3348 0028 A3EBC303 		sub	r3, r3, r3, lsl #3
 3349 002c 03F5E043 		add	r3, r3, #28672
 3350 0030 1C33     		adds	r3, r3, #28
 3351 0032 A0F8C030 		strh	r3, [r0, #192]	@ movhi
 3352              	.L181:
 725:Core/Src/bms.c ****         break;
 726:Core/Src/bms.c **** 
 727:Core/Src/bms.c ****     case 0x7E1:
 728:Core/Src/bms.c ****         bms->tempSensor[1] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 729:Core/Src/bms.c ****         break;
 730:Core/Src/bms.c **** 
 731:Core/Src/bms.c ****     case 0x7E2:
 732:Core/Src/bms.c ****         bms->tempSensor[2] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 733:Core/Src/bms.c ****         bms->tempSensor[3] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 734:Core/Src/bms.c ****         break;
 735:Core/Src/bms.c **** 
 736:Core/Src/bms.c ****     case 0x7E3:
 737:Core/Src/bms.c ****         bms->tempSensor[4] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 738:Core/Src/bms.c ****         break;
 739:Core/Src/bms.c **** 
 740:Core/Src/bms.c ****     case 0x7E4: //Begin module 2 temp sensors
 741:Core/Src/bms.c ****         bms->tempSensor[5] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 742:Core/Src/bms.c ****         break;
 743:Core/Src/bms.c **** 
 744:Core/Src/bms.c ****     case 0x7E5:
 745:Core/Src/bms.c ****         bms->tempSensor[6] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 746:Core/Src/bms.c ****         bms->tempSensor[7] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 747:Core/Src/bms.c ****         break;
 748:Core/Src/bms.c **** 
 749:Core/Src/bms.c ****     case 0x7E6:
 750:Core/Src/bms.c ****         bms->tempSensor[8] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 751:Core/Src/bms.c ****         break;
 752:Core/Src/bms.c **** 
 753:Core/Src/bms.c ****     case 0x7E8: //Begin module 3 temp sensors
 754:Core/Src/bms.c ****         bms->tempSensor[9] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 755:Core/Src/bms.c ****         break;
 756:Core/Src/bms.c **** 
 757:Core/Src/bms.c ****     case 0x7E9:
 758:Core/Src/bms.c ****         bms->tempSensor[10] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 759:Core/Src/bms.c ****         bms->tempSensor[11] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 760:Core/Src/bms.c ****         break;
 761:Core/Src/bms.c **** 
 762:Core/Src/bms.c ****     case 0x7EA:
 763:Core/Src/bms.c ****         bms->tempSensor[12] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 764:Core/Src/bms.c ****         break;
 765:Core/Src/bms.c **** 
 766:Core/Src/bms.c ****     case 0x7EC: //Begin module 4 temp sensors
ARM GAS  /tmp/ccBIZiye.s 			page 76


 767:Core/Src/bms.c ****         bms->tempSensor[13] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 768:Core/Src/bms.c ****         break;
 769:Core/Src/bms.c **** 
 770:Core/Src/bms.c ****     case 0x7ED:
 771:Core/Src/bms.c ****         bms->tempSensor[14] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 772:Core/Src/bms.c ****         break;
 773:Core/Src/bms.c **** 
 774:Core/Src/bms.c ****     case 0x7EE:
 775:Core/Src/bms.c ****         bms->tempSensor[15] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 776:Core/Src/bms.c ****         break;
 777:Core/Src/bms.c **** 
 778:Core/Src/bms.c ****     default:
 779:Core/Src/bms.c ****         break;
 780:Core/Src/bms.c ****     }
 781:Core/Src/bms.c **** }...
 3353              		.loc 1 781 0
 3354 0036 5DF8044B 		ldr	r4, [sp], #4
 3355              	.LCFI15:
 3356              		.cfi_remember_state
 3357              		.cfi_restore 4
 3358              		.cfi_def_cfa_offset 0
 3359 003a 7047     		bx	lr
 3360              	.L185:
 3361              	.LCFI16:
 3362              		.cfi_restore_state
 728:Core/Src/bms.c ****         bms->tempSensor[1] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3363              		.loc 1 728 0
 3364 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3365 003e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3366 0040 03EB0123 		add	r3, r3, r1, lsl #8
 3367 0044 A3EBC303 		sub	r3, r3, r3, lsl #3
 3368 0048 03F5E043 		add	r3, r3, #28672
 3369 004c 1C33     		adds	r3, r3, #28
 3370 004e A0F8C230 		strh	r3, [r0, #194]	@ movhi
 729:Core/Src/bms.c ****         break;
 3371              		.loc 1 729 0
 3372 0052 F0E7     		b	.L181
 3373              	.L186:
 732:Core/Src/bms.c ****         bms->tempSensor[2] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3374              		.loc 1 732 0
 3375 0054 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3376 0056 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3377 0058 03EB0123 		add	r3, r3, r1, lsl #8
 3378 005c A3EBC303 		sub	r3, r3, r3, lsl #3
 3379 0060 47F21C01 		movw	r1, #28700
 3380 0064 0B44     		add	r3, r3, r1
 3381 0066 A0F8C430 		strh	r3, [r0, #196]	@ movhi
 733:Core/Src/bms.c ****         bms->tempSensor[3] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3382              		.loc 1 733 0
 3383 006a 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 3384 006c D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3385 006e 03EB0423 		add	r3, r3, r4, lsl #8
 3386 0072 A3EBC303 		sub	r3, r3, r3, lsl #3
 3387 0076 0B44     		add	r3, r3, r1
 3388 0078 A0F8C630 		strh	r3, [r0, #198]	@ movhi
 734:Core/Src/bms.c ****         break;
 3389              		.loc 1 734 0
ARM GAS  /tmp/ccBIZiye.s 			page 77


 3390 007c DBE7     		b	.L181
 3391              	.L187:
 737:Core/Src/bms.c ****         bms->tempSensor[4] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3392              		.loc 1 737 0
 3393 007e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3394 0080 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3395 0082 03EB0123 		add	r3, r3, r1, lsl #8
 3396 0086 A3EBC303 		sub	r3, r3, r3, lsl #3
 3397 008a 03F5E043 		add	r3, r3, #28672
 3398 008e 1C33     		adds	r3, r3, #28
 3399 0090 A0F8C830 		strh	r3, [r0, #200]	@ movhi
 738:Core/Src/bms.c ****         break;
 3400              		.loc 1 738 0
 3401 0094 CFE7     		b	.L181
 3402              	.L188:
 741:Core/Src/bms.c ****         bms->tempSensor[5] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3403              		.loc 1 741 0
 3404 0096 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3405 0098 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3406 009a 03EB0123 		add	r3, r3, r1, lsl #8
 3407 009e A3EBC303 		sub	r3, r3, r3, lsl #3
 3408 00a2 03F5E043 		add	r3, r3, #28672
 3409 00a6 1C33     		adds	r3, r3, #28
 3410 00a8 A0F8CA30 		strh	r3, [r0, #202]	@ movhi
 742:Core/Src/bms.c ****         break;
 3411              		.loc 1 742 0
 3412 00ac C3E7     		b	.L181
 3413              	.L189:
 745:Core/Src/bms.c ****         bms->tempSensor[6] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3414              		.loc 1 745 0
 3415 00ae 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3416 00b0 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3417 00b2 03EB0123 		add	r3, r3, r1, lsl #8
 3418 00b6 A3EBC303 		sub	r3, r3, r3, lsl #3
 3419 00ba 47F21C01 		movw	r1, #28700
 3420 00be 0B44     		add	r3, r3, r1
 3421 00c0 A0F8CC30 		strh	r3, [r0, #204]	@ movhi
 746:Core/Src/bms.c ****         bms->tempSensor[7] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3422              		.loc 1 746 0
 3423 00c4 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 3424 00c6 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3425 00c8 03EB0423 		add	r3, r3, r4, lsl #8
 3426 00cc A3EBC303 		sub	r3, r3, r3, lsl #3
 3427 00d0 0B44     		add	r3, r3, r1
 3428 00d2 A0F8CE30 		strh	r3, [r0, #206]	@ movhi
 747:Core/Src/bms.c ****         break;
 3429              		.loc 1 747 0
 3430 00d6 AEE7     		b	.L181
 3431              	.L190:
 750:Core/Src/bms.c ****         bms->tempSensor[8] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3432              		.loc 1 750 0
 3433 00d8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3434 00da 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3435 00dc 03EB0123 		add	r3, r3, r1, lsl #8
 3436 00e0 A3EBC303 		sub	r3, r3, r3, lsl #3
 3437 00e4 03F5E043 		add	r3, r3, #28672
 3438 00e8 1C33     		adds	r3, r3, #28
ARM GAS  /tmp/ccBIZiye.s 			page 78


 3439 00ea A0F8D030 		strh	r3, [r0, #208]	@ movhi
 751:Core/Src/bms.c ****         break;
 3440              		.loc 1 751 0
 3441 00ee A2E7     		b	.L181
 3442              	.L191:
 754:Core/Src/bms.c ****         bms->tempSensor[9] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3443              		.loc 1 754 0
 3444 00f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3445 00f2 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3446 00f4 03EB0123 		add	r3, r3, r1, lsl #8
 3447 00f8 A3EBC303 		sub	r3, r3, r3, lsl #3
 3448 00fc 03F5E043 		add	r3, r3, #28672
 3449 0100 1C33     		adds	r3, r3, #28
 3450 0102 A0F8D230 		strh	r3, [r0, #210]	@ movhi
 755:Core/Src/bms.c ****         break;
 3451              		.loc 1 755 0
 3452 0106 96E7     		b	.L181
 3453              	.L192:
 758:Core/Src/bms.c ****         bms->tempSensor[10] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3454              		.loc 1 758 0
 3455 0108 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3456 010a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3457 010c 03EB0123 		add	r3, r3, r1, lsl #8
 3458 0110 A3EBC303 		sub	r3, r3, r3, lsl #3
 3459 0114 47F21C01 		movw	r1, #28700
 3460 0118 0B44     		add	r3, r3, r1
 3461 011a A0F8D430 		strh	r3, [r0, #212]	@ movhi
 759:Core/Src/bms.c ****         bms->tempSensor[11] = -((((canRx[2] << 8) + canRx[3]) * 7) - 28700);
 3462              		.loc 1 759 0
 3463 011e 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 3464 0120 D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 3465 0122 03EB0423 		add	r3, r3, r4, lsl #8
 3466 0126 A3EBC303 		sub	r3, r3, r3, lsl #3
 3467 012a 0B44     		add	r3, r3, r1
 3468 012c A0F8D630 		strh	r3, [r0, #214]	@ movhi
 760:Core/Src/bms.c ****         break;
 3469              		.loc 1 760 0
 3470 0130 81E7     		b	.L181
 3471              	.L193:
 763:Core/Src/bms.c ****         bms->tempSensor[12] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3472              		.loc 1 763 0
 3473 0132 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3474 0134 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3475 0136 03EB0123 		add	r3, r3, r1, lsl #8
 3476 013a A3EBC303 		sub	r3, r3, r3, lsl #3
 3477 013e 03F5E043 		add	r3, r3, #28672
 3478 0142 1C33     		adds	r3, r3, #28
 3479 0144 A0F8D830 		strh	r3, [r0, #216]	@ movhi
 764:Core/Src/bms.c ****         break;
 3480              		.loc 1 764 0
 3481 0148 75E7     		b	.L181
 3482              	.L194:
 767:Core/Src/bms.c ****         bms->tempSensor[13] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3483              		.loc 1 767 0
 3484 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3485 014c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3486 014e 03EB0123 		add	r3, r3, r1, lsl #8
ARM GAS  /tmp/ccBIZiye.s 			page 79


 3487 0152 A3EBC303 		sub	r3, r3, r3, lsl #3
 3488 0156 03F5E043 		add	r3, r3, #28672
 3489 015a 1C33     		adds	r3, r3, #28
 3490 015c A0F8DA30 		strh	r3, [r0, #218]	@ movhi
 768:Core/Src/bms.c ****         break;
 3491              		.loc 1 768 0
 3492 0160 69E7     		b	.L181
 3493              	.L195:
 771:Core/Src/bms.c ****         bms->tempSensor[14] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3494              		.loc 1 771 0
 3495 0162 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3496 0164 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3497 0166 03EB0123 		add	r3, r3, r1, lsl #8
 3498 016a A3EBC303 		sub	r3, r3, r3, lsl #3
 3499 016e 03F5E043 		add	r3, r3, #28672
 3500 0172 1C33     		adds	r3, r3, #28
 3501 0174 A0F8DC30 		strh	r3, [r0, #220]	@ movhi
 772:Core/Src/bms.c ****         break;
 3502              		.loc 1 772 0
 3503 0178 5DE7     		b	.L181
 3504              	.L196:
 775:Core/Src/bms.c ****         bms->tempSensor[15] = -((((canRx[0] << 8) + canRx[1]) * 7) - 28700);
 3505              		.loc 1 775 0
 3506 017a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3507 017c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 3508 017e 03EB0123 		add	r3, r3, r1, lsl #8
 3509 0182 A3EBC303 		sub	r3, r3, r3, lsl #3
 3510 0186 03F5E043 		add	r3, r3, #28672
 3511 018a 1C33     		adds	r3, r3, #28
 3512 018c A0F8DE30 		strh	r3, [r0, #222]	@ movhi
 3513              		.loc 1 781 0
 3514 0190 51E7     		b	.L181
 3515              		.cfi_endproc
 3516              	.LFE152:
 3518              		.comm	charged,1,1
 3519              		.comm	vechicleState,1,1
 3520              		.comm	BMS,492,4
 3521              		.comm	txCycle3,4,4
 3522              		.comm	txCycle2,4,4
 3523              		.comm	txCycle,4,4
 3524              		.comm	canTx3,8,4
 3525              		.comm	canTx2,8,4
 3526              		.comm	canTx,8,4
 3527              		.comm	canMailbox2,4,4
 3528              		.comm	canMailbox,4,4
 3529              		.comm	canRx3,8,4
 3530              		.comm	canRx2,8,4
 3531              		.comm	canRx,8,4
 3532              		.comm	txMsgExt3,24,4
 3533              		.comm	txMsg3,24,4
 3534              		.comm	rxMsg3,28,4
 3535              		.comm	txMsgExt2,24,4
 3536              		.comm	txMsg2,24,4
 3537              		.comm	rxMsg2,28,4
 3538              		.comm	txMsgExt,24,4
 3539              		.comm	txMsg,24,4
 3540              		.comm	rxMsg,28,4
ARM GAS  /tmp/ccBIZiye.s 			page 80


 3541              		.comm	sf5,40,4
 3542              		.comm	sf4,40,4
 3543              		.comm	sf3,40,4
 3544              		.comm	sf2,40,4
 3545              		.comm	sf,40,4
 3546              		.comm	hcan3,40,4
 3547              		.comm	hcan2,40,4
 3548              		.comm	hcan1,40,4
 3549              		.section	.bss.readIndex,"aw",%nobits
 3550              		.align	2
 3551              		.set	.LANCHOR0,. + 0
 3554              	readIndex:
 3555 0000 00000000 		.space	4
 3556              		.section	.bss.readings,"aw",%nobits
 3557              		.align	2
 3558              		.set	.LANCHOR1,. + 0
 3561              	readings:
 3562 0000 00000000 		.space	40
 3562      00000000 
 3562      00000000 
 3562      00000000 
 3562      00000000 
 3563              		.section	.bss.total,"aw",%nobits
 3564              		.align	2
 3565              		.set	.LANCHOR2,. + 0
 3568              	total:
 3569 0000 00000000 		.space	4
 3570              		.section	.rodata.balanceByte,"a",%progbits
 3571              		.align	2
 3572              		.set	.LANCHOR3,. + 0
 3575              	balanceByte:
 3576 0000 00       		.byte	0
 3577 0001 00       		.byte	0
 3578 0002 00       		.byte	0
 3579 0003 00       		.byte	0
 3580 0004 00       		.byte	0
 3581 0005 00       		.byte	0
 3582 0006 01       		.byte	1
 3583 0007 01       		.byte	1
 3584 0008 01       		.byte	1
 3585 0009 01       		.byte	1
 3586 000a 01       		.byte	1
 3587 000b 01       		.byte	1
 3588 000c 01       		.byte	1
 3589 000d 01       		.byte	1
 3590 000e 02       		.byte	2
 3591 000f 02       		.byte	2
 3592 0010 02       		.byte	2
 3593 0011 02       		.byte	2
 3594 0012 02       		.byte	2
 3595 0013 02       		.byte	2
 3596 0014 02       		.byte	2
 3597 0015 02       		.byte	2
 3598 0016 03       		.byte	3
 3599 0017 03       		.byte	3
 3600 0018 03       		.byte	3
 3601 0019 03       		.byte	3
ARM GAS  /tmp/ccBIZiye.s 			page 81


 3602 001a 03       		.byte	3
 3603 001b 03       		.byte	3
 3604 001c 03       		.byte	3
 3605 001d 03       		.byte	3
 3606 001e 04       		.byte	4
 3607 001f 04       		.byte	4
 3608 0020 04       		.byte	4
 3609 0021 04       		.byte	4
 3610 0022 04       		.byte	4
 3611 0023 04       		.byte	4
 3612 0024 04       		.byte	4
 3613 0025 04       		.byte	4
 3614 0026 05       		.byte	5
 3615 0027 05       		.byte	5
 3616 0028 05       		.byte	5
 3617 0029 05       		.byte	5
 3618 002a 05       		.byte	5
 3619 002b 05       		.byte	5
 3620 002c 05       		.byte	5
 3621 002d 05       		.byte	5
 3622 002e 06       		.byte	6
 3623 002f 06       		.byte	6
 3624 0030 06       		.byte	6
 3625 0031 06       		.byte	6
 3626 0032 06       		.byte	6
 3627 0033 06       		.byte	6
 3628 0034 06       		.byte	6
 3629 0035 06       		.byte	6
 3630 0036 07       		.byte	7
 3631 0037 07       		.byte	7
 3632 0038 07       		.byte	7
 3633 0039 07       		.byte	7
 3634 003a 07       		.byte	7
 3635 003b 07       		.byte	7
 3636 003c 07       		.byte	7
 3637 003d 07       		.byte	7
 3638 003e 00       		.byte	0
 3639 003f 00       		.byte	0
 3640 0040 00       		.byte	0
 3641 0041 00       		.byte	0
 3642 0042 00       		.byte	0
 3643 0043 00       		.byte	0
 3644 0044 00       		.byte	0
 3645 0045 00       		.byte	0
 3646 0046 01       		.byte	1
 3647 0047 01       		.byte	1
 3648 0048 01       		.byte	1
 3649 0049 01       		.byte	1
 3650 004a 01       		.byte	1
 3651 004b 01       		.byte	1
 3652 004c 01       		.byte	1
 3653 004d 01       		.byte	1
 3654 004e 02       		.byte	2
 3655 004f 02       		.byte	2
 3656 0050 02       		.byte	2
 3657 0051 02       		.byte	2
 3658 0052 02       		.byte	2
ARM GAS  /tmp/ccBIZiye.s 			page 82


 3659 0053 02       		.byte	2
 3660 0054 03       		.byte	3
 3661 0055 03       		.byte	3
 3662 0056 03       		.byte	3
 3663 0057 03       		.byte	3
 3664 0058 03       		.byte	3
 3665 0059 03       		.byte	3
 3666 005a 04       		.byte	4
 3667 005b 04       		.byte	4
 3668 005c 04       		.byte	4
 3669 005d 04       		.byte	4
 3670 005e 04       		.byte	4
 3671 005f 04       		.byte	4
 3672              		.section	.rodata.balanceShift,"a",%progbits
 3673              		.align	2
 3674              		.set	.LANCHOR4,. + 0
 3677              	balanceShift:
 3678 0000 01       		.byte	1
 3679 0001 02       		.byte	2
 3680 0002 04       		.byte	4
 3681 0003 08       		.byte	8
 3682 0004 0A       		.byte	10
 3683 0005 14       		.byte	20
 3684 0006 01       		.byte	1
 3685 0007 02       		.byte	2
 3686 0008 04       		.byte	4
 3687 0009 08       		.byte	8
 3688 000a 0A       		.byte	10
 3689 000b 14       		.byte	20
 3690 000c 28       		.byte	40
 3691 000d 50       		.byte	80
 3692 000e 01       		.byte	1
 3693 000f 02       		.byte	2
 3694 0010 04       		.byte	4
 3695 0011 08       		.byte	8
 3696 0012 0A       		.byte	10
 3697 0013 14       		.byte	20
 3698 0014 28       		.byte	40
 3699 0015 50       		.byte	80
 3700 0016 01       		.byte	1
 3701 0017 02       		.byte	2
 3702 0018 04       		.byte	4
 3703 0019 08       		.byte	8
 3704 001a 0A       		.byte	10
 3705 001b 14       		.byte	20
 3706 001c 28       		.byte	40
 3707 001d 50       		.byte	80
 3708 001e 01       		.byte	1
 3709 001f 02       		.byte	2
 3710 0020 04       		.byte	4
 3711 0021 08       		.byte	8
 3712 0022 0A       		.byte	10
 3713 0023 14       		.byte	20
 3714 0024 28       		.byte	40
 3715 0025 50       		.byte	80
 3716 0026 01       		.byte	1
 3717 0027 02       		.byte	2
ARM GAS  /tmp/ccBIZiye.s 			page 83


 3718 0028 04       		.byte	4
 3719 0029 08       		.byte	8
 3720 002a 0A       		.byte	10
 3721 002b 14       		.byte	20
 3722 002c 28       		.byte	40
 3723 002d 50       		.byte	80
 3724 002e 01       		.byte	1
 3725 002f 02       		.byte	2
 3726 0030 04       		.byte	4
 3727 0031 08       		.byte	8
 3728 0032 0A       		.byte	10
 3729 0033 14       		.byte	20
 3730 0034 28       		.byte	40
 3731 0035 50       		.byte	80
 3732 0036 01       		.byte	1
 3733 0037 02       		.byte	2
 3734 0038 04       		.byte	4
 3735 0039 08       		.byte	8
 3736 003a 0A       		.byte	10
 3737 003b 14       		.byte	20
 3738 003c 28       		.byte	40
 3739 003d 50       		.byte	80
 3740 003e 01       		.byte	1
 3741 003f 02       		.byte	2
 3742 0040 04       		.byte	4
 3743 0041 08       		.byte	8
 3744 0042 0A       		.byte	10
 3745 0043 14       		.byte	20
 3746 0044 28       		.byte	40
 3747 0045 50       		.byte	80
 3748 0046 01       		.byte	1
 3749 0047 02       		.byte	2
 3750 0048 04       		.byte	4
 3751 0049 08       		.byte	8
 3752 004a 0A       		.byte	10
 3753 004b 14       		.byte	20
 3754 004c 28       		.byte	40
 3755 004d 50       		.byte	80
 3756 004e 01       		.byte	1
 3757 004f 02       		.byte	2
 3758 0050 04       		.byte	4
 3759 0051 08       		.byte	8
 3760 0052 0A       		.byte	10
 3761 0053 14       		.byte	20
 3762 0054 01       		.byte	1
 3763 0055 02       		.byte	2
 3764 0056 04       		.byte	4
 3765 0057 08       		.byte	8
 3766 0058 0A       		.byte	10
 3767 0059 14       		.byte	20
 3768 005a 01       		.byte	1
 3769 005b 02       		.byte	2
 3770 005c 04       		.byte	4
 3771 005d 08       		.byte	8
 3772 005e 0A       		.byte	10
 3773 005f 14       		.byte	20
 3774              		.text
ARM GAS  /tmp/ccBIZiye.s 			page 84


 3775              	.Letext0:
 3776              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 3777              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 3778              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 3779              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 3780              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 3781              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3782              		.file 8 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 3783              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3784              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 3785              		.file 11 "/usr/include/newlib/sys/lock.h"
 3786              		.file 12 "/usr/include/newlib/sys/_types.h"
 3787              		.file 13 "/usr/include/newlib/sys/reent.h"
 3788              		.file 14 "Core/Inc/can_setup.h"
 3789              		.file 15 "Core/Inc/bms.h"
ARM GAS  /tmp/ccBIZiye.s 			page 85


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bms.c
     /tmp/ccBIZiye.s:18     .text.getSOC:0000000000000000 $t
     /tmp/ccBIZiye.s:24     .text.getSOC:0000000000000000 getSOC
     /tmp/ccBIZiye.s:86     .text.getSOC:000000000000004c $d
     /tmp/ccBIZiye.s:94     .text.getHighCellVolt:0000000000000000 $t
     /tmp/ccBIZiye.s:100    .text.getHighCellVolt:0000000000000000 getHighCellVolt
     /tmp/ccBIZiye.s:140    .text.getHighCellTemp:0000000000000000 $t
     /tmp/ccBIZiye.s:146    .text.getHighCellTemp:0000000000000000 getHighCellTemp
     /tmp/ccBIZiye.s:190    .text.getLowCellTemp:0000000000000000 $t
     /tmp/ccBIZiye.s:196    .text.getLowCellTemp:0000000000000000 getLowCellTemp
     /tmp/ccBIZiye.s:237    .text.getAvgCellTemp:0000000000000000 $t
     /tmp/ccBIZiye.s:243    .text.getAvgCellTemp:0000000000000000 getAvgCellTemp
     /tmp/ccBIZiye.s:312    .text.getAvgCellTemp:0000000000000040 $d
     /tmp/ccBIZiye.s:317    .text.getTempDelta:0000000000000000 $t
     /tmp/ccBIZiye.s:323    .text.getTempDelta:0000000000000000 getTempDelta
     /tmp/ccBIZiye.s:341    .text.getCellDelta:0000000000000000 $t
     /tmp/ccBIZiye.s:347    .text.getCellDelta:0000000000000000 getCellDelta
     /tmp/ccBIZiye.s:365    .text.getLowCellVolt:0000000000000000 $t
     /tmp/ccBIZiye.s:371    .text.getLowCellVolt:0000000000000000 getLowCellVolt
     /tmp/ccBIZiye.s:412    .text.getAvgCellVolt:0000000000000000 $t
     /tmp/ccBIZiye.s:418    .text.getAvgCellVolt:0000000000000000 getAvgCellVolt
     /tmp/ccBIZiye.s:460    .text.getAvgCellVolt:0000000000000024 $d
     /tmp/ccBIZiye.s:465    .text.getPackVolt:0000000000000000 $t
     /tmp/ccBIZiye.s:471    .text.getPackVolt:0000000000000000 getPackVolt
     /tmp/ccBIZiye.s:513    .text.getPackVolt:0000000000000020 $d
     /tmp/ccBIZiye.s:518    .text.getCellCount:0000000000000000 $t
     /tmp/ccBIZiye.s:524    .text.getCellCount:0000000000000000 getCellCount
     /tmp/ccBIZiye.s:589    .text.getCellCount:0000000000000038 $d
                            *COM*:00000000000001ec BMS
     /tmp/ccBIZiye.s:594    .text.initBMS:0000000000000000 $t
     /tmp/ccBIZiye.s:601    .text.initBMS:0000000000000000 initBMS
     /tmp/ccBIZiye.s:641    .text.initBMS:0000000000000024 $d
                            *COM*:0000000000000001 vechicleState
                            *COM*:0000000000000001 charged
     /tmp/ccBIZiye.s:650    .text.bmsStateHandler:0000000000000000 $t
     /tmp/ccBIZiye.s:657    .text.bmsStateHandler:0000000000000000 bmsStateHandler
     /tmp/ccBIZiye.s:677    .text.bmsStateHandler:000000000000000e $d
     /tmp/ccBIZiye.s:808    .text.bmsStateHandler:00000000000000ec $d
     /tmp/ccBIZiye.s:815    .text.acChargeCommand:0000000000000000 $t
     /tmp/ccBIZiye.s:822    .text.acChargeCommand:0000000000000000 acChargeCommand
     /tmp/ccBIZiye.s:937    .text.acChargeCommand:000000000000008c $d
                            *COM*:0000000000000018 txMsg2
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000018 txMsg
     /tmp/ccBIZiye.s:948    .text.tx500kData:0000000000000000 $t
     /tmp/ccBIZiye.s:955    .text.tx500kData:0000000000000000 tx500kData
     /tmp/ccBIZiye.s:1043   .text.tx500kData:0000000000000088 $d
     /tmp/ccBIZiye.s:1050   .text.sendCommand:0000000000000000 $t
     /tmp/ccBIZiye.s:1057   .text.sendCommand:0000000000000000 sendCommand
     /tmp/ccBIZiye.s:1110   .text.sendCommand:0000000000000034 $d
                            *COM*:0000000000000018 txMsg3
                            *COM*:0000000000000008 canTx3
     /tmp/ccBIZiye.s:1118   .text.requestBICMdata:0000000000000000 $t
     /tmp/ccBIZiye.s:1125   .text.requestBICMdata:0000000000000000 requestBICMdata
     /tmp/ccBIZiye.s:1280   .text.requestBICMdata:00000000000000a8 $d
ARM GAS  /tmp/ccBIZiye.s 			page 86


     /tmp/ccBIZiye.s:1288   .text.refreshData:0000000000000000 $t
     /tmp/ccBIZiye.s:1295   .text.refreshData:0000000000000000 refreshData
     /tmp/ccBIZiye.s:1381   .text.refreshData:0000000000000060 $d
     /tmp/ccBIZiye.s:1386   .text.balanceCommand:0000000000000000 $t
     /tmp/ccBIZiye.s:1393   .text.balanceCommand:0000000000000000 balanceCommand
     /tmp/ccBIZiye.s:1598   .text.balanceCommand:0000000000000104 $d
     /tmp/ccBIZiye.s:1608   .text.vehicleComms:0000000000000000 $t
     /tmp/ccBIZiye.s:1615   .text.vehicleComms:0000000000000000 vehicleComms
     /tmp/ccBIZiye.s:1637   .text.vehicleComms:0000000000000014 $d
     /tmp/ccBIZiye.s:1644   .text.decodeVolt:0000000000000000 $t
     /tmp/ccBIZiye.s:1651   .text.decodeVolt:0000000000000000 decodeVolt
     /tmp/ccBIZiye.s:1675   .text.decodeVolt:0000000000000016 $d
     /tmp/ccBIZiye.s:1706   .text.decodeVolt:0000000000000054 $t
     /tmp/ccBIZiye.s:2135   .text.decodeVolt:0000000000000370 $d
     /tmp/ccBIZiye.s:2139   .text.decodeVolt:0000000000000374 $t
     /tmp/ccBIZiye.s:2530   .text.decodeVolt:0000000000000674 $d
     /tmp/ccBIZiye.s:2534   .text.decodeVolt:0000000000000678 $t
     /tmp/ccBIZiye.s:2925   .text.decodeVolt:0000000000000984 $d
     /tmp/ccBIZiye.s:2929   .text.decodeVolt:0000000000000988 $t
     /tmp/ccBIZiye.s:3295   .text.decodeVolt:0000000000000c58 $d
     /tmp/ccBIZiye.s:3300   .text.decodeTemp:0000000000000000 $t
     /tmp/ccBIZiye.s:3307   .text.decodeTemp:0000000000000000 decodeTemp
     /tmp/ccBIZiye.s:3327   .text.decodeTemp:0000000000000010 $d
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000004 txCycle
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000008 canRx3
                            *COM*:0000000000000008 canRx2
                            *COM*:0000000000000008 canRx
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000018 txMsgExt
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000028 sf3
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000028 hcan3
                            *COM*:0000000000000028 hcan2
                            *COM*:0000000000000028 hcan1
     /tmp/ccBIZiye.s:3550   .bss.readIndex:0000000000000000 $d
     /tmp/ccBIZiye.s:3554   .bss.readIndex:0000000000000000 readIndex
     /tmp/ccBIZiye.s:3557   .bss.readings:0000000000000000 $d
     /tmp/ccBIZiye.s:3561   .bss.readings:0000000000000000 readings
     /tmp/ccBIZiye.s:3564   .bss.total:0000000000000000 $d
     /tmp/ccBIZiye.s:3568   .bss.total:0000000000000000 total
     /tmp/ccBIZiye.s:3571   .rodata.balanceByte:0000000000000000 $d
     /tmp/ccBIZiye.s:3575   .rodata.balanceByte:0000000000000000 balanceByte
     /tmp/ccBIZiye.s:3673   .rodata.balanceShift:0000000000000000 $d
     /tmp/ccBIZiye.s:3677   .rodata.balanceShift:0000000000000000 balanceShift
                     .debug_frame:0000000000000010 $d
     /tmp/ccBIZiye.s:682    .text.bmsStateHandler:0000000000000013 $d
ARM GAS  /tmp/ccBIZiye.s 			page 87


     /tmp/ccBIZiye.s:682    .text.bmsStateHandler:0000000000000014 $t
     /tmp/ccBIZiye.s:3342   .text.decodeTemp:000000000000001f $d
     /tmp/ccBIZiye.s:3342   .text.decodeTemp:0000000000000020 $t

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_dcmpgt
c2tx
c1tx
c3tx
__aeabi_dmul
__aeabi_d2uiz
