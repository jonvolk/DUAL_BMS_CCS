ARM GAS  /tmp/ccn5TrpU.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"queue.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB32:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/ccn5TrpU.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** for the header files above, but not in this file, in order to generate the
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** correct privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure instead holds a pointer to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and structure member to ensure the readability of the code
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** is maintained.  The QueuePointers_t and SemaphoreData_t types are used to form
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** a union as their usage is mutually exclusive dependent on what the queue is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** being used for. */
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueuePointers
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcReadFrom;				/*< Points to the last place that a queued item was read from when the stru
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } QueuePointers_t;
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct SemaphoreData
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xMutexHolder;		 /*< The handle of the task that holds the mutex. */
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex ha
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } SemaphoreData_t;
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
ARM GAS  /tmp/ccn5TrpU.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: https://www.freertos.org/Embedded-RTOS-Queues.html
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition 		/* The old naming convention is used to prevent breaking kernel aw
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueuePointers_t xQueue;		/*< Data required exclusively when this structure is used as a queue. */
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		SemaphoreData_t xSemaphore; /*< Data required exclusively when this structure is used as a semaph
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
ARM GAS  /tmp/ccn5TrpU.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
ARM GAS  /tmp/ccn5TrpU.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint 
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
ARM GAS  /tmp/ccn5TrpU.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 !e9087 Unusual cast is ok as the structure
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
ARM GAS  /tmp/ccn5TrpU.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Allocate the queue and storage area.  Justification for MISRA
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deviation as follows:  pvPortMalloc() always ensures returned memory
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		blocks are aligned per the requirements of the MCU stack.  In this case
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pvPortMalloc() must return a pointer that is guaranteed to meet the
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		alignment requirements of the Queue_t structure - which in this case
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is an int8_t *.  Therefore, whenever the stack alignment requirements
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		are greater than or equal to the pointer to char requirements the cast
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is safe.  In other cases alignment requirements are not strict (one or
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		two bytes). */
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( uint8_t * ) pxNewQueue;
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, es
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
ARM GAS  /tmp/ccn5TrpU.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueTy
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xNewQueue;
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxSemaphore = ( Queue_t * ) xSemaphore;
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
ARM GAS  /tmp/ccn5TrpU.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxSemaphore->uxQueueType == queueQUEUE_IS_MUTEX )
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = pxSemaphore->u.xSemaphore.xMutexHolder;
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( ( Queue_t * ) xSemaphore )->u.xSemaphore.xMutexHolder;
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then xMutexHolder will not
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if xMutexHolder is equal to
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
ARM GAS  /tmp/ccn5TrpU.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
ARM GAS  /tmp/ccn5TrpU.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
ARM GAS  /tmp/ccn5TrpU.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 )
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* Do not notify the queue set as an existing item
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							was overwritten in the queue so the number of items
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							in the queue has not changed. */
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
ARM GAS  /tmp/ccn5TrpU.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
ARM GAS  /tmp/ccn5TrpU.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  /tmp/ccn5TrpU.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
ARM GAS  /tmp/ccn5TrpU.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
ARM GAS  /tmp/ccn5TrpU.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
ARM GAS  /tmp/ccn5TrpU.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutex
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
ARM GAS  /tmp/ccn5TrpU.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
ARM GAS  /tmp/ccn5TrpU.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
ARM GAS  /tmp/ccn5TrpU.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccn5TrpU.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
ARM GAS  /tmp/ccn5TrpU.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904 This function relaxes the coding standard somewhat to allow return
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
ARM GAS  /tmp/ccn5TrpU.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccn5TrpU.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
ARM GAS  /tmp/ccn5TrpU.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
ARM GAS  /tmp/ccn5TrpU.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*lint -save -e904  This function relaxes the coding standard somewhat to
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	allow return statements within the function itself.  This is done in the
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interest of execution time efficiency. */
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
ARM GAS  /tmp/ccn5TrpU.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
ARM GAS  /tmp/ccn5TrpU.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint -restore */
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
ARM GAS  /tmp/ccn5TrpU.s 			page 33


1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
ARM GAS  /tmp/ccn5TrpU.s 			page 34


1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccn5TrpU.s 			page 35


1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 36


1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
ARM GAS  /tmp/ccn5TrpU.s 			page 37


2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  27              		.loc 1 2046 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
  33              		.loc 1 2055 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 23B1     		cbz	r3, .L3
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET
  36              		.loc 1 2057 0
  37 0004 036B     		ldr	r3, [r0, #48]
  38 0006 1868     		ldr	r0, [r3]
  39              	.LVL1:
  40 0008 C0F13800 		rsb	r0, r0, #56
  41              	.LVL2:
  42 000c 7047     		bx	lr
  43              	.LVL3:
  44              	.L3:
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  45              		.loc 1 2061 0
  46 000e 0020     		movs	r0, #0
  47              	.LVL4:
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 38


2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  48              		.loc 1 2065 0
  49 0010 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE32:
  53              		.section	.text.prvIsQueueFull,"ax",%progbits
  54              		.align	1
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	prvIsQueueFull:
  61              	.LFB38:
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccn5TrpU.s 			page 39


2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxIt
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char typ
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccn5TrpU.s 			page 40


2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
ARM GAS  /tmp/ccn5TrpU.s 			page 41


2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccn5TrpU.s 			page 42


2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  62              		.loc 1 2328 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              	.LVL5:
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccn5TrpU.s 			page 43


  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 0446     		mov	r4, r0
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  73              		.loc 1 2331 0
  74 0004 FFF7FEFF 		bl	vPortEnterCritical
  75              	.LVL6:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  76              		.loc 1 2333 0
  77 0008 A26B     		ldr	r2, [r4, #56]
  78 000a E36B     		ldr	r3, [r4, #60]
  79 000c 9A42     		cmp	r2, r3
  80 000e 04D0     		beq	.L8
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  81              		.loc 1 2339 0
  82 0010 0024     		movs	r4, #0
  83              	.LVL7:
  84              	.L5:
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  85              		.loc 1 2342 0
  86 0012 FFF7FEFF 		bl	vPortExitCritical
  87              	.LVL8:
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  88              		.loc 1 2345 0
  89 0016 2046     		mov	r0, r4
  90 0018 10BD     		pop	{r4, pc}
  91              	.LVL9:
  92              	.L8:
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
  93              		.loc 1 2335 0
  94 001a 0124     		movs	r4, #1
  95              	.LVL10:
  96 001c F9E7     		b	.L5
  97              		.cfi_endproc
  98              	.LFE38:
 100              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 101              		.align	1
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv4-sp-d16
 107              	prvIsQueueEmpty:
 108              	.LFB36:
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 109              		.loc 1 2288 0
ARM GAS  /tmp/ccn5TrpU.s 			page 44


 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              	.LVL11:
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 0446     		mov	r4, r0
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 120              		.loc 1 2291 0
 121 0004 FFF7FEFF 		bl	vPortEnterCritical
 122              	.LVL12:
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 123              		.loc 1 2293 0
 124 0008 A36B     		ldr	r3, [r4, #56]
 125 000a 23B1     		cbz	r3, .L13
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 126              		.loc 1 2299 0
 127 000c 0024     		movs	r4, #0
 128              	.LVL13:
 129              	.L10:
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 130              		.loc 1 2302 0
 131 000e FFF7FEFF 		bl	vPortExitCritical
 132              	.LVL14:
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 133              		.loc 1 2305 0
 134 0012 2046     		mov	r0, r4
 135 0014 10BD     		pop	{r4, pc}
 136              	.LVL15:
 137              	.L13:
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 138              		.loc 1 2295 0
 139 0016 0124     		movs	r4, #1
 140              	.LVL16:
 141 0018 F9E7     		b	.L10
 142              		.cfi_endproc
 143              	.LFE36:
 145              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 146              		.align	1
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 150              		.fpu fpv4-sp-d16
 152              	prvCopyDataToQueue:
 153              	.LFB33:
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 154              		.loc 1 2071 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL17:
 159 0000 70B5     		push	{r4, r5, r6, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccn5TrpU.s 			page 45


 162              		.cfi_offset 4, -16
 163              		.cfi_offset 5, -12
 164              		.cfi_offset 6, -8
 165              		.cfi_offset 14, -4
 166 0002 0446     		mov	r4, r0
 167 0004 1646     		mov	r6, r2
 168              	.LVL18:
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 169              		.loc 1 2077 0
 170 0006 856B     		ldr	r5, [r0, #56]
 171              	.LVL19:
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 172              		.loc 1 2079 0
 173 0008 026C     		ldr	r2, [r0, #64]
 174              	.LVL20:
 175 000a 4AB9     		cbnz	r2, .L15
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 176              		.loc 1 2083 0
 177 000c 0368     		ldr	r3, [r0]
 178 000e 53BB     		cbnz	r3, .L19
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 179              		.loc 1 2086 0
 180 0010 8068     		ldr	r0, [r0, #8]
 181              	.LVL21:
 182 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 183              	.LVL22:
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 184              		.loc 1 2087 0
 185 0016 0023     		movs	r3, #0
 186 0018 A360     		str	r3, [r4, #8]
 187              	.LVL23:
 188              	.L16:
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 189              		.loc 1 2143 0
 190 001a 0135     		adds	r5, r5, #1
 191              	.LVL24:
 192 001c A563     		str	r5, [r4, #56]
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 193              		.loc 1 2146 0
 194 001e 70BD     		pop	{r4, r5, r6, pc}
 195              	.LVL25:
 196              	.L15:
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 197              		.loc 1 2096 0
 198 0020 6EB9     		cbnz	r6, .L17
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, esp
 199              		.loc 1 2098 0
 200 0022 4068     		ldr	r0, [r0, #4]
 201              	.LVL26:
 202 0024 FFF7FEFF 		bl	memcpy
 203              	.LVL27:
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as co
 204              		.loc 1 2099 0
 205 0028 226C     		ldr	r2, [r4, #64]
 206 002a 6368     		ldr	r3, [r4, #4]
 207 002c 1344     		add	r3, r3, r2
 208 002e 6360     		str	r3, [r4, #4]
ARM GAS  /tmp/ccn5TrpU.s 			page 46


2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 209              		.loc 1 2100 0
 210 0030 A268     		ldr	r2, [r4, #8]
 211 0032 9342     		cmp	r3, r2
 212 0034 19D3     		bcc	.L20
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 213              		.loc 1 2102 0
 214 0036 2368     		ldr	r3, [r4]
 215 0038 6360     		str	r3, [r4, #4]
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 216              		.loc 1 2072 0
 217 003a 0020     		movs	r0, #0
 218 003c EDE7     		b	.L16
 219              	.LVL28:
 220              	.L17:
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 221              		.loc 1 2111 0
 222 003e C068     		ldr	r0, [r0, #12]
 223              	.LVL29:
 224 0040 FFF7FEFF 		bl	memcpy
 225              	.LVL30:
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as co
 226              		.loc 1 2112 0
 227 0044 236C     		ldr	r3, [r4, #64]
 228 0046 5B42     		negs	r3, r3
 229 0048 E268     		ldr	r2, [r4, #12]
 230 004a 1A44     		add	r2, r2, r3
 231 004c E260     		str	r2, [r4, #12]
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 232              		.loc 1 2113 0
 233 004e 2168     		ldr	r1, [r4]
 234 0050 8A42     		cmp	r2, r1
 235 0052 02D2     		bcs	.L18
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 236              		.loc 1 2115 0
 237 0054 A268     		ldr	r2, [r4, #8]
 238 0056 1344     		add	r3, r3, r2
 239 0058 E360     		str	r3, [r4, #12]
 240              	.L18:
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 241              		.loc 1 2122 0
 242 005a 022E     		cmp	r6, #2
 243 005c 07D1     		bne	.L21
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 244              		.loc 1 2124 0
 245 005e 45B1     		cbz	r5, .L22
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 246              		.loc 1 2130 0
 247 0060 013D     		subs	r5, r5, #1
 248              	.LVL31:
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 249              		.loc 1 2072 0
 250 0062 0020     		movs	r0, #0
 251 0064 D9E7     		b	.L16
 252              	.LVL32:
 253              	.L19:
 254 0066 0020     		movs	r0, #0
ARM GAS  /tmp/ccn5TrpU.s 			page 47


 255              	.LVL33:
 256 0068 D7E7     		b	.L16
 257              	.LVL34:
 258              	.L20:
 259 006a 0020     		movs	r0, #0
 260 006c D5E7     		b	.L16
 261              	.L21:
 262 006e 0020     		movs	r0, #0
 263 0070 D3E7     		b	.L16
 264              	.L22:
 265 0072 0020     		movs	r0, #0
 266 0074 D1E7     		b	.L16
 267              		.cfi_endproc
 268              	.LFE33:
 270              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 271              		.align	1
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	prvCopyDataFromQueue:
 278              	.LFB34:
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 279              		.loc 1 2150 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              	.LVL35:
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 284              		.loc 1 2151 0
 285 0000 026C     		ldr	r2, [r0, #64]
 286 0002 72B1     		cbz	r2, .L28
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 287              		.loc 1 2150 0
 288 0004 10B5     		push	{r4, lr}
 289              	.LCFI3:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
 293 0006 0346     		mov	r3, r0
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justi
 294              		.loc 1 2153 0
 295 0008 C468     		ldr	r4, [r0, #12]
 296 000a 1444     		add	r4, r4, r2
 297 000c C460     		str	r4, [r0, #12]
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 298              		.loc 1 2154 0
 299 000e 8068     		ldr	r0, [r0, #8]
 300              	.LVL36:
 301 0010 8442     		cmp	r4, r0
 302 0012 01D3     		bcc	.L26
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 303              		.loc 1 2156 0
 304 0014 1868     		ldr	r0, [r3]
 305 0016 D860     		str	r0, [r3, #12]
 306              	.L26:
 307 0018 0846     		mov	r0, r1
ARM GAS  /tmp/ccn5TrpU.s 			page 48


2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 308              		.loc 1 2162 0
 309 001a D968     		ldr	r1, [r3, #12]
 310              	.LVL37:
 311 001c FFF7FEFF 		bl	memcpy
 312              	.LVL38:
 313 0020 10BD     		pop	{r4, pc}
 314              	.LVL39:
 315              	.L28:
 316              	.LCFI4:
 317              		.cfi_def_cfa_offset 0
 318              		.cfi_restore 4
 319              		.cfi_restore 14
 320 0022 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE34:
 324              		.section	.text.prvUnlockQueue,"ax",%progbits
 325              		.align	1
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu fpv4-sp-d16
 331              	prvUnlockQueue:
 332              	.LFB35:
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 333              		.loc 1 2168 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              	.LVL40:
 338 0000 38B5     		push	{r3, r4, r5, lr}
 339              	.LCFI5:
 340              		.cfi_def_cfa_offset 16
 341              		.cfi_offset 3, -16
 342              		.cfi_offset 4, -12
 343              		.cfi_offset 5, -8
 344              		.cfi_offset 14, -4
 345 0002 0546     		mov	r5, r0
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 346              		.loc 1 2175 0
 347 0004 FFF7FEFF 		bl	vPortEnterCritical
 348              	.LVL41:
 349              	.LBB118:
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 350              		.loc 1 2177 0
 351 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 352 000c 64B2     		sxtb	r4, r4
 353              	.LVL42:
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 354              		.loc 1 2180 0
 355 000e 01E0     		b	.L32
 356              	.L34:
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 357              		.loc 1 2248 0
 358 0010 013C     		subs	r4, r4, #1
 359              	.LVL43:
 360 0012 64B2     		sxtb	r4, r4
ARM GAS  /tmp/ccn5TrpU.s 			page 49


 361              	.LVL44:
 362              	.L32:
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 363              		.loc 1 2180 0
 364 0014 002C     		cmp	r4, #0
 365 0016 0ADD     		ble	.L33
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 366              		.loc 1 2228 0
 367 0018 6B6A     		ldr	r3, [r5, #36]
 368 001a 43B1     		cbz	r3, .L33
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 369              		.loc 1 2230 0
 370 001c 05F12400 		add	r0, r5, #36
 371 0020 FFF7FEFF 		bl	xTaskRemoveFromEventList
 372              	.LVL45:
 373 0024 0028     		cmp	r0, #0
 374 0026 F3D0     		beq	.L34
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 375              		.loc 1 2234 0
 376 0028 FFF7FEFF 		bl	vTaskMissedYield
 377              	.LVL46:
 378 002c F0E7     		b	.L34
 379              	.L33:
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 380              		.loc 1 2251 0
 381 002e FF23     		movs	r3, #255
 382 0030 85F84530 		strb	r3, [r5, #69]
 383              	.LBE118:
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 384              		.loc 1 2253 0
 385 0034 FFF7FEFF 		bl	vPortExitCritical
 386              	.LVL47:
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 387              		.loc 1 2256 0
 388 0038 FFF7FEFF 		bl	vPortEnterCritical
 389              	.LVL48:
 390              	.LBB119:
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 391              		.loc 1 2258 0
 392 003c 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 393              	.LVL49:
 394 0040 64B2     		sxtb	r4, r4
 395              	.LVL50:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 396              		.loc 1 2260 0
 397 0042 01E0     		b	.L36
 398              	.L38:
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 399              		.loc 1 2273 0
 400 0044 013C     		subs	r4, r4, #1
 401              	.LVL51:
 402 0046 64B2     		sxtb	r4, r4
 403              	.LVL52:
 404              	.L36:
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 405              		.loc 1 2260 0
 406 0048 002C     		cmp	r4, #0
ARM GAS  /tmp/ccn5TrpU.s 			page 50


 407 004a 0ADD     		ble	.L37
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 408              		.loc 1 2262 0
 409 004c 2B69     		ldr	r3, [r5, #16]
 410 004e 43B1     		cbz	r3, .L37
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 411              		.loc 1 2264 0
 412 0050 05F11000 		add	r0, r5, #16
 413 0054 FFF7FEFF 		bl	xTaskRemoveFromEventList
 414              	.LVL53:
 415 0058 0028     		cmp	r0, #0
 416 005a F3D0     		beq	.L38
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 417              		.loc 1 2266 0
 418 005c FFF7FEFF 		bl	vTaskMissedYield
 419              	.LVL54:
 420 0060 F0E7     		b	.L38
 421              	.L37:
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 422              		.loc 1 2281 0
 423 0062 FF23     		movs	r3, #255
 424 0064 85F84430 		strb	r3, [r5, #68]
 425              	.LBE119:
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 426              		.loc 1 2283 0
 427 0068 FFF7FEFF 		bl	vPortExitCritical
 428              	.LVL55:
 429 006c 38BD     		pop	{r3, r4, r5, pc}
 430              		.cfi_endproc
 431              	.LFE35:
 433              		.section	.text.xQueueGenericReset,"ax",%progbits
 434              		.align	1
 435              		.global	xQueueGenericReset
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	xQueueGenericReset:
 442              	.LFB4:
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 443              		.loc 1 256 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              	.LVL56:
 448 0000 38B5     		push	{r3, r4, r5, lr}
 449              	.LCFI6:
 450              		.cfi_def_cfa_offset 16
 451              		.cfi_offset 3, -16
 452              		.cfi_offset 4, -12
 453              		.cfi_offset 5, -8
 454              		.cfi_offset 14, -4
 455              	.LVL57:
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 456              		.loc 1 259 0
 457 0002 30B3     		cbz	r0, .L47
 458 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccn5TrpU.s 			page 51


 459 0006 0D46     		mov	r5, r1
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 460              		.loc 1 261 0
 461 0008 FFF7FEFF 		bl	vPortEnterCritical
 462              	.LVL58:
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 463              		.loc 1 263 0
 464 000c 2168     		ldr	r1, [r4]
 465 000e E26B     		ldr	r2, [r4, #60]
 466 0010 236C     		ldr	r3, [r4, #64]
 467 0012 03FB0210 		mla	r0, r3, r2, r1
 468 0016 A060     		str	r0, [r4, #8]
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 469              		.loc 1 264 0
 470 0018 0020     		movs	r0, #0
 471 001a A063     		str	r0, [r4, #56]
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSi
 472              		.loc 1 265 0
 473 001c 6160     		str	r1, [r4, #4]
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 474              		.loc 1 266 0
 475 001e 013A     		subs	r2, r2, #1
 476 0020 02FB0313 		mla	r3, r2, r3, r1
 477 0024 E360     		str	r3, [r4, #12]
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 478              		.loc 1 267 0
 479 0026 FF23     		movs	r3, #255
 480 0028 84F84430 		strb	r3, [r4, #68]
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 481              		.loc 1 268 0
 482 002c 84F84530 		strb	r3, [r4, #69]
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 483              		.loc 1 270 0
 484 0030 C5B9     		cbnz	r5, .L44
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 485              		.loc 1 277 0
 486 0032 2369     		ldr	r3, [r4, #16]
 487 0034 F3B1     		cbz	r3, .L45
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 488              		.loc 1 279 0
 489 0036 04F11000 		add	r0, r4, #16
 490 003a FFF7FEFF 		bl	xTaskRemoveFromEventList
 491              	.LVL59:
 492 003e C8B1     		cbz	r0, .L45
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 493              		.loc 1 281 0
 494 0040 4FF08052 		mov	r2, #268435456
 495 0044 0D4B     		ldr	r3, .L48
 496 0046 1A60     		str	r2, [r3]
 497              		.syntax unified
 498              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 499 0048 BFF34F8F 		dsb
 500              	@ 0 "" 2
 501              	@ 281 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 502 004c BFF36F8F 		isb
 503              	@ 0 "" 2
 504              		.thumb
ARM GAS  /tmp/ccn5TrpU.s 			page 52


 505              		.syntax unified
 506 0050 10E0     		b	.L45
 507              	.LVL60:
 508              	.L47:
 509              	.LBB120:
 510              	.LBB121:
 511              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
ARM GAS  /tmp/ccn5TrpU.s 			page 53


  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 54


 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 55


 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 512              		.loc 2 195 0
 513              		.syntax unified
 514              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 515 0052 4FF05003 			mov r3, #80												
 516 0056 83F31188 		msr basepri, r3											
 517 005a BFF36F8F 		isb														
 518 005e BFF34F8F 		dsb														
 519              	
 520              	@ 0 "" 2
 521              	.LVL61:
 522              		.thumb
 523              		.syntax unified
 524              	.L43:
 525 0062 FEE7     		b	.L43
 526              	.LVL62:
 527              	.L44:
 528              	.LBE121:
 529              	.LBE120:
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 530              		.loc 1 296 0
 531 0064 04F11000 		add	r0, r4, #16
 532 0068 FFF7FEFF 		bl	vListInitialise
 533              	.LVL63:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 534              		.loc 1 297 0
 535 006c 04F12400 		add	r0, r4, #36
ARM GAS  /tmp/ccn5TrpU.s 			page 56


 536 0070 FFF7FEFF 		bl	vListInitialise
 537              	.LVL64:
 538              	.L45:
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 539              		.loc 1 300 0
 540 0074 FFF7FEFF 		bl	vPortExitCritical
 541              	.LVL65:
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 542              		.loc 1 305 0
 543 0078 0120     		movs	r0, #1
 544 007a 38BD     		pop	{r3, r4, r5, pc}
 545              	.LVL66:
 546              	.L49:
 547              		.align	2
 548              	.L48:
 549 007c 04ED00E0 		.word	-536810236
 550              		.cfi_endproc
 551              	.LFE4:
 553              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 554              		.align	1
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu fpv4-sp-d16
 560              	prvInitialiseNewQueue:
 561              	.LFB7:
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 562              		.loc 1 430 0
 563              		.cfi_startproc
 564              		@ args = 4, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              	.LVL67:
 567 0000 38B5     		push	{r3, r4, r5, lr}
 568              	.LCFI7:
 569              		.cfi_def_cfa_offset 16
 570              		.cfi_offset 3, -16
 571              		.cfi_offset 4, -12
 572              		.cfi_offset 5, -8
 573              		.cfi_offset 14, -4
 574 0002 1D46     		mov	r5, r3
 575 0004 049C     		ldr	r4, [sp, #16]
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 576              		.loc 1 435 0
 577 0006 0B46     		mov	r3, r1
 578              	.LVL68:
 579 0008 49B1     		cbz	r1, .L54
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 580              		.loc 1 446 0
 581 000a 2260     		str	r2, [r4]
 582              	.L52:
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 583              		.loc 1 451 0
 584 000c E063     		str	r0, [r4, #60]
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 585              		.loc 1 452 0
 586 000e 2364     		str	r3, [r4, #64]
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 57


 587              		.loc 1 453 0
 588 0010 0121     		movs	r1, #1
 589              	.LVL69:
 590 0012 2046     		mov	r0, r4
 591              	.LVL70:
 592 0014 FFF7FEFF 		bl	xQueueGenericReset
 593              	.LVL71:
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 594              		.loc 1 457 0
 595 0018 84F84C50 		strb	r5, [r4, #76]
 596 001c 38BD     		pop	{r3, r4, r5, pc}
 597              	.LVL72:
 598              	.L54:
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 599              		.loc 1 441 0
 600 001e 2460     		str	r4, [r4]
 601 0020 F4E7     		b	.L52
 602              		.cfi_endproc
 603              	.LFE7:
 605              		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 606              		.align	1
 607              		.global	xQueueGenericCreateStatic
 608              		.syntax unified
 609              		.thumb
 610              		.thumb_func
 611              		.fpu fpv4-sp-d16
 613              	xQueueGenericCreateStatic:
 614              	.LFB5:
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 615              		.loc 1 311 0
 616              		.cfi_startproc
 617              		@ args = 4, pretend = 0, frame = 8
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL73:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 620              		.loc 1 314 0
 621 0000 40B9     		cbnz	r0, .L56
 622              	.LBB122:
 623              	.LBB123:
 624              		.loc 2 195 0
 625              		.syntax unified
 626              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 627 0002 4FF05003 			mov r3, #80												
 628 0006 83F31188 		msr basepri, r3											
 629 000a BFF36F8F 		isb														
 630 000e BFF34F8F 		dsb														
 631              	
 632              	@ 0 "" 2
 633              	.LVL74:
 634              		.thumb
 635              		.syntax unified
 636              	.L57:
 637 0012 FEE7     		b	.L57
 638              	.LVL75:
 639              	.L56:
 640              	.LBE123:
 641              	.LBE122:
ARM GAS  /tmp/ccn5TrpU.s 			page 58


 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 642              		.loc 1 311 0
 643 0014 10B5     		push	{r4, lr}
 644              	.LCFI8:
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 4, -8
 647              		.cfi_offset 14, -4
 648 0016 84B0     		sub	sp, sp, #16
 649              	.LCFI9:
 650              		.cfi_def_cfa_offset 24
 651 0018 0446     		mov	r4, r0
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 652              		.loc 1 318 0
 653 001a 63B1     		cbz	r3, .L73
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 654              		.loc 1 322 0
 655 001c A2B1     		cbz	r2, .L68
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 656              		.loc 1 322 0 is_stmt 0 discriminator 2
 657 001e A9B1     		cbz	r1, .L69
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 658              		.loc 1 322 0
 659 0020 0120     		movs	r0, #1
 660              	.LVL76:
 661              	.L60:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 662              		.loc 1 322 0 discriminator 6
 663 0022 A8B9     		cbnz	r0, .L61
 664              	.LBB124:
 665              	.LBB125:
 666              		.loc 2 195 0 is_stmt 1
 667              		.syntax unified
 668              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 669 0024 4FF05003 			mov r3, #80												
 670 0028 83F31188 		msr basepri, r3											
 671 002c BFF36F8F 		isb														
 672 0030 BFF34F8F 		dsb														
 673              	
 674              	@ 0 "" 2
 675              	.LVL77:
 676              		.thumb
 677              		.syntax unified
 678              	.L62:
 679 0034 FEE7     		b	.L62
 680              	.LVL78:
 681              	.L73:
 682              	.LBE125:
 683              	.LBE124:
 684              	.LBB126:
 685              	.LBB127:
 686              		.syntax unified
 687              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 688 0036 4FF05003 			mov r3, #80												
 689 003a 83F31188 		msr basepri, r3											
 690 003e BFF36F8F 		isb														
 691 0042 BFF34F8F 		dsb														
 692              	
ARM GAS  /tmp/ccn5TrpU.s 			page 59


 693              	@ 0 "" 2
 694              	.LVL79:
 695              		.thumb
 696              		.syntax unified
 697              	.L59:
 698 0046 FEE7     		b	.L59
 699              	.LVL80:
 700              	.L68:
 701              	.LBE127:
 702              	.LBE126:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 703              		.loc 1 322 0
 704 0048 0120     		movs	r0, #1
 705              	.LVL81:
 706 004a EAE7     		b	.L60
 707              	.LVL82:
 708              	.L69:
 709 004c 0020     		movs	r0, #0
 710              	.LVL83:
 711 004e E8E7     		b	.L60
 712              	.L61:
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 713              		.loc 1 323 0
 714 0050 0AB9     		cbnz	r2, .L63
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 715              		.loc 1 323 0 is_stmt 0 discriminator 2
 716 0052 01B1     		cbz	r1, .L63
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 717              		.loc 1 323 0
 718 0054 0020     		movs	r0, #0
 719              	.L63:
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 720              		.loc 1 323 0 discriminator 6
 721 0056 40B9     		cbnz	r0, .L64
 722              	.LBB128:
 723              	.LBB129:
 724              		.loc 2 195 0 is_stmt 1
 725              		.syntax unified
 726              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 727 0058 4FF05003 			mov r3, #80												
 728 005c 83F31188 		msr basepri, r3											
 729 0060 BFF36F8F 		isb														
 730 0064 BFF34F8F 		dsb														
 731              	
 732              	@ 0 "" 2
 733              	.LVL84:
 734              		.thumb
 735              		.syntax unified
 736              	.L65:
 737 0068 FEE7     		b	.L65
 738              	.LVL85:
 739              	.L64:
 740              	.LBE129:
 741              	.LBE128:
 742              	.LBB130:
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 743              		.loc 1 330 0
ARM GAS  /tmp/ccn5TrpU.s 			page 60


 744 006a 5020     		movs	r0, #80
 745 006c 0390     		str	r0, [sp, #12]
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 746              		.loc 1 331 0
 747 006e 0398     		ldr	r0, [sp, #12]
 748 0070 5028     		cmp	r0, #80
 749 0072 08D0     		beq	.L66
 750              	.LBB131:
 751              	.LBB132:
 752              		.loc 2 195 0
 753              		.syntax unified
 754              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 755 0074 4FF05003 			mov r3, #80												
 756 0078 83F31188 		msr basepri, r3											
 757 007c BFF36F8F 		isb														
 758 0080 BFF34F8F 		dsb														
 759              	
 760              	@ 0 "" 2
 761              	.LVL86:
 762              		.thumb
 763              		.syntax unified
 764              	.L67:
 765 0084 FEE7     		b	.L67
 766              	.LVL87:
 767              	.L66:
 768 0086 2046     		mov	r0, r4
 769 0088 1C46     		mov	r4, r3
 770              	.LVL88:
 771              	.LBE132:
 772              	.LBE131:
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 773              		.loc 1 332 0
 774 008a 039B     		ldr	r3, [sp, #12]
 775              	.LVL89:
 776              	.LBE130:
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 777              		.loc 1 348 0
 778 008c 0123     		movs	r3, #1
 779 008e 84F84630 		strb	r3, [r4, #70]
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 780              		.loc 1 352 0
 781 0092 0094     		str	r4, [sp]
 782 0094 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 783 0098 FFF7FEFF 		bl	prvInitialiseNewQueue
 784              	.LVL90:
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 785              		.loc 1 361 0
 786 009c 2046     		mov	r0, r4
 787 009e 04B0     		add	sp, sp, #16
 788              	.LCFI10:
 789              		.cfi_def_cfa_offset 8
 790              		@ sp needed
 791 00a0 10BD     		pop	{r4, pc}
 792              		.cfi_endproc
 793              	.LFE5:
 795              		.section	.text.xQueueGenericCreate,"ax",%progbits
 796              		.align	1
ARM GAS  /tmp/ccn5TrpU.s 			page 61


 797              		.global	xQueueGenericCreate
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu fpv4-sp-d16
 803              	xQueueGenericCreate:
 804              	.LFB6:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 805              		.loc 1 369 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL91:
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 810              		.loc 1 374 0
 811 0000 40B9     		cbnz	r0, .L75
 812              	.LBB133:
 813              	.LBB134:
 814              		.loc 2 195 0
 815              		.syntax unified
 816              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 817 0002 4FF05003 			mov r3, #80												
 818 0006 83F31188 		msr basepri, r3											
 819 000a BFF36F8F 		isb														
 820 000e BFF34F8F 		dsb														
 821              	
 822              	@ 0 "" 2
 823              	.LVL92:
 824              		.thumb
 825              		.syntax unified
 826              	.L76:
 827 0012 FEE7     		b	.L76
 828              	.L75:
 829              	.LBE134:
 830              	.LBE133:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 831              		.loc 1 369 0
 832 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 833              	.LCFI11:
 834              		.cfi_def_cfa_offset 20
 835              		.cfi_offset 4, -20
 836              		.cfi_offset 5, -16
 837              		.cfi_offset 6, -12
 838              		.cfi_offset 7, -8
 839              		.cfi_offset 14, -4
 840 0016 83B0     		sub	sp, sp, #12
 841              	.LCFI12:
 842              		.cfi_def_cfa_offset 32
 843 0018 0646     		mov	r6, r0
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 844              		.loc 1 376 0
 845 001a 11B1     		cbz	r1, .L79
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 846              		.loc 1 385 0
 847 001c 01FB00F0 		mul	r0, r1, r0
 848              	.LVL93:
 849 0020 00E0     		b	.L77
ARM GAS  /tmp/ccn5TrpU.s 			page 62


 850              	.LVL94:
 851              	.L79:
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 852              		.loc 1 379 0
 853 0022 0020     		movs	r0, #0
 854              	.LVL95:
 855              	.L77:
 856 0024 1746     		mov	r7, r2
 857 0026 0C46     		mov	r4, r1
 858              	.LVL96:
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 859              		.loc 1 397 0
 860 0028 5030     		adds	r0, r0, #80
 861              	.LVL97:
 862 002a FFF7FEFF 		bl	pvPortMalloc
 863              	.LVL98:
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 864              		.loc 1 399 0
 865 002e 0546     		mov	r5, r0
 866 0030 50B1     		cbz	r0, .L74
 867              	.LVL99:
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 868              		.loc 1 411 0
 869 0032 0023     		movs	r3, #0
 870 0034 80F84630 		strb	r3, [r0, #70]
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 871              		.loc 1 415 0
 872 0038 0090     		str	r0, [sp]
 873 003a 3B46     		mov	r3, r7
 874 003c 00F15002 		add	r2, r0, #80
 875              	.LVL100:
 876 0040 2146     		mov	r1, r4
 877 0042 3046     		mov	r0, r6
 878              	.LVL101:
 879 0044 FFF7FEFF 		bl	prvInitialiseNewQueue
 880              	.LVL102:
 881              	.L74:
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 882              		.loc 1 424 0
 883 0048 2846     		mov	r0, r5
 884 004a 03B0     		add	sp, sp, #12
 885              	.LCFI13:
 886              		.cfi_def_cfa_offset 20
 887              		@ sp needed
 888 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 889              		.cfi_endproc
 890              	.LFE6:
 892              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 893              		.align	1
 894              		.global	xQueueGetMutexHolder
 895              		.syntax unified
 896              		.thumb
 897              		.thumb_func
 898              		.fpu fpv4-sp-d16
 900              	xQueueGetMutexHolder:
 901              	.LFB11:
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
ARM GAS  /tmp/ccn5TrpU.s 			page 63


 902              		.loc 1 540 0
 903              		.cfi_startproc
 904              		@ args = 0, pretend = 0, frame = 0
 905              		@ frame_needed = 0, uses_anonymous_args = 0
 906              	.LVL103:
 907 0000 10B5     		push	{r4, lr}
 908              	.LCFI14:
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 4, -8
 911              		.cfi_offset 14, -4
 912 0002 0446     		mov	r4, r0
 913              	.LVL104:
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 914              		.loc 1 549 0
 915 0004 FFF7FEFF 		bl	vPortEnterCritical
 916              	.LVL105:
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 917              		.loc 1 551 0
 918 0008 2368     		ldr	r3, [r4]
 919 000a 23B9     		cbnz	r3, .L84
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 920              		.loc 1 553 0
 921 000c A468     		ldr	r4, [r4, #8]
 922              	.LVL106:
 923              	.L83:
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 924              		.loc 1 560 0
 925 000e FFF7FEFF 		bl	vPortExitCritical
 926              	.LVL107:
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 927              		.loc 1 563 0
 928 0012 2046     		mov	r0, r4
 929 0014 10BD     		pop	{r4, pc}
 930              	.LVL108:
 931              	.L84:
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 932              		.loc 1 557 0
 933 0016 0024     		movs	r4, #0
 934              	.LVL109:
 935 0018 F9E7     		b	.L83
 936              		.cfi_endproc
 937              	.LFE11:
 939              		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 940              		.align	1
 941              		.global	xQueueGetMutexHolderFromISR
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	xQueueGetMutexHolderFromISR:
 948              	.LFB12:
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	TaskHandle_t pxReturn;
 949              		.loc 1 571 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953              		@ link register save eliminated.
ARM GAS  /tmp/ccn5TrpU.s 			page 64


 954              	.LVL110:
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 955              		.loc 1 574 0
 956 0000 18B1     		cbz	r0, .L91
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 957              		.loc 1 579 0
 958 0002 0268     		ldr	r2, [r0]
 959 0004 52B9     		cbnz	r2, .L90
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 960              		.loc 1 581 0
 961 0006 8068     		ldr	r0, [r0, #8]
 962              	.LVL111:
 963 0008 7047     		bx	lr
 964              	.LVL112:
 965              	.L91:
 966              	.LBB135:
 967              	.LBB136:
 968              		.loc 2 195 0
 969              		.syntax unified
 970              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 971 000a 4FF05003 			mov r3, #80												
 972 000e 83F31188 		msr basepri, r3											
 973 0012 BFF36F8F 		isb														
 974 0016 BFF34F8F 		dsb														
 975              	
 976              	@ 0 "" 2
 977              	.LVL113:
 978              		.thumb
 979              		.syntax unified
 980              	.L88:
 981 001a FEE7     		b	.L88
 982              	.L90:
 983              	.LBE136:
 984              	.LBE135:
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 985              		.loc 1 585 0
 986 001c 0020     		movs	r0, #0
 987              	.LVL114:
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 988              		.loc 1 589 0
 989 001e 7047     		bx	lr
 990              		.cfi_endproc
 991              	.LFE12:
 993              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 994              		.align	1
 995              		.global	xQueueCreateCountingSemaphoreStatic
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 999              		.fpu fpv4-sp-d16
 1001              	xQueueCreateCountingSemaphoreStatic:
 1002              	.LFB15:
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1003              		.loc 1 694 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccn5TrpU.s 			page 65


 1007              	.LVL115:
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1008              		.loc 1 697 0
 1009 0000 40B9     		cbnz	r0, .L93
 1010              	.LBB137:
 1011              	.LBB138:
 1012              		.loc 2 195 0
 1013              		.syntax unified
 1014              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1015 0002 4FF05003 			mov r3, #80												
 1016 0006 83F31188 		msr basepri, r3											
 1017 000a BFF36F8F 		isb														
 1018 000e BFF34F8F 		dsb														
 1019              	
 1020              	@ 0 "" 2
 1021              	.LVL116:
 1022              		.thumb
 1023              		.syntax unified
 1024              	.L94:
 1025 0012 FEE7     		b	.L94
 1026              	.L93:
 1027              	.LBE138:
 1028              	.LBE137:
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1029              		.loc 1 698 0
 1030 0014 8842     		cmp	r0, r1
 1031 0016 08D2     		bcs	.L95
 1032              	.LBB139:
 1033              	.LBB140:
 1034              		.loc 2 195 0
 1035              		.syntax unified
 1036              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1037 0018 4FF05003 			mov r3, #80												
 1038 001c 83F31188 		msr basepri, r3											
 1039 0020 BFF36F8F 		isb														
 1040 0024 BFF34F8F 		dsb														
 1041              	
 1042              	@ 0 "" 2
 1043              	.LVL117:
 1044              		.thumb
 1045              		.syntax unified
 1046              	.L96:
 1047 0028 FEE7     		b	.L96
 1048              	.L95:
 1049              	.LBE140:
 1050              	.LBE139:
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1051              		.loc 1 694 0
 1052 002a 10B5     		push	{r4, lr}
 1053              	.LCFI15:
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 4, -8
 1056              		.cfi_offset 14, -4
 1057 002c 82B0     		sub	sp, sp, #8
 1058              	.LCFI16:
 1059              		.cfi_def_cfa_offset 16
 1060 002e 1346     		mov	r3, r2
ARM GAS  /tmp/ccn5TrpU.s 			page 66


 1061 0030 0C46     		mov	r4, r1
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1062              		.loc 1 700 0
 1063 0032 0222     		movs	r2, #2
 1064              	.LVL118:
 1065 0034 0092     		str	r2, [sp]
 1066 0036 0022     		movs	r2, #0
 1067 0038 1146     		mov	r1, r2
 1068              	.LVL119:
 1069 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 1070              	.LVL120:
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1071              		.loc 1 702 0
 1072 003e 0346     		mov	r3, r0
 1073 0040 00B1     		cbz	r0, .L92
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1074              		.loc 1 704 0
 1075 0042 8463     		str	r4, [r0, #56]
 1076              	.L92:
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1077              		.loc 1 714 0
 1078 0044 1846     		mov	r0, r3
 1079              	.LVL121:
 1080 0046 02B0     		add	sp, sp, #8
 1081              	.LCFI17:
 1082              		.cfi_def_cfa_offset 8
 1083              		@ sp needed
 1084 0048 10BD     		pop	{r4, pc}
 1085              		.cfi_endproc
 1086              	.LFE15:
 1088              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1089              		.align	1
 1090              		.global	xQueueCreateCountingSemaphore
 1091              		.syntax unified
 1092              		.thumb
 1093              		.thumb_func
 1094              		.fpu fpv4-sp-d16
 1096              	xQueueCreateCountingSemaphore:
 1097              	.LFB16:
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1098              		.loc 1 722 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 0
 1101              		@ frame_needed = 0, uses_anonymous_args = 0
 1102              	.LVL122:
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1103              		.loc 1 725 0
 1104 0000 40B9     		cbnz	r0, .L101
 1105              	.LBB141:
 1106              	.LBB142:
 1107              		.loc 2 195 0
 1108              		.syntax unified
 1109              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1110 0002 4FF05003 			mov r3, #80												
 1111 0006 83F31188 		msr basepri, r3											
 1112 000a BFF36F8F 		isb														
 1113 000e BFF34F8F 		dsb														
ARM GAS  /tmp/ccn5TrpU.s 			page 67


 1114              	
 1115              	@ 0 "" 2
 1116              	.LVL123:
 1117              		.thumb
 1118              		.syntax unified
 1119              	.L102:
 1120 0012 FEE7     		b	.L102
 1121              	.L101:
 1122              	.LBE142:
 1123              	.LBE141:
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1124              		.loc 1 726 0
 1125 0014 8842     		cmp	r0, r1
 1126 0016 08D2     		bcs	.L103
 1127              	.LBB143:
 1128              	.LBB144:
 1129              		.loc 2 195 0
 1130              		.syntax unified
 1131              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1132 0018 4FF05003 			mov r3, #80												
 1133 001c 83F31188 		msr basepri, r3											
 1134 0020 BFF36F8F 		isb														
 1135 0024 BFF34F8F 		dsb														
 1136              	
 1137              	@ 0 "" 2
 1138              	.LVL124:
 1139              		.thumb
 1140              		.syntax unified
 1141              	.L104:
 1142 0028 FEE7     		b	.L104
 1143              	.L103:
 1144              	.LBE144:
 1145              	.LBE143:
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1146              		.loc 1 722 0
 1147 002a 10B5     		push	{r4, lr}
 1148              	.LCFI18:
 1149              		.cfi_def_cfa_offset 8
 1150              		.cfi_offset 4, -8
 1151              		.cfi_offset 14, -4
 1152 002c 0C46     		mov	r4, r1
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1153              		.loc 1 728 0
 1154 002e 0222     		movs	r2, #2
 1155 0030 0021     		movs	r1, #0
 1156              	.LVL125:
 1157 0032 FFF7FEFF 		bl	xQueueGenericCreate
 1158              	.LVL126:
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1159              		.loc 1 730 0
 1160 0036 0346     		mov	r3, r0
 1161 0038 00B1     		cbz	r0, .L100
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1162              		.loc 1 732 0
 1163 003a 8463     		str	r4, [r0, #56]
 1164              	.L100:
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  /tmp/ccn5TrpU.s 			page 68


 1165              		.loc 1 742 0
 1166 003c 1846     		mov	r0, r3
 1167              	.LVL127:
 1168 003e 10BD     		pop	{r4, pc}
 1169              		.cfi_endproc
 1170              	.LFE16:
 1172              		.section	.text.xQueueGenericSend,"ax",%progbits
 1173              		.align	1
 1174              		.global	xQueueGenericSend
 1175              		.syntax unified
 1176              		.thumb
 1177              		.thumb_func
 1178              		.fpu fpv4-sp-d16
 1180              	xQueueGenericSend:
 1181              	.LFB17:
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1182              		.loc 1 748 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 16
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
 1186              	.LVL128:
 1187 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1188              	.LCFI19:
 1189              		.cfi_def_cfa_offset 20
 1190              		.cfi_offset 4, -20
 1191              		.cfi_offset 5, -16
 1192              		.cfi_offset 6, -12
 1193              		.cfi_offset 7, -8
 1194              		.cfi_offset 14, -4
 1195 0002 85B0     		sub	sp, sp, #20
 1196              	.LCFI20:
 1197              		.cfi_def_cfa_offset 40
 1198 0004 0192     		str	r2, [sp, #4]
 1199              	.LVL129:
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1200              		.loc 1 753 0
 1201 0006 60B1     		cbz	r0, .L138
 1202 0008 0446     		mov	r4, r0
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1203              		.loc 1 754 0
 1204 000a 99B1     		cbz	r1, .L139
 1205 000c 0125     		movs	r5, #1
 1206              	.LVL130:
 1207              	.L111:
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1208              		.loc 1 754 0 is_stmt 0 discriminator 6
 1209 000e BDB9     		cbnz	r5, .L112
 1210              	.LBB145:
 1211              	.LBB146:
 1212              		.loc 2 195 0 is_stmt 1
 1213              		.syntax unified
 1214              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1215 0010 4FF05003 			mov r3, #80												
 1216 0014 83F31188 		msr basepri, r3											
 1217 0018 BFF36F8F 		isb														
 1218 001c BFF34F8F 		dsb														
 1219              	
ARM GAS  /tmp/ccn5TrpU.s 			page 69


 1220              	@ 0 "" 2
 1221              	.LVL131:
 1222              		.thumb
 1223              		.syntax unified
 1224              	.L113:
 1225 0020 FEE7     		b	.L113
 1226              	.LVL132:
 1227              	.L138:
 1228              	.LBE146:
 1229              	.LBE145:
 1230              	.LBB147:
 1231              	.LBB148:
 1232              		.syntax unified
 1233              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1234 0022 4FF05003 			mov r3, #80												
 1235 0026 83F31188 		msr basepri, r3											
 1236 002a BFF36F8F 		isb														
 1237 002e BFF34F8F 		dsb														
 1238              	
 1239              	@ 0 "" 2
 1240              	.LVL133:
 1241              		.thumb
 1242              		.syntax unified
 1243              	.L110:
 1244 0032 FEE7     		b	.L110
 1245              	.LVL134:
 1246              	.L139:
 1247              	.LBE148:
 1248              	.LBE147:
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1249              		.loc 1 754 0 discriminator 2
 1250 0034 026C     		ldr	r2, [r0, #64]
 1251              	.LVL135:
 1252 0036 0AB9     		cbnz	r2, .L133
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1253              		.loc 1 754 0 is_stmt 0
 1254 0038 0125     		movs	r5, #1
 1255 003a E8E7     		b	.L111
 1256              	.L133:
 1257 003c 0025     		movs	r5, #0
 1258 003e E6E7     		b	.L111
 1259              	.L112:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1260              		.loc 1 755 0 is_stmt 1
 1261 0040 022B     		cmp	r3, #2
 1262 0042 09D0     		beq	.L140
 1263              	.L114:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1264              		.loc 1 755 0 is_stmt 0 discriminator 6
 1265 0044 6DB9     		cbnz	r5, .L115
 1266              	.LBB149:
 1267              	.LBB150:
 1268              		.loc 2 195 0 is_stmt 1
 1269              		.syntax unified
 1270              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1271 0046 4FF05003 			mov r3, #80												
 1272 004a 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccn5TrpU.s 			page 70


 1273 004e BFF36F8F 		isb														
 1274 0052 BFF34F8F 		dsb														
 1275              	
 1276              	@ 0 "" 2
 1277              	.LVL136:
 1278              		.thumb
 1279              		.syntax unified
 1280              	.L116:
 1281 0056 FEE7     		b	.L116
 1282              	.LVL137:
 1283              	.L140:
 1284              	.LBE150:
 1285              	.LBE149:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1286              		.loc 1 755 0 discriminator 2
 1287 0058 E26B     		ldr	r2, [r4, #60]
 1288 005a 012A     		cmp	r2, #1
 1289 005c F2D0     		beq	.L114
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1290              		.loc 1 755 0 is_stmt 0
 1291 005e 0025     		movs	r5, #0
 1292 0060 F0E7     		b	.L114
 1293              	.L115:
 1294 0062 1E46     		mov	r6, r3
 1295 0064 0F46     		mov	r7, r1
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1296              		.loc 1 758 0 is_stmt 1
 1297 0066 FFF7FEFF 		bl	xTaskGetSchedulerState
 1298              	.LVL138:
 1299 006a 10B9     		cbnz	r0, .L117
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1300              		.loc 1 758 0 is_stmt 0 discriminator 2
 1301 006c 019B     		ldr	r3, [sp, #4]
 1302 006e 03B1     		cbz	r3, .L117
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1303              		.loc 1 758 0
 1304 0070 0025     		movs	r5, #0
 1305              	.L117:
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1306              		.loc 1 758 0 discriminator 6
 1307 0072 45B9     		cbnz	r5, .L136
 1308              	.LBB151:
 1309              	.LBB152:
 1310              		.loc 2 195 0 is_stmt 1
 1311              		.syntax unified
 1312              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1313 0074 4FF05003 			mov r3, #80												
 1314 0078 83F31188 		msr basepri, r3											
 1315 007c BFF36F8F 		isb														
 1316 0080 BFF34F8F 		dsb														
 1317              	
 1318              	@ 0 "" 2
 1319              	.LVL139:
 1320              		.thumb
 1321              		.syntax unified
 1322              	.L119:
 1323 0084 FEE7     		b	.L119
ARM GAS  /tmp/ccn5TrpU.s 			page 71


 1324              	.L136:
 1325              	.LBE152:
 1326              	.LBE151:
 1327 0086 0025     		movs	r5, #0
 1328 0088 2CE0     		b	.L118
 1329              	.LVL140:
 1330              	.L120:
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1331              		.loc 1 840 0
 1332 008a 3246     		mov	r2, r6
 1333 008c 3946     		mov	r1, r7
 1334 008e 2046     		mov	r0, r4
 1335 0090 FFF7FEFF 		bl	prvCopyDataToQueue
 1336              	.LVL141:
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1337              		.loc 1 844 0
 1338 0094 636A     		ldr	r3, [r4, #36]
 1339 0096 8BB1     		cbz	r3, .L122
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1340              		.loc 1 846 0
 1341 0098 04F12400 		add	r0, r4, #36
 1342              	.LVL142:
 1343 009c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1344              	.LVL143:
 1345 00a0 38B1     		cbz	r0, .L123
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1346              		.loc 1 852 0
 1347 00a2 4FF08052 		mov	r2, #268435456
 1348 00a6 374B     		ldr	r3, .L142
 1349 00a8 1A60     		str	r2, [r3]
 1350              		.syntax unified
 1351              	@ 852 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1352 00aa BFF34F8F 		dsb
 1353              	@ 0 "" 2
 1354              	@ 852 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1355 00ae BFF36F8F 		isb
 1356              	@ 0 "" 2
 1357              		.thumb
 1358              		.syntax unified
 1359              	.L123:
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1360              		.loc 1 874 0
 1361 00b2 FFF7FEFF 		bl	vPortExitCritical
 1362              	.LVL144:
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1363              		.loc 1 875 0
 1364 00b6 0120     		movs	r0, #1
 1365              	.L108:
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1366              		.loc 1 954 0
 1367 00b8 05B0     		add	sp, sp, #20
 1368              	.LCFI21:
 1369              		.cfi_remember_state
 1370              		.cfi_def_cfa_offset 20
 1371              		@ sp needed
 1372 00ba F0BD     		pop	{r4, r5, r6, r7, pc}
 1373              	.LVL145:
ARM GAS  /tmp/ccn5TrpU.s 			page 72


 1374              	.L122:
 1375              	.LCFI22:
 1376              		.cfi_restore_state
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1377              		.loc 1 859 0
 1378 00bc 0028     		cmp	r0, #0
 1379 00be F8D0     		beq	.L123
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1380              		.loc 1 865 0
 1381 00c0 4FF08052 		mov	r2, #268435456
 1382 00c4 2F4B     		ldr	r3, .L142
 1383 00c6 1A60     		str	r2, [r3]
 1384              		.syntax unified
 1385              	@ 865 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1386 00c8 BFF34F8F 		dsb
 1387              	@ 0 "" 2
 1388              	@ 865 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1389 00cc BFF36F8F 		isb
 1390              	@ 0 "" 2
 1391              		.thumb
 1392              		.syntax unified
 1393 00d0 EFE7     		b	.L123
 1394              	.LVL146:
 1395              	.L141:
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1396              		.loc 1 883 0
 1397 00d2 FFF7FEFF 		bl	vPortExitCritical
 1398              	.LVL147:
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1399              		.loc 1 888 0
 1400 00d6 0020     		movs	r0, #0
 1401 00d8 EEE7     		b	.L108
 1402              	.L130:
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1403              		.loc 1 940 0
 1404 00da 2046     		mov	r0, r4
 1405 00dc FFF7FEFF 		bl	prvUnlockQueue
 1406              	.LVL148:
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1407              		.loc 1 941 0
 1408 00e0 FFF7FEFF 		bl	xTaskResumeAll
 1409              	.LVL149:
 1410              	.L118:
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1411              		.loc 1 768 0
 1412 00e4 FFF7FEFF 		bl	vPortEnterCritical
 1413              	.LVL150:
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1414              		.loc 1 774 0
 1415 00e8 A26B     		ldr	r2, [r4, #56]
 1416 00ea E36B     		ldr	r3, [r4, #60]
 1417 00ec 9A42     		cmp	r2, r3
 1418 00ee CCD3     		bcc	.L120
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1419              		.loc 1 774 0 is_stmt 0 discriminator 1
 1420 00f0 022E     		cmp	r6, #2
 1421 00f2 CAD0     		beq	.L120
ARM GAS  /tmp/ccn5TrpU.s 			page 73


 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1422              		.loc 1 879 0 is_stmt 1
 1423 00f4 019B     		ldr	r3, [sp, #4]
 1424 00f6 002B     		cmp	r3, #0
 1425 00f8 EBD0     		beq	.L141
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1426              		.loc 1 890 0
 1427 00fa 1DB9     		cbnz	r5, .L126
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1428              		.loc 1 894 0
 1429 00fc 02A8     		add	r0, sp, #8
 1430 00fe FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1431              	.LVL151:
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1432              		.loc 1 895 0
 1433 0102 0125     		movs	r5, #1
 1434              	.LVL152:
 1435              	.L126:
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1436              		.loc 1 904 0
 1437 0104 FFF7FEFF 		bl	vPortExitCritical
 1438              	.LVL153:
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1439              		.loc 1 909 0
 1440 0108 FFF7FEFF 		bl	vTaskSuspendAll
 1441              	.LVL154:
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1442              		.loc 1 910 0
 1443 010c FFF7FEFF 		bl	vPortEnterCritical
 1444              	.LVL155:
 1445 0110 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1446 0114 5BB2     		sxtb	r3, r3
 1447 0116 B3F1FF3F 		cmp	r3, #-1
 1448 011a 02D1     		bne	.L127
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1449              		.loc 1 910 0 is_stmt 0 discriminator 1
 1450 011c 0023     		movs	r3, #0
 1451 011e 84F84430 		strb	r3, [r4, #68]
 1452              	.L127:
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1453              		.loc 1 910 0 discriminator 3
 1454 0122 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1455 0126 5BB2     		sxtb	r3, r3
 1456 0128 B3F1FF3F 		cmp	r3, #-1
 1457 012c 02D1     		bne	.L128
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1458              		.loc 1 910 0 discriminator 4
 1459 012e 0023     		movs	r3, #0
 1460 0130 84F84530 		strb	r3, [r4, #69]
 1461              	.L128:
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1462              		.loc 1 910 0 discriminator 6
 1463 0134 FFF7FEFF 		bl	vPortExitCritical
 1464              	.LVL156:
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1465              		.loc 1 913 0 is_stmt 1 discriminator 6
 1466 0138 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccn5TrpU.s 			page 74


 1467 013a 02A8     		add	r0, sp, #8
 1468 013c FFF7FEFF 		bl	xTaskCheckForTimeOut
 1469              	.LVL157:
 1470 0140 C8B9     		cbnz	r0, .L129
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1471              		.loc 1 915 0
 1472 0142 2046     		mov	r0, r4
 1473 0144 FFF7FEFF 		bl	prvIsQueueFull
 1474              	.LVL158:
 1475 0148 0028     		cmp	r0, #0
 1476 014a C6D0     		beq	.L130
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1477              		.loc 1 918 0
 1478 014c 0199     		ldr	r1, [sp, #4]
 1479 014e 04F11000 		add	r0, r4, #16
 1480 0152 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1481              	.LVL159:
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1482              		.loc 1 925 0
 1483 0156 2046     		mov	r0, r4
 1484 0158 FFF7FEFF 		bl	prvUnlockQueue
 1485              	.LVL160:
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1486              		.loc 1 932 0
 1487 015c FFF7FEFF 		bl	xTaskResumeAll
 1488              	.LVL161:
 1489 0160 0028     		cmp	r0, #0
 1490 0162 BFD1     		bne	.L118
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1491              		.loc 1 934 0
 1492 0164 4FF08052 		mov	r2, #268435456
 1493 0168 064B     		ldr	r3, .L142
 1494 016a 1A60     		str	r2, [r3]
 1495              		.syntax unified
 1496              	@ 934 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1497 016c BFF34F8F 		dsb
 1498              	@ 0 "" 2
 1499              	@ 934 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1500 0170 BFF36F8F 		isb
 1501              	@ 0 "" 2
 1502              		.thumb
 1503              		.syntax unified
 1504 0174 B6E7     		b	.L118
 1505              	.L129:
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1506              		.loc 1 947 0
 1507 0176 2046     		mov	r0, r4
 1508 0178 FFF7FEFF 		bl	prvUnlockQueue
 1509              	.LVL162:
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1510              		.loc 1 948 0
 1511 017c FFF7FEFF 		bl	xTaskResumeAll
 1512              	.LVL163:
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1513              		.loc 1 951 0
 1514 0180 0020     		movs	r0, #0
 1515 0182 99E7     		b	.L108
ARM GAS  /tmp/ccn5TrpU.s 			page 75


 1516              	.L143:
 1517              		.align	2
 1518              	.L142:
 1519 0184 04ED00E0 		.word	-536810236
 1520              		.cfi_endproc
 1521              	.LFE17:
 1523              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1524              		.align	1
 1525              		.syntax unified
 1526              		.thumb
 1527              		.thumb_func
 1528              		.fpu fpv4-sp-d16
 1530              	prvInitialiseMutex:
 1531              	.LFB8:
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1532              		.loc 1 474 0
 1533              		.cfi_startproc
 1534              		@ args = 0, pretend = 0, frame = 0
 1535              		@ frame_needed = 0, uses_anonymous_args = 0
 1536              	.LVL164:
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1537              		.loc 1 475 0
 1538 0000 48B1     		cbz	r0, .L147
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1539              		.loc 1 474 0
 1540 0002 08B5     		push	{r3, lr}
 1541              	.LCFI23:
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 3, -8
 1544              		.cfi_offset 14, -4
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1545              		.loc 1 481 0
 1546 0004 0021     		movs	r1, #0
 1547 0006 8160     		str	r1, [r0, #8]
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1548              		.loc 1 482 0
 1549 0008 0160     		str	r1, [r0]
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1550              		.loc 1 485 0
 1551 000a C160     		str	r1, [r0, #12]
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1552              		.loc 1 490 0
 1553 000c 0B46     		mov	r3, r1
 1554 000e 0A46     		mov	r2, r1
 1555 0010 FFF7FEFF 		bl	xQueueGenericSend
 1556              	.LVL165:
 1557 0014 08BD     		pop	{r3, pc}
 1558              	.LVL166:
 1559              	.L147:
 1560              	.LCFI24:
 1561              		.cfi_def_cfa_offset 0
 1562              		.cfi_restore 3
 1563              		.cfi_restore 14
 1564 0016 7047     		bx	lr
 1565              		.cfi_endproc
 1566              	.LFE8:
 1568              		.section	.text.xQueueCreateMutex,"ax",%progbits
ARM GAS  /tmp/ccn5TrpU.s 			page 76


 1569              		.align	1
 1570              		.global	xQueueCreateMutex
 1571              		.syntax unified
 1572              		.thumb
 1573              		.thumb_func
 1574              		.fpu fpv4-sp-d16
 1576              	xQueueCreateMutex:
 1577              	.LFB9:
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1578              		.loc 1 504 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              	.LVL167:
 1583 0000 10B5     		push	{r4, lr}
 1584              	.LCFI25:
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 4, -8
 1587              		.cfi_offset 14, -4
 1588              	.LVL168:
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1589              		.loc 1 508 0
 1590 0002 0246     		mov	r2, r0
 1591 0004 0021     		movs	r1, #0
 1592 0006 0120     		movs	r0, #1
 1593              	.LVL169:
 1594 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1595              	.LVL170:
 1596 000c 0446     		mov	r4, r0
 1597              	.LVL171:
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1598              		.loc 1 509 0
 1599 000e FFF7FEFF 		bl	prvInitialiseMutex
 1600              	.LVL172:
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1601              		.loc 1 512 0
 1602 0012 2046     		mov	r0, r4
 1603 0014 10BD     		pop	{r4, pc}
 1604              		.cfi_endproc
 1605              	.LFE9:
 1607              		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1608              		.align	1
 1609              		.global	xQueueCreateMutexStatic
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv4-sp-d16
 1615              	xQueueCreateMutexStatic:
 1616              	.LFB10:
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xNewQueue;
 1617              		.loc 1 520 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
 1621              	.LVL173:
 1622 0000 10B5     		push	{r4, lr}
 1623              	.LCFI26:
ARM GAS  /tmp/ccn5TrpU.s 			page 77


 1624              		.cfi_def_cfa_offset 8
 1625              		.cfi_offset 4, -8
 1626              		.cfi_offset 14, -4
 1627 0002 82B0     		sub	sp, sp, #8
 1628              	.LCFI27:
 1629              		.cfi_def_cfa_offset 16
 1630              	.LVL174:
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( ( Queue_t * ) xNewQueue );
 1631              		.loc 1 528 0
 1632 0004 0090     		str	r0, [sp]
 1633 0006 0B46     		mov	r3, r1
 1634 0008 0022     		movs	r2, #0
 1635 000a 1146     		mov	r1, r2
 1636              	.LVL175:
 1637 000c 0120     		movs	r0, #1
 1638              	.LVL176:
 1639 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1640              	.LVL177:
 1641 0012 0446     		mov	r4, r0
 1642              	.LVL178:
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1643              		.loc 1 529 0
 1644 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1645              	.LVL179:
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1646              		.loc 1 532 0
 1647 0018 2046     		mov	r0, r4
 1648 001a 02B0     		add	sp, sp, #8
 1649              	.LCFI28:
 1650              		.cfi_def_cfa_offset 8
 1651              		@ sp needed
 1652 001c 10BD     		pop	{r4, pc}
 1653              		.cfi_endproc
 1654              	.LFE10:
 1656              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1657              		.align	1
 1658              		.global	xQueueGiveMutexRecursive
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1662              		.fpu fpv4-sp-d16
 1664              	xQueueGiveMutexRecursive:
 1665              	.LFB13:
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1666              		.loc 1 597 0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670              	.LVL180:
 1671 0000 38B5     		push	{r3, r4, r5, lr}
 1672              	.LCFI29:
 1673              		.cfi_def_cfa_offset 16
 1674              		.cfi_offset 3, -16
 1675              		.cfi_offset 4, -12
 1676              		.cfi_offset 5, -8
 1677              		.cfi_offset 14, -4
 1678              	.LVL181:
ARM GAS  /tmp/ccn5TrpU.s 			page 78


 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1679              		.loc 1 601 0
 1680 0002 38B1     		cbz	r0, .L161
 1681 0004 0446     		mov	r4, r0
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1682              		.loc 1 609 0
 1683 0006 8568     		ldr	r5, [r0, #8]
 1684 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1685              	.LVL182:
 1686 000c 8542     		cmp	r5, r0
 1687 000e 0AD0     		beq	.L162
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1688              		.loc 1 638 0
 1689 0010 0020     		movs	r0, #0
 1690 0012 38BD     		pop	{r3, r4, r5, pc}
 1691              	.LVL183:
 1692              	.L161:
 1693              	.LBB153:
 1694              	.LBB154:
 1695              		.loc 2 195 0
 1696              		.syntax unified
 1697              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1698 0014 4FF05003 			mov r3, #80												
 1699 0018 83F31188 		msr basepri, r3											
 1700 001c BFF36F8F 		isb														
 1701 0020 BFF34F8F 		dsb														
 1702              	
 1703              	@ 0 "" 2
 1704              	.LVL184:
 1705              		.thumb
 1706              		.syntax unified
 1707              	.L156:
 1708 0024 FEE7     		b	.L156
 1709              	.LVL185:
 1710              	.L162:
 1711              	.LBE154:
 1712              	.LBE153:
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1713              		.loc 1 618 0
 1714 0026 E368     		ldr	r3, [r4, #12]
 1715 0028 013B     		subs	r3, r3, #1
 1716 002a E360     		str	r3, [r4, #12]
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1717              		.loc 1 621 0
 1718 002c 0BB1     		cbz	r3, .L163
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1719              		.loc 1 632 0
 1720 002e 0120     		movs	r0, #1
 1721              	.LVL186:
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1722              		.loc 1 644 0
 1723 0030 38BD     		pop	{r3, r4, r5, pc}
 1724              	.LVL187:
 1725              	.L163:
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1726              		.loc 1 625 0
 1727 0032 1A46     		mov	r2, r3
ARM GAS  /tmp/ccn5TrpU.s 			page 79


 1728 0034 1946     		mov	r1, r3
 1729 0036 2046     		mov	r0, r4
 1730 0038 FFF7FEFF 		bl	xQueueGenericSend
 1731              	.LVL188:
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1732              		.loc 1 632 0
 1733 003c 0120     		movs	r0, #1
 1734 003e 38BD     		pop	{r3, r4, r5, pc}
 1735              		.cfi_endproc
 1736              	.LFE13:
 1738              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1739              		.align	1
 1740              		.global	xQueueGenericSendFromISR
 1741              		.syntax unified
 1742              		.thumb
 1743              		.thumb_func
 1744              		.fpu fpv4-sp-d16
 1746              	xQueueGenericSendFromISR:
 1747              	.LFB18:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1748              		.loc 1 958 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 0
 1751              		@ frame_needed = 0, uses_anonymous_args = 0
 1752              	.LVL189:
 1753 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1754              	.LCFI30:
 1755              		.cfi_def_cfa_offset 32
 1756              		.cfi_offset 3, -32
 1757              		.cfi_offset 4, -28
 1758              		.cfi_offset 5, -24
 1759              		.cfi_offset 6, -20
 1760              		.cfi_offset 7, -16
 1761              		.cfi_offset 8, -12
 1762              		.cfi_offset 9, -8
 1763              		.cfi_offset 14, -4
 1764              	.LVL190:
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1765              		.loc 1 963 0
 1766 0004 60B1     		cbz	r0, .L184
 1767 0006 0446     		mov	r4, r0
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1768              		.loc 1 964 0
 1769 0008 99B1     		cbz	r1, .L185
 1770 000a 0120     		movs	r0, #1
 1771              	.LVL191:
 1772              	.L167:
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1773              		.loc 1 964 0 is_stmt 0 discriminator 6
 1774 000c B8B9     		cbnz	r0, .L168
 1775              	.LBB155:
 1776              	.LBB156:
 1777              		.loc 2 195 0 is_stmt 1
 1778              		.syntax unified
 1779              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1780 000e 4FF05003 			mov r3, #80												
 1781 0012 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccn5TrpU.s 			page 80


 1782 0016 BFF36F8F 		isb														
 1783 001a BFF34F8F 		dsb														
 1784              	
 1785              	@ 0 "" 2
 1786              	.LVL192:
 1787              		.thumb
 1788              		.syntax unified
 1789              	.L169:
 1790 001e FEE7     		b	.L169
 1791              	.LVL193:
 1792              	.L184:
 1793              	.LBE156:
 1794              	.LBE155:
 1795              	.LBB157:
 1796              	.LBB158:
 1797              		.syntax unified
 1798              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1799 0020 4FF05003 			mov r3, #80												
 1800 0024 83F31188 		msr basepri, r3											
 1801 0028 BFF36F8F 		isb														
 1802 002c BFF34F8F 		dsb														
 1803              	
 1804              	@ 0 "" 2
 1805              	.LVL194:
 1806              		.thumb
 1807              		.syntax unified
 1808              	.L166:
 1809 0030 FEE7     		b	.L166
 1810              	.LVL195:
 1811              	.L185:
 1812              	.LBE158:
 1813              	.LBE157:
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1814              		.loc 1 964 0 discriminator 2
 1815 0032 006C     		ldr	r0, [r0, #64]
 1816              	.LVL196:
 1817 0034 08B9     		cbnz	r0, .L177
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1818              		.loc 1 964 0 is_stmt 0
 1819 0036 0120     		movs	r0, #1
 1820 0038 E8E7     		b	.L167
 1821              	.L177:
 1822 003a 0020     		movs	r0, #0
 1823 003c E6E7     		b	.L167
 1824              	.L168:
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1825              		.loc 1 965 0 is_stmt 1
 1826 003e 022B     		cmp	r3, #2
 1827 0040 09D0     		beq	.L186
 1828              	.L170:
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1829              		.loc 1 965 0 is_stmt 0 discriminator 6
 1830 0042 68B9     		cbnz	r0, .L171
 1831              	.LBB159:
 1832              	.LBB160:
 1833              		.loc 2 195 0 is_stmt 1
 1834              		.syntax unified
ARM GAS  /tmp/ccn5TrpU.s 			page 81


 1835              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1836 0044 4FF05003 			mov r3, #80												
 1837 0048 83F31188 		msr basepri, r3											
 1838 004c BFF36F8F 		isb														
 1839 0050 BFF34F8F 		dsb														
 1840              	
 1841              	@ 0 "" 2
 1842              	.LVL197:
 1843              		.thumb
 1844              		.syntax unified
 1845              	.L172:
 1846 0054 FEE7     		b	.L172
 1847              	.LVL198:
 1848              	.L186:
 1849              	.LBE160:
 1850              	.LBE159:
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1851              		.loc 1 965 0 discriminator 2
 1852 0056 E56B     		ldr	r5, [r4, #60]
 1853 0058 012D     		cmp	r5, #1
 1854 005a F2D0     		beq	.L170
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1855              		.loc 1 965 0 is_stmt 0
 1856 005c 0020     		movs	r0, #0
 1857 005e F0E7     		b	.L170
 1858              	.L171:
 1859 0060 1F46     		mov	r7, r3
 1860 0062 9046     		mov	r8, r2
 1861 0064 8946     		mov	r9, r1
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1862              		.loc 1 981 0 is_stmt 1
 1863 0066 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1864              	.LVL199:
 1865              	.LBB161:
 1866              	.LBB162:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1867              		.loc 2 211 0
 1868              		.syntax unified
 1869              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1870 006a EFF31186 			mrs r6, basepri											
 1871 006e 4FF05003 		mov r3, #80												
 1872 0072 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccn5TrpU.s 			page 82


 1873 0076 BFF36F8F 		isb														
 1874 007a BFF34F8F 		dsb														
 1875              	
 1876              	@ 0 "" 2
 1877              		.thumb
 1878              		.syntax unified
 1879              	.LBE162:
 1880              	.LBE161:
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1881              		.loc 1 990 0
 1882 007e A26B     		ldr	r2, [r4, #56]
 1883 0080 E36B     		ldr	r3, [r4, #60]
 1884 0082 9A42     		cmp	r2, r3
 1885 0084 01D3     		bcc	.L173
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1886              		.loc 1 990 0 is_stmt 0 discriminator 1
 1887 0086 022F     		cmp	r7, #2
 1888 0088 21D1     		bne	.L179
 1889              	.L173:
 1890              	.LBB163:
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1891              		.loc 1 992 0 is_stmt 1
 1892 008a 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1893 008e 6DB2     		sxtb	r5, r5
 1894              	.LVL200:
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1895              		.loc 1 1001 0
 1896 0090 3A46     		mov	r2, r7
 1897 0092 4946     		mov	r1, r9
 1898 0094 2046     		mov	r0, r4
 1899 0096 FFF7FEFF 		bl	prvCopyDataToQueue
 1900              	.LVL201:
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1901              		.loc 1 1005 0
 1902 009a B5F1FF3F 		cmp	r5, #-1
 1903 009e 10D1     		bne	.L175
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1904              		.loc 1 1060 0
 1905 00a0 636A     		ldr	r3, [r4, #36]
 1906 00a2 B3B1     		cbz	r3, .L180
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1907              		.loc 1 1062 0
 1908 00a4 04F12400 		add	r0, r4, #36
 1909 00a8 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1910              	.LVL202:
 1911 00ac 98B1     		cbz	r0, .L181
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1912              		.loc 1 1066 0
 1913 00ae B8F1000F 		cmp	r8, #0
 1914 00b2 12D0     		beq	.L182
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1915              		.loc 1 1068 0
 1916 00b4 0120     		movs	r0, #1
 1917 00b6 C8F80000 		str	r0, [r8]
 1918              	.LVL203:
 1919              	.L174:
 1920              	.LBE163:
ARM GAS  /tmp/ccn5TrpU.s 			page 83


 1921              	.LBB164:
 1922              	.LBB165:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1923              		.loc 2 229 0
 1924              		.syntax unified
 1925              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1926 00ba 86F31188 			msr basepri, r6	
 1927              	@ 0 "" 2
 1928              	.LVL204:
 1929              		.thumb
 1930              		.syntax unified
 1931              	.LBE165:
 1932              	.LBE164:
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1933              		.loc 1 1105 0
 1934 00be BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1935              	.LVL205:
 1936              	.L175:
 1937              	.LBB166:
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1938              		.loc 1 1091 0
 1939 00c2 6B1C     		adds	r3, r5, #1
 1940 00c4 5BB2     		sxtb	r3, r3
 1941 00c6 84F84530 		strb	r3, [r4, #69]
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1942              		.loc 1 1094 0
 1943 00ca 0120     		movs	r0, #1
 1944 00cc F5E7     		b	.L174
 1945              	.LVL206:
 1946              	.L179:
 1947              	.LBE166:
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1948              		.loc 1 1099 0
 1949 00ce 0020     		movs	r0, #0
 1950 00d0 F3E7     		b	.L174
 1951              	.LVL207:
 1952              	.L180:
 1953              	.LBB167:
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1954              		.loc 1 1094 0
ARM GAS  /tmp/ccn5TrpU.s 			page 84


 1955 00d2 0120     		movs	r0, #1
 1956 00d4 F1E7     		b	.L174
 1957              	.L181:
 1958 00d6 0120     		movs	r0, #1
 1959 00d8 EFE7     		b	.L174
 1960              	.L182:
 1961 00da 0120     		movs	r0, #1
 1962 00dc EDE7     		b	.L174
 1963              	.LBE167:
 1964              		.cfi_endproc
 1965              	.LFE18:
 1967              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1968              		.align	1
 1969              		.global	xQueueGiveFromISR
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1973              		.fpu fpv4-sp-d16
 1975              	xQueueGiveFromISR:
 1976              	.LFB19:
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1977              		.loc 1 1109 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              	.LVL208:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1982              		.loc 1 1120 0
 1983 0000 60B1     		cbz	r0, .L205
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1984              		.loc 1 1109 0
 1985 0002 70B5     		push	{r4, r5, r6, lr}
 1986              	.LCFI31:
 1987              		.cfi_def_cfa_offset 16
 1988              		.cfi_offset 4, -16
 1989              		.cfi_offset 5, -12
 1990              		.cfi_offset 6, -8
 1991              		.cfi_offset 14, -4
 1992 0004 0446     		mov	r4, r0
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1993              		.loc 1 1124 0
 1994 0006 036C     		ldr	r3, [r0, #64]
 1995 0008 8BB1     		cbz	r3, .L190
 1996              	.LBB168:
 1997              	.LBB169:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1998              		.loc 2 195 0
 1999              		.syntax unified
 2000              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2001 000a 4FF05003 			mov r3, #80												
 2002 000e 83F31188 		msr basepri, r3											
 2003 0012 BFF36F8F 		isb														
 2004 0016 BFF34F8F 		dsb														
 2005              	
 2006              	@ 0 "" 2
 2007              	.LVL209:
 2008              		.thumb
ARM GAS  /tmp/ccn5TrpU.s 			page 85


 2009              		.syntax unified
 2010              	.L191:
 2011 001a FEE7     		b	.L191
 2012              	.L205:
 2013              	.LCFI32:
 2014              		.cfi_def_cfa_offset 0
 2015              		.cfi_restore 4
 2016              		.cfi_restore 5
 2017              		.cfi_restore 6
 2018              		.cfi_restore 14
 2019              	.LBE169:
 2020              	.LBE168:
 2021              	.LBB170:
 2022              	.LBB171:
 2023              		.syntax unified
 2024              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2025 001c 4FF05003 			mov r3, #80												
 2026 0020 83F31188 		msr basepri, r3											
 2027 0024 BFF36F8F 		isb														
 2028 0028 BFF34F8F 		dsb														
 2029              	
 2030              	@ 0 "" 2
 2031              	.LVL210:
 2032              		.thumb
 2033              		.syntax unified
 2034              	.L189:
 2035 002c FEE7     		b	.L189
 2036              	.L190:
 2037              	.LCFI33:
 2038              		.cfi_def_cfa_offset 16
 2039              		.cfi_offset 4, -16
 2040              		.cfi_offset 5, -12
 2041              		.cfi_offset 6, -8
 2042              		.cfi_offset 14, -4
 2043              	.LBE171:
 2044              	.LBE170:
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2045              		.loc 1 1129 0
 2046 002e 0368     		ldr	r3, [r0]
 2047 0030 53B1     		cbz	r3, .L206
 2048 0032 0123     		movs	r3, #1
 2049              	.L192:
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2050              		.loc 1 1129 0 is_stmt 0 discriminator 6
 2051 0034 73B9     		cbnz	r3, .L193
 2052              	.LBB172:
 2053              	.LBB173:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2054              		.loc 2 195 0 is_stmt 1
 2055              		.syntax unified
 2056              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2057 0036 4FF05003 			mov r3, #80												
 2058 003a 83F31188 		msr basepri, r3											
 2059 003e BFF36F8F 		isb														
 2060 0042 BFF34F8F 		dsb														
 2061              	
 2062              	@ 0 "" 2
ARM GAS  /tmp/ccn5TrpU.s 			page 86


 2063              	.LVL211:
 2064              		.thumb
 2065              		.syntax unified
 2066              	.L194:
 2067 0046 FEE7     		b	.L194
 2068              	.L206:
 2069              	.LBE173:
 2070              	.LBE172:
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2071              		.loc 1 1129 0 discriminator 2
 2072 0048 8368     		ldr	r3, [r0, #8]
 2073 004a 0BB9     		cbnz	r3, .L198
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2074              		.loc 1 1129 0 is_stmt 0
 2075 004c 0123     		movs	r3, #1
 2076 004e F1E7     		b	.L192
 2077              	.L198:
 2078 0050 0023     		movs	r3, #0
 2079 0052 EFE7     		b	.L192
 2080              	.L193:
 2081 0054 0E46     		mov	r6, r1
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2082              		.loc 1 1145 0 is_stmt 1
 2083 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2084              	.LVL212:
 2085              	.LBB174:
 2086              	.LBB175:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2087              		.loc 2 211 0
 2088              		.syntax unified
 2089              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2090 005a EFF31185 			mrs r5, basepri											
 2091 005e 4FF05003 		mov r3, #80												
 2092 0062 83F31188 		msr basepri, r3											
 2093 0066 BFF36F8F 		isb														
 2094 006a BFF34F8F 		dsb														
 2095              	
 2096              	@ 0 "" 2
 2097              		.thumb
 2098              		.syntax unified
 2099              	.LBE175:
 2100              	.LBE174:
 2101              	.LBB176:
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2102              		.loc 1 1149 0
 2103 006e A26B     		ldr	r2, [r4, #56]
 2104              	.LVL213:
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2105              		.loc 1 1154 0
 2106 0070 E36B     		ldr	r3, [r4, #60]
 2107 0072 9A42     		cmp	r2, r3
 2108 0074 1AD2     		bcs	.L199
 2109              	.LBB177:
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2110              		.loc 1 1156 0
 2111 0076 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2112 007a 5BB2     		sxtb	r3, r3
ARM GAS  /tmp/ccn5TrpU.s 			page 87


 2113              	.LVL214:
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2114              		.loc 1 1166 0
 2115 007c 0132     		adds	r2, r2, #1
 2116              	.LVL215:
 2117 007e A263     		str	r2, [r4, #56]
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2118              		.loc 1 1170 0
 2119 0080 B3F1FF3F 		cmp	r3, #-1
 2120 0084 0CD1     		bne	.L196
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2121              		.loc 1 1225 0
 2122 0086 636A     		ldr	r3, [r4, #36]
 2123              	.LVL216:
 2124 0088 93B1     		cbz	r3, .L200
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2125              		.loc 1 1227 0
 2126 008a 04F12400 		add	r0, r4, #36
 2127 008e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2128              	.LVL217:
 2129 0092 78B1     		cbz	r0, .L201
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 2130              		.loc 1 1231 0
 2131 0094 86B1     		cbz	r6, .L202
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 2132              		.loc 1 1233 0
 2133 0096 0120     		movs	r0, #1
 2134 0098 3060     		str	r0, [r6]
 2135              	.L195:
 2136              	.LVL218:
 2137              	.LBE177:
 2138              	.LBE176:
 2139              	.LBB180:
 2140              	.LBB181:
 2141              		.loc 2 229 0
 2142              		.syntax unified
 2143              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2144 009a 85F31188 			msr basepri, r5	
 2145              	@ 0 "" 2
 2146              	.LVL219:
 2147              		.thumb
 2148              		.syntax unified
 2149              	.LBE181:
 2150              	.LBE180:
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2151              		.loc 1 1270 0
 2152 009e 70BD     		pop	{r4, r5, r6, pc}
 2153              	.LVL220:
 2154              	.L196:
 2155              	.LBB182:
 2156              	.LBB178:
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2157              		.loc 1 1256 0
 2158 00a0 0133     		adds	r3, r3, #1
 2159              	.LVL221:
 2160 00a2 5BB2     		sxtb	r3, r3
 2161              	.LVL222:
ARM GAS  /tmp/ccn5TrpU.s 			page 88


 2162 00a4 84F84530 		strb	r3, [r4, #69]
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2163              		.loc 1 1259 0
 2164 00a8 0120     		movs	r0, #1
 2165 00aa F6E7     		b	.L195
 2166              	.LVL223:
 2167              	.L199:
 2168              	.LBE178:
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2169              		.loc 1 1264 0
 2170 00ac 0020     		movs	r0, #0
 2171 00ae F4E7     		b	.L195
 2172              	.LVL224:
 2173              	.L200:
 2174              	.LBB179:
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2175              		.loc 1 1259 0
 2176 00b0 0120     		movs	r0, #1
 2177 00b2 F2E7     		b	.L195
 2178              	.LVL225:
 2179              	.L201:
 2180 00b4 0120     		movs	r0, #1
 2181 00b6 F0E7     		b	.L195
 2182              	.L202:
 2183 00b8 0120     		movs	r0, #1
 2184 00ba EEE7     		b	.L195
 2185              	.LBE179:
 2186              	.LBE182:
 2187              		.cfi_endproc
 2188              	.LFE19:
 2190              		.section	.text.xQueueReceive,"ax",%progbits
 2191              		.align	1
 2192              		.global	xQueueReceive
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2196              		.fpu fpv4-sp-d16
 2198              	xQueueReceive:
 2199              	.LFB20:
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2200              		.loc 1 1274 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 16
 2203              		@ frame_needed = 0, uses_anonymous_args = 0
 2204              	.LVL226:
 2205 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2206              	.LCFI34:
 2207              		.cfi_def_cfa_offset 20
 2208              		.cfi_offset 4, -20
 2209              		.cfi_offset 5, -16
 2210              		.cfi_offset 6, -12
 2211              		.cfi_offset 7, -8
 2212              		.cfi_offset 14, -4
 2213 0002 85B0     		sub	sp, sp, #20
 2214              	.LCFI35:
 2215              		.cfi_def_cfa_offset 40
 2216 0004 0192     		str	r2, [sp, #4]
ARM GAS  /tmp/ccn5TrpU.s 			page 89


 2217              	.LVL227:
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2218              		.loc 1 1280 0
 2219 0006 60B1     		cbz	r0, .L231
 2220 0008 0446     		mov	r4, r0
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2221              		.loc 1 1284 0
 2222 000a 99B1     		cbz	r1, .L232
 2223 000c 0125     		movs	r5, #1
 2224              	.L210:
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2225              		.loc 1 1284 0 is_stmt 0 discriminator 6
 2226 000e BDB9     		cbnz	r5, .L211
 2227              	.LBB183:
 2228              	.LBB184:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2229              		.loc 2 195 0 is_stmt 1
 2230              		.syntax unified
 2231              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2232 0010 4FF05003 			mov r3, #80												
 2233 0014 83F31188 		msr basepri, r3											
 2234 0018 BFF36F8F 		isb														
 2235 001c BFF34F8F 		dsb														
 2236              	
 2237              	@ 0 "" 2
 2238              	.LVL228:
 2239              		.thumb
 2240              		.syntax unified
 2241              	.L212:
 2242 0020 FEE7     		b	.L212
 2243              	.L231:
 2244              	.LBE184:
 2245              	.LBE183:
 2246              	.LBB185:
 2247              	.LBB186:
 2248              		.syntax unified
 2249              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2250 0022 4FF05003 			mov r3, #80												
 2251 0026 83F31188 		msr basepri, r3											
 2252 002a BFF36F8F 		isb														
 2253 002e BFF34F8F 		dsb														
 2254              	
 2255              	@ 0 "" 2
 2256              	.LVL229:
 2257              		.thumb
 2258              		.syntax unified
 2259              	.L209:
 2260 0032 FEE7     		b	.L209
 2261              	.L232:
 2262              	.LBE186:
 2263              	.LBE185:
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2264              		.loc 1 1284 0 discriminator 2
 2265 0034 036C     		ldr	r3, [r0, #64]
 2266 0036 0BB9     		cbnz	r3, .L227
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2267              		.loc 1 1284 0 is_stmt 0
ARM GAS  /tmp/ccn5TrpU.s 			page 90


 2268 0038 0125     		movs	r5, #1
 2269 003a E8E7     		b	.L210
 2270              	.L227:
 2271 003c 0025     		movs	r5, #0
 2272 003e E6E7     		b	.L210
 2273              	.L211:
 2274 0040 0E46     		mov	r6, r1
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2275              		.loc 1 1289 0 is_stmt 1
 2276 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 2277              	.LVL230:
 2278 0046 10B9     		cbnz	r0, .L213
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2279              		.loc 1 1289 0 is_stmt 0 discriminator 2
 2280 0048 019B     		ldr	r3, [sp, #4]
 2281 004a 03B1     		cbz	r3, .L213
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2282              		.loc 1 1289 0
 2283 004c 0025     		movs	r5, #0
 2284              	.L213:
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2285              		.loc 1 1289 0 discriminator 6
 2286 004e 45B9     		cbnz	r5, .L229
 2287              	.LBB187:
 2288              	.LBB188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2289              		.loc 2 195 0 is_stmt 1
 2290              		.syntax unified
 2291              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2292 0050 4FF05003 			mov r3, #80												
 2293 0054 83F31188 		msr basepri, r3											
 2294 0058 BFF36F8F 		isb														
 2295 005c BFF34F8F 		dsb														
 2296              	
 2297              	@ 0 "" 2
 2298              	.LVL231:
 2299              		.thumb
 2300              		.syntax unified
 2301              	.L215:
 2302 0060 FEE7     		b	.L215
 2303              	.L229:
 2304              	.LBE188:
 2305              	.LBE187:
 2306 0062 0027     		movs	r7, #0
 2307 0064 2FE0     		b	.L214
 2308              	.LVL232:
 2309              	.L233:
 2310              	.LBB189:
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2311              		.loc 1 1308 0
 2312 0066 3146     		mov	r1, r6
 2313 0068 2046     		mov	r0, r4
 2314 006a FFF7FEFF 		bl	prvCopyDataFromQueue
 2315              	.LVL233:
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2316              		.loc 1 1310 0
 2317 006e 013D     		subs	r5, r5, #1
ARM GAS  /tmp/ccn5TrpU.s 			page 91


 2318              	.LVL234:
 2319 0070 A563     		str	r5, [r4, #56]
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2320              		.loc 1 1315 0
 2321 0072 2369     		ldr	r3, [r4, #16]
 2322 0074 63B1     		cbz	r3, .L217
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2323              		.loc 1 1317 0
 2324 0076 04F11000 		add	r0, r4, #16
 2325 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 2326              	.LVL235:
 2327 007e 38B1     		cbz	r0, .L217
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2328              		.loc 1 1319 0
 2329 0080 4FF08052 		mov	r2, #268435456
 2330 0084 344B     		ldr	r3, .L238
 2331 0086 1A60     		str	r2, [r3]
 2332              		.syntax unified
 2333              	@ 1319 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2334 0088 BFF34F8F 		dsb
 2335              	@ 0 "" 2
 2336              	@ 1319 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2337 008c BFF36F8F 		isb
 2338              	@ 0 "" 2
 2339              		.thumb
 2340              		.syntax unified
 2341              	.L217:
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2342              		.loc 1 1331 0
 2343 0090 FFF7FEFF 		bl	vPortExitCritical
 2344              	.LVL236:
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2345              		.loc 1 1332 0
 2346 0094 0120     		movs	r0, #1
 2347              	.LVL237:
 2348              	.L207:
 2349              	.LBE189:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2350              		.loc 1 1411 0
 2351 0096 05B0     		add	sp, sp, #20
 2352              	.LCFI36:
 2353              		.cfi_remember_state
 2354              		.cfi_def_cfa_offset 20
 2355              		@ sp needed
 2356 0098 F0BD     		pop	{r4, r5, r6, r7, pc}
 2357              	.LVL238:
 2358              	.L234:
 2359              	.LCFI37:
 2360              		.cfi_restore_state
 2361              	.LBB190:
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2362              		.loc 1 1340 0
 2363 009a FFF7FEFF 		bl	vPortExitCritical
 2364              	.LVL239:
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2365              		.loc 1 1342 0
 2366 009e 0020     		movs	r0, #0
ARM GAS  /tmp/ccn5TrpU.s 			page 92


 2367 00a0 F9E7     		b	.L207
 2368              	.L235:
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2369              		.loc 1 1348 0
 2370 00a2 02A8     		add	r0, sp, #8
 2371 00a4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2372              	.LVL240:
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2373              		.loc 1 1349 0
 2374 00a8 0127     		movs	r7, #1
 2375 00aa 16E0     		b	.L220
 2376              	.LVL241:
 2377              	.L236:
 2378              	.LBE190:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2379              		.loc 1 1364 0 discriminator 1
 2380 00ac 0023     		movs	r3, #0
 2381 00ae 84F84430 		strb	r3, [r4, #68]
 2382 00b2 1EE0     		b	.L221
 2383              	.L237:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2384              		.loc 1 1364 0 is_stmt 0 discriminator 4
 2385 00b4 0023     		movs	r3, #0
 2386 00b6 84F84530 		strb	r3, [r4, #69]
 2387 00ba 20E0     		b	.L222
 2388              	.L224:
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2389              		.loc 1 1389 0 is_stmt 1
 2390 00bc 2046     		mov	r0, r4
 2391 00be FFF7FEFF 		bl	prvUnlockQueue
 2392              	.LVL242:
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2393              		.loc 1 1390 0
 2394 00c2 FFF7FEFF 		bl	xTaskResumeAll
 2395              	.LVL243:
 2396              	.L214:
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2397              		.loc 1 1299 0
 2398 00c6 FFF7FEFF 		bl	vPortEnterCritical
 2399              	.LVL244:
 2400              	.LBB191:
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2401              		.loc 1 1301 0
 2402 00ca A56B     		ldr	r5, [r4, #56]
 2403              	.LVL245:
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2404              		.loc 1 1305 0
 2405 00cc 002D     		cmp	r5, #0
 2406 00ce CAD1     		bne	.L233
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2407              		.loc 1 1336 0
 2408 00d0 019B     		ldr	r3, [sp, #4]
 2409 00d2 002B     		cmp	r3, #0
 2410 00d4 E1D0     		beq	.L234
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2411              		.loc 1 1344 0
 2412 00d6 002F     		cmp	r7, #0
ARM GAS  /tmp/ccn5TrpU.s 			page 93


 2413 00d8 E3D0     		beq	.L235
 2414              	.LVL246:
 2415              	.L220:
 2416              	.LBE191:
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2417              		.loc 1 1358 0
 2418 00da FFF7FEFF 		bl	vPortExitCritical
 2419              	.LVL247:
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2420              		.loc 1 1363 0
 2421 00de FFF7FEFF 		bl	vTaskSuspendAll
 2422              	.LVL248:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2423              		.loc 1 1364 0
 2424 00e2 FFF7FEFF 		bl	vPortEnterCritical
 2425              	.LVL249:
 2426 00e6 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2427 00ea 5BB2     		sxtb	r3, r3
 2428 00ec B3F1FF3F 		cmp	r3, #-1
 2429 00f0 DCD0     		beq	.L236
 2430              	.L221:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2431              		.loc 1 1364 0 is_stmt 0 discriminator 3
 2432 00f2 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2433 00f6 5BB2     		sxtb	r3, r3
 2434 00f8 B3F1FF3F 		cmp	r3, #-1
 2435 00fc DAD0     		beq	.L237
 2436              	.L222:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2437              		.loc 1 1364 0 discriminator 6
 2438 00fe FFF7FEFF 		bl	vPortExitCritical
 2439              	.LVL250:
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2440              		.loc 1 1367 0 is_stmt 1 discriminator 6
 2441 0102 01A9     		add	r1, sp, #4
 2442 0104 02A8     		add	r0, sp, #8
 2443 0106 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2444              	.LVL251:
 2445 010a C8B9     		cbnz	r0, .L223
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2446              		.loc 1 1371 0
 2447 010c 2046     		mov	r0, r4
 2448 010e FFF7FEFF 		bl	prvIsQueueEmpty
 2449              	.LVL252:
 2450 0112 0028     		cmp	r0, #0
 2451 0114 D2D0     		beq	.L224
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2452              		.loc 1 1374 0
 2453 0116 0199     		ldr	r1, [sp, #4]
 2454 0118 04F12400 		add	r0, r4, #36
 2455 011c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2456              	.LVL253:
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2457              		.loc 1 1375 0
 2458 0120 2046     		mov	r0, r4
 2459 0122 FFF7FEFF 		bl	prvUnlockQueue
 2460              	.LVL254:
ARM GAS  /tmp/ccn5TrpU.s 			page 94


1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2461              		.loc 1 1376 0
 2462 0126 FFF7FEFF 		bl	xTaskResumeAll
 2463              	.LVL255:
 2464 012a 0028     		cmp	r0, #0
 2465 012c CBD1     		bne	.L214
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2466              		.loc 1 1378 0
 2467 012e 4FF08052 		mov	r2, #268435456
 2468 0132 094B     		ldr	r3, .L238
 2469 0134 1A60     		str	r2, [r3]
 2470              		.syntax unified
 2471              	@ 1378 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2472 0136 BFF34F8F 		dsb
 2473              	@ 0 "" 2
 2474              	@ 1378 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2475 013a BFF36F8F 		isb
 2476              	@ 0 "" 2
 2477              		.thumb
 2478              		.syntax unified
 2479 013e C2E7     		b	.L214
 2480              	.L223:
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2481              		.loc 1 1397 0
 2482 0140 2046     		mov	r0, r4
 2483 0142 FFF7FEFF 		bl	prvUnlockQueue
 2484              	.LVL256:
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2485              		.loc 1 1398 0
 2486 0146 FFF7FEFF 		bl	xTaskResumeAll
 2487              	.LVL257:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2488              		.loc 1 1400 0
 2489 014a 2046     		mov	r0, r4
 2490 014c FFF7FEFF 		bl	prvIsQueueEmpty
 2491              	.LVL258:
 2492 0150 0028     		cmp	r0, #0
 2493 0152 B8D0     		beq	.L214
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2494              		.loc 1 1403 0
 2495 0154 0020     		movs	r0, #0
 2496 0156 9EE7     		b	.L207
 2497              	.L239:
 2498              		.align	2
 2499              	.L238:
 2500 0158 04ED00E0 		.word	-536810236
 2501              		.cfi_endproc
 2502              	.LFE20:
 2504              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2505              		.align	1
 2506              		.global	xQueueSemaphoreTake
 2507              		.syntax unified
 2508              		.thumb
 2509              		.thumb_func
 2510              		.fpu fpv4-sp-d16
 2512              	xQueueSemaphoreTake:
 2513              	.LFB21:
ARM GAS  /tmp/ccn5TrpU.s 			page 95


1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2514              		.loc 1 1415 0
 2515              		.cfi_startproc
 2516              		@ args = 0, pretend = 0, frame = 16
 2517              		@ frame_needed = 0, uses_anonymous_args = 0
 2518              	.LVL259:
 2519 0000 70B5     		push	{r4, r5, r6, lr}
 2520              	.LCFI38:
 2521              		.cfi_def_cfa_offset 16
 2522              		.cfi_offset 4, -16
 2523              		.cfi_offset 5, -12
 2524              		.cfi_offset 6, -8
 2525              		.cfi_offset 14, -4
 2526 0002 84B0     		sub	sp, sp, #16
 2527              	.LCFI39:
 2528              		.cfi_def_cfa_offset 32
 2529 0004 0191     		str	r1, [sp, #4]
 2530              	.LVL260:
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2531              		.loc 1 1425 0
 2532 0006 58B1     		cbz	r0, .L266
 2533 0008 0446     		mov	r4, r0
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2534              		.loc 1 1429 0
 2535 000a 036C     		ldr	r3, [r0, #64]
 2536 000c 8BB1     		cbz	r3, .L243
 2537              	.LBB192:
 2538              	.LBB193:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2539              		.loc 2 195 0
 2540              		.syntax unified
 2541              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2542 000e 4FF05003 			mov r3, #80												
 2543 0012 83F31188 		msr basepri, r3											
 2544 0016 BFF36F8F 		isb														
 2545 001a BFF34F8F 		dsb														
 2546              	
 2547              	@ 0 "" 2
 2548              	.LVL261:
 2549              		.thumb
 2550              		.syntax unified
 2551              	.L244:
 2552 001e FEE7     		b	.L244
 2553              	.L266:
 2554              	.LBE193:
 2555              	.LBE192:
 2556              	.LBB194:
 2557              	.LBB195:
 2558              		.syntax unified
 2559              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2560 0020 4FF05003 			mov r3, #80												
 2561 0024 83F31188 		msr basepri, r3											
 2562 0028 BFF36F8F 		isb														
 2563 002c BFF34F8F 		dsb														
 2564              	
 2565              	@ 0 "" 2
 2566              	.LVL262:
ARM GAS  /tmp/ccn5TrpU.s 			page 96


 2567              		.thumb
 2568              		.syntax unified
 2569              	.L242:
 2570 0030 FEE7     		b	.L242
 2571              	.L243:
 2572              	.LBE195:
 2573              	.LBE194:
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2574              		.loc 1 1434 0
 2575 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2576              	.LVL263:
 2577 0036 60B9     		cbnz	r0, .L262
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2578              		.loc 1 1434 0 is_stmt 0 discriminator 2
 2579 0038 019B     		ldr	r3, [sp, #4]
 2580 003a 63B9     		cbnz	r3, .L263
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2581              		.loc 1 1434 0
 2582 003c 0123     		movs	r3, #1
 2583              	.L245:
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2584              		.loc 1 1434 0 discriminator 6
 2585 003e 63B9     		cbnz	r3, .L264
 2586              	.LBB196:
 2587              	.LBB197:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2588              		.loc 2 195 0 is_stmt 1
 2589              		.syntax unified
 2590              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2591 0040 4FF05003 			mov r3, #80												
 2592 0044 83F31188 		msr basepri, r3											
 2593 0048 BFF36F8F 		isb														
 2594 004c BFF34F8F 		dsb														
 2595              	
 2596              	@ 0 "" 2
 2597              	.LVL264:
 2598              		.thumb
 2599              		.syntax unified
 2600              	.L247:
 2601 0050 FEE7     		b	.L247
 2602              	.L262:
 2603              	.LBE197:
 2604              	.LBE196:
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2605              		.loc 1 1434 0
 2606 0052 0123     		movs	r3, #1
 2607 0054 F3E7     		b	.L245
 2608              	.L263:
 2609 0056 0023     		movs	r3, #0
 2610 0058 F1E7     		b	.L245
 2611              	.L264:
 2612 005a 0025     		movs	r5, #0
 2613 005c 2E46     		mov	r6, r5
 2614 005e 4EE0     		b	.L246
 2615              	.LVL265:
 2616              	.L268:
 2617              	.LBB198:
ARM GAS  /tmp/ccn5TrpU.s 			page 97


1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2618              		.loc 1 1458 0
 2619 0060 013B     		subs	r3, r3, #1
 2620              	.LVL266:
 2621 0062 A363     		str	r3, [r4, #56]
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2622              		.loc 1 1462 0
 2623 0064 2368     		ldr	r3, [r4]
 2624              	.LVL267:
 2625 0066 13B9     		cbnz	r3, .L249
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2626              		.loc 1 1466 0
 2627 0068 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2628              	.LVL268:
 2629 006c A060     		str	r0, [r4, #8]
 2630              	.L249:
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2631              		.loc 1 1477 0
 2632 006e 2369     		ldr	r3, [r4, #16]
 2633 0070 63B1     		cbz	r3, .L250
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2634              		.loc 1 1479 0
 2635 0072 04F11000 		add	r0, r4, #16
 2636 0076 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2637              	.LVL269:
 2638 007a 38B1     		cbz	r0, .L250
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2639              		.loc 1 1481 0
 2640 007c 4FF08052 		mov	r2, #268435456
 2641 0080 474B     		ldr	r3, .L274
 2642 0082 1A60     		str	r2, [r3]
 2643              		.syntax unified
 2644              	@ 1481 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2645 0084 BFF34F8F 		dsb
 2646              	@ 0 "" 2
 2647              	@ 1481 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2648 0088 BFF36F8F 		isb
 2649              	@ 0 "" 2
 2650              		.thumb
 2651              		.syntax unified
 2652              	.L250:
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2653              		.loc 1 1493 0
 2654 008c FFF7FEFF 		bl	vPortExitCritical
 2655              	.LVL270:
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2656              		.loc 1 1494 0
 2657 0090 0125     		movs	r5, #1
 2658              	.LVL271:
 2659              	.L240:
 2660              	.LBE198:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2661              		.loc 1 1629 0
 2662 0092 2846     		mov	r0, r5
 2663 0094 04B0     		add	sp, sp, #16
 2664              	.LCFI40:
 2665              		.cfi_remember_state
ARM GAS  /tmp/ccn5TrpU.s 			page 98


 2666              		.cfi_def_cfa_offset 16
 2667              		@ sp needed
 2668 0096 70BD     		pop	{r4, r5, r6, pc}
 2669              	.LVL272:
 2670              	.L269:
 2671              	.LCFI41:
 2672              		.cfi_restore_state
 2673              	.LBB201:
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2674              		.loc 1 1505 0
 2675 0098 45B1     		cbz	r5, .L253
 2676              	.LBB199:
 2677              	.LBB200:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2678              		.loc 2 195 0
 2679              		.syntax unified
 2680              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2681 009a 4FF05003 			mov r3, #80												
 2682 009e 83F31188 		msr basepri, r3											
 2683 00a2 BFF36F8F 		isb														
 2684 00a6 BFF34F8F 		dsb														
 2685              	
 2686              	@ 0 "" 2
 2687              	.LVL273:
 2688              		.thumb
 2689              		.syntax unified
 2690              	.L254:
 2691 00aa FEE7     		b	.L254
 2692              	.L253:
 2693              	.LBE200:
 2694              	.LBE199:
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2695              		.loc 1 1511 0
 2696 00ac FFF7FEFF 		bl	vPortExitCritical
 2697              	.LVL274:
1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2698              		.loc 1 1513 0
 2699 00b0 EFE7     		b	.L240
 2700              	.L270:
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2701              		.loc 1 1519 0
 2702 00b2 02A8     		add	r0, sp, #8
 2703 00b4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2704              	.LVL275:
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2705              		.loc 1 1520 0
 2706 00b8 0126     		movs	r6, #1
 2707 00ba 2AE0     		b	.L255
 2708              	.LVL276:
 2709              	.L271:
 2710              	.LBE201:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2711              		.loc 1 1535 0 discriminator 1
 2712 00bc 0023     		movs	r3, #0
 2713 00be 84F84430 		strb	r3, [r4, #68]
 2714 00c2 32E0     		b	.L256
 2715              	.L272:
ARM GAS  /tmp/ccn5TrpU.s 			page 99


1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2716              		.loc 1 1535 0 is_stmt 0 discriminator 4
 2717 00c4 0023     		movs	r3, #0
 2718 00c6 84F84530 		strb	r3, [r4, #69]
 2719 00ca 34E0     		b	.L257
 2720              	.L273:
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2721              		.loc 1 1552 0 is_stmt 1
 2722 00cc FFF7FEFF 		bl	vPortEnterCritical
 2723              	.LVL277:
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2724              		.loc 1 1554 0
 2725 00d0 A068     		ldr	r0, [r4, #8]
 2726 00d2 FFF7FEFF 		bl	xTaskPriorityInherit
 2727              	.LVL278:
 2728 00d6 0546     		mov	r5, r0
 2729              	.LVL279:
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2730              		.loc 1 1556 0
 2731 00d8 FFF7FEFF 		bl	vPortExitCritical
 2732              	.LVL280:
 2733 00dc 3BE0     		b	.L260
 2734              	.L259:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2735              		.loc 1 1580 0
 2736 00de 2046     		mov	r0, r4
 2737 00e0 FFF7FEFF 		bl	prvUnlockQueue
 2738              	.LVL281:
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2739              		.loc 1 1581 0
 2740 00e4 FFF7FEFF 		bl	xTaskResumeAll
 2741              	.LVL282:
 2742 00e8 09E0     		b	.L246
 2743              	.L258:
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2744              		.loc 1 1587 0
 2745 00ea 2046     		mov	r0, r4
 2746 00ec FFF7FEFF 		bl	prvUnlockQueue
 2747              	.LVL283:
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2748              		.loc 1 1588 0
 2749 00f0 FFF7FEFF 		bl	xTaskResumeAll
 2750              	.LVL284:
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2751              		.loc 1 1594 0
 2752 00f4 2046     		mov	r0, r4
 2753 00f6 FFF7FEFF 		bl	prvIsQueueEmpty
 2754              	.LVL285:
 2755 00fa 0028     		cmp	r0, #0
 2756 00fc 40D1     		bne	.L267
 2757              	.LVL286:
 2758              	.L246:
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2759              		.loc 1 1444 0
 2760 00fe FFF7FEFF 		bl	vPortEnterCritical
 2761              	.LVL287:
 2762              	.LBB202:
ARM GAS  /tmp/ccn5TrpU.s 			page 100


1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2763              		.loc 1 1448 0
 2764 0102 A36B     		ldr	r3, [r4, #56]
 2765              	.LVL288:
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2766              		.loc 1 1452 0
 2767 0104 002B     		cmp	r3, #0
 2768 0106 ABD1     		bne	.L268
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2769              		.loc 1 1498 0
 2770 0108 019B     		ldr	r3, [sp, #4]
 2771              	.LVL289:
 2772 010a 002B     		cmp	r3, #0
 2773 010c C4D0     		beq	.L269
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2774              		.loc 1 1515 0
 2775 010e 002E     		cmp	r6, #0
 2776 0110 CFD0     		beq	.L270
 2777              	.LVL290:
 2778              	.L255:
 2779              	.LBE202:
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2780              		.loc 1 1529 0
 2781 0112 FFF7FEFF 		bl	vPortExitCritical
 2782              	.LVL291:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2783              		.loc 1 1534 0
 2784 0116 FFF7FEFF 		bl	vTaskSuspendAll
 2785              	.LVL292:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2786              		.loc 1 1535 0
 2787 011a FFF7FEFF 		bl	vPortEnterCritical
 2788              	.LVL293:
 2789 011e 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2790 0122 5BB2     		sxtb	r3, r3
 2791 0124 B3F1FF3F 		cmp	r3, #-1
 2792 0128 C8D0     		beq	.L271
 2793              	.L256:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2794              		.loc 1 1535 0 is_stmt 0 discriminator 3
 2795 012a 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2796 012e 5BB2     		sxtb	r3, r3
 2797 0130 B3F1FF3F 		cmp	r3, #-1
 2798 0134 C6D0     		beq	.L272
 2799              	.L257:
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2800              		.loc 1 1535 0 discriminator 6
 2801 0136 FFF7FEFF 		bl	vPortExitCritical
 2802              	.LVL294:
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2803              		.loc 1 1538 0 is_stmt 1 discriminator 6
 2804 013a 01A9     		add	r1, sp, #4
 2805 013c 02A8     		add	r0, sp, #8
 2806 013e FFF7FEFF 		bl	xTaskCheckForTimeOut
 2807              	.LVL295:
 2808 0142 0028     		cmp	r0, #0
 2809 0144 D1D1     		bne	.L258
ARM GAS  /tmp/ccn5TrpU.s 			page 101


1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2810              		.loc 1 1544 0
 2811 0146 2046     		mov	r0, r4
 2812 0148 FFF7FEFF 		bl	prvIsQueueEmpty
 2813              	.LVL296:
 2814 014c 0028     		cmp	r0, #0
 2815 014e C6D0     		beq	.L259
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2816              		.loc 1 1550 0
 2817 0150 2368     		ldr	r3, [r4]
 2818 0152 002B     		cmp	r3, #0
 2819 0154 BAD0     		beq	.L273
 2820              	.L260:
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2821              		.loc 1 1565 0
 2822 0156 0199     		ldr	r1, [sp, #4]
 2823 0158 04F12400 		add	r0, r4, #36
 2824 015c FFF7FEFF 		bl	vTaskPlaceOnEventList
 2825              	.LVL297:
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2826              		.loc 1 1566 0
 2827 0160 2046     		mov	r0, r4
 2828 0162 FFF7FEFF 		bl	prvUnlockQueue
 2829              	.LVL298:
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2830              		.loc 1 1567 0
 2831 0166 FFF7FEFF 		bl	xTaskResumeAll
 2832              	.LVL299:
 2833 016a 0028     		cmp	r0, #0
 2834 016c C7D1     		bne	.L246
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2835              		.loc 1 1569 0
 2836 016e 4FF08052 		mov	r2, #268435456
 2837 0172 0B4B     		ldr	r3, .L274
 2838 0174 1A60     		str	r2, [r3]
 2839              		.syntax unified
 2840              	@ 1569 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2841 0176 BFF34F8F 		dsb
 2842              	@ 0 "" 2
 2843              	@ 1569 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2844 017a BFF36F8F 		isb
 2845              	@ 0 "" 2
 2846              		.thumb
 2847              		.syntax unified
 2848 017e BEE7     		b	.L246
 2849              	.L267:
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2850              		.loc 1 1601 0
 2851 0180 002D     		cmp	r5, #0
 2852 0182 86D0     		beq	.L240
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2853              		.loc 1 1603 0
 2854 0184 FFF7FEFF 		bl	vPortEnterCritical
 2855              	.LVL300:
 2856              	.LBB203:
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPri
 2857              		.loc 1 1612 0
ARM GAS  /tmp/ccn5TrpU.s 			page 102


 2858 0188 2046     		mov	r0, r4
 2859 018a FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2860              	.LVL301:
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2861              		.loc 1 1613 0
 2862 018e 0146     		mov	r1, r0
 2863 0190 A068     		ldr	r0, [r4, #8]
 2864              	.LVL302:
 2865 0192 FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2866              	.LVL303:
 2867              	.LBE203:
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2868              		.loc 1 1615 0
 2869 0196 FFF7FEFF 		bl	vPortExitCritical
 2870              	.LVL304:
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2871              		.loc 1 1621 0
 2872 019a 0025     		movs	r5, #0
 2873              	.LVL305:
 2874 019c 79E7     		b	.L240
 2875              	.L275:
 2876 019e 00BF     		.align	2
 2877              	.L274:
 2878 01a0 04ED00E0 		.word	-536810236
 2879              		.cfi_endproc
 2880              	.LFE21:
 2882              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2883              		.align	1
 2884              		.global	xQueueTakeMutexRecursive
 2885              		.syntax unified
 2886              		.thumb
 2887              		.thumb_func
 2888              		.fpu fpv4-sp-d16
 2890              	xQueueTakeMutexRecursive:
 2891              	.LFB14:
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2892              		.loc 1 652 0
 2893              		.cfi_startproc
 2894              		@ args = 0, pretend = 0, frame = 0
 2895              		@ frame_needed = 0, uses_anonymous_args = 0
 2896              	.LVL306:
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2897              		.loc 1 656 0
 2898 0000 88B1     		cbz	r0, .L283
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2899              		.loc 1 652 0
 2900 0002 70B5     		push	{r4, r5, r6, lr}
 2901              	.LCFI42:
 2902              		.cfi_def_cfa_offset 16
 2903              		.cfi_offset 4, -16
 2904              		.cfi_offset 5, -12
 2905              		.cfi_offset 6, -8
 2906              		.cfi_offset 14, -4
 2907 0004 0446     		mov	r4, r0
 2908 0006 0D46     		mov	r5, r1
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2909              		.loc 1 663 0
ARM GAS  /tmp/ccn5TrpU.s 			page 103


 2910 0008 8668     		ldr	r6, [r0, #8]
 2911 000a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2912              	.LVL307:
 2913 000e 8642     		cmp	r6, r0
 2914 0010 12D0     		beq	.L284
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2915              		.loc 1 670 0
 2916 0012 2946     		mov	r1, r5
 2917 0014 2046     		mov	r0, r4
 2918 0016 FFF7FEFF 		bl	xQueueSemaphoreTake
 2919              	.LVL308:
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2920              		.loc 1 675 0
 2921 001a 0246     		mov	r2, r0
 2922 001c 80B1     		cbz	r0, .L276
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2923              		.loc 1 677 0
 2924 001e E368     		ldr	r3, [r4, #12]
 2925 0020 0133     		adds	r3, r3, #1
 2926 0022 E360     		str	r3, [r4, #12]
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2927              		.loc 1 685 0
 2928 0024 0CE0     		b	.L276
 2929              	.LVL309:
 2930              	.L283:
 2931              	.LCFI43:
 2932              		.cfi_def_cfa_offset 0
 2933              		.cfi_restore 4
 2934              		.cfi_restore 5
 2935              		.cfi_restore 6
 2936              		.cfi_restore 14
 2937              	.LBB204:
 2938              	.LBB205:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2939              		.loc 2 195 0
 2940              		.syntax unified
 2941              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2942 0026 4FF05003 			mov r3, #80												
 2943 002a 83F31188 		msr basepri, r3											
 2944 002e BFF36F8F 		isb														
 2945 0032 BFF34F8F 		dsb														
 2946              	
 2947              	@ 0 "" 2
 2948              	.LVL310:
 2949              		.thumb
 2950              		.syntax unified
 2951              	.L278:
 2952 0036 FEE7     		b	.L278
 2953              	.LVL311:
 2954              	.L284:
 2955              	.LCFI44:
 2956              		.cfi_def_cfa_offset 16
 2957              		.cfi_offset 4, -16
 2958              		.cfi_offset 5, -12
 2959              		.cfi_offset 6, -8
 2960              		.cfi_offset 14, -4
 2961              	.LBE205:
ARM GAS  /tmp/ccn5TrpU.s 			page 104


 2962              	.LBE204:
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2963              		.loc 1 665 0
 2964 0038 E368     		ldr	r3, [r4, #12]
 2965 003a 0133     		adds	r3, r3, #1
 2966 003c E360     		str	r3, [r4, #12]
 2967              	.LVL312:
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2968              		.loc 1 666 0
 2969 003e 0122     		movs	r2, #1
 2970              	.LVL313:
 2971              	.L276:
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2972              		.loc 1 686 0
 2973 0040 1046     		mov	r0, r2
 2974 0042 70BD     		pop	{r4, r5, r6, pc}
 2975              		.cfi_endproc
 2976              	.LFE14:
 2978              		.section	.text.xQueuePeek,"ax",%progbits
 2979              		.align	1
 2980              		.global	xQueuePeek
 2981              		.syntax unified
 2982              		.thumb
 2983              		.thumb_func
 2984              		.fpu fpv4-sp-d16
 2986              	xQueuePeek:
 2987              	.LFB22:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2988              		.loc 1 1633 0
 2989              		.cfi_startproc
 2990              		@ args = 0, pretend = 0, frame = 16
 2991              		@ frame_needed = 0, uses_anonymous_args = 0
 2992              	.LVL314:
 2993 0000 70B5     		push	{r4, r5, r6, lr}
 2994              	.LCFI45:
 2995              		.cfi_def_cfa_offset 16
 2996              		.cfi_offset 4, -16
 2997              		.cfi_offset 5, -12
 2998              		.cfi_offset 6, -8
 2999              		.cfi_offset 14, -4
 3000 0002 84B0     		sub	sp, sp, #16
 3001              	.LCFI46:
 3002              		.cfi_def_cfa_offset 32
 3003 0004 0192     		str	r2, [sp, #4]
 3004              	.LVL315:
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3005              		.loc 1 1640 0
 3006 0006 60B1     		cbz	r0, .L309
 3007 0008 0446     		mov	r4, r0
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3008              		.loc 1 1644 0
 3009 000a 99B1     		cbz	r1, .L310
 3010 000c 0125     		movs	r5, #1
 3011              	.L288:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3012              		.loc 1 1644 0 is_stmt 0 discriminator 6
 3013 000e BDB9     		cbnz	r5, .L289
ARM GAS  /tmp/ccn5TrpU.s 			page 105


 3014              	.LBB206:
 3015              	.LBB207:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3016              		.loc 2 195 0 is_stmt 1
 3017              		.syntax unified
 3018              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3019 0010 4FF05003 			mov r3, #80												
 3020 0014 83F31188 		msr basepri, r3											
 3021 0018 BFF36F8F 		isb														
 3022 001c BFF34F8F 		dsb														
 3023              	
 3024              	@ 0 "" 2
 3025              	.LVL316:
 3026              		.thumb
 3027              		.syntax unified
 3028              	.L290:
 3029 0020 FEE7     		b	.L290
 3030              	.L309:
 3031              	.LBE207:
 3032              	.LBE206:
 3033              	.LBB208:
 3034              	.LBB209:
 3035              		.syntax unified
 3036              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3037 0022 4FF05003 			mov r3, #80												
 3038 0026 83F31188 		msr basepri, r3											
 3039 002a BFF36F8F 		isb														
 3040 002e BFF34F8F 		dsb														
 3041              	
 3042              	@ 0 "" 2
 3043              	.LVL317:
 3044              		.thumb
 3045              		.syntax unified
 3046              	.L287:
 3047 0032 FEE7     		b	.L287
 3048              	.L310:
 3049              	.LBE209:
 3050              	.LBE208:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3051              		.loc 1 1644 0 discriminator 2
 3052 0034 036C     		ldr	r3, [r0, #64]
 3053 0036 0BB9     		cbnz	r3, .L305
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3054              		.loc 1 1644 0 is_stmt 0
 3055 0038 0125     		movs	r5, #1
 3056 003a E8E7     		b	.L288
 3057              	.L305:
 3058 003c 0025     		movs	r5, #0
 3059 003e E6E7     		b	.L288
 3060              	.L289:
 3061 0040 0E46     		mov	r6, r1
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3062              		.loc 1 1649 0 is_stmt 1
 3063 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 3064              	.LVL318:
 3065 0046 10B9     		cbnz	r0, .L291
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
ARM GAS  /tmp/ccn5TrpU.s 			page 106


 3066              		.loc 1 1649 0 is_stmt 0 discriminator 2
 3067 0048 019B     		ldr	r3, [sp, #4]
 3068 004a 03B1     		cbz	r3, .L291
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3069              		.loc 1 1649 0
 3070 004c 0025     		movs	r5, #0
 3071              	.L291:
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3072              		.loc 1 1649 0 discriminator 6
 3073 004e 45B9     		cbnz	r5, .L307
 3074              	.LBB210:
 3075              	.LBB211:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3076              		.loc 2 195 0 is_stmt 1
 3077              		.syntax unified
 3078              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3079 0050 4FF05003 			mov r3, #80												
 3080 0054 83F31188 		msr basepri, r3											
 3081 0058 BFF36F8F 		isb														
 3082 005c BFF34F8F 		dsb														
 3083              	
 3084              	@ 0 "" 2
 3085              	.LVL319:
 3086              		.thumb
 3087              		.syntax unified
 3088              	.L293:
 3089 0060 FEE7     		b	.L293
 3090              	.L307:
 3091              	.LBE211:
 3092              	.LBE210:
 3093 0062 0025     		movs	r5, #0
 3094 0064 2FE0     		b	.L292
 3095              	.LVL320:
 3096              	.L311:
 3097              	.LBB212:
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3098              		.loc 1 1670 0
 3099 0066 E568     		ldr	r5, [r4, #12]
 3100              	.LVL321:
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 3101              		.loc 1 1672 0
 3102 0068 3146     		mov	r1, r6
 3103 006a 2046     		mov	r0, r4
 3104 006c FFF7FEFF 		bl	prvCopyDataFromQueue
 3105              	.LVL322:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3106              		.loc 1 1676 0
 3107 0070 E560     		str	r5, [r4, #12]
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3108              		.loc 1 1680 0
 3109 0072 636A     		ldr	r3, [r4, #36]
 3110 0074 63B1     		cbz	r3, .L295
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3111              		.loc 1 1682 0
 3112 0076 04F12400 		add	r0, r4, #36
 3113 007a FFF7FEFF 		bl	xTaskRemoveFromEventList
 3114              	.LVL323:
ARM GAS  /tmp/ccn5TrpU.s 			page 107


 3115 007e 38B1     		cbz	r0, .L295
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 3116              		.loc 1 1685 0
 3117 0080 4FF08052 		mov	r2, #268435456
 3118 0084 344B     		ldr	r3, .L316
 3119 0086 1A60     		str	r2, [r3]
 3120              		.syntax unified
 3121              	@ 1685 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3122 0088 BFF34F8F 		dsb
 3123              	@ 0 "" 2
 3124              	@ 1685 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3125 008c BFF36F8F 		isb
 3126              	@ 0 "" 2
 3127              		.thumb
 3128              		.syntax unified
 3129              	.L295:
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 3130              		.loc 1 1697 0
 3131 0090 FFF7FEFF 		bl	vPortExitCritical
 3132              	.LVL324:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3133              		.loc 1 1698 0
 3134 0094 0120     		movs	r0, #1
 3135              	.LVL325:
 3136              	.L285:
 3137              	.LBE212:
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3138              		.loc 1 1778 0
 3139 0096 04B0     		add	sp, sp, #16
 3140              	.LCFI47:
 3141              		.cfi_remember_state
 3142              		.cfi_def_cfa_offset 16
 3143              		@ sp needed
 3144 0098 70BD     		pop	{r4, r5, r6, pc}
 3145              	.LVL326:
 3146              	.L312:
 3147              	.LCFI48:
 3148              		.cfi_restore_state
 3149              	.LBB213:
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 3150              		.loc 1 1706 0
 3151 009a FFF7FEFF 		bl	vPortExitCritical
 3152              	.LVL327:
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3153              		.loc 1 1708 0
 3154 009e 0020     		movs	r0, #0
 3155 00a0 F9E7     		b	.L285
 3156              	.L313:
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 3157              		.loc 1 1715 0
 3158 00a2 02A8     		add	r0, sp, #8
 3159 00a4 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3160              	.LVL328:
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3161              		.loc 1 1716 0
 3162 00a8 0125     		movs	r5, #1
 3163 00aa 16E0     		b	.L298
ARM GAS  /tmp/ccn5TrpU.s 			page 108


 3164              	.LVL329:
 3165              	.L314:
 3166              	.LBE213:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3167              		.loc 1 1731 0 discriminator 1
 3168 00ac 0023     		movs	r3, #0
 3169 00ae 84F84430 		strb	r3, [r4, #68]
 3170 00b2 1EE0     		b	.L299
 3171              	.L315:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3172              		.loc 1 1731 0 is_stmt 0 discriminator 4
 3173 00b4 0023     		movs	r3, #0
 3174 00b6 84F84530 		strb	r3, [r4, #69]
 3175 00ba 20E0     		b	.L300
 3176              	.L302:
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3177              		.loc 1 1756 0 is_stmt 1
 3178 00bc 2046     		mov	r0, r4
 3179 00be FFF7FEFF 		bl	prvUnlockQueue
 3180              	.LVL330:
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3181              		.loc 1 1757 0
 3182 00c2 FFF7FEFF 		bl	xTaskResumeAll
 3183              	.LVL331:
 3184              	.L292:
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3185              		.loc 1 1659 0
 3186 00c6 FFF7FEFF 		bl	vPortEnterCritical
 3187              	.LVL332:
 3188              	.LBB214:
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3189              		.loc 1 1661 0
 3190 00ca A36B     		ldr	r3, [r4, #56]
 3191              	.LVL333:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3192              		.loc 1 1665 0
 3193 00cc 002B     		cmp	r3, #0
 3194 00ce CAD1     		bne	.L311
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3195              		.loc 1 1702 0
 3196 00d0 019B     		ldr	r3, [sp, #4]
 3197              	.LVL334:
 3198 00d2 002B     		cmp	r3, #0
 3199 00d4 E1D0     		beq	.L312
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3200              		.loc 1 1710 0
 3201 00d6 002D     		cmp	r5, #0
 3202 00d8 E3D0     		beq	.L313
 3203              	.LVL335:
 3204              	.L298:
 3205              	.LBE214:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3206              		.loc 1 1725 0
 3207 00da FFF7FEFF 		bl	vPortExitCritical
 3208              	.LVL336:
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3209              		.loc 1 1730 0
ARM GAS  /tmp/ccn5TrpU.s 			page 109


 3210 00de FFF7FEFF 		bl	vTaskSuspendAll
 3211              	.LVL337:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3212              		.loc 1 1731 0
 3213 00e2 FFF7FEFF 		bl	vPortEnterCritical
 3214              	.LVL338:
 3215 00e6 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3216 00ea 5BB2     		sxtb	r3, r3
 3217 00ec B3F1FF3F 		cmp	r3, #-1
 3218 00f0 DCD0     		beq	.L314
 3219              	.L299:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3220              		.loc 1 1731 0 is_stmt 0 discriminator 3
 3221 00f2 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3222 00f6 5BB2     		sxtb	r3, r3
 3223 00f8 B3F1FF3F 		cmp	r3, #-1
 3224 00fc DAD0     		beq	.L315
 3225              	.L300:
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3226              		.loc 1 1731 0 discriminator 6
 3227 00fe FFF7FEFF 		bl	vPortExitCritical
 3228              	.LVL339:
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3229              		.loc 1 1734 0 is_stmt 1 discriminator 6
 3230 0102 01A9     		add	r1, sp, #4
 3231 0104 02A8     		add	r0, sp, #8
 3232 0106 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3233              	.LVL340:
 3234 010a C8B9     		cbnz	r0, .L301
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3235              		.loc 1 1738 0
 3236 010c 2046     		mov	r0, r4
 3237 010e FFF7FEFF 		bl	prvIsQueueEmpty
 3238              	.LVL341:
 3239 0112 0028     		cmp	r0, #0
 3240 0114 D2D0     		beq	.L302
1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3241              		.loc 1 1741 0
 3242 0116 0199     		ldr	r1, [sp, #4]
 3243 0118 04F12400 		add	r0, r4, #36
 3244 011c FFF7FEFF 		bl	vTaskPlaceOnEventList
 3245              	.LVL342:
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3246              		.loc 1 1742 0
 3247 0120 2046     		mov	r0, r4
 3248 0122 FFF7FEFF 		bl	prvUnlockQueue
 3249              	.LVL343:
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3250              		.loc 1 1743 0
 3251 0126 FFF7FEFF 		bl	xTaskResumeAll
 3252              	.LVL344:
 3253 012a 0028     		cmp	r0, #0
 3254 012c CBD1     		bne	.L292
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3255              		.loc 1 1745 0
 3256 012e 4FF08052 		mov	r2, #268435456
 3257 0132 094B     		ldr	r3, .L316
ARM GAS  /tmp/ccn5TrpU.s 			page 110


 3258 0134 1A60     		str	r2, [r3]
 3259              		.syntax unified
 3260              	@ 1745 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3261 0136 BFF34F8F 		dsb
 3262              	@ 0 "" 2
 3263              	@ 1745 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3264 013a BFF36F8F 		isb
 3265              	@ 0 "" 2
 3266              		.thumb
 3267              		.syntax unified
 3268 013e C2E7     		b	.L292
 3269              	.L301:
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3270              		.loc 1 1764 0
 3271 0140 2046     		mov	r0, r4
 3272 0142 FFF7FEFF 		bl	prvUnlockQueue
 3273              	.LVL345:
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3274              		.loc 1 1765 0
 3275 0146 FFF7FEFF 		bl	xTaskResumeAll
 3276              	.LVL346:
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3277              		.loc 1 1767 0
 3278 014a 2046     		mov	r0, r4
 3279 014c FFF7FEFF 		bl	prvIsQueueEmpty
 3280              	.LVL347:
 3281 0150 0028     		cmp	r0, #0
 3282 0152 B8D0     		beq	.L292
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3283              		.loc 1 1770 0
 3284 0154 0020     		movs	r0, #0
 3285 0156 9EE7     		b	.L285
 3286              	.L317:
 3287              		.align	2
 3288              	.L316:
 3289 0158 04ED00E0 		.word	-536810236
 3290              		.cfi_endproc
 3291              	.LFE22:
 3293              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3294              		.align	1
 3295              		.global	xQueueReceiveFromISR
 3296              		.syntax unified
 3297              		.thumb
 3298              		.thumb_func
 3299              		.fpu fpv4-sp-d16
 3301              	xQueueReceiveFromISR:
 3302              	.LFB23:
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3303              		.loc 1 1782 0
 3304              		.cfi_startproc
 3305              		@ args = 0, pretend = 0, frame = 0
 3306              		@ frame_needed = 0, uses_anonymous_args = 0
 3307              	.LVL348:
 3308 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3309              	.LCFI49:
 3310              		.cfi_def_cfa_offset 32
 3311              		.cfi_offset 3, -32
ARM GAS  /tmp/ccn5TrpU.s 			page 111


 3312              		.cfi_offset 4, -28
 3313              		.cfi_offset 5, -24
 3314              		.cfi_offset 6, -20
 3315              		.cfi_offset 7, -16
 3316              		.cfi_offset 8, -12
 3317              		.cfi_offset 9, -8
 3318              		.cfi_offset 14, -4
 3319              	.LVL349:
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3320              		.loc 1 1787 0
 3321 0004 60B1     		cbz	r0, .L333
 3322 0006 0446     		mov	r4, r0
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3323              		.loc 1 1788 0
 3324 0008 99B1     		cbz	r1, .L334
 3325 000a 0123     		movs	r3, #1
 3326              	.L321:
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3327              		.loc 1 1788 0 is_stmt 0 discriminator 6
 3328 000c BBB9     		cbnz	r3, .L322
 3329              	.LBB215:
 3330              	.LBB216:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3331              		.loc 2 195 0 is_stmt 1
 3332              		.syntax unified
 3333              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3334 000e 4FF05003 			mov r3, #80												
 3335 0012 83F31188 		msr basepri, r3											
 3336 0016 BFF36F8F 		isb														
 3337 001a BFF34F8F 		dsb														
 3338              	
 3339              	@ 0 "" 2
 3340              	.LVL350:
 3341              		.thumb
 3342              		.syntax unified
 3343              	.L323:
 3344 001e FEE7     		b	.L323
 3345              	.L333:
 3346              	.LBE216:
 3347              	.LBE215:
 3348              	.LBB217:
 3349              	.LBB218:
 3350              		.syntax unified
 3351              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3352 0020 4FF05003 			mov r3, #80												
 3353 0024 83F31188 		msr basepri, r3											
 3354 0028 BFF36F8F 		isb														
 3355 002c BFF34F8F 		dsb														
 3356              	
 3357              	@ 0 "" 2
 3358              	.LVL351:
 3359              		.thumb
 3360              		.syntax unified
 3361              	.L320:
 3362 0030 FEE7     		b	.L320
 3363              	.L334:
 3364              	.LBE218:
ARM GAS  /tmp/ccn5TrpU.s 			page 112


 3365              	.LBE217:
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3366              		.loc 1 1788 0 discriminator 2
 3367 0032 036C     		ldr	r3, [r0, #64]
 3368 0034 0BB9     		cbnz	r3, .L327
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3369              		.loc 1 1788 0 is_stmt 0
 3370 0036 0123     		movs	r3, #1
 3371 0038 E8E7     		b	.L321
 3372              	.L327:
 3373 003a 0023     		movs	r3, #0
 3374 003c E6E7     		b	.L321
 3375              	.L322:
 3376 003e 1746     		mov	r7, r2
 3377 0040 8946     		mov	r9, r1
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3378              		.loc 1 1804 0 is_stmt 1
 3379 0042 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3380              	.LVL352:
 3381              	.LBB219:
 3382              	.LBB220:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3383              		.loc 2 211 0
 3384              		.syntax unified
 3385              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3386 0046 EFF31186 			mrs r6, basepri											
 3387 004a 4FF05003 		mov r3, #80												
 3388 004e 83F31188 		msr basepri, r3											
 3389 0052 BFF36F8F 		isb														
 3390 0056 BFF34F8F 		dsb														
 3391              	
 3392              	@ 0 "" 2
 3393              		.thumb
 3394              		.syntax unified
 3395              	.LBE220:
 3396              	.LBE219:
 3397              	.LBB221:
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3398              		.loc 1 1808 0
 3399 005a D4F83880 		ldr	r8, [r4, #56]
 3400              	.LVL353:
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3401              		.loc 1 1811 0
 3402 005e B8F1000F 		cmp	r8, #0
 3403 0062 20D0     		beq	.L328
 3404              	.LBB222:
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3405              		.loc 1 1813 0
 3406 0064 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 3407 0068 6DB2     		sxtb	r5, r5
 3408              	.LVL354:
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3409              		.loc 1 1817 0
 3410 006a 4946     		mov	r1, r9
 3411 006c 2046     		mov	r0, r4
 3412 006e FFF7FEFF 		bl	prvCopyDataFromQueue
 3413              	.LVL355:
ARM GAS  /tmp/ccn5TrpU.s 			page 113


1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3414              		.loc 1 1818 0
 3415 0072 08F1FF33 		add	r3, r8, #-1
 3416 0076 A363     		str	r3, [r4, #56]
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3417              		.loc 1 1824 0
 3418 0078 B5F1FF3F 		cmp	r5, #-1
 3419 007c 0DD1     		bne	.L325
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3420              		.loc 1 1826 0
 3421 007e 2369     		ldr	r3, [r4, #16]
 3422 0080 9BB1     		cbz	r3, .L329
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3423              		.loc 1 1828 0
 3424 0082 04F11000 		add	r0, r4, #16
 3425 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3426              	.LVL356:
 3427 008a 80B1     		cbz	r0, .L330
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 3428              		.loc 1 1832 0
 3429 008c 8FB1     		cbz	r7, .L331
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 3430              		.loc 1 1834 0
 3431 008e 0120     		movs	r0, #1
 3432 0090 3860     		str	r0, [r7]
 3433              	.LVL357:
 3434              	.L324:
 3435              	.LBE222:
 3436              	.LBE221:
 3437              	.LBB225:
 3438              	.LBB226:
 3439              		.loc 2 229 0
 3440              		.syntax unified
 3441              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3442 0092 86F31188 			msr basepri, r6	
 3443              	@ 0 "" 2
 3444              	.LVL358:
 3445              		.thumb
 3446              		.syntax unified
 3447              	.LBE226:
 3448              	.LBE225:
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3449              		.loc 1 1869 0
 3450 0096 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3451              	.LVL359:
 3452              	.L325:
 3453              	.LBB227:
 3454              	.LBB223:
1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3455              		.loc 1 1855 0
 3456 009a 6B1C     		adds	r3, r5, #1
 3457 009c 5BB2     		sxtb	r3, r3
 3458 009e 84F84430 		strb	r3, [r4, #68]
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3459              		.loc 1 1858 0
 3460 00a2 0120     		movs	r0, #1
 3461 00a4 F5E7     		b	.L324
ARM GAS  /tmp/ccn5TrpU.s 			page 114


 3462              	.LVL360:
 3463              	.L328:
 3464              	.LBE223:
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3465              		.loc 1 1862 0
 3466 00a6 0020     		movs	r0, #0
 3467 00a8 F3E7     		b	.L324
 3468              	.LVL361:
 3469              	.L329:
 3470              	.LBB224:
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3471              		.loc 1 1858 0
 3472 00aa 0120     		movs	r0, #1
 3473 00ac F1E7     		b	.L324
 3474              	.L330:
 3475 00ae 0120     		movs	r0, #1
 3476 00b0 EFE7     		b	.L324
 3477              	.L331:
 3478 00b2 0120     		movs	r0, #1
 3479 00b4 EDE7     		b	.L324
 3480              	.LBE224:
 3481              	.LBE227:
 3482              		.cfi_endproc
 3483              	.LFE23:
 3485              		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3486              		.align	1
 3487              		.global	xQueuePeekFromISR
 3488              		.syntax unified
 3489              		.thumb
 3490              		.thumb_func
 3491              		.fpu fpv4-sp-d16
 3493              	xQueuePeekFromISR:
 3494              	.LFB24:
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3495              		.loc 1 1873 0
 3496              		.cfi_startproc
 3497              		@ args = 0, pretend = 0, frame = 0
 3498              		@ frame_needed = 0, uses_anonymous_args = 0
 3499              	.LVL362:
 3500 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3501              	.LCFI50:
 3502              		.cfi_def_cfa_offset 24
 3503              		.cfi_offset 3, -24
 3504              		.cfi_offset 4, -20
 3505              		.cfi_offset 5, -16
 3506              		.cfi_offset 6, -12
 3507              		.cfi_offset 7, -8
 3508              		.cfi_offset 14, -4
 3509              	.LVL363:
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3510              		.loc 1 1879 0
 3511 0002 60B1     		cbz	r0, .L348
 3512 0004 0446     		mov	r4, r0
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3513              		.loc 1 1880 0
 3514 0006 99B1     		cbz	r1, .L349
 3515 0008 0123     		movs	r3, #1
ARM GAS  /tmp/ccn5TrpU.s 			page 115


 3516              	.L338:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3517              		.loc 1 1880 0 is_stmt 0 discriminator 6
 3518 000a BBB9     		cbnz	r3, .L339
 3519              	.LBB228:
 3520              	.LBB229:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3521              		.loc 2 195 0 is_stmt 1
 3522              		.syntax unified
 3523              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3524 000c 4FF05003 			mov r3, #80												
 3525 0010 83F31188 		msr basepri, r3											
 3526 0014 BFF36F8F 		isb														
 3527 0018 BFF34F8F 		dsb														
 3528              	
 3529              	@ 0 "" 2
 3530              	.LVL364:
 3531              		.thumb
 3532              		.syntax unified
 3533              	.L340:
 3534 001c FEE7     		b	.L340
 3535              	.L348:
 3536              	.LBE229:
 3537              	.LBE228:
 3538              	.LBB230:
 3539              	.LBB231:
 3540              		.syntax unified
 3541              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3542 001e 4FF05003 			mov r3, #80												
 3543 0022 83F31188 		msr basepri, r3											
 3544 0026 BFF36F8F 		isb														
 3545 002a BFF34F8F 		dsb														
 3546              	
 3547              	@ 0 "" 2
 3548              	.LVL365:
 3549              		.thumb
 3550              		.syntax unified
 3551              	.L337:
 3552 002e FEE7     		b	.L337
 3553              	.L349:
 3554              	.LBE231:
 3555              	.LBE230:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3556              		.loc 1 1880 0 discriminator 2
 3557 0030 036C     		ldr	r3, [r0, #64]
 3558 0032 0BB9     		cbnz	r3, .L345
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3559              		.loc 1 1880 0 is_stmt 0
 3560 0034 0123     		movs	r3, #1
 3561 0036 E8E7     		b	.L338
 3562              	.L345:
 3563 0038 0023     		movs	r3, #0
 3564 003a E6E7     		b	.L338
 3565              	.L339:
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3566              		.loc 1 1881 0 is_stmt 1
 3567 003c 236C     		ldr	r3, [r4, #64]
ARM GAS  /tmp/ccn5TrpU.s 			page 116


 3568 003e 43B9     		cbnz	r3, .L341
 3569              	.LBB232:
 3570              	.LBB233:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3571              		.loc 2 195 0
 3572              		.syntax unified
 3573              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3574 0040 4FF05003 			mov r3, #80												
 3575 0044 83F31188 		msr basepri, r3											
 3576 0048 BFF36F8F 		isb														
 3577 004c BFF34F8F 		dsb														
 3578              	
 3579              	@ 0 "" 2
 3580              	.LVL366:
 3581              		.thumb
 3582              		.syntax unified
 3583              	.L342:
 3584 0050 FEE7     		b	.L342
 3585              	.L341:
 3586 0052 0D46     		mov	r5, r1
 3587              	.LBE233:
 3588              	.LBE232:
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3589              		.loc 1 1897 0
 3590 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3591              	.LVL367:
 3592              	.LBB234:
 3593              	.LBB235:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3594              		.loc 2 211 0
 3595              		.syntax unified
 3596              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3597 0058 EFF31186 			mrs r6, basepri											
 3598 005c 4FF05003 		mov r3, #80												
 3599 0060 83F31188 		msr basepri, r3											
 3600 0064 BFF36F8F 		isb														
 3601 0068 BFF34F8F 		dsb														
 3602              	
 3603              	@ 0 "" 2
 3604              		.thumb
 3605              		.syntax unified
 3606              	.LBE235:
 3607              	.LBE234:
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3608              		.loc 1 1902 0
 3609 006c A36B     		ldr	r3, [r4, #56]
 3610 006e 4BB1     		cbz	r3, .L346
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3611              		.loc 1 1908 0
 3612 0070 E768     		ldr	r7, [r4, #12]
 3613              	.LVL368:
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
 3614              		.loc 1 1909 0
 3615 0072 2946     		mov	r1, r5
 3616 0074 2046     		mov	r0, r4
 3617 0076 FFF7FEFF 		bl	prvCopyDataFromQueue
 3618              	.LVL369:
ARM GAS  /tmp/ccn5TrpU.s 			page 117


1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3619              		.loc 1 1910 0
 3620 007a E760     		str	r7, [r4, #12]
 3621              	.LVL370:
1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3622              		.loc 1 1912 0
 3623 007c 0120     		movs	r0, #1
 3624              	.LVL371:
 3625              	.L343:
 3626              	.LBB236:
 3627              	.LBB237:
 3628              		.loc 2 229 0
 3629              		.syntax unified
 3630              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3631 007e 86F31188 			msr basepri, r6	
 3632              	@ 0 "" 2
 3633              	.LVL372:
 3634              		.thumb
 3635              		.syntax unified
 3636              	.LBE237:
 3637              	.LBE236:
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3638              		.loc 1 1923 0
 3639 0082 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3640              	.LVL373:
 3641              	.L346:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3642              		.loc 1 1916 0
 3643 0084 0020     		movs	r0, #0
 3644 0086 FAE7     		b	.L343
 3645              		.cfi_endproc
 3646              	.LFE24:
 3648              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3649              		.align	1
 3650              		.global	uxQueueMessagesWaiting
 3651              		.syntax unified
 3652              		.thumb
 3653              		.thumb_func
 3654              		.fpu fpv4-sp-d16
 3656              	uxQueueMessagesWaiting:
 3657              	.LFB25:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3658              		.loc 1 1927 0
 3659              		.cfi_startproc
 3660              		@ args = 0, pretend = 0, frame = 0
 3661              		@ frame_needed = 0, uses_anonymous_args = 0
 3662              	.LVL374:
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3663              		.loc 1 1930 0
 3664 0000 40B9     		cbnz	r0, .L351
 3665              	.LBB238:
 3666              	.LBB239:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3667              		.loc 2 195 0
 3668              		.syntax unified
 3669              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3670 0002 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccn5TrpU.s 			page 118


 3671 0006 83F31188 		msr basepri, r3											
 3672 000a BFF36F8F 		isb														
 3673 000e BFF34F8F 		dsb														
 3674              	
 3675              	@ 0 "" 2
 3676              	.LVL375:
 3677              		.thumb
 3678              		.syntax unified
 3679              	.L352:
 3680 0012 FEE7     		b	.L352
 3681              	.L351:
 3682              	.LBE239:
 3683              	.LBE238:
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3684              		.loc 1 1927 0
 3685 0014 10B5     		push	{r4, lr}
 3686              	.LCFI51:
 3687              		.cfi_def_cfa_offset 8
 3688              		.cfi_offset 4, -8
 3689              		.cfi_offset 14, -4
 3690 0016 0446     		mov	r4, r0
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3691              		.loc 1 1932 0
 3692 0018 FFF7FEFF 		bl	vPortEnterCritical
 3693              	.LVL376:
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3694              		.loc 1 1934 0
 3695 001c A46B     		ldr	r4, [r4, #56]
 3696              	.LVL377:
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3697              		.loc 1 1936 0
 3698 001e FFF7FEFF 		bl	vPortExitCritical
 3699              	.LVL378:
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3700              		.loc 1 1939 0
 3701 0022 2046     		mov	r0, r4
 3702 0024 10BD     		pop	{r4, pc}
 3703              		.cfi_endproc
 3704              	.LFE25:
 3706              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3707              		.align	1
 3708              		.global	uxQueueSpacesAvailable
 3709              		.syntax unified
 3710              		.thumb
 3711              		.thumb_func
 3712              		.fpu fpv4-sp-d16
 3714              	uxQueueSpacesAvailable:
 3715              	.LFB26:
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3716              		.loc 1 1943 0
 3717              		.cfi_startproc
 3718              		@ args = 0, pretend = 0, frame = 0
 3719              		@ frame_needed = 0, uses_anonymous_args = 0
 3720              	.LVL379:
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3721              		.loc 1 1947 0
 3722 0000 40B9     		cbnz	r0, .L356
ARM GAS  /tmp/ccn5TrpU.s 			page 119


 3723              	.LBB240:
 3724              	.LBB241:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3725              		.loc 2 195 0
 3726              		.syntax unified
 3727              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3728 0002 4FF05003 			mov r3, #80												
 3729 0006 83F31188 		msr basepri, r3											
 3730 000a BFF36F8F 		isb														
 3731 000e BFF34F8F 		dsb														
 3732              	
 3733              	@ 0 "" 2
 3734              	.LVL380:
 3735              		.thumb
 3736              		.syntax unified
 3737              	.L357:
 3738 0012 FEE7     		b	.L357
 3739              	.L356:
 3740              	.LBE241:
 3741              	.LBE240:
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3742              		.loc 1 1943 0
 3743 0014 10B5     		push	{r4, lr}
 3744              	.LCFI52:
 3745              		.cfi_def_cfa_offset 8
 3746              		.cfi_offset 4, -8
 3747              		.cfi_offset 14, -4
 3748 0016 0446     		mov	r4, r0
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3749              		.loc 1 1949 0
 3750 0018 FFF7FEFF 		bl	vPortEnterCritical
 3751              	.LVL381:
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3752              		.loc 1 1951 0
 3753 001c E36B     		ldr	r3, [r4, #60]
 3754 001e A46B     		ldr	r4, [r4, #56]
 3755              	.LVL382:
 3756 0020 1C1B     		subs	r4, r3, r4
 3757              	.LVL383:
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3758              		.loc 1 1953 0
 3759 0022 FFF7FEFF 		bl	vPortExitCritical
 3760              	.LVL384:
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3761              		.loc 1 1956 0
 3762 0026 2046     		mov	r0, r4
 3763 0028 10BD     		pop	{r4, pc}
 3764              		.cfi_endproc
 3765              	.LFE26:
 3767              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3768              		.align	1
 3769              		.global	uxQueueMessagesWaitingFromISR
 3770              		.syntax unified
 3771              		.thumb
 3772              		.thumb_func
 3773              		.fpu fpv4-sp-d16
 3775              	uxQueueMessagesWaitingFromISR:
ARM GAS  /tmp/ccn5TrpU.s 			page 120


 3776              	.LFB27:
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3777              		.loc 1 1960 0
 3778              		.cfi_startproc
 3779              		@ args = 0, pretend = 0, frame = 0
 3780              		@ frame_needed = 0, uses_anonymous_args = 0
 3781              		@ link register save eliminated.
 3782              	.LVL385:
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = pxQueue->uxMessagesWaiting;
 3783              		.loc 1 1964 0
 3784 0000 08B1     		cbz	r0, .L363
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3785              		.loc 1 1965 0
 3786 0002 806B     		ldr	r0, [r0, #56]
 3787              	.LVL386:
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3788              		.loc 1 1968 0
 3789 0004 7047     		bx	lr
 3790              	.LVL387:
 3791              	.L363:
 3792              	.LBB242:
 3793              	.LBB243:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3794              		.loc 2 195 0
 3795              		.syntax unified
 3796              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3797 0006 4FF05003 			mov r3, #80												
 3798 000a 83F31188 		msr basepri, r3											
 3799 000e BFF36F8F 		isb														
 3800 0012 BFF34F8F 		dsb														
 3801              	
 3802              	@ 0 "" 2
 3803              	.LVL388:
 3804              		.thumb
 3805              		.syntax unified
 3806              	.L362:
 3807 0016 FEE7     		b	.L362
 3808              	.LBE243:
 3809              	.LBE242:
 3810              		.cfi_endproc
 3811              	.LFE27:
 3813              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 3814              		.align	1
 3815              		.global	uxQueueGetQueueNumber
 3816              		.syntax unified
 3817              		.thumb
 3818              		.thumb_func
 3819              		.fpu fpv4-sp-d16
 3821              	uxQueueGetQueueNumber:
 3822              	.LFB29:
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 3823              		.loc 1 2016 0
 3824              		.cfi_startproc
 3825              		@ args = 0, pretend = 0, frame = 0
 3826              		@ frame_needed = 0, uses_anonymous_args = 0
 3827              		@ link register save eliminated.
 3828              	.LVL389:
ARM GAS  /tmp/ccn5TrpU.s 			page 121


2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3829              		.loc 1 2018 0
 3830 0000 806C     		ldr	r0, [r0, #72]
 3831              	.LVL390:
 3832 0002 7047     		bx	lr
 3833              		.cfi_endproc
 3834              	.LFE29:
 3836              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 3837              		.align	1
 3838              		.global	vQueueSetQueueNumber
 3839              		.syntax unified
 3840              		.thumb
 3841              		.thumb_func
 3842              		.fpu fpv4-sp-d16
 3844              	vQueueSetQueueNumber:
 3845              	.LFB30:
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 3846              		.loc 1 2026 0
 3847              		.cfi_startproc
 3848              		@ args = 0, pretend = 0, frame = 0
 3849              		@ frame_needed = 0, uses_anonymous_args = 0
 3850              		@ link register save eliminated.
 3851              	.LVL391:
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3852              		.loc 1 2027 0
 3853 0000 8164     		str	r1, [r0, #72]
 3854 0002 7047     		bx	lr
 3855              		.cfi_endproc
 3856              	.LFE30:
 3858              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 3859              		.align	1
 3860              		.global	ucQueueGetQueueType
 3861              		.syntax unified
 3862              		.thumb
 3863              		.thumb_func
 3864              		.fpu fpv4-sp-d16
 3866              	ucQueueGetQueueType:
 3867              	.LFB31:
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 3868              		.loc 1 2036 0
 3869              		.cfi_startproc
 3870              		@ args = 0, pretend = 0, frame = 0
 3871              		@ frame_needed = 0, uses_anonymous_args = 0
 3872              		@ link register save eliminated.
 3873              	.LVL392:
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3874              		.loc 1 2038 0
 3875 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 3876              	.LVL393:
 3877 0004 7047     		bx	lr
 3878              		.cfi_endproc
 3879              	.LFE31:
 3881              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3882              		.align	1
 3883              		.global	xQueueIsQueueEmptyFromISR
 3884              		.syntax unified
 3885              		.thumb
ARM GAS  /tmp/ccn5TrpU.s 			page 122


 3886              		.thumb_func
 3887              		.fpu fpv4-sp-d16
 3889              	xQueueIsQueueEmptyFromISR:
 3890              	.LFB37:
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3891              		.loc 1 2309 0
 3892              		.cfi_startproc
 3893              		@ args = 0, pretend = 0, frame = 0
 3894              		@ frame_needed = 0, uses_anonymous_args = 0
 3895              		@ link register save eliminated.
 3896              	.LVL394:
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3897              		.loc 1 2313 0
 3898 0000 18B1     		cbz	r0, .L372
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3899              		.loc 1 2314 0
 3900 0002 836B     		ldr	r3, [r0, #56]
 3901 0004 53B1     		cbz	r3, .L373
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3902              		.loc 1 2320 0
 3903 0006 0020     		movs	r0, #0
 3904              	.LVL395:
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3905              		.loc 1 2324 0
 3906 0008 7047     		bx	lr
 3907              	.LVL396:
 3908              	.L372:
 3909              	.LBB244:
 3910              	.LBB245:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3911              		.loc 2 195 0
 3912              		.syntax unified
 3913              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3914 000a 4FF05003 			mov r3, #80												
 3915 000e 83F31188 		msr basepri, r3											
 3916 0012 BFF36F8F 		isb														
 3917 0016 BFF34F8F 		dsb														
 3918              	
 3919              	@ 0 "" 2
 3920              	.LVL397:
 3921              		.thumb
 3922              		.syntax unified
 3923              	.L369:
 3924 001a FEE7     		b	.L369
 3925              	.L373:
 3926              	.LBE245:
 3927              	.LBE244:
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3928              		.loc 1 2316 0
 3929 001c 0120     		movs	r0, #1
 3930              	.LVL398:
 3931 001e 7047     		bx	lr
 3932              		.cfi_endproc
 3933              	.LFE37:
 3935              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3936              		.align	1
 3937              		.global	xQueueIsQueueFullFromISR
ARM GAS  /tmp/ccn5TrpU.s 			page 123


 3938              		.syntax unified
 3939              		.thumb
 3940              		.thumb_func
 3941              		.fpu fpv4-sp-d16
 3943              	xQueueIsQueueFullFromISR:
 3944              	.LFB39:
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3945              		.loc 1 2349 0
 3946              		.cfi_startproc
 3947              		@ args = 0, pretend = 0, frame = 0
 3948              		@ frame_needed = 0, uses_anonymous_args = 0
 3949              		@ link register save eliminated.
 3950              	.LVL399:
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 3951              		.loc 1 2353 0
 3952 0000 28B1     		cbz	r0, .L379
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 3953              		.loc 1 2354 0
 3954 0002 826B     		ldr	r2, [r0, #56]
 3955 0004 C36B     		ldr	r3, [r0, #60]
 3956 0006 9A42     		cmp	r2, r3
 3957 0008 0AD0     		beq	.L380
2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3958              		.loc 1 2360 0
 3959 000a 0020     		movs	r0, #0
 3960              	.LVL400:
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3961              		.loc 1 2364 0
 3962 000c 7047     		bx	lr
 3963              	.LVL401:
 3964              	.L379:
 3965              	.LBB246:
 3966              	.LBB247:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3967              		.loc 2 195 0
 3968              		.syntax unified
 3969              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3970 000e 4FF05003 			mov r3, #80												
 3971 0012 83F31188 		msr basepri, r3											
 3972 0016 BFF36F8F 		isb														
 3973 001a BFF34F8F 		dsb														
 3974              	
 3975              	@ 0 "" 2
ARM GAS  /tmp/ccn5TrpU.s 			page 124


 3976              	.LVL402:
 3977              		.thumb
 3978              		.syntax unified
 3979              	.L376:
 3980 001e FEE7     		b	.L376
 3981              	.L380:
 3982              	.LBE247:
 3983              	.LBE246:
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3984              		.loc 1 2356 0
 3985 0020 0120     		movs	r0, #1
 3986              	.LVL403:
 3987 0022 7047     		bx	lr
 3988              		.cfi_endproc
 3989              	.LFE39:
 3991              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3992              		.align	1
 3993              		.global	vQueueAddToRegistry
 3994              		.syntax unified
 3995              		.thumb
 3996              		.thumb_func
 3997              		.fpu fpv4-sp-d16
 3999              	vQueueAddToRegistry:
 4000              	.LFB40:
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
ARM GAS  /tmp/ccn5TrpU.s 			page 125


2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
ARM GAS  /tmp/ccn5TrpU.s 			page 126


2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQ
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
ARM GAS  /tmp/ccn5TrpU.s 			page 127


2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccn5TrpU.s 			page 128


2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( unsigned ) pxQu
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  /tmp/ccn5TrpU.s 			page 129


2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4001              		.loc 1 2645 0
 4002              		.cfi_startproc
 4003              		@ args = 0, pretend = 0, frame = 0
 4004              		@ frame_needed = 0, uses_anonymous_args = 0
 4005              		@ link register save eliminated.
 4006              	.LVL404:
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4007              		.loc 1 2650 0
 4008 0000 0023     		movs	r3, #0
 4009              	.LVL405:
 4010              	.L382:
 4011              		.loc 1 2650 0 is_stmt 0 discriminator 1
 4012 0002 072B     		cmp	r3, #7
 4013 0004 0CD8     		bhi	.L386
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 4014              		.loc 1 2652 0 is_stmt 1
 4015 0006 074A     		ldr	r2, .L388
 4016 0008 52F83320 		ldr	r2, [r2, r3, lsl #3]
 4017 000c 0AB1     		cbz	r2, .L387
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4018              		.loc 1 2650 0 discriminator 2
 4019 000e 0133     		adds	r3, r3, #1
 4020              	.LVL406:
 4021 0010 F7E7     		b	.L382
 4022              	.L387:
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 4023              		.loc 1 2655 0
 4024 0012 044A     		ldr	r2, .L388
 4025 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
ARM GAS  /tmp/ccn5TrpU.s 			page 130


 4026              		.loc 1 2656 0
 4027 0018 02EBC303 		add	r3, r2, r3, lsl #3
 4028              	.LVL407:
 4029 001c 5860     		str	r0, [r3, #4]
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4030              		.loc 1 2659 0
 4031 001e 7047     		bx	lr
 4032              	.LVL408:
 4033              	.L386:
 4034 0020 7047     		bx	lr
 4035              	.L389:
 4036 0022 00BF     		.align	2
 4037              	.L388:
 4038 0024 00000000 		.word	xQueueRegistry
 4039              		.cfi_endproc
 4040              	.LFE40:
 4042              		.section	.text.pcQueueGetName,"ax",%progbits
 4043              		.align	1
 4044              		.global	pcQueueGetName
 4045              		.syntax unified
 4046              		.thumb
 4047              		.thumb_func
 4048              		.fpu fpv4-sp-d16
 4050              	pcQueueGetName:
 4051              	.LFB41:
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4052              		.loc 1 2674 0
 4053              		.cfi_startproc
 4054              		@ args = 0, pretend = 0, frame = 0
 4055              		@ frame_needed = 0, uses_anonymous_args = 0
 4056              		@ link register save eliminated.
 4057              	.LVL409:
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4058              		.loc 1 2680 0
 4059 0000 0023     		movs	r3, #0
 4060              	.LVL410:
ARM GAS  /tmp/ccn5TrpU.s 			page 131


 4061              	.L391:
 4062              		.loc 1 2680 0 is_stmt 0 discriminator 1
 4063 0002 072B     		cmp	r3, #7
 4064 0004 0BD8     		bhi	.L395
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4065              		.loc 1 2682 0 is_stmt 1
 4066 0006 074A     		ldr	r2, .L397
 4067 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4068 000c 5268     		ldr	r2, [r2, #4]
 4069 000e 8242     		cmp	r2, r0
 4070 0010 01D0     		beq	.L396
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4071              		.loc 1 2680 0 discriminator 2
 4072 0012 0133     		adds	r3, r3, #1
 4073              	.LVL411:
 4074 0014 F5E7     		b	.L391
 4075              	.L396:
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 4076              		.loc 1 2684 0
 4077 0016 034A     		ldr	r2, .L397
 4078 0018 52F83300 		ldr	r0, [r2, r3, lsl #3]
 4079              	.LVL412:
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4080              		.loc 1 2685 0
 4081 001c 7047     		bx	lr
 4082              	.LVL413:
 4083              	.L395:
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 4084              		.loc 1 2676 0
 4085 001e 0020     		movs	r0, #0
 4086              	.LVL414:
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 4087              		.loc 1 2694 0
 4088 0020 7047     		bx	lr
 4089              	.L398:
 4090 0022 00BF     		.align	2
 4091              	.L397:
 4092 0024 00000000 		.word	xQueueRegistry
 4093              		.cfi_endproc
 4094              	.LFE41:
 4096              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 4097              		.align	1
 4098              		.global	vQueueUnregisterQueue
 4099              		.syntax unified
 4100              		.thumb
 4101              		.thumb_func
 4102              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccn5TrpU.s 			page 132


 4104              	vQueueUnregisterQueue:
 4105              	.LFB42:
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4106              		.loc 1 2702 0
 4107              		.cfi_startproc
 4108              		@ args = 0, pretend = 0, frame = 0
 4109              		@ frame_needed = 0, uses_anonymous_args = 0
 4110              		@ link register save eliminated.
 4111              	.LVL415:
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 4112              		.loc 1 2707 0
 4113 0000 0023     		movs	r3, #0
 4114              	.LVL416:
 4115              	.L400:
 4116              		.loc 1 2707 0 is_stmt 0 discriminator 1
 4117 0002 072B     		cmp	r3, #7
 4118 0004 0FD8     		bhi	.L404
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 4119              		.loc 1 2709 0 is_stmt 1
 4120 0006 084A     		ldr	r2, .L406
 4121 0008 02EBC302 		add	r2, r2, r3, lsl #3
 4122 000c 5268     		ldr	r2, [r2, #4]
 4123 000e 8242     		cmp	r2, r0
 4124 0010 01D0     		beq	.L405
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4125              		.loc 1 2707 0 discriminator 2
 4126 0012 0133     		adds	r3, r3, #1
 4127              	.LVL417:
 4128 0014 F5E7     		b	.L400
 4129              	.L405:
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 4130              		.loc 1 2712 0
 4131 0016 044A     		ldr	r2, .L406
 4132 0018 0021     		movs	r1, #0
 4133 001a 42F83310 		str	r1, [r2, r3, lsl #3]
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 4134              		.loc 1 2717 0
 4135 001e 02EBC303 		add	r3, r2, r3, lsl #3
 4136              	.LVL418:
ARM GAS  /tmp/ccn5TrpU.s 			page 133


 4137 0022 5960     		str	r1, [r3, #4]
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 4138              		.loc 1 2718 0
 4139 0024 7047     		bx	lr
 4140              	.LVL419:
 4141              	.L404:
 4142 0026 7047     		bx	lr
 4143              	.L407:
 4144              		.align	2
 4145              	.L406:
 4146 0028 00000000 		.word	xQueueRegistry
 4147              		.cfi_endproc
 4148              	.LFE42:
 4150              		.section	.text.vQueueDelete,"ax",%progbits
 4151              		.align	1
 4152              		.global	vQueueDelete
 4153              		.syntax unified
 4154              		.thumb
 4155              		.thumb_func
 4156              		.fpu fpv4-sp-d16
 4158              	vQueueDelete:
 4159              	.LFB28:
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4160              		.loc 1 1972 0
 4161              		.cfi_startproc
 4162              		@ args = 0, pretend = 0, frame = 0
 4163              		@ frame_needed = 0, uses_anonymous_args = 0
 4164              	.LVL420:
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4165              		.loc 1 1975 0
 4166 0000 50B1     		cbz	r0, .L414
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = xQueue;
 4167              		.loc 1 1972 0
 4168 0002 10B5     		push	{r4, lr}
 4169              	.LCFI53:
 4170              		.cfi_def_cfa_offset 8
 4171              		.cfi_offset 4, -8
 4172              		.cfi_offset 14, -4
 4173 0004 0446     		mov	r4, r0
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4174              		.loc 1 1980 0
 4175 0006 FFF7FEFF 		bl	vQueueUnregisterQueue
 4176              	.LVL421:
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4177              		.loc 1 1994 0
 4178 000a 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 4179 000e 13B9     		cbnz	r3, .L408
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4180              		.loc 1 1996 0
 4181 0010 2046     		mov	r0, r4
 4182 0012 FFF7FEFF 		bl	vPortFree
 4183              	.LVL422:
 4184              	.L408:
 4185 0016 10BD     		pop	{r4, pc}
 4186              	.LVL423:
 4187              	.L414:
 4188              	.LCFI54:
ARM GAS  /tmp/ccn5TrpU.s 			page 134


 4189              		.cfi_def_cfa_offset 0
 4190              		.cfi_restore 4
 4191              		.cfi_restore 14
 4192              	.LBB248:
 4193              	.LBB249:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4194              		.loc 2 195 0
 4195              		.syntax unified
 4196              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4197 0018 4FF05003 			mov r3, #80												
 4198 001c 83F31188 		msr basepri, r3											
 4199 0020 BFF36F8F 		isb														
 4200 0024 BFF34F8F 		dsb														
 4201              	
 4202              	@ 0 "" 2
 4203              	.LVL424:
 4204              		.thumb
 4205              		.syntax unified
 4206              	.L410:
 4207 0028 FEE7     		b	.L410
 4208              	.LBE249:
 4209              	.LBE248:
 4210              		.cfi_endproc
 4211              	.LFE28:
 4213              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 4214              		.align	1
 4215              		.global	vQueueWaitForMessageRestricted
 4216              		.syntax unified
 4217              		.thumb
 4218              		.thumb_func
 4219              		.fpu fpv4-sp-d16
 4221              	vQueueWaitForMessageRestricted:
 4222              	.LFB43:
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4223              		.loc 1 2734 0
 4224              		.cfi_startproc
 4225              		@ args = 0, pretend = 0, frame = 0
 4226              		@ frame_needed = 0, uses_anonymous_args = 0
 4227              	.LVL425:
 4228 0000 70B5     		push	{r4, r5, r6, lr}
 4229              	.LCFI55:
 4230              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccn5TrpU.s 			page 135


 4231              		.cfi_offset 4, -16
 4232              		.cfi_offset 5, -12
 4233              		.cfi_offset 6, -8
 4234              		.cfi_offset 14, -4
 4235 0002 0446     		mov	r4, r0
 4236 0004 0D46     		mov	r5, r1
 4237 0006 1646     		mov	r6, r2
 4238              	.LVL426:
2735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = xQueue;
2736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function should not be called by application code hence the
2738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		section. */
2744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 4239              		.loc 1 2751 0
 4240 0008 FFF7FEFF 		bl	vPortEnterCritical
 4241              	.LVL427:
 4242 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 4243 0010 5BB2     		sxtb	r3, r3
 4244 0012 B3F1FF3F 		cmp	r3, #-1
 4245 0016 0DD0     		beq	.L420
 4246              	.L416:
 4247              		.loc 1 2751 0 is_stmt 0 discriminator 3
 4248 0018 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 4249 001c 5BB2     		sxtb	r3, r3
 4250 001e B3F1FF3F 		cmp	r3, #-1
 4251 0022 0BD0     		beq	.L421
 4252              	.L417:
 4253              		.loc 1 2751 0 discriminator 6
 4254 0024 FFF7FEFF 		bl	vPortExitCritical
 4255              	.LVL428:
2752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4256              		.loc 1 2752 0 is_stmt 1 discriminator 6
 4257 0028 A36B     		ldr	r3, [r4, #56]
 4258 002a 5BB1     		cbz	r3, .L422
 4259              	.L418:
2753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
2756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvUnlockQueue( pxQueue );
 4260              		.loc 1 2761 0
ARM GAS  /tmp/ccn5TrpU.s 			page 136


 4261 002c 2046     		mov	r0, r4
 4262 002e FFF7FEFF 		bl	prvUnlockQueue
 4263              	.LVL429:
 4264 0032 70BD     		pop	{r4, r5, r6, pc}
 4265              	.LVL430:
 4266              	.L420:
2751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4267              		.loc 1 2751 0 discriminator 1
 4268 0034 0023     		movs	r3, #0
 4269 0036 84F84430 		strb	r3, [r4, #68]
 4270 003a EDE7     		b	.L416
 4271              	.L421:
2751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4272              		.loc 1 2751 0 is_stmt 0 discriminator 4
 4273 003c 0023     		movs	r3, #0
 4274 003e 84F84530 		strb	r3, [r4, #69]
 4275 0042 EFE7     		b	.L417
 4276              	.L422:
2755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4277              		.loc 1 2755 0 is_stmt 1
 4278 0044 3246     		mov	r2, r6
 4279 0046 2946     		mov	r1, r5
 4280 0048 04F12400 		add	r0, r4, #36
 4281 004c FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 4282              	.LVL431:
 4283 0050 ECE7     		b	.L418
 4284              		.cfi_endproc
 4285              	.LFE43:
 4287              		.comm	xQueueRegistry,64,4
 4288              		.text
 4289              	.Letext0:
 4290              		.file 3 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 4291              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 4292              		.file 5 "/usr/include/newlib/sys/lock.h"
 4293              		.file 6 "/usr/include/newlib/sys/_types.h"
 4294              		.file 7 "/usr/include/newlib/sys/reent.h"
 4295              		.file 8 "/usr/include/newlib/stdlib.h"
 4296              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 4297              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 4298              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 4299              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 4300              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4301              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 4302              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccn5TrpU.s 			page 137


DEFINED SYMBOLS
                            *ABS*:0000000000000000 queue.c
     /tmp/ccn5TrpU.s:18     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 $t
     /tmp/ccn5TrpU.s:24     .text.prvGetDisinheritPriorityAfterTimeout:0000000000000000 prvGetDisinheritPriorityAfterTimeout
     /tmp/ccn5TrpU.s:54     .text.prvIsQueueFull:0000000000000000 $t
     /tmp/ccn5TrpU.s:60     .text.prvIsQueueFull:0000000000000000 prvIsQueueFull
     /tmp/ccn5TrpU.s:101    .text.prvIsQueueEmpty:0000000000000000 $t
     /tmp/ccn5TrpU.s:107    .text.prvIsQueueEmpty:0000000000000000 prvIsQueueEmpty
     /tmp/ccn5TrpU.s:146    .text.prvCopyDataToQueue:0000000000000000 $t
     /tmp/ccn5TrpU.s:152    .text.prvCopyDataToQueue:0000000000000000 prvCopyDataToQueue
     /tmp/ccn5TrpU.s:271    .text.prvCopyDataFromQueue:0000000000000000 $t
     /tmp/ccn5TrpU.s:277    .text.prvCopyDataFromQueue:0000000000000000 prvCopyDataFromQueue
     /tmp/ccn5TrpU.s:325    .text.prvUnlockQueue:0000000000000000 $t
     /tmp/ccn5TrpU.s:331    .text.prvUnlockQueue:0000000000000000 prvUnlockQueue
     /tmp/ccn5TrpU.s:434    .text.xQueueGenericReset:0000000000000000 $t
     /tmp/ccn5TrpU.s:441    .text.xQueueGenericReset:0000000000000000 xQueueGenericReset
     /tmp/ccn5TrpU.s:549    .text.xQueueGenericReset:000000000000007c $d
     /tmp/ccn5TrpU.s:554    .text.prvInitialiseNewQueue:0000000000000000 $t
     /tmp/ccn5TrpU.s:560    .text.prvInitialiseNewQueue:0000000000000000 prvInitialiseNewQueue
     /tmp/ccn5TrpU.s:606    .text.xQueueGenericCreateStatic:0000000000000000 $t
     /tmp/ccn5TrpU.s:613    .text.xQueueGenericCreateStatic:0000000000000000 xQueueGenericCreateStatic
     /tmp/ccn5TrpU.s:796    .text.xQueueGenericCreate:0000000000000000 $t
     /tmp/ccn5TrpU.s:803    .text.xQueueGenericCreate:0000000000000000 xQueueGenericCreate
     /tmp/ccn5TrpU.s:893    .text.xQueueGetMutexHolder:0000000000000000 $t
     /tmp/ccn5TrpU.s:900    .text.xQueueGetMutexHolder:0000000000000000 xQueueGetMutexHolder
     /tmp/ccn5TrpU.s:940    .text.xQueueGetMutexHolderFromISR:0000000000000000 $t
     /tmp/ccn5TrpU.s:947    .text.xQueueGetMutexHolderFromISR:0000000000000000 xQueueGetMutexHolderFromISR
     /tmp/ccn5TrpU.s:994    .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 $t
     /tmp/ccn5TrpU.s:1001   .text.xQueueCreateCountingSemaphoreStatic:0000000000000000 xQueueCreateCountingSemaphoreStatic
     /tmp/ccn5TrpU.s:1089   .text.xQueueCreateCountingSemaphore:0000000000000000 $t
     /tmp/ccn5TrpU.s:1096   .text.xQueueCreateCountingSemaphore:0000000000000000 xQueueCreateCountingSemaphore
     /tmp/ccn5TrpU.s:1173   .text.xQueueGenericSend:0000000000000000 $t
     /tmp/ccn5TrpU.s:1180   .text.xQueueGenericSend:0000000000000000 xQueueGenericSend
     /tmp/ccn5TrpU.s:1519   .text.xQueueGenericSend:0000000000000184 $d
     /tmp/ccn5TrpU.s:1524   .text.prvInitialiseMutex:0000000000000000 $t
     /tmp/ccn5TrpU.s:1530   .text.prvInitialiseMutex:0000000000000000 prvInitialiseMutex
     /tmp/ccn5TrpU.s:1569   .text.xQueueCreateMutex:0000000000000000 $t
     /tmp/ccn5TrpU.s:1576   .text.xQueueCreateMutex:0000000000000000 xQueueCreateMutex
     /tmp/ccn5TrpU.s:1608   .text.xQueueCreateMutexStatic:0000000000000000 $t
     /tmp/ccn5TrpU.s:1615   .text.xQueueCreateMutexStatic:0000000000000000 xQueueCreateMutexStatic
     /tmp/ccn5TrpU.s:1657   .text.xQueueGiveMutexRecursive:0000000000000000 $t
     /tmp/ccn5TrpU.s:1664   .text.xQueueGiveMutexRecursive:0000000000000000 xQueueGiveMutexRecursive
     /tmp/ccn5TrpU.s:1739   .text.xQueueGenericSendFromISR:0000000000000000 $t
     /tmp/ccn5TrpU.s:1746   .text.xQueueGenericSendFromISR:0000000000000000 xQueueGenericSendFromISR
     /tmp/ccn5TrpU.s:1968   .text.xQueueGiveFromISR:0000000000000000 $t
     /tmp/ccn5TrpU.s:1975   .text.xQueueGiveFromISR:0000000000000000 xQueueGiveFromISR
     /tmp/ccn5TrpU.s:2191   .text.xQueueReceive:0000000000000000 $t
     /tmp/ccn5TrpU.s:2198   .text.xQueueReceive:0000000000000000 xQueueReceive
     /tmp/ccn5TrpU.s:2500   .text.xQueueReceive:0000000000000158 $d
     /tmp/ccn5TrpU.s:2505   .text.xQueueSemaphoreTake:0000000000000000 $t
     /tmp/ccn5TrpU.s:2512   .text.xQueueSemaphoreTake:0000000000000000 xQueueSemaphoreTake
     /tmp/ccn5TrpU.s:2878   .text.xQueueSemaphoreTake:00000000000001a0 $d
     /tmp/ccn5TrpU.s:2883   .text.xQueueTakeMutexRecursive:0000000000000000 $t
     /tmp/ccn5TrpU.s:2890   .text.xQueueTakeMutexRecursive:0000000000000000 xQueueTakeMutexRecursive
     /tmp/ccn5TrpU.s:2979   .text.xQueuePeek:0000000000000000 $t
     /tmp/ccn5TrpU.s:2986   .text.xQueuePeek:0000000000000000 xQueuePeek
     /tmp/ccn5TrpU.s:3289   .text.xQueuePeek:0000000000000158 $d
ARM GAS  /tmp/ccn5TrpU.s 			page 138


     /tmp/ccn5TrpU.s:3294   .text.xQueueReceiveFromISR:0000000000000000 $t
     /tmp/ccn5TrpU.s:3301   .text.xQueueReceiveFromISR:0000000000000000 xQueueReceiveFromISR
     /tmp/ccn5TrpU.s:3486   .text.xQueuePeekFromISR:0000000000000000 $t
     /tmp/ccn5TrpU.s:3493   .text.xQueuePeekFromISR:0000000000000000 xQueuePeekFromISR
     /tmp/ccn5TrpU.s:3649   .text.uxQueueMessagesWaiting:0000000000000000 $t
     /tmp/ccn5TrpU.s:3656   .text.uxQueueMessagesWaiting:0000000000000000 uxQueueMessagesWaiting
     /tmp/ccn5TrpU.s:3707   .text.uxQueueSpacesAvailable:0000000000000000 $t
     /tmp/ccn5TrpU.s:3714   .text.uxQueueSpacesAvailable:0000000000000000 uxQueueSpacesAvailable
     /tmp/ccn5TrpU.s:3768   .text.uxQueueMessagesWaitingFromISR:0000000000000000 $t
     /tmp/ccn5TrpU.s:3775   .text.uxQueueMessagesWaitingFromISR:0000000000000000 uxQueueMessagesWaitingFromISR
     /tmp/ccn5TrpU.s:3814   .text.uxQueueGetQueueNumber:0000000000000000 $t
     /tmp/ccn5TrpU.s:3821   .text.uxQueueGetQueueNumber:0000000000000000 uxQueueGetQueueNumber
     /tmp/ccn5TrpU.s:3837   .text.vQueueSetQueueNumber:0000000000000000 $t
     /tmp/ccn5TrpU.s:3844   .text.vQueueSetQueueNumber:0000000000000000 vQueueSetQueueNumber
     /tmp/ccn5TrpU.s:3859   .text.ucQueueGetQueueType:0000000000000000 $t
     /tmp/ccn5TrpU.s:3866   .text.ucQueueGetQueueType:0000000000000000 ucQueueGetQueueType
     /tmp/ccn5TrpU.s:3882   .text.xQueueIsQueueEmptyFromISR:0000000000000000 $t
     /tmp/ccn5TrpU.s:3889   .text.xQueueIsQueueEmptyFromISR:0000000000000000 xQueueIsQueueEmptyFromISR
     /tmp/ccn5TrpU.s:3936   .text.xQueueIsQueueFullFromISR:0000000000000000 $t
     /tmp/ccn5TrpU.s:3943   .text.xQueueIsQueueFullFromISR:0000000000000000 xQueueIsQueueFullFromISR
     /tmp/ccn5TrpU.s:3992   .text.vQueueAddToRegistry:0000000000000000 $t
     /tmp/ccn5TrpU.s:3999   .text.vQueueAddToRegistry:0000000000000000 vQueueAddToRegistry
     /tmp/ccn5TrpU.s:4038   .text.vQueueAddToRegistry:0000000000000024 $d
                            *COM*:0000000000000040 xQueueRegistry
     /tmp/ccn5TrpU.s:4043   .text.pcQueueGetName:0000000000000000 $t
     /tmp/ccn5TrpU.s:4050   .text.pcQueueGetName:0000000000000000 pcQueueGetName
     /tmp/ccn5TrpU.s:4092   .text.pcQueueGetName:0000000000000024 $d
     /tmp/ccn5TrpU.s:4097   .text.vQueueUnregisterQueue:0000000000000000 $t
     /tmp/ccn5TrpU.s:4104   .text.vQueueUnregisterQueue:0000000000000000 vQueueUnregisterQueue
     /tmp/ccn5TrpU.s:4146   .text.vQueueUnregisterQueue:0000000000000028 $d
     /tmp/ccn5TrpU.s:4151   .text.vQueueDelete:0000000000000000 $t
     /tmp/ccn5TrpU.s:4158   .text.vQueueDelete:0000000000000000 vQueueDelete
     /tmp/ccn5TrpU.s:4214   .text.vQueueWaitForMessageRestricted:0000000000000000 $t
     /tmp/ccn5TrpU.s:4221   .text.vQueueWaitForMessageRestricted:0000000000000000 vQueueWaitForMessageRestricted
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
xTaskResumeAll
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
ARM GAS  /tmp/ccn5TrpU.s 			page 139


vTaskPlaceOnEventListRestricted
