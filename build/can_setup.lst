ARM GAS  /tmp/ccA8Au6p.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can_setup.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_CAN_RxFifo0MsgPendingCallback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_CAN_RxFifo0MsgPendingCallback:
  26              	.LFB131:
  27              		.file 1 "Core/Src/can_setup.c"
   1:Core/Src/can_setup.c **** #include <can_setup.h>
   2:Core/Src/can_setup.c **** 
   3:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
   4:Core/Src/can_setup.c **** 
   5:Core/Src/can_setup.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
   6:Core/Src/can_setup.c **** {
  28              		.loc 1 6 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
   7:Core/Src/can_setup.c ****     if (hcan->Instance == CAN1)
  43              		.loc 1 7 0
  44 0004 0268     		ldr	r2, [r0]
  45 0006 1C4B     		ldr	r3, .L11
  46 0008 9A42     		cmp	r2, r3
  47 000a 04D0     		beq	.L7
  48              	.LVL1:
  49              	.L2:
   8:Core/Src/can_setup.c ****     {
   9:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &rxMsg, canRx) != HAL_OK)
ARM GAS  /tmp/ccA8Au6p.s 			page 2


  10:Core/Src/can_setup.c ****         {
  11:Core/Src/can_setup.c ****             Error_Handler();
  12:Core/Src/can_setup.c ****         }
  13:Core/Src/can_setup.c ****         //do stuff
  14:Core/Src/can_setup.c ****         decodeVolt(&BMS[0], &rxMsg, canRx);
  15:Core/Src/can_setup.c ****         decodeTemp(&BMS[0], &rxMsg, canRx);
  16:Core/Src/can_setup.c ****     }
  17:Core/Src/can_setup.c **** 
  18:Core/Src/can_setup.c ****     if (hcan->Instance == CAN3)
  50              		.loc 1 18 0
  51 000c 2268     		ldr	r2, [r4]
  52 000e 1B4B     		ldr	r3, .L11+4
  53 0010 9A42     		cmp	r2, r3
  54 0012 18D0     		beq	.L8
  55              	.LVL2:
  56              	.L1:
  57 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  58              	.LVL3:
  59              	.L7:
   9:Core/Src/can_setup.c ****         {
  60              		.loc 1 9 0
  61 0016 1A4B     		ldr	r3, .L11+8
  62 0018 1A4A     		ldr	r2, .L11+12
  63 001a 0021     		movs	r1, #0
  64 001c 1A48     		ldr	r0, .L11+16
  65              	.LVL4:
  66 001e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  67              	.LVL5:
  68 0022 68B9     		cbnz	r0, .L9
  69              	.L3:
  14:Core/Src/can_setup.c ****         decodeTemp(&BMS[0], &rxMsg, canRx);
  70              		.loc 1 14 0
  71 0024 164F     		ldr	r7, .L11+8
  72 0026 174E     		ldr	r6, .L11+12
  73 0028 184D     		ldr	r5, .L11+20
  74 002a 3A46     		mov	r2, r7
  75 002c 3146     		mov	r1, r6
  76 002e 2846     		mov	r0, r5
  77 0030 FFF7FEFF 		bl	decodeVolt
  78              	.LVL6:
  15:Core/Src/can_setup.c ****     }
  79              		.loc 1 15 0
  80 0034 3A46     		mov	r2, r7
  81 0036 3146     		mov	r1, r6
  82 0038 2846     		mov	r0, r5
  83 003a FFF7FEFF 		bl	decodeTemp
  84              	.LVL7:
  85 003e E5E7     		b	.L2
  86              	.L9:
  11:Core/Src/can_setup.c ****         }
  87              		.loc 1 11 0
  88 0040 FFF7FEFF 		bl	Error_Handler
  89              	.LVL8:
  90 0044 EEE7     		b	.L3
  91              	.L8:
  19:Core/Src/can_setup.c ****     {
  20:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan3, CAN_RX_FIFO0, &rxMsg3, canRx3) != HAL_OK)
ARM GAS  /tmp/ccA8Au6p.s 			page 3


  92              		.loc 1 20 0
  93 0046 124B     		ldr	r3, .L11+24
  94 0048 124A     		ldr	r2, .L11+28
  95 004a 0021     		movs	r1, #0
  96 004c 1248     		ldr	r0, .L11+32
  97 004e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  98              	.LVL9:
  99 0052 68B9     		cbnz	r0, .L10
 100              	.L5:
  21:Core/Src/can_setup.c ****         {
  22:Core/Src/can_setup.c ****             Error_Handler();
  23:Core/Src/can_setup.c ****         }
  24:Core/Src/can_setup.c ****         //do stuff
  25:Core/Src/can_setup.c ****         decodeVolt(&BMS[1], &rxMsg3, canRx3);
 101              		.loc 1 25 0
 102 0054 0E4E     		ldr	r6, .L11+24
 103 0056 0F4D     		ldr	r5, .L11+28
 104 0058 104C     		ldr	r4, .L11+36
 105              	.LVL10:
 106 005a 3246     		mov	r2, r6
 107 005c 2946     		mov	r1, r5
 108 005e 2046     		mov	r0, r4
 109 0060 FFF7FEFF 		bl	decodeVolt
 110              	.LVL11:
  26:Core/Src/can_setup.c ****         decodeTemp(&BMS[1], &rxMsg3, canRx3);
 111              		.loc 1 26 0
 112 0064 3246     		mov	r2, r6
 113 0066 2946     		mov	r1, r5
 114 0068 2046     		mov	r0, r4
 115 006a FFF7FEFF 		bl	decodeTemp
 116              	.LVL12:
  27:Core/Src/can_setup.c ****     }
  28:Core/Src/can_setup.c **** }
 117              		.loc 1 28 0
 118 006e D1E7     		b	.L1
 119              	.LVL13:
 120              	.L10:
  22:Core/Src/can_setup.c ****         }
 121              		.loc 1 22 0
 122 0070 FFF7FEFF 		bl	Error_Handler
 123              	.LVL14:
 124 0074 EEE7     		b	.L5
 125              	.L12:
 126 0076 00BF     		.align	2
 127              	.L11:
 128 0078 00640040 		.word	1073767424
 129 007c 006C0040 		.word	1073769472
 130 0080 00000000 		.word	canRx
 131 0084 00000000 		.word	rxMsg
 132 0088 00000000 		.word	hcan1
 133 008c 00000000 		.word	BMS
 134 0090 00000000 		.word	canRx3
 135 0094 00000000 		.word	rxMsg3
 136 0098 00000000 		.word	hcan3
 137 009c F6000000 		.word	BMS+246
 138              		.cfi_endproc
 139              	.LFE131:
ARM GAS  /tmp/ccA8Au6p.s 			page 4


 141              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	HAL_CAN_RxFifo1MsgPendingCallback:
 150              	.LFB132:
  29:Core/Src/can_setup.c **** 
  30:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  31:Core/Src/can_setup.c **** 
  32:Core/Src/can_setup.c **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
  33:Core/Src/can_setup.c **** {
 151              		.loc 1 33 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL15:
 156 0000 70B5     		push	{r4, r5, r6, lr}
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 16
 159              		.cfi_offset 4, -16
 160              		.cfi_offset 5, -12
 161              		.cfi_offset 6, -8
 162              		.cfi_offset 14, -4
 163 0002 0446     		mov	r4, r0
  34:Core/Src/can_setup.c **** 
  35:Core/Src/can_setup.c ****     if (hcan->Instance == CAN2)
 164              		.loc 1 35 0
 165 0004 0268     		ldr	r2, [r0]
 166 0006 174B     		ldr	r3, .L23
 167 0008 9A42     		cmp	r2, r3
 168 000a 04D0     		beq	.L19
 169              	.LVL16:
 170              	.L14:
  36:Core/Src/can_setup.c ****     {
  37:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan2, CAN_RX_FIFO1, &rxMsg2, canRx2) != HAL_OK)
  38:Core/Src/can_setup.c ****         {
  39:Core/Src/can_setup.c ****             Error_Handler();
  40:Core/Src/can_setup.c ****         }
  41:Core/Src/can_setup.c ****         vehicleComms(&rxMsg2, canRx2);
  42:Core/Src/can_setup.c ****     }
  43:Core/Src/can_setup.c **** 
  44:Core/Src/can_setup.c ****     if (hcan->Instance == CAN3)
 171              		.loc 1 44 0
 172 000c 2268     		ldr	r2, [r4]
 173 000e 164B     		ldr	r3, .L23+4
 174 0010 9A42     		cmp	r2, r3
 175 0012 0FD0     		beq	.L20
 176              	.LVL17:
 177              	.L13:
 178 0014 70BD     		pop	{r4, r5, r6, pc}
 179              	.LVL18:
 180              	.L19:
  37:Core/Src/can_setup.c ****         {
 181              		.loc 1 37 0
ARM GAS  /tmp/ccA8Au6p.s 			page 5


 182 0016 154B     		ldr	r3, .L23+8
 183 0018 154A     		ldr	r2, .L23+12
 184 001a 0121     		movs	r1, #1
 185 001c 1548     		ldr	r0, .L23+16
 186              	.LVL19:
 187 001e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 188              	.LVL20:
 189 0022 20B9     		cbnz	r0, .L21
 190              	.L15:
  41:Core/Src/can_setup.c ****     }
 191              		.loc 1 41 0
 192 0024 1149     		ldr	r1, .L23+8
 193 0026 1248     		ldr	r0, .L23+12
 194 0028 FFF7FEFF 		bl	vehicleComms
 195              	.LVL21:
 196 002c EEE7     		b	.L14
 197              	.L21:
  39:Core/Src/can_setup.c ****         }
 198              		.loc 1 39 0
 199 002e FFF7FEFF 		bl	Error_Handler
 200              	.LVL22:
 201 0032 F7E7     		b	.L15
 202              	.L20:
  45:Core/Src/can_setup.c ****     {
  46:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan3, CAN_RX_FIFO1, &rxMsg3, canRx3) != HAL_OK)
 203              		.loc 1 46 0
 204 0034 104B     		ldr	r3, .L23+20
 205 0036 114A     		ldr	r2, .L23+24
 206 0038 0121     		movs	r1, #1
 207 003a 1148     		ldr	r0, .L23+28
 208 003c FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 209              	.LVL23:
 210 0040 68B9     		cbnz	r0, .L22
 211              	.L17:
  47:Core/Src/can_setup.c ****         {
  48:Core/Src/can_setup.c ****             Error_Handler();
  49:Core/Src/can_setup.c ****         }
  50:Core/Src/can_setup.c ****         //do stuff
  51:Core/Src/can_setup.c ****         decodeVolt(&BMS[1], &rxMsg3, canRx3);
 212              		.loc 1 51 0
 213 0042 0D4E     		ldr	r6, .L23+20
 214 0044 0D4D     		ldr	r5, .L23+24
 215 0046 0F4C     		ldr	r4, .L23+32
 216              	.LVL24:
 217 0048 3246     		mov	r2, r6
 218 004a 2946     		mov	r1, r5
 219 004c 2046     		mov	r0, r4
 220 004e FFF7FEFF 		bl	decodeVolt
 221              	.LVL25:
  52:Core/Src/can_setup.c ****         decodeTemp(&BMS[1], &rxMsg3, canRx3);
 222              		.loc 1 52 0
 223 0052 3246     		mov	r2, r6
 224 0054 2946     		mov	r1, r5
 225 0056 2046     		mov	r0, r4
 226 0058 FFF7FEFF 		bl	decodeTemp
 227              	.LVL26:
  53:Core/Src/can_setup.c ****     }
ARM GAS  /tmp/ccA8Au6p.s 			page 6


  54:Core/Src/can_setup.c **** }
 228              		.loc 1 54 0
 229 005c DAE7     		b	.L13
 230              	.LVL27:
 231              	.L22:
  48:Core/Src/can_setup.c ****         }
 232              		.loc 1 48 0
 233 005e FFF7FEFF 		bl	Error_Handler
 234              	.LVL28:
 235 0062 EEE7     		b	.L17
 236              	.L24:
 237              		.align	2
 238              	.L23:
 239 0064 00680040 		.word	1073768448
 240 0068 006C0040 		.word	1073769472
 241 006c 00000000 		.word	canRx2
 242 0070 00000000 		.word	rxMsg2
 243 0074 00000000 		.word	hcan2
 244 0078 00000000 		.word	canRx3
 245 007c 00000000 		.word	rxMsg3
 246 0080 00000000 		.word	hcan3
 247 0084 F6000000 		.word	BMS+246
 248              		.cfi_endproc
 249              	.LFE132:
 251              		.section	.text.canSettings,"ax",%progbits
 252              		.align	1
 253              		.global	canSettings
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	canSettings:
 260              	.LFB133:
  55:Core/Src/can_setup.c **** 
  56:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  57:Core/Src/can_setup.c **** void canSettings(void)
  58:Core/Src/can_setup.c **** {
 261              		.loc 1 58 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI2:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
  59:Core/Src/can_setup.c **** 
  60:Core/Src/can_setup.c ****     txMsg.IDE = CAN_ID_STD;
 270              		.loc 1 60 0
 271 0002 574A     		ldr	r2, .L45
 272 0004 0023     		movs	r3, #0
 273 0006 9360     		str	r3, [r2, #8]
  61:Core/Src/can_setup.c ****     txMsg.RTR = CAN_RTR_DATA;
 274              		.loc 1 61 0
 275 0008 D360     		str	r3, [r2, #12]
  62:Core/Src/can_setup.c ****     txMsg.TransmitGlobalTime = DISABLE;
 276              		.loc 1 62 0
ARM GAS  /tmp/ccA8Au6p.s 			page 7


 277 000a 1375     		strb	r3, [r2, #20]
  63:Core/Src/can_setup.c **** 
  64:Core/Src/can_setup.c ****     txMsgExt.IDE = CAN_ID_EXT;
 278              		.loc 1 64 0
 279 000c 554A     		ldr	r2, .L45+4
 280 000e 0421     		movs	r1, #4
 281 0010 9160     		str	r1, [r2, #8]
  65:Core/Src/can_setup.c ****     txMsgExt.RTR = CAN_RTR_DATA;
 282              		.loc 1 65 0
 283 0012 D360     		str	r3, [r2, #12]
  66:Core/Src/can_setup.c ****     txMsgExt.TransmitGlobalTime = DISABLE;
 284              		.loc 1 66 0
 285 0014 1375     		strb	r3, [r2, #20]
  67:Core/Src/can_setup.c **** 
  68:Core/Src/can_setup.c ****     sf.FilterBank = 0; // CAN1 Filter bank starts at 0
 286              		.loc 1 68 0
 287 0016 5449     		ldr	r1, .L45+8
 288 0018 4B61     		str	r3, [r1, #20]
  69:Core/Src/can_setup.c ****     sf.FilterMode = CAN_FILTERMODE_IDMASK;
 289              		.loc 1 69 0
 290 001a 8B61     		str	r3, [r1, #24]
  70:Core/Src/can_setup.c ****     sf.FilterScale = CAN_FILTERSCALE_16BIT;
 291              		.loc 1 70 0
 292 001c CB61     		str	r3, [r1, #28]
  71:Core/Src/can_setup.c ****     sf.FilterIdLow = 0xffff;
 293              		.loc 1 71 0
 294 001e 4FF6FF72 		movw	r2, #65535
 295 0022 4A60     		str	r2, [r1, #4]
  72:Core/Src/can_setup.c ****     sf.FilterIdHigh = 0x1fff;
 296              		.loc 1 72 0
 297 0024 41F6FF72 		movw	r2, #8191
 298 0028 0A60     		str	r2, [r1]
  73:Core/Src/can_setup.c ****     sf.FilterMaskIdLow = 0x0000;
 299              		.loc 1 73 0
 300 002a CB60     		str	r3, [r1, #12]
  74:Core/Src/can_setup.c ****     sf.FilterMaskIdHigh = 0x0000;
 301              		.loc 1 74 0
 302 002c 8B60     		str	r3, [r1, #8]
  75:Core/Src/can_setup.c ****     sf.FilterFIFOAssignment = CAN_RX_FIFO0;
 303              		.loc 1 75 0
 304 002e 0B61     		str	r3, [r1, #16]
  76:Core/Src/can_setup.c ****     sf.SlaveStartFilterBank = 14;
 305              		.loc 1 76 0
 306 0030 0E23     		movs	r3, #14
 307 0032 4B62     		str	r3, [r1, #36]
  77:Core/Src/can_setup.c ****     sf.FilterActivation = ENABLE;
 308              		.loc 1 77 0
 309 0034 0123     		movs	r3, #1
 310 0036 0B62     		str	r3, [r1, #32]
  78:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf) != HAL_OK)
 311              		.loc 1 78 0
 312 0038 4C48     		ldr	r0, .L45+12
 313 003a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 314              	.LVL29:
 315 003e 0028     		cmp	r0, #0
 316 0040 72D1     		bne	.L36
 317              	.L26:
ARM GAS  /tmp/ccA8Au6p.s 			page 8


  79:Core/Src/can_setup.c ****     {
  80:Core/Src/can_setup.c ****         Error_Handler();
  81:Core/Src/can_setup.c ****     }
  82:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan1) != HAL_OK)
 318              		.loc 1 82 0
 319 0042 4A48     		ldr	r0, .L45+12
 320 0044 FFF7FEFF 		bl	HAL_CAN_Start
 321              	.LVL30:
 322 0048 0028     		cmp	r0, #0
 323 004a 70D1     		bne	.L37
 324              	.L27:
  83:Core/Src/can_setup.c ****     {
  84:Core/Src/can_setup.c ****         Error_Handler();
  85:Core/Src/can_setup.c ****     }
  86:Core/Src/can_setup.c **** 
  87:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 325              		.loc 1 87 0
 326 004c 0221     		movs	r1, #2
 327 004e 4748     		ldr	r0, .L45+12
 328 0050 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 329              	.LVL31:
 330 0054 0028     		cmp	r0, #0
 331 0056 6DD1     		bne	.L38
 332              	.L28:
  88:Core/Src/can_setup.c ****     {
  89:Core/Src/can_setup.c ****         Error_Handler();
  90:Core/Src/can_setup.c ****     }
  91:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 3, 0);
 333              		.loc 1 91 0
 334 0058 0022     		movs	r2, #0
 335 005a 0321     		movs	r1, #3
 336 005c 1320     		movs	r0, #19
 337 005e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 338              	.LVL32:
  92:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 339              		.loc 1 92 0
 340 0062 1320     		movs	r0, #19
 341 0064 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 342              	.LVL33:
  93:Core/Src/can_setup.c **** 
  94:Core/Src/can_setup.c ****     //hcan2
  95:Core/Src/can_setup.c ****     txMsg2.IDE = CAN_ID_STD;
 343              		.loc 1 95 0
 344 0068 414A     		ldr	r2, .L45+16
 345 006a 0023     		movs	r3, #0
 346 006c 9360     		str	r3, [r2, #8]
  96:Core/Src/can_setup.c ****     txMsg2.RTR = CAN_RTR_DATA;
 347              		.loc 1 96 0
 348 006e D360     		str	r3, [r2, #12]
  97:Core/Src/can_setup.c ****     txMsg2.TransmitGlobalTime = DISABLE;
 349              		.loc 1 97 0
 350 0070 1375     		strb	r3, [r2, #20]
  98:Core/Src/can_setup.c **** 
  99:Core/Src/can_setup.c ****     txMsgExt2.IDE = CAN_ID_EXT;
 351              		.loc 1 99 0
 352 0072 404A     		ldr	r2, .L45+20
 353 0074 0421     		movs	r1, #4
ARM GAS  /tmp/ccA8Au6p.s 			page 9


 354 0076 9160     		str	r1, [r2, #8]
 100:Core/Src/can_setup.c ****     txMsgExt2.RTR = CAN_RTR_DATA;
 355              		.loc 1 100 0
 356 0078 D360     		str	r3, [r2, #12]
 101:Core/Src/can_setup.c ****     txMsgExt2.TransmitGlobalTime = DISABLE;
 357              		.loc 1 101 0
 358 007a 1375     		strb	r3, [r2, #20]
 102:Core/Src/can_setup.c **** 
 103:Core/Src/can_setup.c ****     sf2.FilterBank = 14; // CAN2 Filter bank starts at 14
 359              		.loc 1 103 0
 360 007c 3E49     		ldr	r1, .L45+24
 361 007e 0E22     		movs	r2, #14
 362 0080 4A61     		str	r2, [r1, #20]
 104:Core/Src/can_setup.c ****     sf2.FilterMode = CAN_FILTERMODE_IDMASK;
 363              		.loc 1 104 0
 364 0082 8B61     		str	r3, [r1, #24]
 105:Core/Src/can_setup.c ****     sf2.FilterScale = CAN_FILTERSCALE_16BIT;
 365              		.loc 1 105 0
 366 0084 CB61     		str	r3, [r1, #28]
 106:Core/Src/can_setup.c ****     sf2.FilterIdLow = 0xffff;
 367              		.loc 1 106 0
 368 0086 4FF6FF70 		movw	r0, #65535
 369 008a 4860     		str	r0, [r1, #4]
 107:Core/Src/can_setup.c ****     sf2.FilterIdHigh = 0x1fff;
 370              		.loc 1 107 0
 371 008c 41F6FF70 		movw	r0, #8191
 372 0090 0860     		str	r0, [r1]
 108:Core/Src/can_setup.c ****     sf2.FilterMaskIdLow = 0x0000;
 373              		.loc 1 108 0
 374 0092 CB60     		str	r3, [r1, #12]
 109:Core/Src/can_setup.c ****     sf2.FilterMaskIdHigh = 0x0000;
 375              		.loc 1 109 0
 376 0094 8B60     		str	r3, [r1, #8]
 110:Core/Src/can_setup.c ****     sf2.FilterFIFOAssignment = CAN_RX_FIFO1;
 377              		.loc 1 110 0
 378 0096 0123     		movs	r3, #1
 379 0098 0B61     		str	r3, [r1, #16]
 111:Core/Src/can_setup.c ****     sf2.SlaveStartFilterBank = 14;
 380              		.loc 1 111 0
 381 009a 4A62     		str	r2, [r1, #36]
 112:Core/Src/can_setup.c ****     sf2.FilterActivation = ENABLE;
 382              		.loc 1 112 0
 383 009c 0B62     		str	r3, [r1, #32]
 113:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan2, &sf2) != HAL_OK)
 384              		.loc 1 113 0
 385 009e 3748     		ldr	r0, .L45+28
 386 00a0 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 387              	.LVL34:
 388 00a4 0028     		cmp	r0, #0
 389 00a6 48D1     		bne	.L39
 390              	.L29:
 114:Core/Src/can_setup.c ****     {
 115:Core/Src/can_setup.c ****         Error_Handler();
 116:Core/Src/can_setup.c ****     }
 117:Core/Src/can_setup.c **** 
 118:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan2) != HAL_OK)
 391              		.loc 1 118 0
ARM GAS  /tmp/ccA8Au6p.s 			page 10


 392 00a8 3448     		ldr	r0, .L45+28
 393 00aa FFF7FEFF 		bl	HAL_CAN_Start
 394              	.LVL35:
 395 00ae 0028     		cmp	r0, #0
 396 00b0 46D1     		bne	.L40
 397              	.L30:
 119:Core/Src/can_setup.c ****     {
 120:Core/Src/can_setup.c ****         Error_Handler();
 121:Core/Src/can_setup.c ****     }
 122:Core/Src/can_setup.c **** 
 123:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING) != HAL_OK)
 398              		.loc 1 123 0
 399 00b2 1021     		movs	r1, #16
 400 00b4 3148     		ldr	r0, .L45+28
 401 00b6 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 402              	.LVL36:
 403 00ba 0028     		cmp	r0, #0
 404 00bc 43D1     		bne	.L41
 405              	.L31:
 124:Core/Src/can_setup.c ****     {
 125:Core/Src/can_setup.c ****         Error_Handler();
 126:Core/Src/can_setup.c ****     }
 127:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN2_TX_IRQn, 3, 0);
 406              		.loc 1 127 0
 407 00be 0022     		movs	r2, #0
 408 00c0 0321     		movs	r1, #3
 409 00c2 3F20     		movs	r0, #63
 410 00c4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 411              	.LVL37:
 128:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 412              		.loc 1 128 0
 413 00c8 3F20     		movs	r0, #63
 414 00ca FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 415              	.LVL38:
 129:Core/Src/can_setup.c **** 
 130:Core/Src/can_setup.c ****     //hcan3
 131:Core/Src/can_setup.c ****     txMsg3.IDE = CAN_ID_STD;
 416              		.loc 1 131 0
 417 00ce 2C4A     		ldr	r2, .L45+32
 418 00d0 0023     		movs	r3, #0
 419 00d2 9360     		str	r3, [r2, #8]
 132:Core/Src/can_setup.c ****     txMsg3.RTR = CAN_RTR_DATA;
 420              		.loc 1 132 0
 421 00d4 D360     		str	r3, [r2, #12]
 133:Core/Src/can_setup.c ****     txMsg3.TransmitGlobalTime = DISABLE;
 422              		.loc 1 133 0
 423 00d6 1375     		strb	r3, [r2, #20]
 134:Core/Src/can_setup.c **** 
 135:Core/Src/can_setup.c ****     txMsgExt3.IDE = CAN_ID_EXT;
 424              		.loc 1 135 0
 425 00d8 2A4A     		ldr	r2, .L45+36
 426 00da 0421     		movs	r1, #4
 427 00dc 9160     		str	r1, [r2, #8]
 136:Core/Src/can_setup.c ****     txMsgExt3.RTR = CAN_RTR_DATA;
 428              		.loc 1 136 0
 429 00de D360     		str	r3, [r2, #12]
 137:Core/Src/can_setup.c ****     txMsgExt3.TransmitGlobalTime = DISABLE;
ARM GAS  /tmp/ccA8Au6p.s 			page 11


 430              		.loc 1 137 0
 431 00e0 1375     		strb	r3, [r2, #20]
 138:Core/Src/can_setup.c **** 
 139:Core/Src/can_setup.c ****     sf3.FilterBank = 1; // CAN1 Filter bank starts at 0
 432              		.loc 1 139 0
 433 00e2 2949     		ldr	r1, .L45+40
 434 00e4 0122     		movs	r2, #1
 435 00e6 4A61     		str	r2, [r1, #20]
 140:Core/Src/can_setup.c ****     sf3.FilterMode = CAN_FILTERMODE_IDMASK;
 436              		.loc 1 140 0
 437 00e8 8B61     		str	r3, [r1, #24]
 141:Core/Src/can_setup.c ****     sf3.FilterScale = CAN_FILTERSCALE_32BIT;
 438              		.loc 1 141 0
 439 00ea CA61     		str	r2, [r1, #28]
 142:Core/Src/can_setup.c ****     sf3.FilterIdLow = 0x0000;
 440              		.loc 1 142 0
 441 00ec 4B60     		str	r3, [r1, #4]
 143:Core/Src/can_setup.c ****     sf3.FilterIdHigh = 0x0000;
 442              		.loc 1 143 0
 443 00ee 0B60     		str	r3, [r1]
 144:Core/Src/can_setup.c ****     sf3.FilterMaskIdLow = 0x0000;
 444              		.loc 1 144 0
 445 00f0 CB60     		str	r3, [r1, #12]
 145:Core/Src/can_setup.c ****     sf3.FilterMaskIdHigh = 0x0000;
 446              		.loc 1 145 0
 447 00f2 8B60     		str	r3, [r1, #8]
 146:Core/Src/can_setup.c ****     sf3.FilterFIFOAssignment = CAN_RX_FIFO0;
 448              		.loc 1 146 0
 449 00f4 0B61     		str	r3, [r1, #16]
 147:Core/Src/can_setup.c ****     sf3.SlaveStartFilterBank = 14;
 450              		.loc 1 147 0
 451 00f6 0E23     		movs	r3, #14
 452 00f8 4B62     		str	r3, [r1, #36]
 148:Core/Src/can_setup.c ****     sf3.FilterActivation = ENABLE;
 453              		.loc 1 148 0
 454 00fa 0A62     		str	r2, [r1, #32]
 149:Core/Src/can_setup.c **** 
 150:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan3, &sf3) != HAL_OK)
 455              		.loc 1 150 0
 456 00fc 2348     		ldr	r0, .L45+44
 457 00fe FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 458              	.LVL39:
 459 0102 18BB     		cbnz	r0, .L42
 460              	.L32:
 151:Core/Src/can_setup.c ****     {
 152:Core/Src/can_setup.c ****         Error_Handler();
 153:Core/Src/can_setup.c ****     }
 154:Core/Src/can_setup.c **** 
 155:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan3) != HAL_OK)
 461              		.loc 1 155 0
 462 0104 2148     		ldr	r0, .L45+44
 463 0106 FFF7FEFF 		bl	HAL_CAN_Start
 464              	.LVL40:
 465 010a 10BB     		cbnz	r0, .L43
 466              	.L33:
 156:Core/Src/can_setup.c ****     {
 157:Core/Src/can_setup.c ****         Error_Handler();
ARM GAS  /tmp/ccA8Au6p.s 			page 12


 158:Core/Src/can_setup.c ****     }
 159:Core/Src/can_setup.c **** 
 160:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan3, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 467              		.loc 1 160 0
 468 010c 0221     		movs	r1, #2
 469 010e 1F48     		ldr	r0, .L45+44
 470 0110 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 471              	.LVL41:
 472 0114 00BB     		cbnz	r0, .L44
 473              	.L34:
 161:Core/Src/can_setup.c ****     {
 162:Core/Src/can_setup.c ****         Error_Handler();
 163:Core/Src/can_setup.c ****     }
 164:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN3_TX_IRQn, 3, 0);
 474              		.loc 1 164 0
 475 0116 0022     		movs	r2, #0
 476 0118 0321     		movs	r1, #3
 477 011a 4A20     		movs	r0, #74
 478 011c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 479              	.LVL42:
 165:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN3_TX_IRQn);
 480              		.loc 1 165 0
 481 0120 4A20     		movs	r0, #74
 482 0122 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 483              	.LVL43:
 484 0126 08BD     		pop	{r3, pc}
 485              	.L36:
  80:Core/Src/can_setup.c ****     }
 486              		.loc 1 80 0
 487 0128 FFF7FEFF 		bl	Error_Handler
 488              	.LVL44:
 489 012c 89E7     		b	.L26
 490              	.L37:
  84:Core/Src/can_setup.c ****     }
 491              		.loc 1 84 0
 492 012e FFF7FEFF 		bl	Error_Handler
 493              	.LVL45:
 494 0132 8BE7     		b	.L27
 495              	.L38:
  89:Core/Src/can_setup.c ****     }
 496              		.loc 1 89 0
 497 0134 FFF7FEFF 		bl	Error_Handler
 498              	.LVL46:
 499 0138 8EE7     		b	.L28
 500              	.L39:
 115:Core/Src/can_setup.c ****     }
 501              		.loc 1 115 0
 502 013a FFF7FEFF 		bl	Error_Handler
 503              	.LVL47:
 504 013e B3E7     		b	.L29
 505              	.L40:
 120:Core/Src/can_setup.c ****     }
 506              		.loc 1 120 0
 507 0140 FFF7FEFF 		bl	Error_Handler
 508              	.LVL48:
 509 0144 B5E7     		b	.L30
 510              	.L41:
ARM GAS  /tmp/ccA8Au6p.s 			page 13


 125:Core/Src/can_setup.c ****     }
 511              		.loc 1 125 0
 512 0146 FFF7FEFF 		bl	Error_Handler
 513              	.LVL49:
 514 014a B8E7     		b	.L31
 515              	.L42:
 152:Core/Src/can_setup.c ****     }
 516              		.loc 1 152 0
 517 014c FFF7FEFF 		bl	Error_Handler
 518              	.LVL50:
 519 0150 D8E7     		b	.L32
 520              	.L43:
 157:Core/Src/can_setup.c ****     }
 521              		.loc 1 157 0
 522 0152 FFF7FEFF 		bl	Error_Handler
 523              	.LVL51:
 524 0156 D9E7     		b	.L33
 525              	.L44:
 162:Core/Src/can_setup.c ****     }
 526              		.loc 1 162 0
 527 0158 FFF7FEFF 		bl	Error_Handler
 528              	.LVL52:
 529 015c DBE7     		b	.L34
 530              	.L46:
 531 015e 00BF     		.align	2
 532              	.L45:
 533 0160 00000000 		.word	txMsg
 534 0164 00000000 		.word	txMsgExt
 535 0168 00000000 		.word	sf
 536 016c 00000000 		.word	hcan1
 537 0170 00000000 		.word	txMsg2
 538 0174 00000000 		.word	txMsgExt2
 539 0178 00000000 		.word	sf2
 540 017c 00000000 		.word	hcan2
 541 0180 00000000 		.word	txMsg3
 542 0184 00000000 		.word	txMsgExt3
 543 0188 00000000 		.word	sf3
 544 018c 00000000 		.word	hcan3
 545              		.cfi_endproc
 546              	.LFE133:
 548              		.section	.text.can1tx,"ax",%progbits
 549              		.align	1
 550              		.global	can1tx
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu fpv4-sp-d16
 556              	can1tx:
 557              	.LFB134:
 166:Core/Src/can_setup.c **** }
 167:Core/Src/can_setup.c **** 
 168:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 169:Core/Src/can_setup.c **** /*
 170:Core/Src/can_setup.c **** void c1tx(CAN_TxHeaderTypeDef *txMsg, uint8_t *canTx)
 171:Core/Src/can_setup.c **** {
 172:Core/Src/can_setup.c **** 
 173:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsg, canTx, &canMailbox);
ARM GAS  /tmp/ccA8Au6p.s 			page 14


 174:Core/Src/can_setup.c ****     txCycle++;
 175:Core/Src/can_setup.c ****     if (txCycle >= 3)
 176:Core/Src/can_setup.c ****     {
 177:Core/Src/can_setup.c ****         HAL_Delay(1);
 178:Core/Src/can_setup.c ****         txCycle = 0;
 179:Core/Src/can_setup.c ****     }
 180:Core/Src/can_setup.c **** }
 181:Core/Src/can_setup.c **** */
 182:Core/Src/can_setup.c **** 
 183:Core/Src/can_setup.c **** void can1tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx)
 184:Core/Src/can_setup.c **** {
 558              		.loc 1 184 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              	.LVL53:
 563 0000 10B5     		push	{r4, lr}
 564              	.LCFI3:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 4, -8
 567              		.cfi_offset 14, -4
 185:Core/Src/can_setup.c ****     txMsg.StdId = msgId;
 568              		.loc 1 185 0
 569 0002 0B4C     		ldr	r4, .L51
 570 0004 2060     		str	r0, [r4]
 186:Core/Src/can_setup.c ****     txMsg.DLC = DLC;
 571              		.loc 1 186 0
 572 0006 2161     		str	r1, [r4, #16]
 187:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, &txMsg, canTx, &canMailbox);
 573              		.loc 1 187 0
 574 0008 0A4B     		ldr	r3, .L51+4
 575 000a 2146     		mov	r1, r4
 576              	.LVL54:
 577 000c 0A48     		ldr	r0, .L51+8
 578              	.LVL55:
 579 000e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 580              	.LVL56:
 188:Core/Src/can_setup.c ****     txCycle++;
 581              		.loc 1 188 0
 582 0012 0A4A     		ldr	r2, .L51+12
 583 0014 1368     		ldr	r3, [r2]
 584 0016 0133     		adds	r3, r3, #1
 585 0018 1360     		str	r3, [r2]
 189:Core/Src/can_setup.c ****     if (txCycle >= 3)
 586              		.loc 1 189 0
 587 001a 022B     		cmp	r3, #2
 588 001c 00DC     		bgt	.L50
 589              	.L47:
 590 001e 10BD     		pop	{r4, pc}
 591              	.L50:
 190:Core/Src/can_setup.c ****     {
 191:Core/Src/can_setup.c ****         HAL_Delay(1);
 592              		.loc 1 191 0
 593 0020 0120     		movs	r0, #1
 594 0022 FFF7FEFF 		bl	HAL_Delay
 595              	.LVL57:
 192:Core/Src/can_setup.c ****         txCycle = 0;
ARM GAS  /tmp/ccA8Au6p.s 			page 15


 596              		.loc 1 192 0
 597 0026 0022     		movs	r2, #0
 598 0028 044B     		ldr	r3, .L51+12
 599 002a 1A60     		str	r2, [r3]
 193:Core/Src/can_setup.c ****     }
 194:Core/Src/can_setup.c **** }
 600              		.loc 1 194 0
 601 002c F7E7     		b	.L47
 602              	.L52:
 603 002e 00BF     		.align	2
 604              	.L51:
 605 0030 00000000 		.word	txMsg
 606 0034 00000000 		.word	canMailbox
 607 0038 00000000 		.word	hcan1
 608 003c 00000000 		.word	txCycle
 609              		.cfi_endproc
 610              	.LFE134:
 612              		.section	.text.can2tx,"ax",%progbits
 613              		.align	1
 614              		.global	can2tx
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu fpv4-sp-d16
 620              	can2tx:
 621              	.LFB135:
 195:Core/Src/can_setup.c **** 
 196:Core/Src/can_setup.c **** /*
 197:Core/Src/can_setup.c **** void c2tx(CAN_TxHeaderTypeDef *txMsg2, uint8_t *canTx2)
 198:Core/Src/can_setup.c **** {
 199:Core/Src/can_setup.c **** 
 200:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2, canTx2, &canMailbox2);
 201:Core/Src/can_setup.c ****     txCycle2++;
 202:Core/Src/can_setup.c ****     if (txCycle2 >= 3)
 203:Core/Src/can_setup.c ****     {
 204:Core/Src/can_setup.c ****         HAL_Delay(1);
 205:Core/Src/can_setup.c ****         txCycle2 = 0;
 206:Core/Src/can_setup.c ****     }
 207:Core/Src/can_setup.c **** }
 208:Core/Src/can_setup.c **** */
 209:Core/Src/can_setup.c **** void can2tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx2)
 210:Core/Src/can_setup.c **** {
 622              		.loc 1 210 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              	.LVL58:
 627 0000 10B5     		push	{r4, lr}
 628              	.LCFI4:
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 4, -8
 631              		.cfi_offset 14, -4
 211:Core/Src/can_setup.c ****     txMsg2.StdId = msgId;
 632              		.loc 1 211 0
 633 0002 0B4C     		ldr	r4, .L57
 634 0004 2060     		str	r0, [r4]
 212:Core/Src/can_setup.c ****     txMsg2.DLC = DLC;
ARM GAS  /tmp/ccA8Au6p.s 			page 16


 635              		.loc 1 212 0
 636 0006 2161     		str	r1, [r4, #16]
 213:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, &txMsg2, canTx2, &canMailbox2);
 637              		.loc 1 213 0
 638 0008 0A4B     		ldr	r3, .L57+4
 639 000a 2146     		mov	r1, r4
 640              	.LVL59:
 641 000c 0A48     		ldr	r0, .L57+8
 642              	.LVL60:
 643 000e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 644              	.LVL61:
 214:Core/Src/can_setup.c ****     txCycle2++;
 645              		.loc 1 214 0
 646 0012 0A4A     		ldr	r2, .L57+12
 647 0014 1368     		ldr	r3, [r2]
 648 0016 0133     		adds	r3, r3, #1
 649 0018 1360     		str	r3, [r2]
 215:Core/Src/can_setup.c ****     if (txCycle2 >= 3)
 650              		.loc 1 215 0
 651 001a 022B     		cmp	r3, #2
 652 001c 00DC     		bgt	.L56
 653              	.L53:
 654 001e 10BD     		pop	{r4, pc}
 655              	.L56:
 216:Core/Src/can_setup.c ****     {
 217:Core/Src/can_setup.c ****         HAL_Delay(1);
 656              		.loc 1 217 0
 657 0020 0120     		movs	r0, #1
 658 0022 FFF7FEFF 		bl	HAL_Delay
 659              	.LVL62:
 218:Core/Src/can_setup.c ****         txCycle2 = 0;
 660              		.loc 1 218 0
 661 0026 0022     		movs	r2, #0
 662 0028 044B     		ldr	r3, .L57+12
 663 002a 1A60     		str	r2, [r3]
 219:Core/Src/can_setup.c ****     }
 220:Core/Src/can_setup.c **** }
 664              		.loc 1 220 0
 665 002c F7E7     		b	.L53
 666              	.L58:
 667 002e 00BF     		.align	2
 668              	.L57:
 669 0030 00000000 		.word	txMsg2
 670 0034 00000000 		.word	canMailbox2
 671 0038 00000000 		.word	hcan2
 672 003c 00000000 		.word	txCycle2
 673              		.cfi_endproc
 674              	.LFE135:
 676              		.section	.text.can3tx,"ax",%progbits
 677              		.align	1
 678              		.global	can3tx
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu fpv4-sp-d16
 684              	can3tx:
 685              	.LFB136:
ARM GAS  /tmp/ccA8Au6p.s 			page 17


 221:Core/Src/can_setup.c **** 
 222:Core/Src/can_setup.c **** /*
 223:Core/Src/can_setup.c **** void c3tx(CAN_TxHeaderTypeDef *txMsg3, uint8_t *canTx3)
 224:Core/Src/can_setup.c **** {
 225:Core/Src/can_setup.c **** 
 226:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan3, txMsg3, canTx3, &canMailbox3);
 227:Core/Src/can_setup.c ****     txCycle3++;
 228:Core/Src/can_setup.c ****     if (txCycle3 >= 3)
 229:Core/Src/can_setup.c ****     {
 230:Core/Src/can_setup.c ****         HAL_Delay(1);
 231:Core/Src/can_setup.c ****         txCycle3 = 0;
 232:Core/Src/can_setup.c ****     }
 233:Core/Src/can_setup.c **** }
 234:Core/Src/can_setup.c **** */
 235:Core/Src/can_setup.c **** 
 236:Core/Src/can_setup.c **** void can3tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx3)
 237:Core/Src/can_setup.c **** {
 686              		.loc 1 237 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              	.LVL63:
 691 0000 10B5     		push	{r4, lr}
 692              	.LCFI5:
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 4, -8
 695              		.cfi_offset 14, -4
 238:Core/Src/can_setup.c **** 
 239:Core/Src/can_setup.c ****     txMsg3.StdId = msgId;
 696              		.loc 1 239 0
 697 0002 0B4C     		ldr	r4, .L63
 698 0004 2060     		str	r0, [r4]
 240:Core/Src/can_setup.c ****     txMsg3.DLC = DLC;
 699              		.loc 1 240 0
 700 0006 2161     		str	r1, [r4, #16]
 241:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan3, &txMsg3, canTx3, &canMailbox3);
 701              		.loc 1 241 0
 702 0008 0A4B     		ldr	r3, .L63+4
 703 000a 2146     		mov	r1, r4
 704              	.LVL64:
 705 000c 0A48     		ldr	r0, .L63+8
 706              	.LVL65:
 707 000e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 708              	.LVL66:
 242:Core/Src/can_setup.c ****     txCycle3++;
 709              		.loc 1 242 0
 710 0012 0A4A     		ldr	r2, .L63+12
 711 0014 1368     		ldr	r3, [r2]
 712 0016 0133     		adds	r3, r3, #1
 713 0018 1360     		str	r3, [r2]
 243:Core/Src/can_setup.c ****     if (txCycle3 >= 3)
 714              		.loc 1 243 0
 715 001a 022B     		cmp	r3, #2
 716 001c 00DC     		bgt	.L62
 717              	.L59:
 718 001e 10BD     		pop	{r4, pc}
 719              	.L62:
ARM GAS  /tmp/ccA8Au6p.s 			page 18


 244:Core/Src/can_setup.c ****     {
 245:Core/Src/can_setup.c ****         HAL_Delay(1);
 720              		.loc 1 245 0
 721 0020 0120     		movs	r0, #1
 722 0022 FFF7FEFF 		bl	HAL_Delay
 723              	.LVL67:
 246:Core/Src/can_setup.c ****         txCycle3 = 0;
 724              		.loc 1 246 0
 725 0026 0022     		movs	r2, #0
 726 0028 044B     		ldr	r3, .L63+12
 727 002a 1A60     		str	r2, [r3]
 247:Core/Src/can_setup.c ****     }
 248:Core/Src/can_setup.c **** }
 728              		.loc 1 248 0
 729 002c F7E7     		b	.L59
 730              	.L64:
 731 002e 00BF     		.align	2
 732              	.L63:
 733 0030 00000000 		.word	txMsg3
 734 0034 00000000 		.word	canMailbox3
 735 0038 00000000 		.word	hcan3
 736 003c 00000000 		.word	txCycle3
 737              		.cfi_endproc
 738              	.LFE136:
 740              		.comm	txCycle3,4,4
 741              		.comm	txCycle2,4,4
 742              		.comm	txCycle,4,4
 743              		.comm	canMailbox3,4,4
 744              		.comm	canMailbox2,4,4
 745              		.comm	canMailbox,4,4
 746              		.comm	canRx3,8,4
 747              		.comm	canRx2,8,4
 748              		.comm	canRx,8,4
 749              		.comm	txMsgExt3,24,4
 750              		.comm	txMsg3,24,4
 751              		.comm	rxMsg3,28,4
 752              		.comm	txMsgExt2,24,4
 753              		.comm	txMsg2,24,4
 754              		.comm	rxMsg2,28,4
 755              		.comm	txMsgExt,24,4
 756              		.comm	txMsg,24,4
 757              		.comm	rxMsg,28,4
 758              		.comm	sf5,40,4
 759              		.comm	sf4,40,4
 760              		.comm	sf3,40,4
 761              		.comm	sf2,40,4
 762              		.comm	sf,40,4
 763              		.comm	hcan3,40,4
 764              		.comm	hcan2,40,4
 765              		.comm	hcan1,40,4
 766              		.comm	charged,1,1
 767              		.comm	vechicleState,1,1
 768              		.comm	BMS,492,4
 769              		.text
 770              	.Letext0:
 771              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 772              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccA8Au6p.s 			page 19


 773              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 774              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 775              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 776              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 777              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 778              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 779              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 780              		.file 11 "/usr/include/newlib/sys/lock.h"
 781              		.file 12 "/usr/include/newlib/sys/_types.h"
 782              		.file 13 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 783              		.file 14 "/usr/include/newlib/sys/reent.h"
 784              		.file 15 "Core/Inc/bms.h"
 785              		.file 16 "Core/Inc/can_setup.h"
 786              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 787              		.file 18 "Core/Inc/main.h"
ARM GAS  /tmp/ccA8Au6p.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can_setup.c
     /tmp/ccA8Au6p.s:18     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccA8Au6p.s:25     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccA8Au6p.s:128    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000078 $d
                            *COM*:0000000000000008 canRx
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 hcan1
                            *COM*:00000000000001ec BMS
                            *COM*:0000000000000008 canRx3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000028 hcan3
     /tmp/ccA8Au6p.s:142    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccA8Au6p.s:149    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccA8Au6p.s:239    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000064 $d
                            *COM*:0000000000000008 canRx2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000028 hcan2
     /tmp/ccA8Au6p.s:252    .text.canSettings:0000000000000000 $t
     /tmp/ccA8Au6p.s:259    .text.canSettings:0000000000000000 canSettings
     /tmp/ccA8Au6p.s:533    .text.canSettings:0000000000000160 $d
                            *COM*:0000000000000018 txMsg
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000018 txMsg2
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000018 txMsg3
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000028 sf3
     /tmp/ccA8Au6p.s:549    .text.can1tx:0000000000000000 $t
     /tmp/ccA8Au6p.s:556    .text.can1tx:0000000000000000 can1tx
     /tmp/ccA8Au6p.s:605    .text.can1tx:0000000000000030 $d
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000004 txCycle
     /tmp/ccA8Au6p.s:613    .text.can2tx:0000000000000000 $t
     /tmp/ccA8Au6p.s:620    .text.can2tx:0000000000000000 can2tx
     /tmp/ccA8Au6p.s:669    .text.can2tx:0000000000000030 $d
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 txCycle2
     /tmp/ccA8Au6p.s:677    .text.can3tx:0000000000000000 $t
     /tmp/ccA8Au6p.s:684    .text.can3tx:0000000000000000 can3tx
     /tmp/ccA8Au6p.s:733    .text.can3tx:0000000000000030 $d
                            *COM*:0000000000000004 canMailbox3
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000001 charged
                            *COM*:0000000000000001 vechicleState
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_CAN_GetRxMessage
decodeVolt
decodeTemp
Error_Handler
vehicleComms
ARM GAS  /tmp/ccA8Au6p.s 			page 21


HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_AddTxMessage
HAL_Delay
