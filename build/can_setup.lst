ARM GAS  /tmp/cc9ijkmN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can_setup.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_CAN_RxFifo0MsgPendingCallback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_CAN_RxFifo0MsgPendingCallback:
  26              	.LFB131:
  27              		.file 1 "Core/Src/can_setup.c"
   1:Core/Src/can_setup.c **** #include <can_setup.h>
   2:Core/Src/can_setup.c **** 
   3:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
   4:Core/Src/can_setup.c **** 
   5:Core/Src/can_setup.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
   6:Core/Src/can_setup.c **** {
  28              		.loc 1 6 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
   7:Core/Src/can_setup.c ****     if (hcan->Instance == CAN1)
  43              		.loc 1 7 0
  44 0004 0268     		ldr	r2, [r0]
  45 0006 1C4B     		ldr	r3, .L11
  46 0008 9A42     		cmp	r2, r3
  47 000a 04D0     		beq	.L7
  48              	.LVL1:
  49              	.L2:
   8:Core/Src/can_setup.c ****     {
   9:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &rxMsg, canRx) != HAL_OK)
ARM GAS  /tmp/cc9ijkmN.s 			page 2


  10:Core/Src/can_setup.c ****         {
  11:Core/Src/can_setup.c ****             Error_Handler();
  12:Core/Src/can_setup.c ****         }
  13:Core/Src/can_setup.c ****         //do stuff
  14:Core/Src/can_setup.c ****         decodeVolt(&BMS[0], &rxMsg, canRx);
  15:Core/Src/can_setup.c ****         decodeTemp(&BMS[0], &rxMsg, canRx);
  16:Core/Src/can_setup.c ****     }
  17:Core/Src/can_setup.c **** 
  18:Core/Src/can_setup.c ****     if (hcan->Instance == CAN3)
  50              		.loc 1 18 0
  51 000c 2268     		ldr	r2, [r4]
  52 000e 1B4B     		ldr	r3, .L11+4
  53 0010 9A42     		cmp	r2, r3
  54 0012 18D0     		beq	.L8
  55              	.LVL2:
  56              	.L1:
  57 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  58              	.LVL3:
  59              	.L7:
   9:Core/Src/can_setup.c ****         {
  60              		.loc 1 9 0
  61 0016 1A4B     		ldr	r3, .L11+8
  62 0018 1A4A     		ldr	r2, .L11+12
  63 001a 0021     		movs	r1, #0
  64 001c 1A48     		ldr	r0, .L11+16
  65              	.LVL4:
  66 001e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  67              	.LVL5:
  68 0022 68B9     		cbnz	r0, .L9
  69              	.L3:
  14:Core/Src/can_setup.c ****         decodeTemp(&BMS[0], &rxMsg, canRx);
  70              		.loc 1 14 0
  71 0024 164F     		ldr	r7, .L11+8
  72 0026 174E     		ldr	r6, .L11+12
  73 0028 184D     		ldr	r5, .L11+20
  74 002a 3A46     		mov	r2, r7
  75 002c 3146     		mov	r1, r6
  76 002e 2846     		mov	r0, r5
  77 0030 FFF7FEFF 		bl	decodeVolt
  78              	.LVL6:
  15:Core/Src/can_setup.c ****     }
  79              		.loc 1 15 0
  80 0034 3A46     		mov	r2, r7
  81 0036 3146     		mov	r1, r6
  82 0038 2846     		mov	r0, r5
  83 003a FFF7FEFF 		bl	decodeTemp
  84              	.LVL7:
  85 003e E5E7     		b	.L2
  86              	.L9:
  11:Core/Src/can_setup.c ****         }
  87              		.loc 1 11 0
  88 0040 FFF7FEFF 		bl	Error_Handler
  89              	.LVL8:
  90 0044 EEE7     		b	.L3
  91              	.L8:
  19:Core/Src/can_setup.c ****     {
  20:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan3, CAN_RX_FIFO0, &rxMsg3, canRx3) != HAL_OK)
ARM GAS  /tmp/cc9ijkmN.s 			page 3


  92              		.loc 1 20 0
  93 0046 124B     		ldr	r3, .L11+24
  94 0048 124A     		ldr	r2, .L11+28
  95 004a 0021     		movs	r1, #0
  96 004c 1248     		ldr	r0, .L11+32
  97 004e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  98              	.LVL9:
  99 0052 68B9     		cbnz	r0, .L10
 100              	.L5:
  21:Core/Src/can_setup.c ****         {
  22:Core/Src/can_setup.c ****             Error_Handler();
  23:Core/Src/can_setup.c ****         }
  24:Core/Src/can_setup.c ****         //do stuff
  25:Core/Src/can_setup.c ****         decodeVolt(&BMS[1], &rxMsg3, canRx3);
 101              		.loc 1 25 0
 102 0054 0E4E     		ldr	r6, .L11+24
 103 0056 0F4D     		ldr	r5, .L11+28
 104 0058 104C     		ldr	r4, .L11+36
 105              	.LVL10:
 106 005a 3246     		mov	r2, r6
 107 005c 2946     		mov	r1, r5
 108 005e 2046     		mov	r0, r4
 109 0060 FFF7FEFF 		bl	decodeVolt
 110              	.LVL11:
  26:Core/Src/can_setup.c ****         decodeTemp(&BMS[1], &rxMsg3, canRx3);
 111              		.loc 1 26 0
 112 0064 3246     		mov	r2, r6
 113 0066 2946     		mov	r1, r5
 114 0068 2046     		mov	r0, r4
 115 006a FFF7FEFF 		bl	decodeTemp
 116              	.LVL12:
  27:Core/Src/can_setup.c ****     }
  28:Core/Src/can_setup.c **** }
 117              		.loc 1 28 0
 118 006e D1E7     		b	.L1
 119              	.LVL13:
 120              	.L10:
  22:Core/Src/can_setup.c ****         }
 121              		.loc 1 22 0
 122 0070 FFF7FEFF 		bl	Error_Handler
 123              	.LVL14:
 124 0074 EEE7     		b	.L5
 125              	.L12:
 126 0076 00BF     		.align	2
 127              	.L11:
 128 0078 00640040 		.word	1073767424
 129 007c 006C0040 		.word	1073769472
 130 0080 00000000 		.word	canRx
 131 0084 00000000 		.word	rxMsg
 132 0088 00000000 		.word	hcan1
 133 008c 00000000 		.word	BMS
 134 0090 00000000 		.word	canRx3
 135 0094 00000000 		.word	rxMsg3
 136 0098 00000000 		.word	hcan3
 137 009c F6000000 		.word	BMS+246
 138              		.cfi_endproc
 139              	.LFE131:
ARM GAS  /tmp/cc9ijkmN.s 			page 4


 141              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	HAL_CAN_RxFifo1MsgPendingCallback:
 150              	.LFB132:
  29:Core/Src/can_setup.c **** 
  30:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  31:Core/Src/can_setup.c **** 
  32:Core/Src/can_setup.c **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
  33:Core/Src/can_setup.c **** {
 151              		.loc 1 33 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              	.LVL15:
 156 0000 70B5     		push	{r4, r5, r6, lr}
 157              	.LCFI1:
 158              		.cfi_def_cfa_offset 16
 159              		.cfi_offset 4, -16
 160              		.cfi_offset 5, -12
 161              		.cfi_offset 6, -8
 162              		.cfi_offset 14, -4
 163 0002 0446     		mov	r4, r0
  34:Core/Src/can_setup.c **** 
  35:Core/Src/can_setup.c ****     if (hcan->Instance == CAN2)
 164              		.loc 1 35 0
 165 0004 0268     		ldr	r2, [r0]
 166 0006 174B     		ldr	r3, .L23
 167 0008 9A42     		cmp	r2, r3
 168 000a 04D0     		beq	.L19
 169              	.LVL16:
 170              	.L14:
  36:Core/Src/can_setup.c ****     {
  37:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan2, CAN_RX_FIFO1, &rxMsg2, canRx2) != HAL_OK)
  38:Core/Src/can_setup.c ****         {
  39:Core/Src/can_setup.c ****             Error_Handler();
  40:Core/Src/can_setup.c ****         }
  41:Core/Src/can_setup.c ****         vehicleComms(&rxMsg2,canRx2);
  42:Core/Src/can_setup.c **** 
  43:Core/Src/can_setup.c ****     }
  44:Core/Src/can_setup.c **** 
  45:Core/Src/can_setup.c ****     if (hcan->Instance == CAN3)
 171              		.loc 1 45 0
 172 000c 2268     		ldr	r2, [r4]
 173 000e 164B     		ldr	r3, .L23+4
 174 0010 9A42     		cmp	r2, r3
 175 0012 0FD0     		beq	.L20
 176              	.LVL17:
 177              	.L13:
 178 0014 70BD     		pop	{r4, r5, r6, pc}
 179              	.LVL18:
 180              	.L19:
  37:Core/Src/can_setup.c ****         {
ARM GAS  /tmp/cc9ijkmN.s 			page 5


 181              		.loc 1 37 0
 182 0016 154B     		ldr	r3, .L23+8
 183 0018 154A     		ldr	r2, .L23+12
 184 001a 0121     		movs	r1, #1
 185 001c 1548     		ldr	r0, .L23+16
 186              	.LVL19:
 187 001e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 188              	.LVL20:
 189 0022 20B9     		cbnz	r0, .L21
 190              	.L15:
  41:Core/Src/can_setup.c **** 
 191              		.loc 1 41 0
 192 0024 1149     		ldr	r1, .L23+8
 193 0026 1248     		ldr	r0, .L23+12
 194 0028 FFF7FEFF 		bl	vehicleComms
 195              	.LVL21:
 196 002c EEE7     		b	.L14
 197              	.L21:
  39:Core/Src/can_setup.c ****         }
 198              		.loc 1 39 0
 199 002e FFF7FEFF 		bl	Error_Handler
 200              	.LVL22:
 201 0032 F7E7     		b	.L15
 202              	.L20:
  46:Core/Src/can_setup.c ****     {
  47:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan3, CAN_RX_FIFO1, &rxMsg3, canRx3) != HAL_OK)
 203              		.loc 1 47 0
 204 0034 104B     		ldr	r3, .L23+20
 205 0036 114A     		ldr	r2, .L23+24
 206 0038 0121     		movs	r1, #1
 207 003a 1148     		ldr	r0, .L23+28
 208 003c FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 209              	.LVL23:
 210 0040 68B9     		cbnz	r0, .L22
 211              	.L17:
  48:Core/Src/can_setup.c ****         {
  49:Core/Src/can_setup.c ****             Error_Handler();
  50:Core/Src/can_setup.c ****         }
  51:Core/Src/can_setup.c ****         //do stuff
  52:Core/Src/can_setup.c ****         decodeVolt(&BMS[1], &rxMsg3, canRx3);
 212              		.loc 1 52 0
 213 0042 0D4E     		ldr	r6, .L23+20
 214 0044 0D4D     		ldr	r5, .L23+24
 215 0046 0F4C     		ldr	r4, .L23+32
 216              	.LVL24:
 217 0048 3246     		mov	r2, r6
 218 004a 2946     		mov	r1, r5
 219 004c 2046     		mov	r0, r4
 220 004e FFF7FEFF 		bl	decodeVolt
 221              	.LVL25:
  53:Core/Src/can_setup.c ****         decodeTemp(&BMS[1], &rxMsg3, canRx3);
 222              		.loc 1 53 0
 223 0052 3246     		mov	r2, r6
 224 0054 2946     		mov	r1, r5
 225 0056 2046     		mov	r0, r4
 226 0058 FFF7FEFF 		bl	decodeTemp
 227              	.LVL26:
ARM GAS  /tmp/cc9ijkmN.s 			page 6


  54:Core/Src/can_setup.c ****     }
  55:Core/Src/can_setup.c **** }
 228              		.loc 1 55 0
 229 005c DAE7     		b	.L13
 230              	.LVL27:
 231              	.L22:
  49:Core/Src/can_setup.c ****         }
 232              		.loc 1 49 0
 233 005e FFF7FEFF 		bl	Error_Handler
 234              	.LVL28:
 235 0062 EEE7     		b	.L17
 236              	.L24:
 237              		.align	2
 238              	.L23:
 239 0064 00680040 		.word	1073768448
 240 0068 006C0040 		.word	1073769472
 241 006c 00000000 		.word	canRx2
 242 0070 00000000 		.word	rxMsg2
 243 0074 00000000 		.word	hcan2
 244 0078 00000000 		.word	canRx3
 245 007c 00000000 		.word	rxMsg3
 246 0080 00000000 		.word	hcan3
 247 0084 F6000000 		.word	BMS+246
 248              		.cfi_endproc
 249              	.LFE132:
 251              		.section	.text.canSettings,"ax",%progbits
 252              		.align	1
 253              		.global	canSettings
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	canSettings:
 260              	.LFB133:
  56:Core/Src/can_setup.c **** 
  57:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  58:Core/Src/can_setup.c **** void canSettings(void)
  59:Core/Src/can_setup.c **** {
 261              		.loc 1 59 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI2:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
  60:Core/Src/can_setup.c **** 
  61:Core/Src/can_setup.c ****     txMsg.IDE = CAN_ID_STD;
 270              		.loc 1 61 0
 271 0002 574A     		ldr	r2, .L45
 272 0004 0023     		movs	r3, #0
 273 0006 9360     		str	r3, [r2, #8]
  62:Core/Src/can_setup.c ****     txMsg.RTR = CAN_RTR_DATA;
 274              		.loc 1 62 0
 275 0008 D360     		str	r3, [r2, #12]
  63:Core/Src/can_setup.c ****     txMsg.TransmitGlobalTime = DISABLE;
ARM GAS  /tmp/cc9ijkmN.s 			page 7


 276              		.loc 1 63 0
 277 000a 1375     		strb	r3, [r2, #20]
  64:Core/Src/can_setup.c **** 
  65:Core/Src/can_setup.c ****     txMsgExt.IDE = CAN_ID_EXT;
 278              		.loc 1 65 0
 279 000c 554A     		ldr	r2, .L45+4
 280 000e 0421     		movs	r1, #4
 281 0010 9160     		str	r1, [r2, #8]
  66:Core/Src/can_setup.c ****     txMsgExt.RTR = CAN_RTR_DATA;
 282              		.loc 1 66 0
 283 0012 D360     		str	r3, [r2, #12]
  67:Core/Src/can_setup.c ****     txMsgExt.TransmitGlobalTime = DISABLE;
 284              		.loc 1 67 0
 285 0014 1375     		strb	r3, [r2, #20]
  68:Core/Src/can_setup.c **** 
  69:Core/Src/can_setup.c ****     sf.FilterBank = 0; // CAN1 Filter bank starts at 0
 286              		.loc 1 69 0
 287 0016 5449     		ldr	r1, .L45+8
 288 0018 4B61     		str	r3, [r1, #20]
  70:Core/Src/can_setup.c ****     sf.FilterMode = CAN_FILTERMODE_IDMASK;
 289              		.loc 1 70 0
 290 001a 8B61     		str	r3, [r1, #24]
  71:Core/Src/can_setup.c ****     sf.FilterScale = CAN_FILTERSCALE_16BIT;
 291              		.loc 1 71 0
 292 001c CB61     		str	r3, [r1, #28]
  72:Core/Src/can_setup.c ****     sf.FilterIdLow = 0xffff;
 293              		.loc 1 72 0
 294 001e 4FF6FF72 		movw	r2, #65535
 295 0022 4A60     		str	r2, [r1, #4]
  73:Core/Src/can_setup.c ****     sf.FilterIdHigh = 0x1fff;
 296              		.loc 1 73 0
 297 0024 41F6FF72 		movw	r2, #8191
 298 0028 0A60     		str	r2, [r1]
  74:Core/Src/can_setup.c ****     sf.FilterMaskIdLow = 0x0000;
 299              		.loc 1 74 0
 300 002a CB60     		str	r3, [r1, #12]
  75:Core/Src/can_setup.c ****     sf.FilterMaskIdHigh = 0x0000;
 301              		.loc 1 75 0
 302 002c 8B60     		str	r3, [r1, #8]
  76:Core/Src/can_setup.c ****     sf.FilterFIFOAssignment = CAN_RX_FIFO0;
 303              		.loc 1 76 0
 304 002e 0B61     		str	r3, [r1, #16]
  77:Core/Src/can_setup.c ****     sf.SlaveStartFilterBank = 14;
 305              		.loc 1 77 0
 306 0030 0E23     		movs	r3, #14
 307 0032 4B62     		str	r3, [r1, #36]
  78:Core/Src/can_setup.c ****     sf.FilterActivation = ENABLE;
 308              		.loc 1 78 0
 309 0034 0123     		movs	r3, #1
 310 0036 0B62     		str	r3, [r1, #32]
  79:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf) != HAL_OK)
 311              		.loc 1 79 0
 312 0038 4C48     		ldr	r0, .L45+12
 313 003a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 314              	.LVL29:
 315 003e 0028     		cmp	r0, #0
 316 0040 72D1     		bne	.L36
ARM GAS  /tmp/cc9ijkmN.s 			page 8


 317              	.L26:
  80:Core/Src/can_setup.c ****     {
  81:Core/Src/can_setup.c ****         Error_Handler();
  82:Core/Src/can_setup.c ****     }
  83:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan1) != HAL_OK)
 318              		.loc 1 83 0
 319 0042 4A48     		ldr	r0, .L45+12
 320 0044 FFF7FEFF 		bl	HAL_CAN_Start
 321              	.LVL30:
 322 0048 0028     		cmp	r0, #0
 323 004a 70D1     		bne	.L37
 324              	.L27:
  84:Core/Src/can_setup.c ****     {
  85:Core/Src/can_setup.c ****         Error_Handler();
  86:Core/Src/can_setup.c ****     }
  87:Core/Src/can_setup.c **** 
  88:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 325              		.loc 1 88 0
 326 004c 0221     		movs	r1, #2
 327 004e 4748     		ldr	r0, .L45+12
 328 0050 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 329              	.LVL31:
 330 0054 0028     		cmp	r0, #0
 331 0056 6DD1     		bne	.L38
 332              	.L28:
  89:Core/Src/can_setup.c ****     {
  90:Core/Src/can_setup.c ****         Error_Handler();
  91:Core/Src/can_setup.c ****     }
  92:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 3, 0);
 333              		.loc 1 92 0
 334 0058 0022     		movs	r2, #0
 335 005a 0321     		movs	r1, #3
 336 005c 1320     		movs	r0, #19
 337 005e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 338              	.LVL32:
  93:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 339              		.loc 1 93 0
 340 0062 1320     		movs	r0, #19
 341 0064 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 342              	.LVL33:
  94:Core/Src/can_setup.c **** 
  95:Core/Src/can_setup.c ****     //hcan2
  96:Core/Src/can_setup.c ****     txMsg2.IDE = CAN_ID_STD;
 343              		.loc 1 96 0
 344 0068 414A     		ldr	r2, .L45+16
 345 006a 0023     		movs	r3, #0
 346 006c 9360     		str	r3, [r2, #8]
  97:Core/Src/can_setup.c ****     txMsg2.RTR = CAN_RTR_DATA;
 347              		.loc 1 97 0
 348 006e D360     		str	r3, [r2, #12]
  98:Core/Src/can_setup.c ****     txMsg2.TransmitGlobalTime = DISABLE;
 349              		.loc 1 98 0
 350 0070 1375     		strb	r3, [r2, #20]
  99:Core/Src/can_setup.c **** 
 100:Core/Src/can_setup.c ****     txMsgExt2.IDE = CAN_ID_EXT;
 351              		.loc 1 100 0
 352 0072 404A     		ldr	r2, .L45+20
ARM GAS  /tmp/cc9ijkmN.s 			page 9


 353 0074 0421     		movs	r1, #4
 354 0076 9160     		str	r1, [r2, #8]
 101:Core/Src/can_setup.c ****     txMsgExt2.RTR = CAN_RTR_DATA;
 355              		.loc 1 101 0
 356 0078 D360     		str	r3, [r2, #12]
 102:Core/Src/can_setup.c ****     txMsgExt2.TransmitGlobalTime = DISABLE;
 357              		.loc 1 102 0
 358 007a 1375     		strb	r3, [r2, #20]
 103:Core/Src/can_setup.c **** 
 104:Core/Src/can_setup.c ****     sf2.FilterBank = 14; // CAN2 Filter bank starts at 14
 359              		.loc 1 104 0
 360 007c 3E49     		ldr	r1, .L45+24
 361 007e 0E22     		movs	r2, #14
 362 0080 4A61     		str	r2, [r1, #20]
 105:Core/Src/can_setup.c ****     sf2.FilterMode = CAN_FILTERMODE_IDMASK;
 363              		.loc 1 105 0
 364 0082 8B61     		str	r3, [r1, #24]
 106:Core/Src/can_setup.c ****     sf2.FilterScale = CAN_FILTERSCALE_16BIT;
 365              		.loc 1 106 0
 366 0084 CB61     		str	r3, [r1, #28]
 107:Core/Src/can_setup.c ****     sf2.FilterIdLow = 0xffff;
 367              		.loc 1 107 0
 368 0086 4FF6FF70 		movw	r0, #65535
 369 008a 4860     		str	r0, [r1, #4]
 108:Core/Src/can_setup.c ****     sf2.FilterIdHigh = 0x1fff;
 370              		.loc 1 108 0
 371 008c 41F6FF70 		movw	r0, #8191
 372 0090 0860     		str	r0, [r1]
 109:Core/Src/can_setup.c ****     sf2.FilterMaskIdLow = 0x0000;
 373              		.loc 1 109 0
 374 0092 CB60     		str	r3, [r1, #12]
 110:Core/Src/can_setup.c ****     sf2.FilterMaskIdHigh = 0x0000;
 375              		.loc 1 110 0
 376 0094 8B60     		str	r3, [r1, #8]
 111:Core/Src/can_setup.c ****     sf2.FilterFIFOAssignment = CAN_RX_FIFO1;
 377              		.loc 1 111 0
 378 0096 0123     		movs	r3, #1
 379 0098 0B61     		str	r3, [r1, #16]
 112:Core/Src/can_setup.c ****     sf2.SlaveStartFilterBank = 14;
 380              		.loc 1 112 0
 381 009a 4A62     		str	r2, [r1, #36]
 113:Core/Src/can_setup.c ****     sf2.FilterActivation = ENABLE;
 382              		.loc 1 113 0
 383 009c 0B62     		str	r3, [r1, #32]
 114:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan2, &sf2) != HAL_OK)
 384              		.loc 1 114 0
 385 009e 3748     		ldr	r0, .L45+28
 386 00a0 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 387              	.LVL34:
 388 00a4 0028     		cmp	r0, #0
 389 00a6 48D1     		bne	.L39
 390              	.L29:
 115:Core/Src/can_setup.c ****     {
 116:Core/Src/can_setup.c ****         Error_Handler();
 117:Core/Src/can_setup.c ****     }
 118:Core/Src/can_setup.c **** 
 119:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan2) != HAL_OK)
ARM GAS  /tmp/cc9ijkmN.s 			page 10


 391              		.loc 1 119 0
 392 00a8 3448     		ldr	r0, .L45+28
 393 00aa FFF7FEFF 		bl	HAL_CAN_Start
 394              	.LVL35:
 395 00ae 0028     		cmp	r0, #0
 396 00b0 46D1     		bne	.L40
 397              	.L30:
 120:Core/Src/can_setup.c ****     {
 121:Core/Src/can_setup.c ****         Error_Handler();
 122:Core/Src/can_setup.c ****     }
 123:Core/Src/can_setup.c **** 
 124:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING) != HAL_OK)
 398              		.loc 1 124 0
 399 00b2 1021     		movs	r1, #16
 400 00b4 3148     		ldr	r0, .L45+28
 401 00b6 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 402              	.LVL36:
 403 00ba 0028     		cmp	r0, #0
 404 00bc 43D1     		bne	.L41
 405              	.L31:
 125:Core/Src/can_setup.c ****     {
 126:Core/Src/can_setup.c ****         Error_Handler();
 127:Core/Src/can_setup.c ****     }
 128:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN2_TX_IRQn, 3, 0);
 406              		.loc 1 128 0
 407 00be 0022     		movs	r2, #0
 408 00c0 0321     		movs	r1, #3
 409 00c2 3F20     		movs	r0, #63
 410 00c4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 411              	.LVL37:
 129:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 412              		.loc 1 129 0
 413 00c8 3F20     		movs	r0, #63
 414 00ca FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 415              	.LVL38:
 130:Core/Src/can_setup.c **** 
 131:Core/Src/can_setup.c ****     //hcan3
 132:Core/Src/can_setup.c ****     txMsg3.IDE = CAN_ID_STD;
 416              		.loc 1 132 0
 417 00ce 2C4A     		ldr	r2, .L45+32
 418 00d0 0023     		movs	r3, #0
 419 00d2 9360     		str	r3, [r2, #8]
 133:Core/Src/can_setup.c ****     txMsg3.RTR = CAN_RTR_DATA;
 420              		.loc 1 133 0
 421 00d4 D360     		str	r3, [r2, #12]
 134:Core/Src/can_setup.c ****     txMsg3.TransmitGlobalTime = DISABLE;
 422              		.loc 1 134 0
 423 00d6 1375     		strb	r3, [r2, #20]
 135:Core/Src/can_setup.c **** 
 136:Core/Src/can_setup.c ****     txMsgExt3.IDE = CAN_ID_EXT;
 424              		.loc 1 136 0
 425 00d8 2A4A     		ldr	r2, .L45+36
 426 00da 0421     		movs	r1, #4
 427 00dc 9160     		str	r1, [r2, #8]
 137:Core/Src/can_setup.c ****     txMsgExt3.RTR = CAN_RTR_DATA;
 428              		.loc 1 137 0
 429 00de D360     		str	r3, [r2, #12]
ARM GAS  /tmp/cc9ijkmN.s 			page 11


 138:Core/Src/can_setup.c ****     txMsgExt3.TransmitGlobalTime = DISABLE;
 430              		.loc 1 138 0
 431 00e0 1375     		strb	r3, [r2, #20]
 139:Core/Src/can_setup.c **** 
 140:Core/Src/can_setup.c ****     sf3.FilterBank = 1; // CAN1 Filter bank starts at 0
 432              		.loc 1 140 0
 433 00e2 2949     		ldr	r1, .L45+40
 434 00e4 0122     		movs	r2, #1
 435 00e6 4A61     		str	r2, [r1, #20]
 141:Core/Src/can_setup.c ****     sf3.FilterMode = CAN_FILTERMODE_IDMASK;
 436              		.loc 1 141 0
 437 00e8 8B61     		str	r3, [r1, #24]
 142:Core/Src/can_setup.c ****     sf3.FilterScale = CAN_FILTERSCALE_32BIT;
 438              		.loc 1 142 0
 439 00ea CA61     		str	r2, [r1, #28]
 143:Core/Src/can_setup.c ****     sf3.FilterIdLow = 0x0000;
 440              		.loc 1 143 0
 441 00ec 4B60     		str	r3, [r1, #4]
 144:Core/Src/can_setup.c ****     sf3.FilterIdHigh = 0x0000;
 442              		.loc 1 144 0
 443 00ee 0B60     		str	r3, [r1]
 145:Core/Src/can_setup.c ****     sf3.FilterMaskIdLow = 0x0000;
 444              		.loc 1 145 0
 445 00f0 CB60     		str	r3, [r1, #12]
 146:Core/Src/can_setup.c ****     sf3.FilterMaskIdHigh = 0x0000;
 446              		.loc 1 146 0
 447 00f2 8B60     		str	r3, [r1, #8]
 147:Core/Src/can_setup.c ****     sf3.FilterFIFOAssignment = CAN_RX_FIFO0;
 448              		.loc 1 147 0
 449 00f4 0B61     		str	r3, [r1, #16]
 148:Core/Src/can_setup.c ****     sf3.SlaveStartFilterBank = 14;
 450              		.loc 1 148 0
 451 00f6 0E23     		movs	r3, #14
 452 00f8 4B62     		str	r3, [r1, #36]
 149:Core/Src/can_setup.c ****     sf3.FilterActivation = ENABLE;
 453              		.loc 1 149 0
 454 00fa 0A62     		str	r2, [r1, #32]
 150:Core/Src/can_setup.c **** 
 151:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan3, &sf3) != HAL_OK)
 455              		.loc 1 151 0
 456 00fc 2348     		ldr	r0, .L45+44
 457 00fe FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 458              	.LVL39:
 459 0102 18BB     		cbnz	r0, .L42
 460              	.L32:
 152:Core/Src/can_setup.c ****     {
 153:Core/Src/can_setup.c ****         Error_Handler();
 154:Core/Src/can_setup.c ****     }
 155:Core/Src/can_setup.c **** 
 156:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan3) != HAL_OK)
 461              		.loc 1 156 0
 462 0104 2148     		ldr	r0, .L45+44
 463 0106 FFF7FEFF 		bl	HAL_CAN_Start
 464              	.LVL40:
 465 010a 10BB     		cbnz	r0, .L43
 466              	.L33:
 157:Core/Src/can_setup.c ****     {
ARM GAS  /tmp/cc9ijkmN.s 			page 12


 158:Core/Src/can_setup.c ****         Error_Handler();
 159:Core/Src/can_setup.c ****     }
 160:Core/Src/can_setup.c **** 
 161:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan3, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 467              		.loc 1 161 0
 468 010c 0221     		movs	r1, #2
 469 010e 1F48     		ldr	r0, .L45+44
 470 0110 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 471              	.LVL41:
 472 0114 00BB     		cbnz	r0, .L44
 473              	.L34:
 162:Core/Src/can_setup.c ****     {
 163:Core/Src/can_setup.c ****         Error_Handler();
 164:Core/Src/can_setup.c ****     }
 165:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN3_TX_IRQn, 3, 0);
 474              		.loc 1 165 0
 475 0116 0022     		movs	r2, #0
 476 0118 0321     		movs	r1, #3
 477 011a 4A20     		movs	r0, #74
 478 011c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 479              	.LVL42:
 166:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN3_TX_IRQn);
 480              		.loc 1 166 0
 481 0120 4A20     		movs	r0, #74
 482 0122 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 483              	.LVL43:
 484 0126 08BD     		pop	{r3, pc}
 485              	.L36:
  81:Core/Src/can_setup.c ****     }
 486              		.loc 1 81 0
 487 0128 FFF7FEFF 		bl	Error_Handler
 488              	.LVL44:
 489 012c 89E7     		b	.L26
 490              	.L37:
  85:Core/Src/can_setup.c ****     }
 491              		.loc 1 85 0
 492 012e FFF7FEFF 		bl	Error_Handler
 493              	.LVL45:
 494 0132 8BE7     		b	.L27
 495              	.L38:
  90:Core/Src/can_setup.c ****     }
 496              		.loc 1 90 0
 497 0134 FFF7FEFF 		bl	Error_Handler
 498              	.LVL46:
 499 0138 8EE7     		b	.L28
 500              	.L39:
 116:Core/Src/can_setup.c ****     }
 501              		.loc 1 116 0
 502 013a FFF7FEFF 		bl	Error_Handler
 503              	.LVL47:
 504 013e B3E7     		b	.L29
 505              	.L40:
 121:Core/Src/can_setup.c ****     }
 506              		.loc 1 121 0
 507 0140 FFF7FEFF 		bl	Error_Handler
 508              	.LVL48:
 509 0144 B5E7     		b	.L30
ARM GAS  /tmp/cc9ijkmN.s 			page 13


 510              	.L41:
 126:Core/Src/can_setup.c ****     }
 511              		.loc 1 126 0
 512 0146 FFF7FEFF 		bl	Error_Handler
 513              	.LVL49:
 514 014a B8E7     		b	.L31
 515              	.L42:
 153:Core/Src/can_setup.c ****     }
 516              		.loc 1 153 0
 517 014c FFF7FEFF 		bl	Error_Handler
 518              	.LVL50:
 519 0150 D8E7     		b	.L32
 520              	.L43:
 158:Core/Src/can_setup.c ****     }
 521              		.loc 1 158 0
 522 0152 FFF7FEFF 		bl	Error_Handler
 523              	.LVL51:
 524 0156 D9E7     		b	.L33
 525              	.L44:
 163:Core/Src/can_setup.c ****     }
 526              		.loc 1 163 0
 527 0158 FFF7FEFF 		bl	Error_Handler
 528              	.LVL52:
 529 015c DBE7     		b	.L34
 530              	.L46:
 531 015e 00BF     		.align	2
 532              	.L45:
 533 0160 00000000 		.word	txMsg
 534 0164 00000000 		.word	txMsgExt
 535 0168 00000000 		.word	sf
 536 016c 00000000 		.word	hcan1
 537 0170 00000000 		.word	txMsg2
 538 0174 00000000 		.word	txMsgExt2
 539 0178 00000000 		.word	sf2
 540 017c 00000000 		.word	hcan2
 541 0180 00000000 		.word	txMsg3
 542 0184 00000000 		.word	txMsgExt3
 543 0188 00000000 		.word	sf3
 544 018c 00000000 		.word	hcan3
 545              		.cfi_endproc
 546              	.LFE133:
 548              		.section	.text.c1tx,"ax",%progbits
 549              		.align	1
 550              		.global	c1tx
 551              		.syntax unified
 552              		.thumb
 553              		.thumb_func
 554              		.fpu fpv4-sp-d16
 556              	c1tx:
 557              	.LFB134:
 167:Core/Src/can_setup.c **** }
 168:Core/Src/can_setup.c **** 
 169:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 170:Core/Src/can_setup.c **** void c1tx(CAN_TxHeaderTypeDef *txMsg, uint8_t *canTx)
 171:Core/Src/can_setup.c **** {
 558              		.loc 1 171 0
 559              		.cfi_startproc
ARM GAS  /tmp/cc9ijkmN.s 			page 14


 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              	.LVL53:
 563 0000 08B5     		push	{r3, lr}
 564              	.LCFI3:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 3, -8
 567              		.cfi_offset 14, -4
 172:Core/Src/can_setup.c **** 
 173:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsg, canTx, &canMailbox);
 568              		.loc 1 173 0
 569 0002 0A4B     		ldr	r3, .L51
 570 0004 0A46     		mov	r2, r1
 571 0006 0146     		mov	r1, r0
 572              	.LVL54:
 573 0008 0948     		ldr	r0, .L51+4
 574              	.LVL55:
 575 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 576              	.LVL56:
 174:Core/Src/can_setup.c ****     txCycle++;
 577              		.loc 1 174 0
 578 000e 094A     		ldr	r2, .L51+8
 579 0010 1368     		ldr	r3, [r2]
 580 0012 0133     		adds	r3, r3, #1
 581 0014 1360     		str	r3, [r2]
 175:Core/Src/can_setup.c ****     if (txCycle >= 3)
 582              		.loc 1 175 0
 583 0016 022B     		cmp	r3, #2
 584 0018 00DC     		bgt	.L50
 585              	.L47:
 586 001a 08BD     		pop	{r3, pc}
 587              	.L50:
 176:Core/Src/can_setup.c ****     {
 177:Core/Src/can_setup.c ****         HAL_Delay(1);
 588              		.loc 1 177 0
 589 001c 0120     		movs	r0, #1
 590 001e FFF7FEFF 		bl	HAL_Delay
 591              	.LVL57:
 178:Core/Src/can_setup.c ****         txCycle = 0;
 592              		.loc 1 178 0
 593 0022 0022     		movs	r2, #0
 594 0024 034B     		ldr	r3, .L51+8
 595 0026 1A60     		str	r2, [r3]
 179:Core/Src/can_setup.c ****     }
 180:Core/Src/can_setup.c **** }
 596              		.loc 1 180 0
 597 0028 F7E7     		b	.L47
 598              	.L52:
 599 002a 00BF     		.align	2
 600              	.L51:
 601 002c 00000000 		.word	canMailbox
 602 0030 00000000 		.word	hcan1
 603 0034 00000000 		.word	txCycle
 604              		.cfi_endproc
 605              	.LFE134:
 607              		.section	.text.can1tx,"ax",%progbits
 608              		.align	1
ARM GAS  /tmp/cc9ijkmN.s 			page 15


 609              		.global	can1tx
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 613              		.fpu fpv4-sp-d16
 615              	can1tx:
 616              	.LFB135:
 181:Core/Src/can_setup.c **** 
 182:Core/Src/can_setup.c **** void can1tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx)
 183:Core/Src/can_setup.c **** {
 617              		.loc 1 183 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL58:
 622 0000 10B5     		push	{r4, lr}
 623              	.LCFI4:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
 184:Core/Src/can_setup.c ****     txMsg.StdId = msgId;
 627              		.loc 1 184 0
 628 0002 0A4C     		ldr	r4, .L57
 629 0004 2060     		str	r0, [r4]
 185:Core/Src/can_setup.c ****     txMsg.DLC = DLC;
 630              		.loc 1 185 0
 631 0006 2161     		str	r1, [r4, #16]
 186:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, &txMsg, canTx, &canMailbox);
 632              		.loc 1 186 0
 633 0008 094B     		ldr	r3, .L57+4
 634 000a 2146     		mov	r1, r4
 635              	.LVL59:
 636 000c 0948     		ldr	r0, .L57+8
 637              	.LVL60:
 638 000e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 639              	.LVL61:
 187:Core/Src/can_setup.c ****     if (txCycle >= 3)
 640              		.loc 1 187 0
 641 0012 094B     		ldr	r3, .L57+12
 642 0014 1B68     		ldr	r3, [r3]
 643 0016 022B     		cmp	r3, #2
 644 0018 00DC     		bgt	.L56
 645              	.L53:
 646 001a 10BD     		pop	{r4, pc}
 647              	.L56:
 188:Core/Src/can_setup.c ****     {
 189:Core/Src/can_setup.c ****         HAL_Delay(1);
 648              		.loc 1 189 0
 649 001c 0120     		movs	r0, #1
 650 001e FFF7FEFF 		bl	HAL_Delay
 651              	.LVL62:
 190:Core/Src/can_setup.c ****         txCycle = 0;
 652              		.loc 1 190 0
 653 0022 0022     		movs	r2, #0
 654 0024 044B     		ldr	r3, .L57+12
 655 0026 1A60     		str	r2, [r3]
 191:Core/Src/can_setup.c ****     }
ARM GAS  /tmp/cc9ijkmN.s 			page 16


 192:Core/Src/can_setup.c **** }
 656              		.loc 1 192 0
 657 0028 F7E7     		b	.L53
 658              	.L58:
 659 002a 00BF     		.align	2
 660              	.L57:
 661 002c 00000000 		.word	txMsg
 662 0030 00000000 		.word	canMailbox
 663 0034 00000000 		.word	hcan1
 664 0038 00000000 		.word	txCycle
 665              		.cfi_endproc
 666              	.LFE135:
 668              		.section	.text.c2tx,"ax",%progbits
 669              		.align	1
 670              		.global	c2tx
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 674              		.fpu fpv4-sp-d16
 676              	c2tx:
 677              	.LFB136:
 193:Core/Src/can_setup.c **** 
 194:Core/Src/can_setup.c **** void c2tx(CAN_TxHeaderTypeDef *txMsg2, uint8_t *canTx2)
 195:Core/Src/can_setup.c **** {
 678              		.loc 1 195 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              	.LVL63:
 683 0000 08B5     		push	{r3, lr}
 684              	.LCFI5:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 3, -8
 687              		.cfi_offset 14, -4
 196:Core/Src/can_setup.c **** 
 197:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2, canTx2, &canMailbox2);
 688              		.loc 1 197 0
 689 0002 0A4B     		ldr	r3, .L63
 690 0004 0A46     		mov	r2, r1
 691 0006 0146     		mov	r1, r0
 692              	.LVL64:
 693 0008 0948     		ldr	r0, .L63+4
 694              	.LVL65:
 695 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 696              	.LVL66:
 198:Core/Src/can_setup.c ****     txCycle2++;
 697              		.loc 1 198 0
 698 000e 094A     		ldr	r2, .L63+8
 699 0010 1368     		ldr	r3, [r2]
 700 0012 0133     		adds	r3, r3, #1
 701 0014 1360     		str	r3, [r2]
 199:Core/Src/can_setup.c ****     if (txCycle2 >= 3)
 702              		.loc 1 199 0
 703 0016 022B     		cmp	r3, #2
 704 0018 00DC     		bgt	.L62
 705              	.L59:
 706 001a 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cc9ijkmN.s 			page 17


 707              	.L62:
 200:Core/Src/can_setup.c ****     {
 201:Core/Src/can_setup.c ****         HAL_Delay(1);
 708              		.loc 1 201 0
 709 001c 0120     		movs	r0, #1
 710 001e FFF7FEFF 		bl	HAL_Delay
 711              	.LVL67:
 202:Core/Src/can_setup.c ****         txCycle2 = 0;
 712              		.loc 1 202 0
 713 0022 0022     		movs	r2, #0
 714 0024 034B     		ldr	r3, .L63+8
 715 0026 1A60     		str	r2, [r3]
 203:Core/Src/can_setup.c ****     }
 204:Core/Src/can_setup.c **** }
 716              		.loc 1 204 0
 717 0028 F7E7     		b	.L59
 718              	.L64:
 719 002a 00BF     		.align	2
 720              	.L63:
 721 002c 00000000 		.word	canMailbox2
 722 0030 00000000 		.word	hcan2
 723 0034 00000000 		.word	txCycle2
 724              		.cfi_endproc
 725              	.LFE136:
 727              		.section	.text.can2tx,"ax",%progbits
 728              		.align	1
 729              		.global	can2tx
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu fpv4-sp-d16
 735              	can2tx:
 736              	.LFB137:
 205:Core/Src/can_setup.c **** 
 206:Core/Src/can_setup.c **** void can2tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx2)
 207:Core/Src/can_setup.c **** {
 737              		.loc 1 207 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              	.LVL68:
 742 0000 10B5     		push	{r4, lr}
 743              	.LCFI6:
 744              		.cfi_def_cfa_offset 8
 745              		.cfi_offset 4, -8
 746              		.cfi_offset 14, -4
 208:Core/Src/can_setup.c ****     txMsg2.StdId = msgId;
 747              		.loc 1 208 0
 748 0002 0A4C     		ldr	r4, .L69
 749 0004 2060     		str	r0, [r4]
 209:Core/Src/can_setup.c ****     txMsg2.DLC = DLC;
 750              		.loc 1 209 0
 751 0006 2161     		str	r1, [r4, #16]
 210:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, &txMsg2, canTx2, &canMailbox);
 752              		.loc 1 210 0
 753 0008 094B     		ldr	r3, .L69+4
 754 000a 2146     		mov	r1, r4
ARM GAS  /tmp/cc9ijkmN.s 			page 18


 755              	.LVL69:
 756 000c 0948     		ldr	r0, .L69+8
 757              	.LVL70:
 758 000e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 759              	.LVL71:
 211:Core/Src/can_setup.c ****     if (txCycle2 >= 3)
 760              		.loc 1 211 0
 761 0012 094B     		ldr	r3, .L69+12
 762 0014 1B68     		ldr	r3, [r3]
 763 0016 022B     		cmp	r3, #2
 764 0018 00DC     		bgt	.L68
 765              	.L65:
 766 001a 10BD     		pop	{r4, pc}
 767              	.L68:
 212:Core/Src/can_setup.c ****     {
 213:Core/Src/can_setup.c ****         HAL_Delay(1);
 768              		.loc 1 213 0
 769 001c 0120     		movs	r0, #1
 770 001e FFF7FEFF 		bl	HAL_Delay
 771              	.LVL72:
 214:Core/Src/can_setup.c ****         txCycle2 = 0;
 772              		.loc 1 214 0
 773 0022 0022     		movs	r2, #0
 774 0024 044B     		ldr	r3, .L69+12
 775 0026 1A60     		str	r2, [r3]
 215:Core/Src/can_setup.c ****     }
 216:Core/Src/can_setup.c **** }
 776              		.loc 1 216 0
 777 0028 F7E7     		b	.L65
 778              	.L70:
 779 002a 00BF     		.align	2
 780              	.L69:
 781 002c 00000000 		.word	txMsg2
 782 0030 00000000 		.word	canMailbox
 783 0034 00000000 		.word	hcan2
 784 0038 00000000 		.word	txCycle2
 785              		.cfi_endproc
 786              	.LFE137:
 788              		.section	.text.c3tx,"ax",%progbits
 789              		.align	1
 790              		.global	c3tx
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv4-sp-d16
 796              	c3tx:
 797              	.LFB138:
 217:Core/Src/can_setup.c **** 
 218:Core/Src/can_setup.c **** void c3tx(CAN_TxHeaderTypeDef *txMsg3, uint8_t *canTx3)
 219:Core/Src/can_setup.c **** {
 798              		.loc 1 219 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL73:
 803 0000 08B5     		push	{r3, lr}
 804              	.LCFI7:
ARM GAS  /tmp/cc9ijkmN.s 			page 19


 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 3, -8
 807              		.cfi_offset 14, -4
 220:Core/Src/can_setup.c **** 
 221:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan3, txMsg3, canTx3, &canMailbox2);
 808              		.loc 1 221 0
 809 0002 0B4B     		ldr	r3, .L75
 810 0004 0A46     		mov	r2, r1
 811 0006 0146     		mov	r1, r0
 812              	.LVL74:
 813 0008 0A48     		ldr	r0, .L75+4
 814              	.LVL75:
 815 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 816              	.LVL76:
 222:Core/Src/can_setup.c ****     txCycle2++;
 817              		.loc 1 222 0
 818 000e 0A4A     		ldr	r2, .L75+8
 819 0010 1368     		ldr	r3, [r2]
 820 0012 0133     		adds	r3, r3, #1
 821 0014 1360     		str	r3, [r2]
 223:Core/Src/can_setup.c ****     if (txCycle3 >= 3)
 822              		.loc 1 223 0
 823 0016 094B     		ldr	r3, .L75+12
 824 0018 1B68     		ldr	r3, [r3]
 825 001a 022B     		cmp	r3, #2
 826 001c 00DC     		bgt	.L74
 827              	.L71:
 828 001e 08BD     		pop	{r3, pc}
 829              	.L74:
 224:Core/Src/can_setup.c ****     {
 225:Core/Src/can_setup.c ****         HAL_Delay(1);
 830              		.loc 1 225 0
 831 0020 0120     		movs	r0, #1
 832 0022 FFF7FEFF 		bl	HAL_Delay
 833              	.LVL77:
 226:Core/Src/can_setup.c ****         txCycle3 = 0;
 834              		.loc 1 226 0
 835 0026 0022     		movs	r2, #0
 836 0028 044B     		ldr	r3, .L75+12
 837 002a 1A60     		str	r2, [r3]
 227:Core/Src/can_setup.c ****     }
 228:Core/Src/can_setup.c **** }
 838              		.loc 1 228 0
 839 002c F7E7     		b	.L71
 840              	.L76:
 841 002e 00BF     		.align	2
 842              	.L75:
 843 0030 00000000 		.word	canMailbox2
 844 0034 00000000 		.word	hcan3
 845 0038 00000000 		.word	txCycle2
 846 003c 00000000 		.word	txCycle3
 847              		.cfi_endproc
 848              	.LFE138:
 850              		.section	.text.can3tx,"ax",%progbits
 851              		.align	1
 852              		.global	can3tx
 853              		.syntax unified
ARM GAS  /tmp/cc9ijkmN.s 			page 20


 854              		.thumb
 855              		.thumb_func
 856              		.fpu fpv4-sp-d16
 858              	can3tx:
 859              	.LFB139:
 229:Core/Src/can_setup.c **** 
 230:Core/Src/can_setup.c **** void can3tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx2)
 231:Core/Src/can_setup.c **** {
 860              		.loc 1 231 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              	.LVL78:
 865 0000 10B5     		push	{r4, lr}
 866              	.LCFI8:
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 4, -8
 869              		.cfi_offset 14, -4
 232:Core/Src/can_setup.c ****     txMsg3.StdId = msgId;
 870              		.loc 1 232 0
 871 0002 0A4C     		ldr	r4, .L81
 872 0004 2060     		str	r0, [r4]
 233:Core/Src/can_setup.c ****     txMsg3.DLC = DLC;
 873              		.loc 1 233 0
 874 0006 2161     		str	r1, [r4, #16]
 234:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan3, &txMsg3, canTx3, &canMailbox);
 875              		.loc 1 234 0
 876 0008 094B     		ldr	r3, .L81+4
 877 000a 0A4A     		ldr	r2, .L81+8
 878              	.LVL79:
 879 000c 2146     		mov	r1, r4
 880              	.LVL80:
 881 000e 0A48     		ldr	r0, .L81+12
 882              	.LVL81:
 883 0010 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 884              	.LVL82:
 235:Core/Src/can_setup.c ****     if (txCycle3 >= 3)
 885              		.loc 1 235 0
 886 0014 094B     		ldr	r3, .L81+16
 887 0016 1B68     		ldr	r3, [r3]
 888 0018 022B     		cmp	r3, #2
 889 001a 00DC     		bgt	.L80
 890              	.L77:
 891 001c 10BD     		pop	{r4, pc}
 892              	.L80:
 236:Core/Src/can_setup.c ****     {
 237:Core/Src/can_setup.c ****         HAL_Delay(1);
 893              		.loc 1 237 0
 894 001e 0120     		movs	r0, #1
 895 0020 FFF7FEFF 		bl	HAL_Delay
 896              	.LVL83:
 238:Core/Src/can_setup.c ****         txCycle3 = 0;
 897              		.loc 1 238 0
 898 0024 0022     		movs	r2, #0
 899 0026 054B     		ldr	r3, .L81+16
 900 0028 1A60     		str	r2, [r3]
 239:Core/Src/can_setup.c ****     }
ARM GAS  /tmp/cc9ijkmN.s 			page 21


 240:Core/Src/can_setup.c **** }
 901              		.loc 1 240 0
 902 002a F7E7     		b	.L77
 903              	.L82:
 904              		.align	2
 905              	.L81:
 906 002c 00000000 		.word	txMsg3
 907 0030 00000000 		.word	canMailbox
 908 0034 00000000 		.word	canTx3
 909 0038 00000000 		.word	hcan3
 910 003c 00000000 		.word	txCycle3
 911              		.cfi_endproc
 912              	.LFE139:
 914              		.section	.text.c1txExt,"ax",%progbits
 915              		.align	1
 916              		.global	c1txExt
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu fpv4-sp-d16
 922              	c1txExt:
 923              	.LFB140:
 241:Core/Src/can_setup.c **** 
 242:Core/Src/can_setup.c **** void c1txExt(CAN_TxHeaderTypeDef *txMsgExt, uint8_t *canTx)
 243:Core/Src/can_setup.c **** {
 924              		.loc 1 243 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              	.LVL84:
 929 0000 08B5     		push	{r3, lr}
 930              	.LCFI9:
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 3, -8
 933              		.cfi_offset 14, -4
 244:Core/Src/can_setup.c **** 
 245:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsgExt, canTx, &canMailbox);
 934              		.loc 1 245 0
 935 0002 0A4B     		ldr	r3, .L87
 936 0004 0A46     		mov	r2, r1
 937 0006 0146     		mov	r1, r0
 938              	.LVL85:
 939 0008 0948     		ldr	r0, .L87+4
 940              	.LVL86:
 941 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 942              	.LVL87:
 246:Core/Src/can_setup.c ****     txCycle++;
 943              		.loc 1 246 0
 944 000e 094A     		ldr	r2, .L87+8
 945 0010 1368     		ldr	r3, [r2]
 946 0012 0133     		adds	r3, r3, #1
 947 0014 1360     		str	r3, [r2]
 247:Core/Src/can_setup.c ****     if (txCycle >= 3)
 948              		.loc 1 247 0
 949 0016 022B     		cmp	r3, #2
 950 0018 00DC     		bgt	.L86
 951              	.L83:
ARM GAS  /tmp/cc9ijkmN.s 			page 22


 952 001a 08BD     		pop	{r3, pc}
 953              	.L86:
 248:Core/Src/can_setup.c ****     {
 249:Core/Src/can_setup.c ****         HAL_Delay(1);
 954              		.loc 1 249 0
 955 001c 0120     		movs	r0, #1
 956 001e FFF7FEFF 		bl	HAL_Delay
 957              	.LVL88:
 250:Core/Src/can_setup.c ****         txCycle = 0;
 958              		.loc 1 250 0
 959 0022 0022     		movs	r2, #0
 960 0024 034B     		ldr	r3, .L87+8
 961 0026 1A60     		str	r2, [r3]
 251:Core/Src/can_setup.c ****     }
 252:Core/Src/can_setup.c **** }
 962              		.loc 1 252 0
 963 0028 F7E7     		b	.L83
 964              	.L88:
 965 002a 00BF     		.align	2
 966              	.L87:
 967 002c 00000000 		.word	canMailbox
 968 0030 00000000 		.word	hcan1
 969 0034 00000000 		.word	txCycle
 970              		.cfi_endproc
 971              	.LFE140:
 973              		.section	.text.c2txExt,"ax",%progbits
 974              		.align	1
 975              		.global	c2txExt
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu fpv4-sp-d16
 981              	c2txExt:
 982              	.LFB141:
 253:Core/Src/can_setup.c **** 
 254:Core/Src/can_setup.c **** void c2txExt(CAN_TxHeaderTypeDef *txMsg2Ext, uint8_t *canTx2)
 255:Core/Src/can_setup.c **** {
 983              		.loc 1 255 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL89:
 988 0000 08B5     		push	{r3, lr}
 989              	.LCFI10:
 990              		.cfi_def_cfa_offset 8
 991              		.cfi_offset 3, -8
 992              		.cfi_offset 14, -4
 256:Core/Src/can_setup.c **** 
 257:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2Ext, canTx2, &canMailbox2);
 993              		.loc 1 257 0
 994 0002 0A4B     		ldr	r3, .L93
 995 0004 0A46     		mov	r2, r1
 996 0006 0146     		mov	r1, r0
 997              	.LVL90:
 998 0008 0948     		ldr	r0, .L93+4
 999              	.LVL91:
 1000 000a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
ARM GAS  /tmp/cc9ijkmN.s 			page 23


 1001              	.LVL92:
 258:Core/Src/can_setup.c ****     txCycle2++;
 1002              		.loc 1 258 0
 1003 000e 094A     		ldr	r2, .L93+8
 1004 0010 1368     		ldr	r3, [r2]
 1005 0012 0133     		adds	r3, r3, #1
 1006 0014 1360     		str	r3, [r2]
 259:Core/Src/can_setup.c ****     if (txCycle2 >= 3)
 1007              		.loc 1 259 0
 1008 0016 022B     		cmp	r3, #2
 1009 0018 00DC     		bgt	.L92
 1010              	.L89:
 1011 001a 08BD     		pop	{r3, pc}
 1012              	.L92:
 260:Core/Src/can_setup.c ****     {
 261:Core/Src/can_setup.c ****         HAL_Delay(1);
 1013              		.loc 1 261 0
 1014 001c 0120     		movs	r0, #1
 1015 001e FFF7FEFF 		bl	HAL_Delay
 1016              	.LVL93:
 262:Core/Src/can_setup.c ****         txCycle2 = 0;
 1017              		.loc 1 262 0
 1018 0022 0022     		movs	r2, #0
 1019 0024 034B     		ldr	r3, .L93+8
 1020 0026 1A60     		str	r2, [r3]
 263:Core/Src/can_setup.c ****     }
 264:Core/Src/can_setup.c **** }
 1021              		.loc 1 264 0
 1022 0028 F7E7     		b	.L89
 1023              	.L94:
 1024 002a 00BF     		.align	2
 1025              	.L93:
 1026 002c 00000000 		.word	canMailbox2
 1027 0030 00000000 		.word	hcan2
 1028 0034 00000000 		.word	txCycle2
 1029              		.cfi_endproc
 1030              	.LFE141:
 1032              		.comm	txCycle3,4,4
 1033              		.comm	txCycle2,4,4
 1034              		.comm	txCycle,4,4
 1035              		.comm	canTx3,8,4
 1036              		.comm	canTx2,8,4
 1037              		.comm	canTx,8,4
 1038              		.comm	canMailbox2,4,4
 1039              		.comm	canMailbox,4,4
 1040              		.comm	canRx3,8,4
 1041              		.comm	canRx2,8,4
 1042              		.comm	canRx,8,4
 1043              		.comm	txMsgExt3,24,4
 1044              		.comm	txMsg3,24,4
 1045              		.comm	rxMsg3,28,4
 1046              		.comm	txMsgExt2,24,4
 1047              		.comm	txMsg2,24,4
 1048              		.comm	rxMsg2,28,4
 1049              		.comm	txMsgExt,24,4
 1050              		.comm	txMsg,24,4
 1051              		.comm	rxMsg,28,4
ARM GAS  /tmp/cc9ijkmN.s 			page 24


 1052              		.comm	sf5,40,4
 1053              		.comm	sf4,40,4
 1054              		.comm	sf3,40,4
 1055              		.comm	sf2,40,4
 1056              		.comm	sf,40,4
 1057              		.comm	hcan3,40,4
 1058              		.comm	hcan2,40,4
 1059              		.comm	hcan1,40,4
 1060              		.comm	charged,1,1
 1061              		.comm	vechicleState,1,1
 1062              		.comm	BMS,492,4
 1063              		.text
 1064              	.Letext0:
 1065              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1066              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1067              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1068              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1069              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 1070              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1071              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1072              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1073              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1074              		.file 11 "/usr/include/newlib/sys/lock.h"
 1075              		.file 12 "/usr/include/newlib/sys/_types.h"
 1076              		.file 13 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1077              		.file 14 "/usr/include/newlib/sys/reent.h"
 1078              		.file 15 "Core/Inc/bms.h"
 1079              		.file 16 "Core/Inc/can_setup.h"
 1080              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1081              		.file 18 "Core/Inc/main.h"
ARM GAS  /tmp/cc9ijkmN.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can_setup.c
     /tmp/cc9ijkmN.s:18     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/cc9ijkmN.s:25     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/cc9ijkmN.s:128    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000078 $d
                            *COM*:0000000000000008 canRx
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 hcan1
                            *COM*:00000000000001ec BMS
                            *COM*:0000000000000008 canRx3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000028 hcan3
     /tmp/cc9ijkmN.s:142    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/cc9ijkmN.s:149    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/cc9ijkmN.s:239    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000064 $d
                            *COM*:0000000000000008 canRx2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000028 hcan2
     /tmp/cc9ijkmN.s:252    .text.canSettings:0000000000000000 $t
     /tmp/cc9ijkmN.s:259    .text.canSettings:0000000000000000 canSettings
     /tmp/cc9ijkmN.s:533    .text.canSettings:0000000000000160 $d
                            *COM*:0000000000000018 txMsg
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000018 txMsg2
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000018 txMsg3
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000028 sf3
     /tmp/cc9ijkmN.s:549    .text.c1tx:0000000000000000 $t
     /tmp/cc9ijkmN.s:556    .text.c1tx:0000000000000000 c1tx
     /tmp/cc9ijkmN.s:601    .text.c1tx:000000000000002c $d
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000004 txCycle
     /tmp/cc9ijkmN.s:608    .text.can1tx:0000000000000000 $t
     /tmp/cc9ijkmN.s:615    .text.can1tx:0000000000000000 can1tx
     /tmp/cc9ijkmN.s:661    .text.can1tx:000000000000002c $d
     /tmp/cc9ijkmN.s:669    .text.c2tx:0000000000000000 $t
     /tmp/cc9ijkmN.s:676    .text.c2tx:0000000000000000 c2tx
     /tmp/cc9ijkmN.s:721    .text.c2tx:000000000000002c $d
                            *COM*:0000000000000004 canMailbox2
                            *COM*:0000000000000004 txCycle2
     /tmp/cc9ijkmN.s:728    .text.can2tx:0000000000000000 $t
     /tmp/cc9ijkmN.s:735    .text.can2tx:0000000000000000 can2tx
     /tmp/cc9ijkmN.s:781    .text.can2tx:000000000000002c $d
     /tmp/cc9ijkmN.s:789    .text.c3tx:0000000000000000 $t
     /tmp/cc9ijkmN.s:796    .text.c3tx:0000000000000000 c3tx
     /tmp/cc9ijkmN.s:843    .text.c3tx:0000000000000030 $d
                            *COM*:0000000000000004 txCycle3
     /tmp/cc9ijkmN.s:851    .text.can3tx:0000000000000000 $t
     /tmp/cc9ijkmN.s:858    .text.can3tx:0000000000000000 can3tx
     /tmp/cc9ijkmN.s:906    .text.can3tx:000000000000002c $d
                            *COM*:0000000000000008 canTx3
     /tmp/cc9ijkmN.s:915    .text.c1txExt:0000000000000000 $t
     /tmp/cc9ijkmN.s:922    .text.c1txExt:0000000000000000 c1txExt
     /tmp/cc9ijkmN.s:967    .text.c1txExt:000000000000002c $d
ARM GAS  /tmp/cc9ijkmN.s 			page 26


     /tmp/cc9ijkmN.s:974    .text.c2txExt:0000000000000000 $t
     /tmp/cc9ijkmN.s:981    .text.c2txExt:0000000000000000 c2txExt
     /tmp/cc9ijkmN.s:1026   .text.c2txExt:000000000000002c $d
                            *COM*:0000000000000008 canTx2
                            *COM*:0000000000000008 canTx
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000001 charged
                            *COM*:0000000000000001 vechicleState
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_CAN_GetRxMessage
decodeVolt
decodeTemp
Error_Handler
vehicleComms
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_AddTxMessage
HAL_Delay
