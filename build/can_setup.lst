ARM GAS  /tmp/ccPYXuUB.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"can_setup.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_CAN_RxFifo0MsgPendingCallback
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_CAN_RxFifo0MsgPendingCallback:
  26              	.LFB131:
  27              		.file 1 "Core/Src/can_setup.c"
   1:Core/Src/can_setup.c **** #include <can_setup.h>
   2:Core/Src/can_setup.c **** #include <cmsis_os2.h>
   3:Core/Src/can_setup.c **** 
   4:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
   5:Core/Src/can_setup.c **** 
   6:Core/Src/can_setup.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
   7:Core/Src/can_setup.c **** {
  28              		.loc 1 7 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 0446     		mov	r4, r0
   8:Core/Src/can_setup.c ****     if (hcan->Instance == CAN1)
  42              		.loc 1 8 0
  43 0004 0268     		ldr	r2, [r0]
  44 0006 1C4B     		ldr	r3, .L11
  45 0008 9A42     		cmp	r2, r3
  46 000a 04D0     		beq	.L7
  47              	.LVL1:
  48              	.L2:
   9:Core/Src/can_setup.c ****     {
  10:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &rxMsg, canRx) != HAL_OK)
ARM GAS  /tmp/ccPYXuUB.s 			page 2


  11:Core/Src/can_setup.c ****         {
  12:Core/Src/can_setup.c ****             Error_Handler();
  13:Core/Src/can_setup.c ****         }
  14:Core/Src/can_setup.c ****         // do stuff
  15:Core/Src/can_setup.c ****         decodeVolt(&BMS[0], &rxMsg, canRx);
  16:Core/Src/can_setup.c ****         decodeTemp(&BMS[0], &rxMsg, canRx);
  17:Core/Src/can_setup.c ****     }
  18:Core/Src/can_setup.c **** 
  19:Core/Src/can_setup.c ****     if (hcan->Instance == CAN3)
  49              		.loc 1 19 0
  50 000c 2268     		ldr	r2, [r4]
  51 000e 1B4B     		ldr	r3, .L11+4
  52 0010 9A42     		cmp	r2, r3
  53 0012 18D0     		beq	.L8
  54              	.LVL2:
  55              	.L1:
  56 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  57              	.LVL3:
  58              	.L7:
  10:Core/Src/can_setup.c ****         {
  59              		.loc 1 10 0
  60 0016 1A4B     		ldr	r3, .L11+8
  61 0018 1A4A     		ldr	r2, .L11+12
  62 001a 0021     		movs	r1, #0
  63 001c 1A48     		ldr	r0, .L11+16
  64              	.LVL4:
  65 001e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  66              	.LVL5:
  67 0022 68B9     		cbnz	r0, .L9
  68              	.L3:
  15:Core/Src/can_setup.c ****         decodeTemp(&BMS[0], &rxMsg, canRx);
  69              		.loc 1 15 0
  70 0024 164F     		ldr	r7, .L11+8
  71 0026 174E     		ldr	r6, .L11+12
  72 0028 184D     		ldr	r5, .L11+20
  73 002a 3A46     		mov	r2, r7
  74 002c 3146     		mov	r1, r6
  75 002e 2846     		mov	r0, r5
  76 0030 FFF7FEFF 		bl	decodeVolt
  77              	.LVL6:
  16:Core/Src/can_setup.c ****     }
  78              		.loc 1 16 0
  79 0034 3A46     		mov	r2, r7
  80 0036 3146     		mov	r1, r6
  81 0038 2846     		mov	r0, r5
  82 003a FFF7FEFF 		bl	decodeTemp
  83              	.LVL7:
  84 003e E5E7     		b	.L2
  85              	.L9:
  12:Core/Src/can_setup.c ****         }
  86              		.loc 1 12 0
  87 0040 FFF7FEFF 		bl	Error_Handler
  88              	.LVL8:
  89 0044 EEE7     		b	.L3
  90              	.L8:
  20:Core/Src/can_setup.c ****     {
  21:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan3, CAN_RX_FIFO0, &rxMsg3, canRx3) != HAL_OK)
ARM GAS  /tmp/ccPYXuUB.s 			page 3


  91              		.loc 1 21 0
  92 0046 124B     		ldr	r3, .L11+24
  93 0048 124A     		ldr	r2, .L11+28
  94 004a 0021     		movs	r1, #0
  95 004c 1248     		ldr	r0, .L11+32
  96 004e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  97              	.LVL9:
  98 0052 68B9     		cbnz	r0, .L10
  99              	.L5:
  22:Core/Src/can_setup.c ****         {
  23:Core/Src/can_setup.c ****             Error_Handler();
  24:Core/Src/can_setup.c ****         }
  25:Core/Src/can_setup.c ****         // do stuff
  26:Core/Src/can_setup.c ****         decodeVolt(&BMS[1], &rxMsg3, canRx3);
 100              		.loc 1 26 0
 101 0054 0E4E     		ldr	r6, .L11+24
 102 0056 0F4D     		ldr	r5, .L11+28
 103 0058 104C     		ldr	r4, .L11+36
 104              	.LVL10:
 105 005a 3246     		mov	r2, r6
 106 005c 2946     		mov	r1, r5
 107 005e 2046     		mov	r0, r4
 108 0060 FFF7FEFF 		bl	decodeVolt
 109              	.LVL11:
  27:Core/Src/can_setup.c ****         decodeTemp(&BMS[1], &rxMsg3, canRx3);
 110              		.loc 1 27 0
 111 0064 3246     		mov	r2, r6
 112 0066 2946     		mov	r1, r5
 113 0068 2046     		mov	r0, r4
 114 006a FFF7FEFF 		bl	decodeTemp
 115              	.LVL12:
  28:Core/Src/can_setup.c ****     }
  29:Core/Src/can_setup.c **** }
 116              		.loc 1 29 0
 117 006e D1E7     		b	.L1
 118              	.LVL13:
 119              	.L10:
  23:Core/Src/can_setup.c ****         }
 120              		.loc 1 23 0
 121 0070 FFF7FEFF 		bl	Error_Handler
 122              	.LVL14:
 123 0074 EEE7     		b	.L5
 124              	.L12:
 125 0076 00BF     		.align	2
 126              	.L11:
 127 0078 00640040 		.word	1073767424
 128 007c 006C0040 		.word	1073769472
 129 0080 00000000 		.word	canRx
 130 0084 00000000 		.word	rxMsg
 131 0088 00000000 		.word	hcan1
 132 008c 00000000 		.word	BMS
 133 0090 00000000 		.word	canRx3
 134 0094 00000000 		.word	rxMsg3
 135 0098 00000000 		.word	hcan3
 136 009c F6000000 		.word	BMS+246
 137              		.cfi_endproc
 138              	.LFE131:
ARM GAS  /tmp/ccPYXuUB.s 			page 4


 140              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 141              		.align	1
 142              		.global	HAL_CAN_RxFifo1MsgPendingCallback
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	HAL_CAN_RxFifo1MsgPendingCallback:
 149              	.LFB132:
  30:Core/Src/can_setup.c **** 
  31:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  32:Core/Src/can_setup.c **** 
  33:Core/Src/can_setup.c **** void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
  34:Core/Src/can_setup.c **** {
 150              		.loc 1 34 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL15:
 155 0000 70B5     		push	{r4, r5, r6, lr}
 156              		.cfi_def_cfa_offset 16
 157              		.cfi_offset 4, -16
 158              		.cfi_offset 5, -12
 159              		.cfi_offset 6, -8
 160              		.cfi_offset 14, -4
 161 0002 0446     		mov	r4, r0
  35:Core/Src/can_setup.c **** 
  36:Core/Src/can_setup.c ****     if (hcan->Instance == CAN2)
 162              		.loc 1 36 0
 163 0004 0268     		ldr	r2, [r0]
 164 0006 174B     		ldr	r3, .L23
 165 0008 9A42     		cmp	r2, r3
 166 000a 04D0     		beq	.L19
 167              	.LVL16:
 168              	.L14:
  37:Core/Src/can_setup.c ****     {
  38:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan2, CAN_RX_FIFO1, &rxMsg2, canRx2) != HAL_OK)
  39:Core/Src/can_setup.c ****         {
  40:Core/Src/can_setup.c ****             Error_Handler();
  41:Core/Src/can_setup.c ****         }
  42:Core/Src/can_setup.c ****         vehicleComms(&rxMsg2, canRx2);
  43:Core/Src/can_setup.c ****     }
  44:Core/Src/can_setup.c **** 
  45:Core/Src/can_setup.c ****     if (hcan->Instance == CAN3)
 169              		.loc 1 45 0
 170 000c 2268     		ldr	r2, [r4]
 171 000e 164B     		ldr	r3, .L23+4
 172 0010 9A42     		cmp	r2, r3
 173 0012 0FD0     		beq	.L20
 174              	.LVL17:
 175              	.L13:
 176 0014 70BD     		pop	{r4, r5, r6, pc}
 177              	.LVL18:
 178              	.L19:
  38:Core/Src/can_setup.c ****         {
 179              		.loc 1 38 0
 180 0016 154B     		ldr	r3, .L23+8
ARM GAS  /tmp/ccPYXuUB.s 			page 5


 181 0018 154A     		ldr	r2, .L23+12
 182 001a 0121     		movs	r1, #1
 183 001c 1548     		ldr	r0, .L23+16
 184              	.LVL19:
 185 001e FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 186              	.LVL20:
 187 0022 20B9     		cbnz	r0, .L21
 188              	.L15:
  42:Core/Src/can_setup.c ****     }
 189              		.loc 1 42 0
 190 0024 1149     		ldr	r1, .L23+8
 191 0026 1248     		ldr	r0, .L23+12
 192 0028 FFF7FEFF 		bl	vehicleComms
 193              	.LVL21:
 194 002c EEE7     		b	.L14
 195              	.L21:
  40:Core/Src/can_setup.c ****         }
 196              		.loc 1 40 0
 197 002e FFF7FEFF 		bl	Error_Handler
 198              	.LVL22:
 199 0032 F7E7     		b	.L15
 200              	.L20:
  46:Core/Src/can_setup.c ****     {
  47:Core/Src/can_setup.c ****         if (HAL_CAN_GetRxMessage(&hcan3, CAN_RX_FIFO1, &rxMsg3, canRx3) != HAL_OK)
 201              		.loc 1 47 0
 202 0034 104B     		ldr	r3, .L23+20
 203 0036 114A     		ldr	r2, .L23+24
 204 0038 0121     		movs	r1, #1
 205 003a 1148     		ldr	r0, .L23+28
 206 003c FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 207              	.LVL23:
 208 0040 68B9     		cbnz	r0, .L22
 209              	.L17:
  48:Core/Src/can_setup.c ****         {
  49:Core/Src/can_setup.c ****             Error_Handler();
  50:Core/Src/can_setup.c ****         }
  51:Core/Src/can_setup.c ****         // do stuff
  52:Core/Src/can_setup.c ****         decodeVolt(&BMS[1], &rxMsg3, canRx3);
 210              		.loc 1 52 0
 211 0042 0D4E     		ldr	r6, .L23+20
 212 0044 0D4D     		ldr	r5, .L23+24
 213 0046 0F4C     		ldr	r4, .L23+32
 214              	.LVL24:
 215 0048 3246     		mov	r2, r6
 216 004a 2946     		mov	r1, r5
 217 004c 2046     		mov	r0, r4
 218 004e FFF7FEFF 		bl	decodeVolt
 219              	.LVL25:
  53:Core/Src/can_setup.c ****         decodeTemp(&BMS[1], &rxMsg3, canRx3);
 220              		.loc 1 53 0
 221 0052 3246     		mov	r2, r6
 222 0054 2946     		mov	r1, r5
 223 0056 2046     		mov	r0, r4
 224 0058 FFF7FEFF 		bl	decodeTemp
 225              	.LVL26:
  54:Core/Src/can_setup.c ****     }
  55:Core/Src/can_setup.c **** }
ARM GAS  /tmp/ccPYXuUB.s 			page 6


 226              		.loc 1 55 0
 227 005c DAE7     		b	.L13
 228              	.LVL27:
 229              	.L22:
  49:Core/Src/can_setup.c ****         }
 230              		.loc 1 49 0
 231 005e FFF7FEFF 		bl	Error_Handler
 232              	.LVL28:
 233 0062 EEE7     		b	.L17
 234              	.L24:
 235              		.align	2
 236              	.L23:
 237 0064 00680040 		.word	1073768448
 238 0068 006C0040 		.word	1073769472
 239 006c 00000000 		.word	canRx2
 240 0070 00000000 		.word	rxMsg2
 241 0074 00000000 		.word	hcan2
 242 0078 00000000 		.word	canRx3
 243 007c 00000000 		.word	rxMsg3
 244 0080 00000000 		.word	hcan3
 245 0084 F6000000 		.word	BMS+246
 246              		.cfi_endproc
 247              	.LFE132:
 249              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 250              		.align	1
 251              		.global	HAL_CAN_ErrorCallback
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	HAL_CAN_ErrorCallback:
 258              	.LFB133:
  56:Core/Src/can_setup.c **** 
  57:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  58:Core/Src/can_setup.c **** void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
  59:Core/Src/can_setup.c **** {
 259              		.loc 1 59 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL29:
 265 0000 7047     		bx	lr
 266              		.cfi_endproc
 267              	.LFE133:
 269              		.section	.text.can2queue,"ax",%progbits
 270              		.align	1
 271              		.global	can2queue
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	can2queue:
 278              	.LFB134:
  60:Core/Src/can_setup.c **** }
  61:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  62:Core/Src/can_setup.c **** void can2queue(void)
ARM GAS  /tmp/ccPYXuUB.s 			page 7


  63:Core/Src/can_setup.c **** {
 279              		.loc 1 63 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 7047     		bx	lr
 285              		.cfi_endproc
 286              	.LFE134:
 288              		.section	.text.canSettings,"ax",%progbits
 289              		.align	1
 290              		.global	canSettings
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu fpv4-sp-d16
 296              	canSettings:
 297              	.LFB135:
  64:Core/Src/can_setup.c ****     // osMessageQueueGet()
  65:Core/Src/can_setup.c **** }
  66:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  67:Core/Src/can_setup.c **** void canSettings(void)
  68:Core/Src/can_setup.c **** {
 298              		.loc 1 68 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		.loc 1 68 0
 303 0000 08B5     		push	{r3, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
  69:Core/Src/can_setup.c ****     busFault = 0;
 307              		.loc 1 69 0
 308 0002 0023     		movs	r3, #0
 309 0004 574A     		ldr	r2, .L47
 310 0006 1360     		str	r3, [r2]
  70:Core/Src/can_setup.c **** 
  71:Core/Src/can_setup.c ****     txMsg.IDE = CAN_ID_STD;
 311              		.loc 1 71 0
 312 0008 574A     		ldr	r2, .L47+4
 313 000a 9360     		str	r3, [r2, #8]
  72:Core/Src/can_setup.c ****     txMsg.RTR = CAN_RTR_DATA;
 314              		.loc 1 72 0
 315 000c D360     		str	r3, [r2, #12]
  73:Core/Src/can_setup.c ****     txMsg.TransmitGlobalTime = DISABLE;
 316              		.loc 1 73 0
 317 000e 1375     		strb	r3, [r2, #20]
  74:Core/Src/can_setup.c **** 
  75:Core/Src/can_setup.c ****     txMsgExt.IDE = CAN_ID_EXT;
 318              		.loc 1 75 0
 319 0010 564A     		ldr	r2, .L47+8
 320 0012 0421     		movs	r1, #4
 321 0014 9160     		str	r1, [r2, #8]
  76:Core/Src/can_setup.c ****     txMsgExt.RTR = CAN_RTR_DATA;
 322              		.loc 1 76 0
 323 0016 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/ccPYXuUB.s 			page 8


  77:Core/Src/can_setup.c ****     txMsgExt.TransmitGlobalTime = DISABLE;
 324              		.loc 1 77 0
 325 0018 1375     		strb	r3, [r2, #20]
  78:Core/Src/can_setup.c **** 
  79:Core/Src/can_setup.c ****     sf.FilterBank = 0; // CAN1 Filter bank starts at 0
 326              		.loc 1 79 0
 327 001a 5549     		ldr	r1, .L47+12
 328 001c 4B61     		str	r3, [r1, #20]
  80:Core/Src/can_setup.c ****     sf.FilterMode = CAN_FILTERMODE_IDMASK;
 329              		.loc 1 80 0
 330 001e 8B61     		str	r3, [r1, #24]
  81:Core/Src/can_setup.c ****     sf.FilterScale = CAN_FILTERSCALE_16BIT;
 331              		.loc 1 81 0
 332 0020 CB61     		str	r3, [r1, #28]
  82:Core/Src/can_setup.c ****     sf.FilterIdLow = 0xffff;
 333              		.loc 1 82 0
 334 0022 4FF6FF72 		movw	r2, #65535
 335 0026 4A60     		str	r2, [r1, #4]
  83:Core/Src/can_setup.c ****     sf.FilterIdHigh = 0x1fff;
 336              		.loc 1 83 0
 337 0028 41F6FF72 		movw	r2, #8191
 338 002c 0A60     		str	r2, [r1]
  84:Core/Src/can_setup.c ****     sf.FilterMaskIdLow = 0x0000;
 339              		.loc 1 84 0
 340 002e CB60     		str	r3, [r1, #12]
  85:Core/Src/can_setup.c ****     sf.FilterMaskIdHigh = 0x0000;
 341              		.loc 1 85 0
 342 0030 8B60     		str	r3, [r1, #8]
  86:Core/Src/can_setup.c ****     sf.FilterFIFOAssignment = CAN_RX_FIFO0;
 343              		.loc 1 86 0
 344 0032 0B61     		str	r3, [r1, #16]
  87:Core/Src/can_setup.c ****     sf.SlaveStartFilterBank = 14;
 345              		.loc 1 87 0
 346 0034 0E23     		movs	r3, #14
 347 0036 4B62     		str	r3, [r1, #36]
  88:Core/Src/can_setup.c ****     sf.FilterActivation = ENABLE;
 348              		.loc 1 88 0
 349 0038 0123     		movs	r3, #1
 350 003a 0B62     		str	r3, [r1, #32]
  89:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan1, &sf) != HAL_OK)
 351              		.loc 1 89 0
 352 003c 4D48     		ldr	r0, .L47+16
 353 003e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 354              	.LVL30:
 355 0042 0028     		cmp	r0, #0
 356 0044 72D1     		bne	.L38
 357              	.L28:
  90:Core/Src/can_setup.c ****     {
  91:Core/Src/can_setup.c ****         Error_Handler();
  92:Core/Src/can_setup.c ****     }
  93:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan1) != HAL_OK)
 358              		.loc 1 93 0
 359 0046 4B48     		ldr	r0, .L47+16
 360 0048 FFF7FEFF 		bl	HAL_CAN_Start
 361              	.LVL31:
 362 004c 0028     		cmp	r0, #0
 363 004e 70D1     		bne	.L39
ARM GAS  /tmp/ccPYXuUB.s 			page 9


 364              	.L29:
  94:Core/Src/can_setup.c ****     {
  95:Core/Src/can_setup.c ****         Error_Handler();
  96:Core/Src/can_setup.c ****     }
  97:Core/Src/can_setup.c **** 
  98:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 365              		.loc 1 98 0
 366 0050 0221     		movs	r1, #2
 367 0052 4848     		ldr	r0, .L47+16
 368 0054 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 369              	.LVL32:
 370 0058 0028     		cmp	r0, #0
 371 005a 6DD1     		bne	.L40
 372              	.L30:
  99:Core/Src/can_setup.c ****     {
 100:Core/Src/can_setup.c ****         Error_Handler();
 101:Core/Src/can_setup.c ****     }
 102:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN1_TX_IRQn, 3, 0);
 373              		.loc 1 102 0
 374 005c 0022     		movs	r2, #0
 375 005e 0321     		movs	r1, #3
 376 0060 1320     		movs	r0, #19
 377 0062 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 378              	.LVL33:
 103:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN1_TX_IRQn);
 379              		.loc 1 103 0
 380 0066 1320     		movs	r0, #19
 381 0068 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 382              	.LVL34:
 104:Core/Src/can_setup.c **** 
 105:Core/Src/can_setup.c ****     // hcan2
 106:Core/Src/can_setup.c ****     txMsg2.IDE = CAN_ID_STD;
 383              		.loc 1 106 0
 384 006c 424A     		ldr	r2, .L47+20
 385 006e 0023     		movs	r3, #0
 386 0070 9360     		str	r3, [r2, #8]
 107:Core/Src/can_setup.c ****     txMsg2.RTR = CAN_RTR_DATA;
 387              		.loc 1 107 0
 388 0072 D360     		str	r3, [r2, #12]
 108:Core/Src/can_setup.c ****     txMsg2.TransmitGlobalTime = DISABLE;
 389              		.loc 1 108 0
 390 0074 1375     		strb	r3, [r2, #20]
 109:Core/Src/can_setup.c **** 
 110:Core/Src/can_setup.c **** 
 111:Core/Src/can_setup.c ****     txMsgExt2.IDE = CAN_ID_EXT;
 391              		.loc 1 111 0
 392 0076 414A     		ldr	r2, .L47+24
 393 0078 0421     		movs	r1, #4
 394 007a 9160     		str	r1, [r2, #8]
 112:Core/Src/can_setup.c ****     txMsgExt2.RTR = CAN_RTR_DATA;
 395              		.loc 1 112 0
 396 007c D360     		str	r3, [r2, #12]
 113:Core/Src/can_setup.c ****     txMsgExt2.TransmitGlobalTime = DISABLE;
 397              		.loc 1 113 0
 398 007e 1375     		strb	r3, [r2, #20]
 114:Core/Src/can_setup.c **** 
 115:Core/Src/can_setup.c ****     sf2.FilterBank = 14; // CAN2 Filter bank starts at 14
ARM GAS  /tmp/ccPYXuUB.s 			page 10


 399              		.loc 1 115 0
 400 0080 3F49     		ldr	r1, .L47+28
 401 0082 0E22     		movs	r2, #14
 402 0084 4A61     		str	r2, [r1, #20]
 116:Core/Src/can_setup.c ****     sf2.FilterMode = CAN_FILTERMODE_IDMASK;
 403              		.loc 1 116 0
 404 0086 8B61     		str	r3, [r1, #24]
 117:Core/Src/can_setup.c ****     sf2.FilterScale = CAN_FILTERSCALE_16BIT;
 405              		.loc 1 117 0
 406 0088 CB61     		str	r3, [r1, #28]
 118:Core/Src/can_setup.c ****     sf2.FilterIdLow = 0xffff;
 407              		.loc 1 118 0
 408 008a 4FF6FF70 		movw	r0, #65535
 409 008e 4860     		str	r0, [r1, #4]
 119:Core/Src/can_setup.c ****     sf2.FilterIdHigh = 0x1fff;
 410              		.loc 1 119 0
 411 0090 41F6FF70 		movw	r0, #8191
 412 0094 0860     		str	r0, [r1]
 120:Core/Src/can_setup.c ****     sf2.FilterMaskIdLow = 0x0000;
 413              		.loc 1 120 0
 414 0096 CB60     		str	r3, [r1, #12]
 121:Core/Src/can_setup.c ****     sf2.FilterMaskIdHigh = 0x0000;
 415              		.loc 1 121 0
 416 0098 8B60     		str	r3, [r1, #8]
 122:Core/Src/can_setup.c ****     sf2.FilterFIFOAssignment = CAN_RX_FIFO1;
 417              		.loc 1 122 0
 418 009a 0123     		movs	r3, #1
 419 009c 0B61     		str	r3, [r1, #16]
 123:Core/Src/can_setup.c ****     sf2.SlaveStartFilterBank = 14;
 420              		.loc 1 123 0
 421 009e 4A62     		str	r2, [r1, #36]
 124:Core/Src/can_setup.c ****     sf2.FilterActivation = ENABLE;
 422              		.loc 1 124 0
 423 00a0 0B62     		str	r3, [r1, #32]
 125:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan2, &sf2) != HAL_OK)
 424              		.loc 1 125 0
 425 00a2 3848     		ldr	r0, .L47+32
 426 00a4 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 427              	.LVL35:
 428 00a8 0028     		cmp	r0, #0
 429 00aa 48D1     		bne	.L41
 430              	.L31:
 126:Core/Src/can_setup.c ****     {
 127:Core/Src/can_setup.c ****         Error_Handler();
 128:Core/Src/can_setup.c ****     }
 129:Core/Src/can_setup.c **** 
 130:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan2) != HAL_OK)
 431              		.loc 1 130 0
 432 00ac 3548     		ldr	r0, .L47+32
 433 00ae FFF7FEFF 		bl	HAL_CAN_Start
 434              	.LVL36:
 435 00b2 0028     		cmp	r0, #0
 436 00b4 46D1     		bne	.L42
 437              	.L32:
 131:Core/Src/can_setup.c ****     {
 132:Core/Src/can_setup.c ****         Error_Handler();
 133:Core/Src/can_setup.c ****     }
ARM GAS  /tmp/ccPYXuUB.s 			page 11


 134:Core/Src/can_setup.c **** 
 135:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING) != HAL_OK)
 438              		.loc 1 135 0
 439 00b6 1021     		movs	r1, #16
 440 00b8 3248     		ldr	r0, .L47+32
 441 00ba FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 442              	.LVL37:
 443 00be 0028     		cmp	r0, #0
 444 00c0 43D1     		bne	.L43
 445              	.L33:
 136:Core/Src/can_setup.c ****     {
 137:Core/Src/can_setup.c ****         Error_Handler();
 138:Core/Src/can_setup.c ****     }
 139:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN2_TX_IRQn, 3, 0);
 446              		.loc 1 139 0
 447 00c2 0022     		movs	r2, #0
 448 00c4 0321     		movs	r1, #3
 449 00c6 3F20     		movs	r0, #63
 450 00c8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 451              	.LVL38:
 140:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN2_TX_IRQn);
 452              		.loc 1 140 0
 453 00cc 3F20     		movs	r0, #63
 454 00ce FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 455              	.LVL39:
 141:Core/Src/can_setup.c **** 
 142:Core/Src/can_setup.c ****     // hcan3
 143:Core/Src/can_setup.c ****     txMsg3.IDE = CAN_ID_STD;
 456              		.loc 1 143 0
 457 00d2 2D4A     		ldr	r2, .L47+36
 458 00d4 0023     		movs	r3, #0
 459 00d6 9360     		str	r3, [r2, #8]
 144:Core/Src/can_setup.c ****     txMsg3.RTR = CAN_RTR_DATA;
 460              		.loc 1 144 0
 461 00d8 D360     		str	r3, [r2, #12]
 145:Core/Src/can_setup.c ****     txMsg3.TransmitGlobalTime = DISABLE;
 462              		.loc 1 145 0
 463 00da 1375     		strb	r3, [r2, #20]
 146:Core/Src/can_setup.c **** 
 147:Core/Src/can_setup.c ****     txMsgExt3.IDE = CAN_ID_EXT;
 464              		.loc 1 147 0
 465 00dc 2B4A     		ldr	r2, .L47+40
 466 00de 0421     		movs	r1, #4
 467 00e0 9160     		str	r1, [r2, #8]
 148:Core/Src/can_setup.c ****     txMsgExt3.RTR = CAN_RTR_DATA;
 468              		.loc 1 148 0
 469 00e2 D360     		str	r3, [r2, #12]
 149:Core/Src/can_setup.c ****     txMsgExt3.TransmitGlobalTime = DISABLE;
 470              		.loc 1 149 0
 471 00e4 1375     		strb	r3, [r2, #20]
 150:Core/Src/can_setup.c **** 
 151:Core/Src/can_setup.c ****     sf3.FilterBank = 1; // CAN1 Filter bank starts at 0
 472              		.loc 1 151 0
 473 00e6 2A49     		ldr	r1, .L47+44
 474 00e8 0122     		movs	r2, #1
 475 00ea 4A61     		str	r2, [r1, #20]
 152:Core/Src/can_setup.c ****     sf3.FilterMode = CAN_FILTERMODE_IDMASK;
ARM GAS  /tmp/ccPYXuUB.s 			page 12


 476              		.loc 1 152 0
 477 00ec 8B61     		str	r3, [r1, #24]
 153:Core/Src/can_setup.c ****     sf3.FilterScale = CAN_FILTERSCALE_32BIT;
 478              		.loc 1 153 0
 479 00ee CA61     		str	r2, [r1, #28]
 154:Core/Src/can_setup.c ****     sf3.FilterIdLow = 0x0000;
 480              		.loc 1 154 0
 481 00f0 4B60     		str	r3, [r1, #4]
 155:Core/Src/can_setup.c ****     sf3.FilterIdHigh = 0x0000;
 482              		.loc 1 155 0
 483 00f2 0B60     		str	r3, [r1]
 156:Core/Src/can_setup.c ****     sf3.FilterMaskIdLow = 0x0000;
 484              		.loc 1 156 0
 485 00f4 CB60     		str	r3, [r1, #12]
 157:Core/Src/can_setup.c ****     sf3.FilterMaskIdHigh = 0x0000;
 486              		.loc 1 157 0
 487 00f6 8B60     		str	r3, [r1, #8]
 158:Core/Src/can_setup.c ****     sf3.FilterFIFOAssignment = CAN_RX_FIFO0;
 488              		.loc 1 158 0
 489 00f8 0B61     		str	r3, [r1, #16]
 159:Core/Src/can_setup.c ****     sf3.SlaveStartFilterBank = 14;
 490              		.loc 1 159 0
 491 00fa 0E23     		movs	r3, #14
 492 00fc 4B62     		str	r3, [r1, #36]
 160:Core/Src/can_setup.c ****     sf3.FilterActivation = ENABLE;
 493              		.loc 1 160 0
 494 00fe 0A62     		str	r2, [r1, #32]
 161:Core/Src/can_setup.c **** 
 162:Core/Src/can_setup.c ****     if (HAL_CAN_ConfigFilter(&hcan3, &sf3) != HAL_OK)
 495              		.loc 1 162 0
 496 0100 2448     		ldr	r0, .L47+48
 497 0102 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 498              	.LVL40:
 499 0106 18BB     		cbnz	r0, .L44
 500              	.L34:
 163:Core/Src/can_setup.c ****     {
 164:Core/Src/can_setup.c ****         Error_Handler();
 165:Core/Src/can_setup.c ****     }
 166:Core/Src/can_setup.c **** 
 167:Core/Src/can_setup.c ****     if (HAL_CAN_Start(&hcan3) != HAL_OK)
 501              		.loc 1 167 0
 502 0108 2248     		ldr	r0, .L47+48
 503 010a FFF7FEFF 		bl	HAL_CAN_Start
 504              	.LVL41:
 505 010e 10BB     		cbnz	r0, .L45
 506              	.L35:
 168:Core/Src/can_setup.c ****     {
 169:Core/Src/can_setup.c ****         Error_Handler();
 170:Core/Src/can_setup.c ****     }
 171:Core/Src/can_setup.c **** 
 172:Core/Src/can_setup.c ****     if (HAL_CAN_ActivateNotification(&hcan3, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 507              		.loc 1 172 0
 508 0110 0221     		movs	r1, #2
 509 0112 2048     		ldr	r0, .L47+48
 510 0114 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 511              	.LVL42:
 512 0118 00BB     		cbnz	r0, .L46
ARM GAS  /tmp/ccPYXuUB.s 			page 13


 513              	.L36:
 173:Core/Src/can_setup.c ****     {
 174:Core/Src/can_setup.c ****         Error_Handler();
 175:Core/Src/can_setup.c ****     }
 176:Core/Src/can_setup.c ****     HAL_NVIC_SetPriority(CAN3_TX_IRQn, 3, 0);
 514              		.loc 1 176 0
 515 011a 0022     		movs	r2, #0
 516 011c 0321     		movs	r1, #3
 517 011e 4A20     		movs	r0, #74
 518 0120 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 519              	.LVL43:
 177:Core/Src/can_setup.c ****     HAL_NVIC_EnableIRQ(CAN3_TX_IRQn);
 520              		.loc 1 177 0
 521 0124 4A20     		movs	r0, #74
 522 0126 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 523              	.LVL44:
 524 012a 08BD     		pop	{r3, pc}
 525              	.L38:
  91:Core/Src/can_setup.c ****     }
 526              		.loc 1 91 0
 527 012c FFF7FEFF 		bl	Error_Handler
 528              	.LVL45:
 529 0130 89E7     		b	.L28
 530              	.L39:
  95:Core/Src/can_setup.c ****     }
 531              		.loc 1 95 0
 532 0132 FFF7FEFF 		bl	Error_Handler
 533              	.LVL46:
 534 0136 8BE7     		b	.L29
 535              	.L40:
 100:Core/Src/can_setup.c ****     }
 536              		.loc 1 100 0
 537 0138 FFF7FEFF 		bl	Error_Handler
 538              	.LVL47:
 539 013c 8EE7     		b	.L30
 540              	.L41:
 127:Core/Src/can_setup.c ****     }
 541              		.loc 1 127 0
 542 013e FFF7FEFF 		bl	Error_Handler
 543              	.LVL48:
 544 0142 B3E7     		b	.L31
 545              	.L42:
 132:Core/Src/can_setup.c ****     }
 546              		.loc 1 132 0
 547 0144 FFF7FEFF 		bl	Error_Handler
 548              	.LVL49:
 549 0148 B5E7     		b	.L32
 550              	.L43:
 137:Core/Src/can_setup.c ****     }
 551              		.loc 1 137 0
 552 014a FFF7FEFF 		bl	Error_Handler
 553              	.LVL50:
 554 014e B8E7     		b	.L33
 555              	.L44:
 164:Core/Src/can_setup.c ****     }
 556              		.loc 1 164 0
 557 0150 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/ccPYXuUB.s 			page 14


 558              	.LVL51:
 559 0154 D8E7     		b	.L34
 560              	.L45:
 169:Core/Src/can_setup.c ****     }
 561              		.loc 1 169 0
 562 0156 FFF7FEFF 		bl	Error_Handler
 563              	.LVL52:
 564 015a D9E7     		b	.L35
 565              	.L46:
 174:Core/Src/can_setup.c ****     }
 566              		.loc 1 174 0
 567 015c FFF7FEFF 		bl	Error_Handler
 568              	.LVL53:
 569 0160 DBE7     		b	.L36
 570              	.L48:
 571 0162 00BF     		.align	2
 572              	.L47:
 573 0164 00000000 		.word	busFault
 574 0168 00000000 		.word	txMsg
 575 016c 00000000 		.word	txMsgExt
 576 0170 00000000 		.word	sf
 577 0174 00000000 		.word	hcan1
 578 0178 00000000 		.word	txMsg2
 579 017c 00000000 		.word	txMsgExt2
 580 0180 00000000 		.word	sf2
 581 0184 00000000 		.word	hcan2
 582 0188 00000000 		.word	txMsg3
 583 018c 00000000 		.word	txMsgExt3
 584 0190 00000000 		.word	sf3
 585 0194 00000000 		.word	hcan3
 586              		.cfi_endproc
 587              	.LFE135:
 589              		.section	.text.can1tx,"ax",%progbits
 590              		.align	1
 591              		.global	can1tx
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
 597              	can1tx:
 598              	.LFB136:
 178:Core/Src/can_setup.c **** }
 179:Core/Src/can_setup.c **** 
 180:Core/Src/can_setup.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 181:Core/Src/can_setup.c **** /*
 182:Core/Src/can_setup.c **** void c1tx(CAN_TxHeaderTypeDef *txMsg, uint8_t *canTx)
 183:Core/Src/can_setup.c **** {
 184:Core/Src/can_setup.c **** 
 185:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, txMsg, canTx, &canMailbox);
 186:Core/Src/can_setup.c ****     txCycle++;
 187:Core/Src/can_setup.c ****     if (txCycle >= 3)
 188:Core/Src/can_setup.c ****     {
 189:Core/Src/can_setup.c ****         HAL_Delay(1);
 190:Core/Src/can_setup.c ****         txCycle = 0;
 191:Core/Src/can_setup.c ****     }
 192:Core/Src/can_setup.c **** }
 193:Core/Src/can_setup.c **** */
ARM GAS  /tmp/ccPYXuUB.s 			page 15


 194:Core/Src/can_setup.c **** 
 195:Core/Src/can_setup.c **** void can1tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx)
 196:Core/Src/can_setup.c **** {
 599              		.loc 1 196 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              	.LVL54:
 604 0000 10B5     		push	{r4, lr}
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 4, -8
 607              		.cfi_offset 14, -4
 197:Core/Src/can_setup.c ****     txMsg.StdId = msgId;
 608              		.loc 1 197 0
 609 0002 0B4C     		ldr	r4, .L53
 610 0004 2060     		str	r0, [r4]
 198:Core/Src/can_setup.c ****     txMsg.DLC = DLC;
 611              		.loc 1 198 0
 612 0006 2161     		str	r1, [r4, #16]
 199:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan1, &txMsg, canTx, &canMailbox);
 613              		.loc 1 199 0
 614 0008 0A4B     		ldr	r3, .L53+4
 615 000a 2146     		mov	r1, r4
 616              	.LVL55:
 617 000c 0A48     		ldr	r0, .L53+8
 618              	.LVL56:
 619 000e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 620              	.LVL57:
 200:Core/Src/can_setup.c ****     txCycle++;
 621              		.loc 1 200 0
 622 0012 0A4B     		ldr	r3, .L53+12
 623 0014 1A68     		ldr	r2, [r3]
 624 0016 0132     		adds	r2, r2, #1
 625 0018 1A60     		str	r2, [r3]
 201:Core/Src/can_setup.c ****     if (txCycle >= 3)
 626              		.loc 1 201 0
 627 001a 1B68     		ldr	r3, [r3]
 628 001c 022B     		cmp	r3, #2
 629 001e 00DC     		bgt	.L52
 630              	.L49:
 631 0020 10BD     		pop	{r4, pc}
 632              	.L52:
 202:Core/Src/can_setup.c ****     {
 203:Core/Src/can_setup.c ****         HAL_Delay(1);
 633              		.loc 1 203 0
 634 0022 0120     		movs	r0, #1
 635 0024 FFF7FEFF 		bl	HAL_Delay
 636              	.LVL58:
 204:Core/Src/can_setup.c ****         txCycle = 0;
 637              		.loc 1 204 0
 638 0028 0022     		movs	r2, #0
 639 002a 044B     		ldr	r3, .L53+12
 640 002c 1A60     		str	r2, [r3]
 205:Core/Src/can_setup.c ****     }
 206:Core/Src/can_setup.c **** }
 641              		.loc 1 206 0
 642 002e F7E7     		b	.L49
ARM GAS  /tmp/ccPYXuUB.s 			page 16


 643              	.L54:
 644              		.align	2
 645              	.L53:
 646 0030 00000000 		.word	txMsg
 647 0034 00000000 		.word	canMailbox
 648 0038 00000000 		.word	hcan1
 649 003c 00000000 		.word	txCycle
 650              		.cfi_endproc
 651              	.LFE136:
 653              		.section	.text.can2tx,"ax",%progbits
 654              		.align	1
 655              		.global	can2tx
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv4-sp-d16
 661              	can2tx:
 662              	.LFB137:
 207:Core/Src/can_setup.c **** 
 208:Core/Src/can_setup.c **** /*
 209:Core/Src/can_setup.c **** void c2tx(CAN_TxHeaderTypeDef *txMsg2, uint8_t *canTx2)
 210:Core/Src/can_setup.c **** {
 211:Core/Src/can_setup.c **** 
 212:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan2, txMsg2, canTx2, &canMailbox2);
 213:Core/Src/can_setup.c ****     txCycle2++;
 214:Core/Src/can_setup.c ****     if (txCycle2 >= 3)
 215:Core/Src/can_setup.c ****     {
 216:Core/Src/can_setup.c ****         HAL_Delay(1);
 217:Core/Src/can_setup.c ****         txCycle2 = 0;
 218:Core/Src/can_setup.c ****     }
 219:Core/Src/can_setup.c **** }
 220:Core/Src/can_setup.c **** */
 221:Core/Src/can_setup.c **** void can2tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx2)
 222:Core/Src/can_setup.c **** {
 663              		.loc 1 222 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              	.LVL59:
 668 0000 10B5     		push	{r4, lr}
 669              		.cfi_def_cfa_offset 8
 670              		.cfi_offset 4, -8
 671              		.cfi_offset 14, -4
 672 0002 1446     		mov	r4, r2
 223:Core/Src/can_setup.c **** 
 224:Core/Src/can_setup.c ****     txMsg2.StdId = msgId;
 673              		.loc 1 224 0
 674 0004 0F4B     		ldr	r3, .L59
 675 0006 1860     		str	r0, [r3]
 225:Core/Src/can_setup.c ****     txMsg2.DLC = DLC;
 676              		.loc 1 225 0
 677 0008 1961     		str	r1, [r3, #16]
 226:Core/Src/can_setup.c ****     if (HAL_CAN_GetTxMailboxesFreeLevel(&hcan2))
 678              		.loc 1 226 0
 679 000a 0F48     		ldr	r0, .L59+4
 680              	.LVL60:
 681 000c FFF7FEFF 		bl	HAL_CAN_GetTxMailboxesFreeLevel
ARM GAS  /tmp/ccPYXuUB.s 			page 17


 682              	.LVL61:
 683 0010 50B1     		cbz	r0, .L56
 227:Core/Src/can_setup.c ****     {
 228:Core/Src/can_setup.c ****         if (HAL_CAN_AddTxMessage(&hcan2, &txMsg2, canTx2, &canMailbox2) != HAL_OK)
 684              		.loc 1 228 0
 685 0012 0E4B     		ldr	r3, .L59+8
 686 0014 2246     		mov	r2, r4
 687 0016 0B49     		ldr	r1, .L59
 688 0018 0B48     		ldr	r0, .L59+4
 689 001a FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 690              	.LVL62:
 691 001e 80B1     		cbz	r0, .L55
 229:Core/Src/can_setup.c ****         {
 230:Core/Src/can_setup.c ****             HAL_Delay(1);
 692              		.loc 1 230 0
 693 0020 0120     		movs	r0, #1
 694 0022 FFF7FEFF 		bl	HAL_Delay
 695              	.LVL63:
 696 0026 10BD     		pop	{r4, pc}
 697              	.LVL64:
 698              	.L56:
 231:Core/Src/can_setup.c ****             // HAL_NVIC_SystemReset();
 232:Core/Src/can_setup.c ****         }
 233:Core/Src/can_setup.c ****     }
 234:Core/Src/can_setup.c ****     else
 235:Core/Src/can_setup.c ****     {
 236:Core/Src/can_setup.c ****         HAL_CAN_AbortTxRequest(&hcan2, CAN_TX_MAILBOX0);
 699              		.loc 1 236 0
 700 0028 074C     		ldr	r4, .L59+4
 701              	.LVL65:
 702 002a 0121     		movs	r1, #1
 703 002c 2046     		mov	r0, r4
 704 002e FFF7FEFF 		bl	HAL_CAN_AbortTxRequest
 705              	.LVL66:
 237:Core/Src/can_setup.c ****         HAL_CAN_AbortTxRequest(&hcan2, CAN_TX_MAILBOX1);
 706              		.loc 1 237 0
 707 0032 0221     		movs	r1, #2
 708 0034 2046     		mov	r0, r4
 709 0036 FFF7FEFF 		bl	HAL_CAN_AbortTxRequest
 710              	.LVL67:
 238:Core/Src/can_setup.c ****         HAL_CAN_AbortTxRequest(&hcan2, CAN_TX_MAILBOX2);
 711              		.loc 1 238 0
 712 003a 0421     		movs	r1, #4
 713 003c 2046     		mov	r0, r4
 714 003e FFF7FEFF 		bl	HAL_CAN_AbortTxRequest
 715              	.LVL68:
 716              	.L55:
 717 0042 10BD     		pop	{r4, pc}
 718              	.L60:
 719              		.align	2
 720              	.L59:
 721 0044 00000000 		.word	txMsg2
 722 0048 00000000 		.word	hcan2
 723 004c 00000000 		.word	canMailbox2
 724              		.cfi_endproc
 725              	.LFE137:
 727              		.section	.text.can3tx,"ax",%progbits
ARM GAS  /tmp/ccPYXuUB.s 			page 18


 728              		.align	1
 729              		.global	can3tx
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu fpv4-sp-d16
 735              	can3tx:
 736              	.LFB138:
 239:Core/Src/can_setup.c ****         // HAL_CAN_AddTxMessage(&hcan2, &txMsg2, canTx2, &canMailbox2);
 240:Core/Src/can_setup.c ****     }
 241:Core/Src/can_setup.c **** }
 242:Core/Src/can_setup.c **** 
 243:Core/Src/can_setup.c **** /*
 244:Core/Src/can_setup.c **** void c3tx(CAN_TxHeaderTypeDef *txMsg3, uint8_t *canTx3)
 245:Core/Src/can_setup.c **** {
 246:Core/Src/can_setup.c **** 
 247:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan3, txMsg3, canTx3, &canMailbox3);
 248:Core/Src/can_setup.c ****     txCycle3++;
 249:Core/Src/can_setup.c ****     if (txCycle3 >= 3)
 250:Core/Src/can_setup.c ****     {
 251:Core/Src/can_setup.c ****         HAL_Delay(1);
 252:Core/Src/can_setup.c ****         txCycle3 = 0;
 253:Core/Src/can_setup.c ****     }
 254:Core/Src/can_setup.c **** }
 255:Core/Src/can_setup.c **** */
 256:Core/Src/can_setup.c **** 
 257:Core/Src/can_setup.c **** void can3tx(uint16_t msgId, uint8_t DLC, uint8_t *canTx3)
 258:Core/Src/can_setup.c **** {
 737              		.loc 1 258 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              	.LVL69:
 742 0000 10B5     		push	{r4, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
 259:Core/Src/can_setup.c **** 
 260:Core/Src/can_setup.c ****     txMsg3.StdId = msgId;
 746              		.loc 1 260 0
 747 0002 0B4C     		ldr	r4, .L65
 748 0004 2060     		str	r0, [r4]
 261:Core/Src/can_setup.c ****     txMsg3.DLC = DLC;
 749              		.loc 1 261 0
 750 0006 2161     		str	r1, [r4, #16]
 262:Core/Src/can_setup.c ****     HAL_CAN_AddTxMessage(&hcan3, &txMsg3, canTx3, &canMailbox3);
 751              		.loc 1 262 0
 752 0008 0A4B     		ldr	r3, .L65+4
 753 000a 2146     		mov	r1, r4
 754              	.LVL70:
 755 000c 0A48     		ldr	r0, .L65+8
 756              	.LVL71:
 757 000e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 758              	.LVL72:
 263:Core/Src/can_setup.c ****     txCycle3++;
 759              		.loc 1 263 0
 760 0012 0A4B     		ldr	r3, .L65+12
ARM GAS  /tmp/ccPYXuUB.s 			page 19


 761 0014 1A68     		ldr	r2, [r3]
 762 0016 0132     		adds	r2, r2, #1
 763 0018 1A60     		str	r2, [r3]
 264:Core/Src/can_setup.c ****     if (txCycle3 >= 3)
 764              		.loc 1 264 0
 765 001a 1B68     		ldr	r3, [r3]
 766 001c 022B     		cmp	r3, #2
 767 001e 00DC     		bgt	.L64
 768              	.L61:
 769 0020 10BD     		pop	{r4, pc}
 770              	.L64:
 265:Core/Src/can_setup.c ****     {
 266:Core/Src/can_setup.c ****         HAL_Delay(1);
 771              		.loc 1 266 0
 772 0022 0120     		movs	r0, #1
 773 0024 FFF7FEFF 		bl	HAL_Delay
 774              	.LVL73:
 267:Core/Src/can_setup.c ****         txCycle3 = 0;
 775              		.loc 1 267 0
 776 0028 0022     		movs	r2, #0
 777 002a 044B     		ldr	r3, .L65+12
 778 002c 1A60     		str	r2, [r3]
 268:Core/Src/can_setup.c ****     }
 269:Core/Src/can_setup.c **** }
 779              		.loc 1 269 0
 780 002e F7E7     		b	.L61
 781              	.L66:
 782              		.align	2
 783              	.L65:
 784 0030 00000000 		.word	txMsg3
 785 0034 00000000 		.word	canMailbox3
 786 0038 00000000 		.word	hcan3
 787 003c 00000000 		.word	txCycle3
 788              		.cfi_endproc
 789              	.LFE138:
 791              		.comm	busFault,4,4
 792              		.comm	txCycle3,4,4
 793              		.comm	txCycle2,4,4
 794              		.comm	txCycle,4,4
 795              		.comm	canMailbox3,4,4
 796              		.comm	canMailbox2,4,4
 797              		.comm	canMailbox,4,4
 798              		.comm	canRx3,8,4
 799              		.comm	canRx2,8,4
 800              		.comm	canRx,8,4
 801              		.comm	txMsgExt3,24,4
 802              		.comm	txMsg3,24,4
 803              		.comm	rxMsg3,28,4
 804              		.comm	txMsgExt2,24,4
 805              		.comm	txMsg2,24,4
 806              		.comm	rxMsg2,28,4
 807              		.comm	txMsgExt,24,4
 808              		.comm	txMsg,24,4
 809              		.comm	rxMsg,28,4
 810              		.comm	sf5,40,4
 811              		.comm	sf4,40,4
 812              		.comm	sf3,40,4
ARM GAS  /tmp/ccPYXuUB.s 			page 20


 813              		.comm	sf2,40,4
 814              		.comm	sf,40,4
 815              		.comm	hcan3,40,4
 816              		.comm	hcan2,40,4
 817              		.comm	hcan1,40,4
 818              		.comm	watchdogBits,1,1
 819              		.comm	chargerOn,1,1
 820              		.comm	BMS,492,4
 821              		.text
 822              	.Letext0:
 823              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 824              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 825              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 826              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 827              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 828              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 829              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 830              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 831              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 832              		.file 11 "/usr/include/newlib/sys/lock.h"
 833              		.file 12 "/usr/include/newlib/sys/_types.h"
 834              		.file 13 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 835              		.file 14 "/usr/include/newlib/sys/reent.h"
 836              		.file 15 "Core/Inc/bms.h"
 837              		.file 16 "Core/Inc/can_setup.h"
 838              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 839              		.file 18 "Core/Inc/main.h"
ARM GAS  /tmp/ccPYXuUB.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 can_setup.c
     /tmp/ccPYXuUB.s:18     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccPYXuUB.s:25     .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccPYXuUB.s:127    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000078 $d
                            *COM*:0000000000000008 canRx
                            *COM*:000000000000001c rxMsg
                            *COM*:0000000000000028 hcan1
                            *COM*:00000000000001ec BMS
                            *COM*:0000000000000008 canRx3
                            *COM*:000000000000001c rxMsg3
                            *COM*:0000000000000028 hcan3
     /tmp/ccPYXuUB.s:141    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccPYXuUB.s:148    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccPYXuUB.s:237    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000064 $d
                            *COM*:0000000000000008 canRx2
                            *COM*:000000000000001c rxMsg2
                            *COM*:0000000000000028 hcan2
     /tmp/ccPYXuUB.s:250    .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccPYXuUB.s:257    .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccPYXuUB.s:270    .text.can2queue:0000000000000000 $t
     /tmp/ccPYXuUB.s:277    .text.can2queue:0000000000000000 can2queue
     /tmp/ccPYXuUB.s:289    .text.canSettings:0000000000000000 $t
     /tmp/ccPYXuUB.s:296    .text.canSettings:0000000000000000 canSettings
     /tmp/ccPYXuUB.s:573    .text.canSettings:0000000000000164 $d
                            *COM*:0000000000000004 busFault
                            *COM*:0000000000000018 txMsg
                            *COM*:0000000000000018 txMsgExt
                            *COM*:0000000000000028 sf
                            *COM*:0000000000000018 txMsg2
                            *COM*:0000000000000018 txMsgExt2
                            *COM*:0000000000000028 sf2
                            *COM*:0000000000000018 txMsg3
                            *COM*:0000000000000018 txMsgExt3
                            *COM*:0000000000000028 sf3
     /tmp/ccPYXuUB.s:590    .text.can1tx:0000000000000000 $t
     /tmp/ccPYXuUB.s:597    .text.can1tx:0000000000000000 can1tx
     /tmp/ccPYXuUB.s:646    .text.can1tx:0000000000000030 $d
                            *COM*:0000000000000004 canMailbox
                            *COM*:0000000000000004 txCycle
     /tmp/ccPYXuUB.s:654    .text.can2tx:0000000000000000 $t
     /tmp/ccPYXuUB.s:661    .text.can2tx:0000000000000000 can2tx
     /tmp/ccPYXuUB.s:721    .text.can2tx:0000000000000044 $d
                            *COM*:0000000000000004 canMailbox2
     /tmp/ccPYXuUB.s:728    .text.can3tx:0000000000000000 $t
     /tmp/ccPYXuUB.s:735    .text.can3tx:0000000000000000 can3tx
     /tmp/ccPYXuUB.s:784    .text.can3tx:0000000000000030 $d
                            *COM*:0000000000000004 canMailbox3
                            *COM*:0000000000000004 txCycle3
                            *COM*:0000000000000004 txCycle2
                            *COM*:0000000000000028 sf5
                            *COM*:0000000000000028 sf4
                            *COM*:0000000000000001 watchdogBits
                            *COM*:0000000000000001 chargerOn
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
ARM GAS  /tmp/ccPYXuUB.s 			page 22


HAL_CAN_GetRxMessage
decodeVolt
decodeTemp
Error_Handler
vehicleComms
HAL_CAN_ConfigFilter
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_AddTxMessage
HAL_Delay
HAL_CAN_GetTxMailboxesFreeLevel
HAL_CAN_AbortTxRequest
