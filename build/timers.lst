ARM GAS  /tmp/ccjGkGd6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvGetNextExpireTime:
  25              	.LFB17:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/ccjGkGd6.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** for the header files above, but not in this file, in order to generate the
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** correct privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_ACTIVE					( ( uint8_t ) 0x01 )
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_STATICALLY_ALLOCATED	( ( uint8_t ) 0x02 )
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_AUTORELOAD				( ( uint8_t ) 0x04 )
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl /* The old naming convention is used to prevent breaking kernel awar
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint8_t 				ucStatus;			/*<< Holds bits to say if the timer was statically allocated or not, and i
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/ccjGkGd6.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists.
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** breaks some kernel aware debuggers, and debuggers that reply on removing the
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static qualifier. */
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = { 0 };
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = { 0 };
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccjGkGd6.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
ARM GAS  /tmp/ccjGkGd6.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/ccjGkGd6.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values ret
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Status is thus far zero as the timer is not created statically
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and has not been started.  The autoreload bit may get set in
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = 0x00;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/ccjGkGd6.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Timers can be created statically or dynamically so note this
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			timer was created statically in case it is later deleted.  The
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			autoreload bit may get set in prvInitialiseNewTimer(). */
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
ARM GAS  /tmp/ccjGkGd6.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccjGkGd6.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
ARM GAS  /tmp/ccjGkGd6.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION( prvTimerTask, pvParameters )
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
ARM GAS  /tmp/ccjGkGd6.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
ARM GAS  /tmp/ccjGkGd6.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  27              		.loc 1 620 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  33              		.loc 1 630 0
  34 0000 064B     		ldr	r3, .L6
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 1368     		ldr	r3, [r2]
  37 0006 2BB9     		cbnz	r3, .L4
  38 0008 0123     		movs	r3, #1
  39              	.L2:
  40              		.loc 1 630 0 is_stmt 0 discriminator 4
  41 000a 0360     		str	r3, [r0]
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  42              		.loc 1 631 0 is_stmt 1 discriminator 4
  43 000c 23B9     		cbnz	r3, .L5
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  44              		.loc 1 633 0
  45 000e D368     		ldr	r3, [r2, #12]
  46 0010 1868     		ldr	r0, [r3]
  47              	.LVL1:
  48 0012 7047     		bx	lr
  49              	.LVL2:
  50              	.L4:
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  51              		.loc 1 630 0
ARM GAS  /tmp/ccjGkGd6.s 			page 13


  52 0014 0023     		movs	r3, #0
  53 0016 F8E7     		b	.L2
  54              	.L5:
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  55              		.loc 1 638 0
  56 0018 0020     		movs	r0, #0
  57              	.LVL3:
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  58              		.loc 1 642 0
  59 001a 7047     		bx	lr
  60              	.L7:
  61              		.align	2
  62              	.L6:
  63 001c 00000000 		.word	.LANCHOR0
  64              		.cfi_endproc
  65              	.LFE17:
  67              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	prvInsertTimerInActiveList:
  75              	.LFB19:
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
ARM GAS  /tmp/ccjGkGd6.s 			page 14


 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  76              		.loc 1 669 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              	.LVL4:
  81 0000 08B5     		push	{r3, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
  86              	.LVL5:
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  87              		.loc 1 672 0
  88 0002 4160     		str	r1, [r0, #4]
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  89              		.loc 1 673 0
  90 0004 0061     		str	r0, [r0, #16]
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  91              		.loc 1 675 0
  92 0006 9142     		cmp	r1, r2
  93 0008 0CD8     		bhi	.L9
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  94              		.loc 1 679 0
  95 000a D21A     		subs	r2, r2, r3
  96              	.LVL6:
  97 000c 8369     		ldr	r3, [r0, #24]
  98              	.LVL7:
  99 000e 9A42     		cmp	r2, r3
 100 0010 01D3     		bcc	.L15
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 101              		.loc 1 683 0
 102 0012 0120     		movs	r0, #1
 103              	.LVL8:
 104 0014 08BD     		pop	{r3, pc}
 105              	.LVL9:
 106              	.L15:
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 107              		.loc 1 687 0
 108 0016 011D     		adds	r1, r0, #4
 109              	.LVL10:
 110 0018 094B     		ldr	r3, .L16
 111 001a 1868     		ldr	r0, [r3]
 112              	.LVL11:
 113 001c FFF7FEFF 		bl	vListInsert
ARM GAS  /tmp/ccjGkGd6.s 			page 15


 114              	.LVL12:
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 115              		.loc 1 670 0
 116 0020 0020     		movs	r0, #0
 117 0022 08BD     		pop	{r3, pc}
 118              	.LVL13:
 119              	.L9:
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 120              		.loc 1 692 0
 121 0024 9A42     		cmp	r2, r3
 122 0026 01D2     		bcs	.L11
 123              		.loc 1 692 0 is_stmt 0 discriminator 1
 124 0028 9942     		cmp	r1, r3
 125 002a 06D2     		bcs	.L13
 126              	.L11:
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 127              		.loc 1 701 0 is_stmt 1
 128 002c 011D     		adds	r1, r0, #4
 129              	.LVL14:
 130 002e 054B     		ldr	r3, .L16+4
 131              	.LVL15:
 132 0030 1868     		ldr	r0, [r3]
 133              	.LVL16:
 134 0032 FFF7FEFF 		bl	vListInsert
 135              	.LVL17:
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136              		.loc 1 670 0
 137 0036 0020     		movs	r0, #0
 138 0038 08BD     		pop	{r3, pc}
 139              	.LVL18:
 140              	.L13:
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 141              		.loc 1 697 0
 142 003a 0120     		movs	r0, #1
 143              	.LVL19:
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 144              		.loc 1 706 0
 145 003c 08BD     		pop	{r3, pc}
 146              	.LVL20:
 147              	.L17:
 148 003e 00BF     		.align	2
ARM GAS  /tmp/ccjGkGd6.s 			page 16


 149              	.L16:
 150 0040 00000000 		.word	.LANCHOR1
 151 0044 00000000 		.word	.LANCHOR0
 152              		.cfi_endproc
 153              	.LFE19:
 155              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 156              		.align	1
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	prvCheckForValidListAndQueue:
 163              	.LFB22:
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
ARM GAS  /tmp/ccjGkGd6.s 			page 17


 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_FROM_ISR :
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET :
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET_FROM_ISR :
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list. */
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
ARM GAS  /tmp/ccjGkGd6.s 			page 18


 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer has already been removed from the active list,
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						just free up the memory if the memory was dynamically
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						allocated. */
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#else
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* If dynamic allocation is not enabled, the memory
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						could not have been dynamically allocated. So there is
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						no need to free the memory - just mark the timer as
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						"not active". */
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
ARM GAS  /tmp/ccjGkGd6.s 			page 19


 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 v
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 164              		.loc 1 917 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccjGkGd6.s 			page 20


 168 0000 30B5     		push	{r4, r5, lr}
 169              	.LCFI1:
 170              		.cfi_def_cfa_offset 12
 171              		.cfi_offset 4, -12
 172              		.cfi_offset 5, -8
 173              		.cfi_offset 14, -4
 174 0002 83B0     		sub	sp, sp, #12
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 24
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 177              		.loc 1 921 0
 178 0004 FFF7FEFF 		bl	vPortEnterCritical
 179              	.LVL21:
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 180              		.loc 1 923 0
 181 0008 114B     		ldr	r3, .L22
 182 000a 1B68     		ldr	r3, [r3]
 183 000c 1BB1     		cbz	r3, .L21
 184              	.L19:
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  /tmp/ccjGkGd6.s 			page 21


 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 185              		.loc 1 963 0
 186 000e FFF7FEFF 		bl	vPortExitCritical
 187              	.LVL22:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 188              		.loc 1 964 0
 189 0012 03B0     		add	sp, sp, #12
 190              	.LCFI3:
 191              		.cfi_remember_state
 192              		.cfi_def_cfa_offset 12
 193              		@ sp needed
 194 0014 30BD     		pop	{r4, r5, pc}
 195              	.L21:
 196              	.LCFI4:
 197              		.cfi_restore_state
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 198              		.loc 1 925 0
 199 0016 0F4D     		ldr	r5, .L22+4
 200 0018 2846     		mov	r0, r5
 201 001a FFF7FEFF 		bl	vListInitialise
 202              	.LVL23:
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 203              		.loc 1 926 0
 204 001e 0E4C     		ldr	r4, .L22+8
 205 0020 2046     		mov	r0, r4
 206 0022 FFF7FEFF 		bl	vListInitialise
 207              	.LVL24:
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 208              		.loc 1 927 0
 209 0026 0D4B     		ldr	r3, .L22+12
 210 0028 1D60     		str	r5, [r3]
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 211              		.loc 1 928 0
 212 002a 0D4B     		ldr	r3, .L22+16
 213 002c 1C60     		str	r4, [r3]
 214              	.LBB43:
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 215              		.loc 1 937 0
 216 002e 0023     		movs	r3, #0
 217 0030 0093     		str	r3, [sp]
 218 0032 0C4B     		ldr	r3, .L22+20
 219 0034 0C4A     		ldr	r2, .L22+24
 220 0036 1021     		movs	r1, #16
 221 0038 0A20     		movs	r0, #10
 222 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 223              	.LVL25:
 224 003e 044B     		ldr	r3, .L22
 225 0040 1860     		str	r0, [r3]
 226              	.LBE43:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 227              		.loc 1 947 0
 228 0042 0028     		cmp	r0, #0
ARM GAS  /tmp/ccjGkGd6.s 			page 22


 229 0044 E3D0     		beq	.L19
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 230              		.loc 1 949 0
 231 0046 0949     		ldr	r1, .L22+28
 232 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 233              	.LVL26:
 234 004c DFE7     		b	.L19
 235              	.L23:
 236 004e 00BF     		.align	2
 237              	.L22:
 238 0050 00000000 		.word	.LANCHOR2
 239 0054 00000000 		.word	.LANCHOR3
 240 0058 00000000 		.word	.LANCHOR4
 241 005c 00000000 		.word	.LANCHOR0
 242 0060 00000000 		.word	.LANCHOR1
 243 0064 00000000 		.word	.LANCHOR5
 244 0068 00000000 		.word	.LANCHOR6
 245 006c 00000000 		.word	.LC0
 246              		.cfi_endproc
 247              	.LFE22:
 249              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 250              		.align	1
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 254              		.fpu fpv4-sp-d16
 256              	prvInitialiseNewTimer:
 257              	.LFB7:
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 258              		.loc 1 355 0
 259              		.cfi_startproc
 260              		@ args = 8, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL27:
 263 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 264              	.LCFI5:
 265              		.cfi_def_cfa_offset 24
 266              		.cfi_offset 4, -24
 267              		.cfi_offset 5, -20
 268              		.cfi_offset 6, -16
 269              		.cfi_offset 7, -12
 270              		.cfi_offset 8, -8
 271              		.cfi_offset 14, -4
 272 0004 079C     		ldr	r4, [sp, #28]
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 273              		.loc 1 357 0
 274 0006 41B9     		cbnz	r1, .L25
 275              	.LBB44:
 276              	.LBB45:
 277              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
ARM GAS  /tmp/ccjGkGd6.s 			page 23


   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
ARM GAS  /tmp/ccjGkGd6.s 			page 24


  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccjGkGd6.s 			page 25


 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
ARM GAS  /tmp/ccjGkGd6.s 			page 26


 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 278              		.loc 2 195 0
 279              		.syntax unified
 280              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 281 0008 4FF05003 			mov r3, #80												
 282 000c 83F31188 		msr basepri, r3											
 283 0010 BFF36F8F 		isb														
 284 0014 BFF34F8F 		dsb														
 285              	
 286              	@ 0 "" 2
 287              	.LVL28:
 288              		.thumb
 289              		.syntax unified
 290              	.L26:
 291 0018 FEE7     		b	.L26
 292              	.LVL29:
 293              	.L25:
 294 001a 0F46     		mov	r7, r1
 295              	.LBE45:
 296              	.LBE44:
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 297              		.loc 1 359 0
 298 001c A4B1     		cbz	r4, .L24
 299 001e 1E46     		mov	r6, r3
 300 0020 1546     		mov	r5, r2
 301 0022 8046     		mov	r8, r0
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 302              		.loc 1 363 0
 303 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 304              	.LVL30:
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 305              		.loc 1 367 0
 306 0028 C4F80080 		str	r8, [r4]
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 307              		.loc 1 368 0
 308 002c A761     		str	r7, [r4, #24]
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 309              		.loc 1 369 0
 310 002e E661     		str	r6, [r4, #28]
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 311              		.loc 1 370 0
ARM GAS  /tmp/ccjGkGd6.s 			page 27


 312 0030 069B     		ldr	r3, [sp, #24]
 313 0032 2362     		str	r3, [r4, #32]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 314              		.loc 1 371 0
 315 0034 201D     		adds	r0, r4, #4
 316 0036 FFF7FEFF 		bl	vListInitialiseItem
 317              	.LVL31:
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 318              		.loc 1 372 0
 319 003a 2DB1     		cbz	r5, .L24
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 320              		.loc 1 374 0
 321 003c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 322 0040 43F00403 		orr	r3, r3, #4
 323 0044 84F82830 		strb	r3, [r4, #40]
 324              	.LVL32:
 325              	.L24:
 326 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 327              		.cfi_endproc
 328              	.LFE7:
 330              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 331              		.align	1
 332              		.global	xTimerCreateTimerTask
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	xTimerCreateTimerTask:
 339              	.LFB4:
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 340              		.loc 1 228 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 16
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 10B5     		push	{r4, lr}
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 349 0002 88B0     		sub	sp, sp, #32
 350              	.LCFI7:
 351              		.cfi_def_cfa_offset 40
 352              	.LVL33:
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 353              		.loc 1 235 0
 354 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 355              	.LVL34:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 356              		.loc 1 237 0
 357 0008 154B     		ldr	r3, .L38
 358 000a 1B68     		ldr	r3, [r3]
 359 000c 1BB3     		cbz	r3, .L34
 360              	.LBB46:
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 361              		.loc 1 241 0
 362 000e 0024     		movs	r4, #0
 363 0010 0594     		str	r4, [sp, #20]
ARM GAS  /tmp/ccjGkGd6.s 			page 28


 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 364              		.loc 1 242 0
 365 0012 0694     		str	r4, [sp, #24]
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 366              		.loc 1 245 0
 367 0014 07AA     		add	r2, sp, #28
 368 0016 06A9     		add	r1, sp, #24
 369 0018 05A8     		add	r0, sp, #20
 370 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 371              	.LVL35:
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 372              		.loc 1 246 0
 373 001e 059B     		ldr	r3, [sp, #20]
 374 0020 0293     		str	r3, [sp, #8]
 375 0022 069B     		ldr	r3, [sp, #24]
 376 0024 0193     		str	r3, [sp, #4]
 377 0026 0223     		movs	r3, #2
 378 0028 0093     		str	r3, [sp]
 379 002a 2346     		mov	r3, r4
 380 002c 079A     		ldr	r2, [sp, #28]
 381 002e 0D49     		ldr	r1, .L38+4
 382 0030 0D48     		ldr	r0, .L38+8
 383 0032 FFF7FEFF 		bl	xTaskCreateStatic
 384              	.LVL36:
 385 0036 0D4B     		ldr	r3, .L38+12
 386 0038 1860     		str	r0, [r3]
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 387              		.loc 1 254 0
 388 003a 50B1     		cbz	r0, .L37
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 389              		.loc 1 256 0
 390 003c 0120     		movs	r0, #1
 391              	.LVL37:
 392              	.L30:
 393              	.LBE46:
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 394              		.loc 1 275 0
 395 003e 60B9     		cbnz	r0, .L29
 396              	.LBB47:
 397              	.LBB48:
 398              		.loc 2 195 0
 399              		.syntax unified
 400              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 401 0040 4FF05003 			mov r3, #80												
 402 0044 83F31188 		msr basepri, r3											
 403 0048 BFF36F8F 		isb														
 404 004c BFF34F8F 		dsb														
 405              	
 406              	@ 0 "" 2
 407              	.LVL38:
 408              		.thumb
 409              		.syntax unified
 410              	.L33:
 411 0050 FEE7     		b	.L33
 412              	.LVL39:
 413              	.L37:
 414              	.LBE48:
ARM GAS  /tmp/ccjGkGd6.s 			page 29


 415              	.LBE47:
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 416              		.loc 1 229 0
 417 0052 2046     		mov	r0, r4
 418 0054 F3E7     		b	.L30
 419              	.L34:
 420 0056 0020     		movs	r0, #0
 421 0058 F1E7     		b	.L30
 422              	.LVL40:
 423              	.L29:
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 424              		.loc 1 277 0
 425 005a 08B0     		add	sp, sp, #32
 426              	.LCFI8:
 427              		.cfi_def_cfa_offset 8
 428              		@ sp needed
 429 005c 10BD     		pop	{r4, pc}
 430              	.L39:
 431 005e 00BF     		.align	2
 432              	.L38:
 433 0060 00000000 		.word	.LANCHOR2
 434 0064 00000000 		.word	.LC1
 435 0068 00000000 		.word	prvTimerTask
 436 006c 00000000 		.word	.LANCHOR7
 437              		.cfi_endproc
 438              	.LFE4:
 440              		.section	.text.xTimerCreate,"ax",%progbits
 441              		.align	1
 442              		.global	xTimerCreate
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv4-sp-d16
 448              	xTimerCreate:
 449              	.LFB5:
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 450              		.loc 1 287 0
 451              		.cfi_startproc
 452              		@ args = 4, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL41:
 455 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 456              	.LCFI9:
 457              		.cfi_def_cfa_offset 24
 458              		.cfi_offset 4, -24
 459              		.cfi_offset 5, -20
 460              		.cfi_offset 6, -16
 461              		.cfi_offset 7, -12
 462              		.cfi_offset 8, -8
 463              		.cfi_offset 14, -4
 464 0004 82B0     		sub	sp, sp, #8
 465              	.LCFI10:
 466              		.cfi_def_cfa_offset 32
 467 0006 0546     		mov	r5, r0
 468 0008 0E46     		mov	r6, r1
 469 000a 1746     		mov	r7, r2
 470 000c 9846     		mov	r8, r3
ARM GAS  /tmp/ccjGkGd6.s 			page 30


 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 471              		.loc 1 290 0
 472 000e 2C20     		movs	r0, #44
 473              	.LVL42:
 474 0010 FFF7FEFF 		bl	pvPortMalloc
 475              	.LVL43:
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 476              		.loc 1 292 0
 477 0014 0446     		mov	r4, r0
 478 0016 58B1     		cbz	r0, .L40
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 479              		.loc 1 297 0
 480 0018 0023     		movs	r3, #0
 481 001a 80F82830 		strb	r3, [r0, #40]
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 482              		.loc 1 298 0
 483 001e 0190     		str	r0, [sp, #4]
 484 0020 089B     		ldr	r3, [sp, #32]
 485 0022 0093     		str	r3, [sp]
 486 0024 4346     		mov	r3, r8
 487 0026 3A46     		mov	r2, r7
 488 0028 3146     		mov	r1, r6
 489 002a 2846     		mov	r0, r5
 490              	.LVL44:
 491 002c FFF7FEFF 		bl	prvInitialiseNewTimer
 492              	.LVL45:
 493              	.L40:
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 494              		.loc 1 302 0
 495 0030 2046     		mov	r0, r4
 496 0032 02B0     		add	sp, sp, #8
 497              	.LCFI11:
 498              		.cfi_def_cfa_offset 24
 499              		@ sp needed
 500 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 501              		.cfi_endproc
 502              	.LFE5:
 504              		.section	.text.xTimerCreateStatic,"ax",%progbits
 505              		.align	1
 506              		.global	xTimerCreateStatic
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu fpv4-sp-d16
 512              	xTimerCreateStatic:
 513              	.LFB6:
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 514              		.loc 1 315 0
 515              		.cfi_startproc
 516              		@ args = 8, pretend = 0, frame = 8
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              	.LVL46:
 519 0000 30B5     		push	{r4, r5, lr}
 520              	.LCFI12:
 521              		.cfi_def_cfa_offset 12
 522              		.cfi_offset 4, -12
 523              		.cfi_offset 5, -8
ARM GAS  /tmp/ccjGkGd6.s 			page 31


 524              		.cfi_offset 14, -4
 525 0002 85B0     		sub	sp, sp, #20
 526              	.LCFI13:
 527              		.cfi_def_cfa_offset 32
 528 0004 099C     		ldr	r4, [sp, #36]
 529              	.LBB49:
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 530              		.loc 1 323 0
 531 0006 2C25     		movs	r5, #44
 532 0008 0395     		str	r5, [sp, #12]
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 533              		.loc 1 324 0
 534 000a 039D     		ldr	r5, [sp, #12]
 535 000c 2C2D     		cmp	r5, #44
 536 000e 08D0     		beq	.L44
 537              	.LBB50:
 538              	.LBB51:
 539              		.loc 2 195 0
 540              		.syntax unified
 541              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 542 0010 4FF05003 			mov r3, #80												
 543 0014 83F31188 		msr basepri, r3											
 544 0018 BFF36F8F 		isb														
 545 001c BFF34F8F 		dsb														
 546              	
 547              	@ 0 "" 2
 548              	.LVL47:
 549              		.thumb
 550              		.syntax unified
 551              	.L45:
 552 0020 FEE7     		b	.L45
 553              	.LVL48:
 554              	.L44:
 555              	.LBE51:
 556              	.LBE50:
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 557              		.loc 1 325 0
 558 0022 039D     		ldr	r5, [sp, #12]
 559              	.LBE49:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 560              		.loc 1 330 0
 561 0024 44B9     		cbnz	r4, .L46
 562              	.LBB52:
 563              	.LBB53:
 564              		.loc 2 195 0
 565              		.syntax unified
 566              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 567 0026 4FF05003 			mov r3, #80												
 568 002a 83F31188 		msr basepri, r3											
 569 002e BFF36F8F 		isb														
 570 0032 BFF34F8F 		dsb														
 571              	
 572              	@ 0 "" 2
 573              	.LVL49:
 574              		.thumb
 575              		.syntax unified
 576              	.L47:
ARM GAS  /tmp/ccjGkGd6.s 			page 32


 577 0036 FEE7     		b	.L47
 578              	.LVL50:
 579              	.L46:
 580              	.LBE53:
 581              	.LBE52:
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 582              		.loc 1 338 0
 583 0038 0225     		movs	r5, #2
 584 003a 84F82850 		strb	r5, [r4, #40]
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 585              		.loc 1 340 0
 586 003e 0194     		str	r4, [sp, #4]
 587 0040 089D     		ldr	r5, [sp, #32]
 588 0042 0095     		str	r5, [sp]
 589 0044 FFF7FEFF 		bl	prvInitialiseNewTimer
 590              	.LVL51:
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 591              		.loc 1 344 0
 592 0048 2046     		mov	r0, r4
 593 004a 05B0     		add	sp, sp, #20
 594              	.LCFI14:
 595              		.cfi_def_cfa_offset 12
 596              		@ sp needed
 597 004c 30BD     		pop	{r4, r5, pc}
 598              		.cfi_endproc
 599              	.LFE6:
 601              		.section	.text.xTimerGenericCommand,"ax",%progbits
 602              		.align	1
 603              		.global	xTimerGenericCommand
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu fpv4-sp-d16
 609              	xTimerGenericCommand:
 610              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 611              		.loc 1 382 0
 612              		.cfi_startproc
 613              		@ args = 4, pretend = 0, frame = 16
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              	.LVL52:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 616              		.loc 1 386 0
 617 0000 C0B1     		cbz	r0, .L58
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 618              		.loc 1 382 0
 619 0002 30B5     		push	{r4, r5, lr}
 620              	.LCFI15:
 621              		.cfi_def_cfa_offset 12
 622              		.cfi_offset 4, -12
 623              		.cfi_offset 5, -8
 624              		.cfi_offset 14, -4
 625 0004 85B0     		sub	sp, sp, #20
 626              	.LCFI16:
 627              		.cfi_def_cfa_offset 32
 628 0006 1546     		mov	r5, r2
 629 0008 0446     		mov	r4, r0
ARM GAS  /tmp/ccjGkGd6.s 			page 33


 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 630              		.loc 1 390 0
 631 000a 174A     		ldr	r2, .L60
 632              	.LVL53:
 633 000c 1068     		ldr	r0, [r2]
 634              	.LVL54:
 635 000e 40B3     		cbz	r0, .L55
 636 0010 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 637              		.loc 1 393 0
 638 0012 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 639              		.loc 1 394 0
 640 0014 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641              		.loc 1 395 0
 642 0016 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 643              		.loc 1 397 0
 644 0018 0529     		cmp	r1, #5
 645 001a 1CDC     		bgt	.L53
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 646              		.loc 1 399 0
 647 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 648              	.LVL55:
 649 0020 0228     		cmp	r0, #2
 650 0022 10D0     		beq	.L59
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 651              		.loc 1 405 0
 652 0024 0023     		movs	r3, #0
 653 0026 1A46     		mov	r2, r3
 654 0028 6946     		mov	r1, sp
 655 002a 0F48     		ldr	r0, .L60
 656 002c 0068     		ldr	r0, [r0]
 657 002e FFF7FEFF 		bl	xQueueGenericSend
 658              	.LVL56:
 659 0032 14E0     		b	.L49
 660              	.LVL57:
 661              	.L58:
 662              	.LCFI17:
 663              		.cfi_def_cfa_offset 0
 664              		.cfi_restore 4
 665              		.cfi_restore 5
 666              		.cfi_restore 14
 667              	.LBB54:
 668              	.LBB55:
 669              		.loc 2 195 0
 670              		.syntax unified
 671              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 672 0034 4FF05003 			mov r3, #80												
 673 0038 83F31188 		msr basepri, r3											
 674 003c BFF36F8F 		isb														
 675 0040 BFF34F8F 		dsb														
 676              	
 677              	@ 0 "" 2
 678              	.LVL58:
 679              		.thumb
ARM GAS  /tmp/ccjGkGd6.s 			page 34


 680              		.syntax unified
 681              	.L51:
 682 0044 FEE7     		b	.L51
 683              	.LVL59:
 684              	.L59:
 685              	.LCFI18:
 686              		.cfi_def_cfa_offset 32
 687              		.cfi_offset 4, -12
 688              		.cfi_offset 5, -8
 689              		.cfi_offset 14, -4
 690              	.LBE55:
 691              	.LBE54:
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 692              		.loc 1 401 0
 693 0046 0023     		movs	r3, #0
 694 0048 089A     		ldr	r2, [sp, #32]
 695 004a 6946     		mov	r1, sp
 696 004c 0648     		ldr	r0, .L60
 697 004e 0068     		ldr	r0, [r0]
 698 0050 FFF7FEFF 		bl	xQueueGenericSend
 699              	.LVL60:
 700 0054 03E0     		b	.L49
 701              	.LVL61:
 702              	.L53:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 703              		.loc 1 410 0
 704 0056 0023     		movs	r3, #0
 705 0058 6946     		mov	r1, sp
 706              	.LVL62:
 707 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 708              	.LVL63:
 709              	.L49:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 710              		.loc 1 421 0
 711 005e 05B0     		add	sp, sp, #20
 712              	.LCFI19:
 713              		.cfi_remember_state
 714              		.cfi_def_cfa_offset 12
 715              		@ sp needed
 716 0060 30BD     		pop	{r4, r5, pc}
 717              	.LVL64:
 718              	.L55:
 719              	.LCFI20:
 720              		.cfi_restore_state
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 721              		.loc 1 383 0
 722 0062 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 723              		.loc 1 420 0
 724 0064 FBE7     		b	.L49
 725              	.L61:
 726 0066 00BF     		.align	2
 727              	.L60:
 728 0068 00000000 		.word	.LANCHOR2
 729              		.cfi_endproc
 730              	.LFE8:
 732              		.section	.text.prvSwitchTimerLists,"ax",%progbits
ARM GAS  /tmp/ccjGkGd6.s 			page 35


 733              		.align	1
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
 739              	prvSwitchTimerLists:
 740              	.LFB21:
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 741              		.loc 1 858 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745 0000 70B5     		push	{r4, r5, r6, lr}
 746              	.LCFI21:
 747              		.cfi_def_cfa_offset 16
 748              		.cfi_offset 4, -16
 749              		.cfi_offset 5, -12
 750              		.cfi_offset 6, -8
 751              		.cfi_offset 14, -4
 752 0002 82B0     		sub	sp, sp, #8
 753              	.LCFI22:
 754              		.cfi_def_cfa_offset 24
 755              	.L64:
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 756              		.loc 1 868 0
 757 0004 1B4B     		ldr	r3, .L71
 758 0006 1B68     		ldr	r3, [r3]
 759 0008 1A68     		ldr	r2, [r3]
 760 000a 62B3     		cbz	r2, .L70
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 761              		.loc 1 870 0
 762 000c DB68     		ldr	r3, [r3, #12]
 763 000e 1E68     		ldr	r6, [r3]
 764              	.LVL65:
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 765              		.loc 1 873 0
 766 0010 DC68     		ldr	r4, [r3, #12]
 767              	.LVL66:
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 768              		.loc 1 874 0
 769 0012 251D     		adds	r5, r4, #4
 770 0014 2846     		mov	r0, r5
 771 0016 FFF7FEFF 		bl	uxListRemove
 772              	.LVL67:
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 773              		.loc 1 880 0
 774 001a 236A     		ldr	r3, [r4, #32]
 775 001c 2046     		mov	r0, r4
 776 001e 9847     		blx	r3
 777              	.LVL68:
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 778              		.loc 1 882 0
 779 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 780 0024 13F0040F 		tst	r3, #4
 781 0028 ECD0     		beq	.L64
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 782              		.loc 1 890 0
ARM GAS  /tmp/ccjGkGd6.s 			page 36


 783 002a A369     		ldr	r3, [r4, #24]
 784 002c 3344     		add	r3, r3, r6
 785              	.LVL69:
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 786              		.loc 1 891 0
 787 002e 9E42     		cmp	r6, r3
 788 0030 07D2     		bcs	.L65
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 789              		.loc 1 893 0
 790 0032 6360     		str	r3, [r4, #4]
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 791              		.loc 1 894 0
 792 0034 2461     		str	r4, [r4, #16]
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 793              		.loc 1 895 0
 794 0036 2946     		mov	r1, r5
 795 0038 0E4B     		ldr	r3, .L71
 796              	.LVL70:
 797 003a 1868     		ldr	r0, [r3]
 798 003c FFF7FEFF 		bl	vListInsert
 799              	.LVL71:
 800 0040 E0E7     		b	.L64
 801              	.LVL72:
 802              	.L65:
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 803              		.loc 1 899 0
 804 0042 0021     		movs	r1, #0
 805 0044 0091     		str	r1, [sp]
 806 0046 0B46     		mov	r3, r1
 807              	.LVL73:
 808 0048 3246     		mov	r2, r6
 809 004a 2046     		mov	r0, r4
 810 004c FFF7FEFF 		bl	xTimerGenericCommand
 811              	.LVL74:
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 812              		.loc 1 900 0
 813 0050 0028     		cmp	r0, #0
 814 0052 D7D1     		bne	.L64
 815              	.LBB56:
 816              	.LBB57:
 817              		.loc 2 195 0
 818              		.syntax unified
 819              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 820 0054 4FF05003 			mov r3, #80												
 821 0058 83F31188 		msr basepri, r3											
 822 005c BFF36F8F 		isb														
 823 0060 BFF34F8F 		dsb														
 824              	
 825              	@ 0 "" 2
 826              	.LVL75:
 827              		.thumb
 828              		.syntax unified
 829              	.L67:
 830 0064 FEE7     		b	.L67
 831              	.LVL76:
 832              	.L70:
 833              	.LBE57:
ARM GAS  /tmp/ccjGkGd6.s 			page 37


 834              	.LBE56:
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 835              		.loc 1 911 0
 836 0066 044A     		ldr	r2, .L71+4
 837 0068 1068     		ldr	r0, [r2]
 838 006a 0249     		ldr	r1, .L71
 839 006c 0860     		str	r0, [r1]
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 840              		.loc 1 912 0
 841 006e 1360     		str	r3, [r2]
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 842              		.loc 1 913 0
 843 0070 02B0     		add	sp, sp, #8
 844              	.LCFI23:
 845              		.cfi_def_cfa_offset 16
 846              		@ sp needed
 847 0072 70BD     		pop	{r4, r5, r6, pc}
 848              	.L72:
 849              		.align	2
 850              	.L71:
 851 0074 00000000 		.word	.LANCHOR0
 852 0078 00000000 		.word	.LANCHOR1
 853              		.cfi_endproc
 854              	.LFE21:
 856              		.section	.text.prvSampleTimeNow,"ax",%progbits
 857              		.align	1
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv4-sp-d16
 863              	prvSampleTimeNow:
 864              	.LFB18:
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 865              		.loc 1 646 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 0, uses_anonymous_args = 0
 869              	.LVL77:
 870 0000 38B5     		push	{r3, r4, r5, lr}
 871              	.LCFI24:
 872              		.cfi_def_cfa_offset 16
 873              		.cfi_offset 3, -16
 874              		.cfi_offset 4, -12
 875              		.cfi_offset 5, -8
 876              		.cfi_offset 14, -4
 877 0002 0546     		mov	r5, r0
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 878              		.loc 1 650 0
 879 0004 FFF7FEFF 		bl	xTaskGetTickCount
 880              	.LVL78:
 881 0008 0446     		mov	r4, r0
 882              	.LVL79:
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 883              		.loc 1 652 0
 884 000a 074B     		ldr	r3, .L78
 885 000c 1B68     		ldr	r3, [r3]
 886 000e 9842     		cmp	r0, r3
ARM GAS  /tmp/ccjGkGd6.s 			page 38


 887 0010 05D3     		bcc	.L77
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 888              		.loc 1 659 0
 889 0012 0023     		movs	r3, #0
 890 0014 2B60     		str	r3, [r5]
 891              	.LVL80:
 892              	.L75:
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 893              		.loc 1 662 0
 894 0016 044B     		ldr	r3, .L78
 895 0018 1C60     		str	r4, [r3]
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 896              		.loc 1 665 0
 897 001a 2046     		mov	r0, r4
 898 001c 38BD     		pop	{r3, r4, r5, pc}
 899              	.LVL81:
 900              	.L77:
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 901              		.loc 1 654 0
 902 001e FFF7FEFF 		bl	prvSwitchTimerLists
 903              	.LVL82:
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 904              		.loc 1 655 0
 905 0022 0123     		movs	r3, #1
 906 0024 2B60     		str	r3, [r5]
 907 0026 F6E7     		b	.L75
 908              	.L79:
 909              		.align	2
 910              	.L78:
 911 0028 00000000 		.word	.LANCHOR8
 912              		.cfi_endproc
 913              	.LFE18:
 915              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 916              		.align	1
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 920              		.fpu fpv4-sp-d16
 922              	prvProcessExpiredTimer:
 923              	.LFB14:
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 924              		.loc 1 483 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              	.LVL83:
 929 0000 70B5     		push	{r4, r5, r6, lr}
 930              	.LCFI25:
 931              		.cfi_def_cfa_offset 16
 932              		.cfi_offset 4, -16
 933              		.cfi_offset 5, -12
 934              		.cfi_offset 6, -8
 935              		.cfi_offset 14, -4
 936 0002 82B0     		sub	sp, sp, #8
 937              	.LCFI26:
 938              		.cfi_def_cfa_offset 24
 939 0004 0546     		mov	r5, r0
ARM GAS  /tmp/ccjGkGd6.s 			page 39


 940 0006 0E46     		mov	r6, r1
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 941              		.loc 1 485 0
 942 0008 174B     		ldr	r3, .L86
 943 000a 1B68     		ldr	r3, [r3]
 944 000c DB68     		ldr	r3, [r3, #12]
 945 000e DC68     		ldr	r4, [r3, #12]
 946              	.LVL84:
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 947              		.loc 1 489 0
 948 0010 201D     		adds	r0, r4, #4
 949              	.LVL85:
 950 0012 FFF7FEFF 		bl	uxListRemove
 951              	.LVL86:
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 952              		.loc 1 494 0
 953 0016 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 954 001a 13F0040F 		tst	r3, #4
 955 001e 08D1     		bne	.L85
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 956              		.loc 1 514 0
 957 0020 23F00103 		bic	r3, r3, #1
 958 0024 84F82830 		strb	r3, [r4, #40]
 959              	.L82:
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 960              		.loc 1 519 0
 961 0028 236A     		ldr	r3, [r4, #32]
 962 002a 2046     		mov	r0, r4
 963 002c 9847     		blx	r3
 964              	.LVL87:
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 965              		.loc 1 520 0
 966 002e 02B0     		add	sp, sp, #8
 967              	.LCFI27:
 968              		.cfi_remember_state
 969              		.cfi_def_cfa_offset 16
 970              		@ sp needed
 971 0030 70BD     		pop	{r4, r5, r6, pc}
 972              	.LVL88:
 973              	.L85:
 974              	.LCFI28:
 975              		.cfi_restore_state
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 976              		.loc 1 499 0
 977 0032 A169     		ldr	r1, [r4, #24]
 978 0034 2B46     		mov	r3, r5
 979 0036 3246     		mov	r2, r6
 980 0038 2944     		add	r1, r1, r5
 981 003a 2046     		mov	r0, r4
 982 003c FFF7FEFF 		bl	prvInsertTimerInActiveList
 983              	.LVL89:
 984 0040 0028     		cmp	r0, #0
 985 0042 F1D0     		beq	.L82
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 986              		.loc 1 503 0
 987 0044 0021     		movs	r1, #0
 988 0046 0091     		str	r1, [sp]
ARM GAS  /tmp/ccjGkGd6.s 			page 40


 989 0048 0B46     		mov	r3, r1
 990 004a 2A46     		mov	r2, r5
 991 004c 2046     		mov	r0, r4
 992 004e FFF7FEFF 		bl	xTimerGenericCommand
 993              	.LVL90:
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 994              		.loc 1 504 0
 995 0052 0028     		cmp	r0, #0
 996 0054 E8D1     		bne	.L82
 997              	.LBB58:
 998              	.LBB59:
 999              		.loc 2 195 0
 1000              		.syntax unified
 1001              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1002 0056 4FF05003 			mov r3, #80												
 1003 005a 83F31188 		msr basepri, r3											
 1004 005e BFF36F8F 		isb														
 1005 0062 BFF34F8F 		dsb														
 1006              	
 1007              	@ 0 "" 2
 1008              	.LVL91:
 1009              		.thumb
 1010              		.syntax unified
 1011              	.L83:
 1012 0066 FEE7     		b	.L83
 1013              	.L87:
 1014              		.align	2
 1015              	.L86:
 1016 0068 00000000 		.word	.LANCHOR0
 1017              	.LBE59:
 1018              	.LBE58:
 1019              		.cfi_endproc
 1020              	.LFE14:
 1022              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 1023              		.align	1
 1024              		.syntax unified
 1025              		.thumb
 1026              		.thumb_func
 1027              		.fpu fpv4-sp-d16
 1029              	prvProcessTimerOrBlockTask:
 1030              	.LFB16:
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 1031              		.loc 1 560 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 8
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              	.LVL92:
 1036 0000 70B5     		push	{r4, r5, r6, lr}
 1037              	.LCFI29:
 1038              		.cfi_def_cfa_offset 16
 1039              		.cfi_offset 4, -16
 1040              		.cfi_offset 5, -12
 1041              		.cfi_offset 6, -8
 1042              		.cfi_offset 14, -4
 1043 0002 82B0     		sub	sp, sp, #8
 1044              	.LCFI30:
 1045              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccjGkGd6.s 			page 41


 1046 0004 0646     		mov	r6, r0
 1047 0006 0C46     		mov	r4, r1
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1048              		.loc 1 564 0
 1049 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1050              	.LVL93:
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1051              		.loc 1 571 0
 1052 000c 01A8     		add	r0, sp, #4
 1053 000e FFF7FEFF 		bl	prvSampleTimeNow
 1054              	.LVL94:
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1055              		.loc 1 572 0
 1056 0012 019B     		ldr	r3, [sp, #4]
 1057 0014 2BBB     		cbnz	r3, .L89
 1058 0016 0546     		mov	r5, r0
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1059              		.loc 1 575 0
 1060 0018 0CB9     		cbnz	r4, .L90
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1061              		.loc 1 575 0 is_stmt 0 discriminator 1
 1062 001a B042     		cmp	r0, r6
 1063 001c 18D2     		bcs	.L95
 1064              	.L90:
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1065              		.loc 1 588 0 is_stmt 1
 1066 001e 24B1     		cbz	r4, .L92
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1067              		.loc 1 592 0
 1068 0020 114B     		ldr	r3, .L96
 1069 0022 1B68     		ldr	r3, [r3]
 1070 0024 1B68     		ldr	r3, [r3]
 1071 0026 D3B9     		cbnz	r3, .L93
 1072 0028 0124     		movs	r4, #1
 1073              	.LVL95:
 1074              	.L92:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1075              		.loc 1 595 0
 1076 002a 2246     		mov	r2, r4
 1077 002c 711B     		subs	r1, r6, r5
 1078 002e 0F4B     		ldr	r3, .L96+4
 1079 0030 1868     		ldr	r0, [r3]
 1080              	.LVL96:
 1081 0032 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1082              	.LVL97:
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1083              		.loc 1 597 0
 1084 0036 FFF7FEFF 		bl	xTaskResumeAll
 1085              	.LVL98:
 1086 003a 38B9     		cbnz	r0, .L88
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1087              		.loc 1 603 0
 1088 003c 4FF08052 		mov	r2, #268435456
 1089 0040 0B4B     		ldr	r3, .L96+8
 1090 0042 1A60     		str	r2, [r3]
 1091              		.syntax unified
 1092              	@ 603 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
ARM GAS  /tmp/ccjGkGd6.s 			page 42


 1093 0044 BFF34F8F 		dsb
 1094              	@ 0 "" 2
 1095              	@ 603 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1096 0048 BFF36F8F 		isb
 1097              	@ 0 "" 2
 1098              	.LVL99:
 1099              		.thumb
 1100              		.syntax unified
 1101              	.L88:
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1102              		.loc 1 616 0
 1103 004c 02B0     		add	sp, sp, #8
 1104              	.LCFI31:
 1105              		.cfi_remember_state
 1106              		.cfi_def_cfa_offset 16
 1107              		@ sp needed
 1108 004e 70BD     		pop	{r4, r5, r6, pc}
 1109              	.LVL100:
 1110              	.L95:
 1111              	.LCFI32:
 1112              		.cfi_restore_state
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1113              		.loc 1 577 0
 1114 0050 FFF7FEFF 		bl	xTaskResumeAll
 1115              	.LVL101:
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1116              		.loc 1 578 0
 1117 0054 2946     		mov	r1, r5
 1118 0056 3046     		mov	r0, r6
 1119 0058 FFF7FEFF 		bl	prvProcessExpiredTimer
 1120              	.LVL102:
 1121 005c F6E7     		b	.L88
 1122              	.LVL103:
 1123              	.L93:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1124              		.loc 1 592 0
 1125 005e 0024     		movs	r4, #0
 1126              	.LVL104:
 1127 0060 E3E7     		b	.L92
 1128              	.LVL105:
 1129              	.L89:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1130              		.loc 1 613 0
 1131 0062 FFF7FEFF 		bl	xTaskResumeAll
 1132              	.LVL106:
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1133              		.loc 1 616 0
 1134 0066 F1E7     		b	.L88
 1135              	.L97:
 1136              		.align	2
 1137              	.L96:
 1138 0068 00000000 		.word	.LANCHOR1
 1139 006c 00000000 		.word	.LANCHOR2
 1140 0070 04ED00E0 		.word	-536810236
 1141              		.cfi_endproc
 1142              	.LFE16:
 1144              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
ARM GAS  /tmp/ccjGkGd6.s 			page 43


 1145              		.align	1
 1146              		.syntax unified
 1147              		.thumb
 1148              		.thumb_func
 1149              		.fpu fpv4-sp-d16
 1151              	prvProcessReceivedCommands:
 1152              	.LFB20:
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1153              		.loc 1 710 0
 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 24
 1156              		@ frame_needed = 0, uses_anonymous_args = 0
 1157 0000 30B5     		push	{r4, r5, lr}
 1158              	.LCFI33:
 1159              		.cfi_def_cfa_offset 12
 1160              		.cfi_offset 4, -12
 1161              		.cfi_offset 5, -8
 1162              		.cfi_offset 14, -4
 1163 0002 89B0     		sub	sp, sp, #36
 1164              	.LCFI34:
 1165              		.cfi_def_cfa_offset 48
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1166              		.loc 1 716 0
 1167 0004 02E0     		b	.L101
 1168              	.L100:
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1169              		.loc 1 742 0
 1170 0006 049B     		ldr	r3, [sp, #16]
 1171 0008 002B     		cmp	r3, #0
 1172 000a 0FDA     		bge	.L116
 1173              	.L101:
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1174              		.loc 1 716 0
 1175 000c 0022     		movs	r2, #0
 1176 000e 04A9     		add	r1, sp, #16
 1177 0010 3E4B     		ldr	r3, .L120
 1178 0012 1868     		ldr	r0, [r3]
 1179 0014 FFF7FEFF 		bl	xQueueReceive
 1180              	.LVL107:
 1181 0018 0028     		cmp	r0, #0
 1182 001a 74D0     		beq	.L117
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1183              		.loc 1 722 0
 1184 001c 049B     		ldr	r3, [sp, #16]
 1185 001e 002B     		cmp	r3, #0
 1186 0020 F1DA     		bge	.L100
 1187              	.LVL108:
 1188              	.LBB60:
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1189              		.loc 1 731 0
 1190 0022 0799     		ldr	r1, [sp, #28]
 1191 0024 0698     		ldr	r0, [sp, #24]
 1192 0026 059B     		ldr	r3, [sp, #20]
 1193 0028 9847     		blx	r3
 1194              	.LVL109:
 1195              	.LBE60:
 1196 002a ECE7     		b	.L100
ARM GAS  /tmp/ccjGkGd6.s 			page 44


 1197              	.LVL110:
 1198              	.L116:
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1199              		.loc 1 746 0
 1200 002c 069C     		ldr	r4, [sp, #24]
 1201              	.LVL111:
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1202              		.loc 1 748 0
 1203 002e 6369     		ldr	r3, [r4, #20]
 1204 0030 13B1     		cbz	r3, .L102
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1205              		.loc 1 751 0
 1206 0032 201D     		adds	r0, r4, #4
 1207 0034 FFF7FEFF 		bl	uxListRemove
 1208              	.LVL112:
 1209              	.L102:
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1210              		.loc 1 766 0
 1211 0038 03A8     		add	r0, sp, #12
 1212 003a FFF7FEFF 		bl	prvSampleTimeNow
 1213              	.LVL113:
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1214              		.loc 1 768 0
 1215 003e 049B     		ldr	r3, [sp, #16]
 1216 0040 092B     		cmp	r3, #9
 1217 0042 E3D8     		bhi	.L101
 1218 0044 DFE803F0 		tbb	[pc, r3]
 1219              	.L105:
 1220 0048 05       		.byte	(.L104-.L105)/2
 1221 0049 05       		.byte	(.L104-.L105)/2
 1222 004a 05       		.byte	(.L104-.L105)/2
 1223 004b 31       		.byte	(.L106-.L105)/2
 1224 004c 38       		.byte	(.L107-.L105)/2
 1225 004d 51       		.byte	(.L108-.L105)/2
 1226 004e 05       		.byte	(.L104-.L105)/2
 1227 004f 05       		.byte	(.L104-.L105)/2
 1228 0050 31       		.byte	(.L106-.L105)/2
 1229 0051 38       		.byte	(.L107-.L105)/2
 1230              		.p2align 1
 1231              	.L104:
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1232              		.loc 1 776 0
 1233 0052 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1234 0056 43F00103 		orr	r3, r3, #1
 1235 005a 84F82830 		strb	r3, [r4, #40]
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1236              		.loc 1 777 0
 1237 005e 0599     		ldr	r1, [sp, #20]
 1238 0060 A569     		ldr	r5, [r4, #24]
 1239 0062 0B46     		mov	r3, r1
 1240 0064 0246     		mov	r2, r0
 1241 0066 2944     		add	r1, r1, r5
 1242 0068 2046     		mov	r0, r4
 1243              	.LVL114:
 1244 006a FFF7FEFF 		bl	prvInsertTimerInActiveList
 1245              	.LVL115:
 1246 006e 0028     		cmp	r0, #0
ARM GAS  /tmp/ccjGkGd6.s 			page 45


 1247 0070 CCD0     		beq	.L101
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1248              		.loc 1 781 0
 1249 0072 236A     		ldr	r3, [r4, #32]
 1250 0074 2046     		mov	r0, r4
 1251 0076 9847     		blx	r3
 1252              	.LVL116:
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1253              		.loc 1 784 0
 1254 0078 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1255 007c 13F0040F 		tst	r3, #4
 1256 0080 C4D0     		beq	.L101
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1257              		.loc 1 786 0
 1258 0082 A269     		ldr	r2, [r4, #24]
 1259 0084 0021     		movs	r1, #0
 1260 0086 0091     		str	r1, [sp]
 1261 0088 0B46     		mov	r3, r1
 1262 008a 0598     		ldr	r0, [sp, #20]
 1263 008c 0244     		add	r2, r2, r0
 1264 008e 2046     		mov	r0, r4
 1265 0090 FFF7FEFF 		bl	xTimerGenericCommand
 1266              	.LVL117:
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1267              		.loc 1 787 0
 1268 0094 0028     		cmp	r0, #0
 1269 0096 B9D1     		bne	.L101
 1270              	.LBB61:
 1271              	.LBB62:
 1272              		.loc 2 195 0
 1273              		.syntax unified
 1274              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1275 0098 4FF05003 			mov r3, #80												
 1276 009c 83F31188 		msr basepri, r3											
 1277 00a0 BFF36F8F 		isb														
 1278 00a4 BFF34F8F 		dsb														
 1279              	
 1280              	@ 0 "" 2
 1281              	.LVL118:
 1282              		.thumb
 1283              		.syntax unified
 1284              	.L110:
 1285 00a8 FEE7     		b	.L110
 1286              	.LVL119:
 1287              	.L106:
 1288              	.LBE62:
 1289              	.LBE61:
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1290              		.loc 1 804 0
 1291 00aa 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1292 00ae 23F00103 		bic	r3, r3, #1
 1293 00b2 84F82830 		strb	r3, [r4, #40]
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1294              		.loc 1 805 0
 1295 00b6 A9E7     		b	.L101
 1296              	.L107:
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
ARM GAS  /tmp/ccjGkGd6.s 			page 46


 1297              		.loc 1 809 0
 1298 00b8 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1299 00bc 43F00103 		orr	r3, r3, #1
 1300 00c0 84F82830 		strb	r3, [r4, #40]
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1301              		.loc 1 810 0
 1302 00c4 0599     		ldr	r1, [sp, #20]
 1303 00c6 A161     		str	r1, [r4, #24]
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1304              		.loc 1 811 0
 1305 00c8 31B1     		cbz	r1, .L118
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1306              		.loc 1 819 0
 1307 00ca 0346     		mov	r3, r0
 1308 00cc 0246     		mov	r2, r0
 1309 00ce 0144     		add	r1, r1, r0
 1310 00d0 2046     		mov	r0, r4
 1311              	.LVL120:
 1312 00d2 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1313              	.LVL121:
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1314              		.loc 1 820 0
 1315 00d6 99E7     		b	.L101
 1316              	.LVL122:
 1317              	.L118:
 1318              	.LBB63:
 1319              	.LBB64:
 1320              		.loc 2 195 0
 1321              		.syntax unified
 1322              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1323 00d8 4FF05003 			mov r3, #80												
 1324 00dc 83F31188 		msr basepri, r3											
 1325 00e0 BFF36F8F 		isb														
 1326 00e4 BFF34F8F 		dsb														
 1327              	
 1328              	@ 0 "" 2
 1329              	.LVL123:
 1330              		.thumb
 1331              		.syntax unified
 1332              	.L112:
 1333 00e8 FEE7     		b	.L112
 1334              	.L108:
 1335              	.LBE64:
 1336              	.LBE63:
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1337              		.loc 1 828 0
 1338 00ea 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1339 00ee 13F0020F 		tst	r3, #2
 1340 00f2 04D0     		beq	.L119
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1341              		.loc 1 834 0
 1342 00f4 23F00103 		bic	r3, r3, #1
 1343 00f8 84F82830 		strb	r3, [r4, #40]
 1344 00fc 86E7     		b	.L101
 1345              	.L119:
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1346              		.loc 1 830 0
ARM GAS  /tmp/ccjGkGd6.s 			page 47


 1347 00fe 2046     		mov	r0, r4
 1348              	.LVL124:
 1349 0100 FFF7FEFF 		bl	vPortFree
 1350              	.LVL125:
 1351 0104 82E7     		b	.L101
 1352              	.LVL126:
 1353              	.L117:
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1354              		.loc 1 854 0
 1355 0106 09B0     		add	sp, sp, #36
 1356              	.LCFI35:
 1357              		.cfi_def_cfa_offset 12
 1358              		@ sp needed
 1359 0108 30BD     		pop	{r4, r5, pc}
 1360              	.L121:
 1361 010a 00BF     		.align	2
 1362              	.L120:
 1363 010c 00000000 		.word	.LANCHOR2
 1364              		.cfi_endproc
 1365              	.LFE20:
 1367              		.section	.text.prvTimerTask,"ax",%progbits
 1368              		.align	1
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1372              		.fpu fpv4-sp-d16
 1374              	prvTimerTask:
 1375              	.LFB15:
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1376              		.loc 1 524 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 8
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              	.LVL127:
 1381 0000 00B5     		push	{lr}
 1382              	.LCFI36:
 1383              		.cfi_def_cfa_offset 4
 1384              		.cfi_offset 14, -4
 1385 0002 83B0     		sub	sp, sp, #12
 1386              	.LCFI37:
 1387              		.cfi_def_cfa_offset 16
 1388              	.LVL128:
 1389              	.L123:
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1390              		.loc 1 547 0 discriminator 1
 1391 0004 01A8     		add	r0, sp, #4
 1392 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1393              	.LVL129:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1394              		.loc 1 551 0 discriminator 1
 1395 000a 0199     		ldr	r1, [sp, #4]
 1396 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1397              	.LVL130:
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1398              		.loc 1 554 0 discriminator 1
 1399 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1400              	.LVL131:
ARM GAS  /tmp/ccjGkGd6.s 			page 48


 1401 0014 F6E7     		b	.L123
 1402              		.cfi_endproc
 1403              	.LFE15:
 1405              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1406              		.align	1
 1407              		.global	xTimerGetTimerDaemonTaskHandle
 1408              		.syntax unified
 1409              		.thumb
 1410              		.thumb_func
 1411              		.fpu fpv4-sp-d16
 1413              	xTimerGetTimerDaemonTaskHandle:
 1414              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1415              		.loc 1 425 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1420              		.loc 1 428 0
 1421 0000 064B     		ldr	r3, .L129
 1422 0002 1868     		ldr	r0, [r3]
 1423 0004 00B1     		cbz	r0, .L128
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1424              		.loc 1 430 0
 1425 0006 7047     		bx	lr
 1426              	.L128:
 1427              	.LBB65:
 1428              	.LBB66:
 1429              		.loc 2 195 0
 1430              		.syntax unified
 1431              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1432 0008 4FF05003 			mov r3, #80												
 1433 000c 83F31188 		msr basepri, r3											
 1434 0010 BFF36F8F 		isb														
 1435 0014 BFF34F8F 		dsb														
 1436              	
 1437              	@ 0 "" 2
 1438              	.LVL132:
 1439              		.thumb
 1440              		.syntax unified
 1441              	.L127:
 1442 0018 FEE7     		b	.L127
 1443              	.L130:
 1444 001a 00BF     		.align	2
 1445              	.L129:
 1446 001c 00000000 		.word	.LANCHOR7
 1447              	.LBE66:
 1448              	.LBE65:
 1449              		.cfi_endproc
 1450              	.LFE9:
 1452              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1453              		.align	1
 1454              		.global	xTimerGetPeriod
 1455              		.syntax unified
 1456              		.thumb
 1457              		.thumb_func
ARM GAS  /tmp/ccjGkGd6.s 			page 49


 1458              		.fpu fpv4-sp-d16
 1460              	xTimerGetPeriod:
 1461              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1462              		.loc 1 434 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              		@ link register save eliminated.
 1467              	.LVL133:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1468              		.loc 1 437 0
 1469 0000 08B1     		cbz	r0, .L134
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1470              		.loc 1 439 0
 1471 0002 8069     		ldr	r0, [r0, #24]
 1472              	.LVL134:
 1473 0004 7047     		bx	lr
 1474              	.LVL135:
 1475              	.L134:
 1476              	.LBB67:
 1477              	.LBB68:
 1478              		.loc 2 195 0
 1479              		.syntax unified
 1480              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1481 0006 4FF05003 			mov r3, #80												
 1482 000a 83F31188 		msr basepri, r3											
 1483 000e BFF36F8F 		isb														
 1484 0012 BFF34F8F 		dsb														
 1485              	
 1486              	@ 0 "" 2
 1487              	.LVL136:
 1488              		.thumb
 1489              		.syntax unified
 1490              	.L133:
 1491 0016 FEE7     		b	.L133
 1492              	.LBE68:
 1493              	.LBE67:
 1494              		.cfi_endproc
 1495              	.LFE10:
 1497              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 1498              		.align	1
 1499              		.global	vTimerSetReloadMode
 1500              		.syntax unified
 1501              		.thumb
 1502              		.thumb_func
 1503              		.fpu fpv4-sp-d16
 1505              	vTimerSetReloadMode:
 1506              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1507              		.loc 1 443 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              	.LVL137:
 1512 0000 38B5     		push	{r3, r4, r5, lr}
 1513              	.LCFI38:
ARM GAS  /tmp/ccjGkGd6.s 			page 50


 1514              		.cfi_def_cfa_offset 16
 1515              		.cfi_offset 3, -16
 1516              		.cfi_offset 4, -12
 1517              		.cfi_offset 5, -8
 1518              		.cfi_offset 14, -4
 1519              	.LVL138:
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1520              		.loc 1 446 0
 1521 0002 68B1     		cbz	r0, .L141
 1522 0004 0446     		mov	r4, r0
 1523 0006 0D46     		mov	r5, r1
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1524              		.loc 1 447 0
 1525 0008 FFF7FEFF 		bl	vPortEnterCritical
 1526              	.LVL139:
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1527              		.loc 1 449 0
 1528 000c 8DB1     		cbz	r5, .L138
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1529              		.loc 1 451 0
 1530 000e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1531 0012 43F00403 		orr	r3, r3, #4
 1532 0016 84F82830 		strb	r3, [r4, #40]
 1533              	.L139:
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1534              		.loc 1 458 0
 1535 001a FFF7FEFF 		bl	vPortExitCritical
 1536              	.LVL140:
 1537 001e 38BD     		pop	{r3, r4, r5, pc}
 1538              	.LVL141:
 1539              	.L141:
 1540              	.LBB69:
 1541              	.LBB70:
 1542              		.loc 2 195 0
 1543              		.syntax unified
 1544              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1545 0020 4FF05003 			mov r3, #80												
 1546 0024 83F31188 		msr basepri, r3											
 1547 0028 BFF36F8F 		isb														
 1548 002c BFF34F8F 		dsb														
 1549              	
 1550              	@ 0 "" 2
 1551              	.LVL142:
 1552              		.thumb
 1553              		.syntax unified
 1554              	.L137:
 1555 0030 FEE7     		b	.L137
 1556              	.LVL143:
 1557              	.L138:
 1558              	.LBE70:
 1559              	.LBE69:
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1560              		.loc 1 455 0
 1561 0032 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1562 0036 23F00403 		bic	r3, r3, #4
 1563 003a 84F82830 		strb	r3, [r4, #40]
 1564 003e ECE7     		b	.L139
ARM GAS  /tmp/ccjGkGd6.s 			page 51


 1565              		.cfi_endproc
 1566              	.LFE11:
 1568              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1569              		.align	1
 1570              		.global	xTimerGetExpiryTime
 1571              		.syntax unified
 1572              		.thumb
 1573              		.thumb_func
 1574              		.fpu fpv4-sp-d16
 1576              	xTimerGetExpiryTime:
 1577              	.LFB12:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1578              		.loc 1 463 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              		@ link register save eliminated.
 1583              	.LVL144:
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1584              		.loc 1 467 0
 1585 0000 08B1     		cbz	r0, .L145
 1586              	.LVL145:
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1587              		.loc 1 470 0
 1588 0002 4068     		ldr	r0, [r0, #4]
 1589              	.LVL146:
 1590 0004 7047     		bx	lr
 1591              	.LVL147:
 1592              	.L145:
 1593              	.LBB71:
 1594              	.LBB72:
 1595              		.loc 2 195 0
 1596              		.syntax unified
 1597              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1598 0006 4FF05003 			mov r3, #80												
 1599 000a 83F31188 		msr basepri, r3											
 1600 000e BFF36F8F 		isb														
 1601 0012 BFF34F8F 		dsb														
 1602              	
 1603              	@ 0 "" 2
 1604              	.LVL148:
 1605              		.thumb
 1606              		.syntax unified
 1607              	.L144:
 1608 0016 FEE7     		b	.L144
 1609              	.LBE72:
 1610              	.LBE71:
 1611              		.cfi_endproc
 1612              	.LFE12:
 1614              		.section	.text.pcTimerGetName,"ax",%progbits
 1615              		.align	1
 1616              		.global	pcTimerGetName
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1620              		.fpu fpv4-sp-d16
 1622              	pcTimerGetName:
ARM GAS  /tmp/ccjGkGd6.s 			page 52


 1623              	.LFB13:
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1624              		.loc 1 474 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628              		@ link register save eliminated.
 1629              	.LVL149:
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1630              		.loc 1 477 0
 1631 0000 08B1     		cbz	r0, .L149
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1632              		.loc 1 479 0
 1633 0002 0068     		ldr	r0, [r0]
 1634              	.LVL150:
 1635 0004 7047     		bx	lr
 1636              	.LVL151:
 1637              	.L149:
 1638              	.LBB73:
 1639              	.LBB74:
 1640              		.loc 2 195 0
 1641              		.syntax unified
 1642              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1643 0006 4FF05003 			mov r3, #80												
 1644 000a 83F31188 		msr basepri, r3											
 1645 000e BFF36F8F 		isb														
 1646 0012 BFF34F8F 		dsb														
 1647              	
 1648              	@ 0 "" 2
 1649              	.LVL152:
 1650              		.thumb
 1651              		.syntax unified
 1652              	.L148:
 1653 0016 FEE7     		b	.L148
 1654              	.LBE74:
 1655              	.LBE73:
 1656              		.cfi_endproc
 1657              	.LFE13:
 1659              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1660              		.align	1
 1661              		.global	xTimerIsTimerActive
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv4-sp-d16
 1667              	xTimerIsTimerActive:
 1668              	.LFB23:
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1669              		.loc 1 968 0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 0
 1672              		@ frame_needed = 0, uses_anonymous_args = 0
 1673              	.LVL153:
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
ARM GAS  /tmp/ccjGkGd6.s 			page 53


 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1674              		.loc 1 972 0
 1675 0000 68B1     		cbz	r0, .L157
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 1676              		.loc 1 968 0
 1677 0002 10B5     		push	{r4, lr}
 1678              	.LCFI39:
 1679              		.cfi_def_cfa_offset 8
 1680              		.cfi_offset 4, -8
 1681              		.cfi_offset 14, -4
 1682 0004 0446     		mov	r4, r0
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1683              		.loc 1 975 0
 1684 0006 FFF7FEFF 		bl	vPortEnterCritical
 1685              	.LVL154:
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1686              		.loc 1 977 0
 1687 000a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1688 000e 13F0010F 		tst	r3, #1
 1689 0012 0DD1     		bne	.L154
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdFALSE;
 1690              		.loc 1 979 0
 1691 0014 0024     		movs	r4, #0
 1692              	.LVL155:
 1693              	.L153:
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdTRUE;
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1694              		.loc 1 986 0
 1695 0016 FFF7FEFF 		bl	vPortExitCritical
 1696              	.LVL156:
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1697              		.loc 1 989 0
 1698 001a 2046     		mov	r0, r4
 1699 001c 10BD     		pop	{r4, pc}
 1700              	.LVL157:
 1701              	.L157:
 1702              	.LCFI40:
 1703              		.cfi_def_cfa_offset 0
 1704              		.cfi_restore 4
 1705              		.cfi_restore 14
 1706              	.LBB75:
 1707              	.LBB76:
 1708              		.loc 2 195 0
 1709              		.syntax unified
ARM GAS  /tmp/ccjGkGd6.s 			page 54


 1710              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1711 001e 4FF05003 			mov r3, #80												
 1712 0022 83F31188 		msr basepri, r3											
 1713 0026 BFF36F8F 		isb														
 1714 002a BFF34F8F 		dsb														
 1715              	
 1716              	@ 0 "" 2
 1717              	.LVL158:
 1718              		.thumb
 1719              		.syntax unified
 1720              	.L152:
 1721 002e FEE7     		b	.L152
 1722              	.LVL159:
 1723              	.L154:
 1724              	.LCFI41:
 1725              		.cfi_def_cfa_offset 8
 1726              		.cfi_offset 4, -8
 1727              		.cfi_offset 14, -4
 1728              	.LBE76:
 1729              	.LBE75:
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1730              		.loc 1 983 0
 1731 0030 0124     		movs	r4, #1
 1732              	.LVL160:
 1733 0032 F0E7     		b	.L153
 1734              		.cfi_endproc
 1735              	.LFE23:
 1737              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1738              		.align	1
 1739              		.global	pvTimerGetTimerID
 1740              		.syntax unified
 1741              		.thumb
 1742              		.thumb_func
 1743              		.fpu fpv4-sp-d16
 1745              	pvTimerGetTimerID:
 1746              	.LFB24:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1747              		.loc 1 993 0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              	.LVL161:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1752              		.loc 1 997 0
 1753 0000 40B9     		cbnz	r0, .L159
 1754              	.LBB77:
 1755              	.LBB78:
 1756              		.loc 2 195 0
 1757              		.syntax unified
 1758              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1759 0002 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccjGkGd6.s 			page 55


 1760 0006 83F31188 		msr basepri, r3											
 1761 000a BFF36F8F 		isb														
 1762 000e BFF34F8F 		dsb														
 1763              	
 1764              	@ 0 "" 2
 1765              	.LVL162:
 1766              		.thumb
 1767              		.syntax unified
 1768              	.L160:
 1769 0012 FEE7     		b	.L160
 1770              	.L159:
 1771              	.LBE78:
 1772              	.LBE77:
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
 1773              		.loc 1 993 0
 1774 0014 10B5     		push	{r4, lr}
 1775              	.LCFI42:
 1776              		.cfi_def_cfa_offset 8
 1777              		.cfi_offset 4, -8
 1778              		.cfi_offset 14, -4
 1779 0016 0446     		mov	r4, r0
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1780              		.loc 1 999 0
 1781 0018 FFF7FEFF 		bl	vPortEnterCritical
 1782              	.LVL163:
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1783              		.loc 1 1001 0
 1784 001c E469     		ldr	r4, [r4, #28]
 1785              	.LVL164:
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1786              		.loc 1 1003 0
 1787 001e FFF7FEFF 		bl	vPortExitCritical
 1788              	.LVL165:
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1789              		.loc 1 1006 0
 1790 0022 2046     		mov	r0, r4
 1791 0024 10BD     		pop	{r4, pc}
 1792              		.cfi_endproc
 1793              	.LFE24:
 1795              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1796              		.align	1
 1797              		.global	vTimerSetTimerID
 1798              		.syntax unified
 1799              		.thumb
 1800              		.thumb_func
 1801              		.fpu fpv4-sp-d16
 1803              	vTimerSetTimerID:
 1804              	.LFB25:
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
ARM GAS  /tmp/ccjGkGd6.s 			page 56


 1805              		.loc 1 1010 0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 0
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              	.LVL166:
 1810 0000 38B5     		push	{r3, r4, r5, lr}
 1811              	.LCFI43:
 1812              		.cfi_def_cfa_offset 16
 1813              		.cfi_offset 3, -16
 1814              		.cfi_offset 4, -12
 1815              		.cfi_offset 5, -8
 1816              		.cfi_offset 14, -4
 1817              	.LVL167:
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1818              		.loc 1 1013 0
 1819 0002 40B9     		cbnz	r0, .L164
 1820              	.LBB79:
 1821              	.LBB80:
 1822              		.loc 2 195 0
 1823              		.syntax unified
 1824              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1825 0004 4FF05003 			mov r3, #80												
 1826 0008 83F31188 		msr basepri, r3											
 1827 000c BFF36F8F 		isb														
 1828 0010 BFF34F8F 		dsb														
 1829              	
 1830              	@ 0 "" 2
 1831              	.LVL168:
 1832              		.thumb
 1833              		.syntax unified
 1834              	.L165:
 1835 0014 FEE7     		b	.L165
 1836              	.L164:
 1837 0016 0446     		mov	r4, r0
 1838 0018 0D46     		mov	r5, r1
 1839              	.LBE80:
 1840              	.LBE79:
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1841              		.loc 1 1015 0
 1842 001a FFF7FEFF 		bl	vPortEnterCritical
 1843              	.LVL169:
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1844              		.loc 1 1017 0
 1845 001e E561     		str	r5, [r4, #28]
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1846              		.loc 1 1019 0
 1847 0020 FFF7FEFF 		bl	vPortExitCritical
 1848              	.LVL170:
 1849 0024 38BD     		pop	{r3, r4, r5, pc}
 1850              		.cfi_endproc
 1851              	.LFE25:
 1853              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
ARM GAS  /tmp/ccjGkGd6.s 			page 57


 1854              		.align	1
 1855              		.global	xTimerPendFunctionCallFromISR
 1856              		.syntax unified
 1857              		.thumb
 1858              		.thumb_func
 1859              		.fpu fpv4-sp-d16
 1861              	xTimerPendFunctionCallFromISR:
 1862              	.LFB26:
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1863              		.loc 1 1026 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 16
 1866              		@ frame_needed = 0, uses_anonymous_args = 0
 1867              	.LVL171:
 1868 0000 10B5     		push	{r4, lr}
 1869              	.LCFI44:
 1870              		.cfi_def_cfa_offset 8
 1871              		.cfi_offset 4, -8
 1872              		.cfi_offset 14, -4
 1873 0002 84B0     		sub	sp, sp, #16
 1874              	.LCFI45:
 1875              		.cfi_def_cfa_offset 24
 1876 0004 1C46     		mov	r4, r3
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1877              		.loc 1 1032 0
 1878 0006 6FF00103 		mvn	r3, #1
 1879              	.LVL172:
 1880 000a 0093     		str	r3, [sp]
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1881              		.loc 1 1033 0
 1882 000c 0190     		str	r0, [sp, #4]
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1883              		.loc 1 1034 0
 1884 000e 0291     		str	r1, [sp, #8]
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1885              		.loc 1 1035 0
 1886 0010 0392     		str	r2, [sp, #12]
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1887              		.loc 1 1037 0
 1888 0012 0023     		movs	r3, #0
 1889 0014 2246     		mov	r2, r4
 1890              	.LVL173:
 1891 0016 6946     		mov	r1, sp
 1892              	.LVL174:
 1893 0018 0248     		ldr	r0, .L169
ARM GAS  /tmp/ccjGkGd6.s 			page 58


 1894              	.LVL175:
 1895 001a 0068     		ldr	r0, [r0]
 1896 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1897              	.LVL176:
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1898              		.loc 1 1042 0
 1899 0020 04B0     		add	sp, sp, #16
 1900              	.LCFI46:
 1901              		.cfi_def_cfa_offset 8
 1902              		@ sp needed
 1903 0022 10BD     		pop	{r4, pc}
 1904              	.LVL177:
 1905              	.L170:
 1906              		.align	2
 1907              	.L169:
 1908 0024 00000000 		.word	.LANCHOR2
 1909              		.cfi_endproc
 1910              	.LFE26:
 1912              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1913              		.align	1
 1914              		.global	xTimerPendFunctionCall
 1915              		.syntax unified
 1916              		.thumb
 1917              		.thumb_func
 1918              		.fpu fpv4-sp-d16
 1920              	xTimerPendFunctionCall:
 1921              	.LFB27:
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1922              		.loc 1 1050 0
 1923              		.cfi_startproc
 1924              		@ args = 0, pretend = 0, frame = 16
 1925              		@ frame_needed = 0, uses_anonymous_args = 0
 1926              	.LVL178:
 1927 0000 30B5     		push	{r4, r5, lr}
 1928              	.LCFI47:
 1929              		.cfi_def_cfa_offset 12
 1930              		.cfi_offset 4, -12
 1931              		.cfi_offset 5, -8
 1932              		.cfi_offset 14, -4
 1933 0002 85B0     		sub	sp, sp, #20
 1934              	.LCFI48:
 1935              		.cfi_def_cfa_offset 32
 1936 0004 1446     		mov	r4, r2
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/ccjGkGd6.s 			page 59


1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1937              		.loc 1 1057 0
 1938 0006 0D4A     		ldr	r2, .L175
 1939              	.LVL179:
 1940 0008 1568     		ldr	r5, [r2]
 1941 000a 45B9     		cbnz	r5, .L172
 1942              	.LBB81:
 1943              	.LBB82:
 1944              		.loc 2 195 0
 1945              		.syntax unified
 1946              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1947 000c 4FF05003 			mov r3, #80												
 1948 0010 83F31188 		msr basepri, r3											
 1949 0014 BFF36F8F 		isb														
 1950 0018 BFF34F8F 		dsb														
 1951              	
 1952              	@ 0 "" 2
 1953              	.LVL180:
 1954              		.thumb
 1955              		.syntax unified
 1956              	.L173:
 1957 001c FEE7     		b	.L173
 1958              	.LVL181:
 1959              	.L172:
 1960 001e 1A46     		mov	r2, r3
 1961 0020 0346     		mov	r3, r0
 1962              	.LVL182:
 1963              	.LBE82:
 1964              	.LBE81:
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1965              		.loc 1 1061 0
 1966 0022 4FF0FF30 		mov	r0, #-1
 1967              	.LVL183:
 1968 0026 0090     		str	r0, [sp]
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1969              		.loc 1 1062 0
 1970 0028 0193     		str	r3, [sp, #4]
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1971              		.loc 1 1063 0
 1972 002a 0291     		str	r1, [sp, #8]
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1973              		.loc 1 1064 0
 1974 002c 0394     		str	r4, [sp, #12]
1065:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1066:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1975              		.loc 1 1066 0
 1976 002e 0023     		movs	r3, #0
 1977              	.LVL184:
 1978 0030 6946     		mov	r1, sp
 1979              	.LVL185:
 1980 0032 2846     		mov	r0, r5
ARM GAS  /tmp/ccjGkGd6.s 			page 60


 1981 0034 FFF7FEFF 		bl	xQueueGenericSend
 1982              	.LVL186:
1067:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1069:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1071:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1983              		.loc 1 1071 0
 1984 0038 05B0     		add	sp, sp, #20
 1985              	.LCFI49:
 1986              		.cfi_def_cfa_offset 12
 1987              		@ sp needed
 1988 003a 30BD     		pop	{r4, r5, pc}
 1989              	.LVL187:
 1990              	.L176:
 1991              		.align	2
 1992              	.L175:
 1993 003c 00000000 		.word	.LANCHOR2
 1994              		.cfi_endproc
 1995              	.LFE27:
 1997              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1998              		.align	1
 1999              		.global	uxTimerGetTimerNumber
 2000              		.syntax unified
 2001              		.thumb
 2002              		.thumb_func
 2003              		.fpu fpv4-sp-d16
 2005              	uxTimerGetTimerNumber:
 2006              	.LFB28:
1072:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1073:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1074:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1075:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1076:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1077:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1079:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 2007              		.loc 1 1079 0
 2008              		.cfi_startproc
 2009              		@ args = 0, pretend = 0, frame = 0
 2010              		@ frame_needed = 0, uses_anonymous_args = 0
 2011              		@ link register save eliminated.
 2012              	.LVL188:
1080:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1081:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 2013              		.loc 1 1081 0
 2014 0000 406A     		ldr	r0, [r0, #36]
 2015              	.LVL189:
 2016 0002 7047     		bx	lr
 2017              		.cfi_endproc
 2018              	.LFE28:
 2020              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 2021              		.align	1
 2022              		.global	vTimerSetTimerNumber
 2023              		.syntax unified
 2024              		.thumb
 2025              		.thumb_func
ARM GAS  /tmp/ccjGkGd6.s 			page 61


 2026              		.fpu fpv4-sp-d16
 2028              	vTimerSetTimerNumber:
 2029              	.LFB29:
1082:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1083:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1084:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1085:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1087:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1088:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1089:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 2030              		.loc 1 1089 0
 2031              		.cfi_startproc
 2032              		@ args = 0, pretend = 0, frame = 0
 2033              		@ frame_needed = 0, uses_anonymous_args = 0
 2034              		@ link register save eliminated.
 2035              	.LVL190:
1090:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 2036              		.loc 1 1090 0
 2037 0000 4162     		str	r1, [r0, #36]
 2038 0002 7047     		bx	lr
 2039              		.cfi_endproc
 2040              	.LFE29:
 2042              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 2043              		.align	2
 2044              		.set	.LANCHOR0,. + 0
 2047              	pxCurrentTimerList:
 2048 0000 00000000 		.space	4
 2049              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 2050              		.align	2
 2051              		.set	.LANCHOR1,. + 0
 2054              	pxOverflowTimerList:
 2055 0000 00000000 		.space	4
 2056              		.section	.bss.ucStaticTimerQueueStorage.6640,"aw",%nobits
 2057              		.align	2
 2058              		.set	.LANCHOR6,. + 0
 2061              	ucStaticTimerQueueStorage.6640:
 2062 0000 00000000 		.space	160
 2062      00000000 
 2062      00000000 
 2062      00000000 
 2062      00000000 
 2063              		.section	.bss.xActiveTimerList1,"aw",%nobits
 2064              		.align	2
 2065              		.set	.LANCHOR3,. + 0
 2068              	xActiveTimerList1:
 2069 0000 00000000 		.space	20
 2069      00000000 
 2069      00000000 
 2069      00000000 
 2069      00000000 
 2070              		.section	.bss.xActiveTimerList2,"aw",%nobits
 2071              		.align	2
 2072              		.set	.LANCHOR4,. + 0
 2075              	xActiveTimerList2:
 2076 0000 00000000 		.space	20
 2076      00000000 
ARM GAS  /tmp/ccjGkGd6.s 			page 62


 2076      00000000 
 2076      00000000 
 2076      00000000 
 2077              		.section	.bss.xLastTime.6589,"aw",%nobits
 2078              		.align	2
 2079              		.set	.LANCHOR8,. + 0
 2082              	xLastTime.6589:
 2083 0000 00000000 		.space	4
 2084              		.section	.bss.xStaticTimerQueue.6639,"aw",%nobits
 2085              		.align	2
 2086              		.set	.LANCHOR5,. + 0
 2089              	xStaticTimerQueue.6639:
 2090 0000 00000000 		.space	80
 2090      00000000 
 2090      00000000 
 2090      00000000 
 2090      00000000 
 2091              		.section	.bss.xTimerQueue,"aw",%nobits
 2092              		.align	2
 2093              		.set	.LANCHOR2,. + 0
 2096              	xTimerQueue:
 2097 0000 00000000 		.space	4
 2098              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 2099              		.align	2
 2100              		.set	.LANCHOR7,. + 0
 2103              	xTimerTaskHandle:
 2104 0000 00000000 		.space	4
 2105              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 2106              		.align	2
 2107              	.LC0:
 2108 0000 546D7251 		.ascii	"TmrQ\000"
 2108      00
 2109              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 2110              		.align	2
 2111              	.LC1:
 2112 0000 546D7220 		.ascii	"Tmr Svc\000"
 2112      53766300 
 2113              		.text
 2114              	.Letext0:
 2115              		.file 3 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2116              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 2117              		.file 5 "/usr/include/newlib/sys/lock.h"
 2118              		.file 6 "/usr/include/newlib/sys/_types.h"
 2119              		.file 7 "/usr/include/newlib/sys/reent.h"
 2120              		.file 8 "/usr/include/newlib/stdlib.h"
 2121              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 2122              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 2123              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 2124              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2125              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 2126              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2127              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2128              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 2129              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccjGkGd6.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/ccjGkGd6.s:18     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/ccjGkGd6.s:24     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/ccjGkGd6.s:63     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/ccjGkGd6.s:68     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/ccjGkGd6.s:74     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/ccjGkGd6.s:150    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/ccjGkGd6.s:156    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/ccjGkGd6.s:162    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/ccjGkGd6.s:238    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/ccjGkGd6.s:250    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/ccjGkGd6.s:256    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/ccjGkGd6.s:331    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/ccjGkGd6.s:338    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/ccjGkGd6.s:433    .text.xTimerCreateTimerTask:0000000000000060 $d
     /tmp/ccjGkGd6.s:1374   .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/ccjGkGd6.s:441    .text.xTimerCreate:0000000000000000 $t
     /tmp/ccjGkGd6.s:448    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/ccjGkGd6.s:505    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/ccjGkGd6.s:512    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/ccjGkGd6.s:602    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/ccjGkGd6.s:609    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/ccjGkGd6.s:728    .text.xTimerGenericCommand:0000000000000068 $d
     /tmp/ccjGkGd6.s:733    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/ccjGkGd6.s:739    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/ccjGkGd6.s:851    .text.prvSwitchTimerLists:0000000000000074 $d
     /tmp/ccjGkGd6.s:857    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/ccjGkGd6.s:863    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/ccjGkGd6.s:911    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/ccjGkGd6.s:916    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/ccjGkGd6.s:922    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/ccjGkGd6.s:1016   .text.prvProcessExpiredTimer:0000000000000068 $d
     /tmp/ccjGkGd6.s:1023   .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/ccjGkGd6.s:1029   .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/ccjGkGd6.s:1138   .text.prvProcessTimerOrBlockTask:0000000000000068 $d
     /tmp/ccjGkGd6.s:1145   .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/ccjGkGd6.s:1151   .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/ccjGkGd6.s:1220   .text.prvProcessReceivedCommands:0000000000000048 $d
     /tmp/ccjGkGd6.s:1230   .text.prvProcessReceivedCommands:0000000000000052 $t
     /tmp/ccjGkGd6.s:1363   .text.prvProcessReceivedCommands:000000000000010c $d
     /tmp/ccjGkGd6.s:1368   .text.prvTimerTask:0000000000000000 $t
     /tmp/ccjGkGd6.s:1406   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/ccjGkGd6.s:1413   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/ccjGkGd6.s:1446   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/ccjGkGd6.s:1453   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/ccjGkGd6.s:1460   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/ccjGkGd6.s:1498   .text.vTimerSetReloadMode:0000000000000000 $t
     /tmp/ccjGkGd6.s:1505   .text.vTimerSetReloadMode:0000000000000000 vTimerSetReloadMode
     /tmp/ccjGkGd6.s:1569   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/ccjGkGd6.s:1576   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/ccjGkGd6.s:1615   .text.pcTimerGetName:0000000000000000 $t
     /tmp/ccjGkGd6.s:1622   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/ccjGkGd6.s:1660   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/ccjGkGd6.s:1667   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/ccjGkGd6.s:1738   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/ccjGkGd6.s:1745   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
ARM GAS  /tmp/ccjGkGd6.s 			page 64


     /tmp/ccjGkGd6.s:1796   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/ccjGkGd6.s:1803   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
     /tmp/ccjGkGd6.s:1854   .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/ccjGkGd6.s:1861   .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/ccjGkGd6.s:1908   .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/ccjGkGd6.s:1913   .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/ccjGkGd6.s:1920   .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/ccjGkGd6.s:1993   .text.xTimerPendFunctionCall:000000000000003c $d
     /tmp/ccjGkGd6.s:1998   .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/ccjGkGd6.s:2005   .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/ccjGkGd6.s:2021   .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/ccjGkGd6.s:2028   .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/ccjGkGd6.s:2043   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/ccjGkGd6.s:2047   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/ccjGkGd6.s:2050   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/ccjGkGd6.s:2054   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/ccjGkGd6.s:2057   .bss.ucStaticTimerQueueStorage.6640:0000000000000000 $d
     /tmp/ccjGkGd6.s:2061   .bss.ucStaticTimerQueueStorage.6640:0000000000000000 ucStaticTimerQueueStorage.6640
     /tmp/ccjGkGd6.s:2064   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/ccjGkGd6.s:2068   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/ccjGkGd6.s:2071   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/ccjGkGd6.s:2075   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/ccjGkGd6.s:2078   .bss.xLastTime.6589:0000000000000000 $d
     /tmp/ccjGkGd6.s:2082   .bss.xLastTime.6589:0000000000000000 xLastTime.6589
     /tmp/ccjGkGd6.s:2085   .bss.xStaticTimerQueue.6639:0000000000000000 $d
     /tmp/ccjGkGd6.s:2089   .bss.xStaticTimerQueue.6639:0000000000000000 xStaticTimerQueue.6639
     /tmp/ccjGkGd6.s:2092   .bss.xTimerQueue:0000000000000000 $d
     /tmp/ccjGkGd6.s:2096   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/ccjGkGd6.s:2099   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/ccjGkGd6.s:2103   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/ccjGkGd6.s:2106   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/ccjGkGd6.s:2110   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
