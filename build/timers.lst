ARM GAS  /tmp/cclsodVt.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvGetNextExpireTime:
  25              	.LFB17:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/cclsodVt.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** for the header files above, but not in this file, in order to generate the
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** correct privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_ACTIVE					( ( uint8_t ) 0x01 )
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_STATICALLY_ALLOCATED	( ( uint8_t ) 0x02 )
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_AUTORELOAD				( ( uint8_t ) 0x04 )
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl /* The old naming convention is used to prevent breaking kernel awar
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint8_t 				ucStatus;			/*<< Holds bits to say if the timer was statically allocated or not, and i
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cclsodVt.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists.
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** breaks some kernel aware debuggers, and debuggers that reply on removing the
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static qualifier. */
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = { 0 };
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = { 0 };
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cclsodVt.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
ARM GAS  /tmp/cclsodVt.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  /tmp/cclsodVt.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values ret
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Status is thus far zero as the timer is not created statically
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and has not been started.  The autoreload bit may get set in
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = 0x00;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  /tmp/cclsodVt.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Timers can be created statically or dynamically so note this
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			timer was created statically in case it is later deleted.  The
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			autoreload bit may get set in prvInitialiseNewTimer(). */
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
ARM GAS  /tmp/cclsodVt.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cclsodVt.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
ARM GAS  /tmp/cclsodVt.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION( prvTimerTask, pvParameters )
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
ARM GAS  /tmp/cclsodVt.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
ARM GAS  /tmp/cclsodVt.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  27              		.loc 1 620 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  33              		.loc 1 630 0
  34 0000 064B     		ldr	r3, .L6
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 1368     		ldr	r3, [r2]
  37 0006 2BB9     		cbnz	r3, .L4
  38 0008 0123     		movs	r3, #1
  39              	.L2:
  40              		.loc 1 630 0 is_stmt 0 discriminator 4
  41 000a 0360     		str	r3, [r0]
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  42              		.loc 1 631 0 is_stmt 1 discriminator 4
  43 000c 23B9     		cbnz	r3, .L5
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  44              		.loc 1 633 0
  45 000e D368     		ldr	r3, [r2, #12]
  46 0010 1868     		ldr	r0, [r3]
  47              	.LVL1:
  48 0012 7047     		bx	lr
  49              	.LVL2:
  50              	.L4:
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  51              		.loc 1 630 0
ARM GAS  /tmp/cclsodVt.s 			page 13


  52 0014 0023     		movs	r3, #0
  53 0016 F8E7     		b	.L2
  54              	.L5:
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  55              		.loc 1 638 0
  56 0018 0020     		movs	r0, #0
  57              	.LVL3:
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  58              		.loc 1 642 0
  59 001a 7047     		bx	lr
  60              	.L7:
  61              		.align	2
  62              	.L6:
  63 001c 00000000 		.word	.LANCHOR0
  64              		.cfi_endproc
  65              	.LFE17:
  67              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	prvInsertTimerInActiveList:
  75              	.LFB19:
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
ARM GAS  /tmp/cclsodVt.s 			page 14


 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  76              		.loc 1 669 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              	.LVL4:
  81 0000 08B5     		push	{r3, lr}
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 3, -8
  84              		.cfi_offset 14, -4
  85              	.LVL5:
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  86              		.loc 1 672 0
  87 0002 4160     		str	r1, [r0, #4]
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  88              		.loc 1 673 0
  89 0004 0061     		str	r0, [r0, #16]
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  90              		.loc 1 675 0
  91 0006 9142     		cmp	r1, r2
  92 0008 0CD8     		bhi	.L9
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  93              		.loc 1 679 0
  94 000a D21A     		subs	r2, r2, r3
  95              	.LVL6:
  96 000c 8369     		ldr	r3, [r0, #24]
  97              	.LVL7:
  98 000e 9A42     		cmp	r2, r3
  99 0010 01D3     		bcc	.L15
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 100              		.loc 1 683 0
 101 0012 0120     		movs	r0, #1
 102              	.LVL8:
 103 0014 08BD     		pop	{r3, pc}
 104              	.LVL9:
 105              	.L15:
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 106              		.loc 1 687 0
 107 0016 011D     		adds	r1, r0, #4
 108              	.LVL10:
 109 0018 094B     		ldr	r3, .L16
 110 001a 1868     		ldr	r0, [r3]
 111              	.LVL11:
 112 001c FFF7FEFF 		bl	vListInsert
 113              	.LVL12:
ARM GAS  /tmp/cclsodVt.s 			page 15


 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 114              		.loc 1 670 0
 115 0020 0020     		movs	r0, #0
 116 0022 08BD     		pop	{r3, pc}
 117              	.LVL13:
 118              	.L9:
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 119              		.loc 1 692 0
 120 0024 9A42     		cmp	r2, r3
 121 0026 01D2     		bcs	.L11
 122              		.loc 1 692 0 is_stmt 0 discriminator 1
 123 0028 9942     		cmp	r1, r3
 124 002a 06D2     		bcs	.L13
 125              	.L11:
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 126              		.loc 1 701 0 is_stmt 1
 127 002c 011D     		adds	r1, r0, #4
 128              	.LVL14:
 129 002e 054B     		ldr	r3, .L16+4
 130              	.LVL15:
 131 0030 1868     		ldr	r0, [r3]
 132              	.LVL16:
 133 0032 FFF7FEFF 		bl	vListInsert
 134              	.LVL17:
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 135              		.loc 1 670 0
 136 0036 0020     		movs	r0, #0
 137 0038 08BD     		pop	{r3, pc}
 138              	.LVL18:
 139              	.L13:
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 140              		.loc 1 697 0
 141 003a 0120     		movs	r0, #1
 142              	.LVL19:
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 143              		.loc 1 706 0
 144 003c 08BD     		pop	{r3, pc}
 145              	.LVL20:
 146              	.L17:
 147 003e 00BF     		.align	2
 148              	.L16:
ARM GAS  /tmp/cclsodVt.s 			page 16


 149 0040 00000000 		.word	.LANCHOR1
 150 0044 00000000 		.word	.LANCHOR0
 151              		.cfi_endproc
 152              	.LFE19:
 154              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	prvCheckForValidListAndQueue:
 162              	.LFB22:
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
ARM GAS  /tmp/cclsodVt.s 			page 17


 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_FROM_ISR :
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET :
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET_FROM_ISR :
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list. */
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
ARM GAS  /tmp/cclsodVt.s 			page 18


 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer has already been removed from the active list,
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						just free up the memory if the memory was dynamically
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						allocated. */
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#else
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* If dynamic allocation is not enabled, the memory
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						could not have been dynamically allocated. So there is
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						no need to free the memory - just mark the timer as
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						"not active". */
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
ARM GAS  /tmp/cclsodVt.s 			page 19


 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 v
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 163              		.loc 1 917 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cclsodVt.s 			page 20


 168              		.cfi_def_cfa_offset 12
 169              		.cfi_offset 4, -12
 170              		.cfi_offset 5, -8
 171              		.cfi_offset 14, -4
 172 0002 83B0     		sub	sp, sp, #12
 173              		.cfi_def_cfa_offset 24
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 174              		.loc 1 921 0
 175 0004 FFF7FEFF 		bl	vPortEnterCritical
 176              	.LVL21:
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 177              		.loc 1 923 0
 178 0008 114B     		ldr	r3, .L22
 179 000a 1B68     		ldr	r3, [r3]
 180 000c 1BB1     		cbz	r3, .L21
 181              	.L19:
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cclsodVt.s 			page 21


 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 182              		.loc 1 963 0
 183 000e FFF7FEFF 		bl	vPortExitCritical
 184              	.LVL22:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 185              		.loc 1 964 0
 186 0012 03B0     		add	sp, sp, #12
 187              		.cfi_remember_state
 188              		.cfi_def_cfa_offset 12
 189              		@ sp needed
 190 0014 30BD     		pop	{r4, r5, pc}
 191              	.L21:
 192              		.cfi_restore_state
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 193              		.loc 1 925 0
 194 0016 0F4D     		ldr	r5, .L22+4
 195 0018 2846     		mov	r0, r5
 196 001a FFF7FEFF 		bl	vListInitialise
 197              	.LVL23:
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 198              		.loc 1 926 0
 199 001e 0E4C     		ldr	r4, .L22+8
 200 0020 2046     		mov	r0, r4
 201 0022 FFF7FEFF 		bl	vListInitialise
 202              	.LVL24:
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 203              		.loc 1 927 0
 204 0026 0D4B     		ldr	r3, .L22+12
 205 0028 1D60     		str	r5, [r3]
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 206              		.loc 1 928 0
 207 002a 0D4B     		ldr	r3, .L22+16
 208 002c 1C60     		str	r4, [r3]
 209              	.LBB43:
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 210              		.loc 1 937 0
 211 002e 0023     		movs	r3, #0
 212 0030 0093     		str	r3, [sp]
 213 0032 0C4B     		ldr	r3, .L22+20
 214 0034 0C4A     		ldr	r2, .L22+24
 215 0036 1021     		movs	r1, #16
 216 0038 0A20     		movs	r0, #10
 217 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 218              	.LVL25:
 219 003e 044B     		ldr	r3, .L22
 220 0040 1860     		str	r0, [r3]
 221              	.LBE43:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 222              		.loc 1 947 0
 223 0042 0028     		cmp	r0, #0
 224 0044 E3D0     		beq	.L19
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 225              		.loc 1 949 0
 226 0046 0949     		ldr	r1, .L22+28
 227 0048 FFF7FEFF 		bl	vQueueAddToRegistry
ARM GAS  /tmp/cclsodVt.s 			page 22


 228              	.LVL26:
 229 004c DFE7     		b	.L19
 230              	.L23:
 231 004e 00BF     		.align	2
 232              	.L22:
 233 0050 00000000 		.word	.LANCHOR2
 234 0054 00000000 		.word	.LANCHOR3
 235 0058 00000000 		.word	.LANCHOR4
 236 005c 00000000 		.word	.LANCHOR0
 237 0060 00000000 		.word	.LANCHOR1
 238 0064 00000000 		.word	.LANCHOR5
 239 0068 00000000 		.word	.LANCHOR6
 240 006c 00000000 		.word	.LC0
 241              		.cfi_endproc
 242              	.LFE22:
 244              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 245              		.align	1
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu fpv4-sp-d16
 251              	prvInitialiseNewTimer:
 252              	.LFB7:
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 253              		.loc 1 355 0
 254              		.cfi_startproc
 255              		@ args = 8, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              	.LVL27:
 258 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 259              		.cfi_def_cfa_offset 24
 260              		.cfi_offset 4, -24
 261              		.cfi_offset 5, -20
 262              		.cfi_offset 6, -16
 263              		.cfi_offset 7, -12
 264              		.cfi_offset 8, -8
 265              		.cfi_offset 14, -4
 266 0004 079C     		ldr	r4, [sp, #28]
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 267              		.loc 1 357 0
 268 0006 41B9     		cbnz	r1, .L25
 269              	.LBB44:
 270              	.LBB45:
 271              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
ARM GAS  /tmp/cclsodVt.s 			page 23


  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cclsodVt.s 			page 24


  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
ARM GAS  /tmp/cclsodVt.s 			page 25


 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
ARM GAS  /tmp/cclsodVt.s 			page 26


 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 272              		.loc 2 195 0
 273              		.syntax unified
 274              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 275 0008 4FF05003 			mov r3, #80												
 276 000c 83F31188 		msr basepri, r3											
 277 0010 BFF36F8F 		isb														
 278 0014 BFF34F8F 		dsb														
 279              	
 280              	@ 0 "" 2
 281              	.LVL28:
 282              		.thumb
 283              		.syntax unified
 284              	.L26:
 285 0018 FEE7     		b	.L26
 286              	.LVL29:
 287              	.L25:
 288 001a 0F46     		mov	r7, r1
 289              	.LBE45:
 290              	.LBE44:
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 291              		.loc 1 359 0
 292 001c A4B1     		cbz	r4, .L24
 293 001e 1E46     		mov	r6, r3
 294 0020 1546     		mov	r5, r2
 295 0022 8046     		mov	r8, r0
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 296              		.loc 1 363 0
 297 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 298              	.LVL30:
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 299              		.loc 1 367 0
 300 0028 C4F80080 		str	r8, [r4]
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 301              		.loc 1 368 0
 302 002c A761     		str	r7, [r4, #24]
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 303              		.loc 1 369 0
 304 002e E661     		str	r6, [r4, #28]
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 305              		.loc 1 370 0
 306 0030 069B     		ldr	r3, [sp, #24]
 307 0032 2362     		str	r3, [r4, #32]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 308              		.loc 1 371 0
 309 0034 201D     		adds	r0, r4, #4
 310 0036 FFF7FEFF 		bl	vListInitialiseItem
ARM GAS  /tmp/cclsodVt.s 			page 27


 311              	.LVL31:
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 312              		.loc 1 372 0
 313 003a 2DB1     		cbz	r5, .L24
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 314              		.loc 1 374 0
 315 003c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 316 0040 43F00403 		orr	r3, r3, #4
 317 0044 84F82830 		strb	r3, [r4, #40]
 318              	.LVL32:
 319              	.L24:
 320 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 321              		.cfi_endproc
 322              	.LFE7:
 324              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 325              		.align	1
 326              		.global	xTimerCreateTimerTask
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 330              		.fpu fpv4-sp-d16
 332              	xTimerCreateTimerTask:
 333              	.LFB4:
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 334              		.loc 1 228 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 16
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 10B5     		push	{r4, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 4, -8
 341              		.cfi_offset 14, -4
 342 0002 88B0     		sub	sp, sp, #32
 343              		.cfi_def_cfa_offset 40
 344              	.LVL33:
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 345              		.loc 1 235 0
 346 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 347              	.LVL34:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 348              		.loc 1 237 0
 349 0008 154B     		ldr	r3, .L38
 350 000a 1B68     		ldr	r3, [r3]
 351 000c 1BB3     		cbz	r3, .L34
 352              	.LBB46:
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 353              		.loc 1 241 0
 354 000e 0024     		movs	r4, #0
 355 0010 0594     		str	r4, [sp, #20]
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 356              		.loc 1 242 0
 357 0012 0694     		str	r4, [sp, #24]
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 358              		.loc 1 245 0
 359 0014 07AA     		add	r2, sp, #28
 360 0016 06A9     		add	r1, sp, #24
 361 0018 05A8     		add	r0, sp, #20
ARM GAS  /tmp/cclsodVt.s 			page 28


 362 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 363              	.LVL35:
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 364              		.loc 1 246 0
 365 001e 059B     		ldr	r3, [sp, #20]
 366 0020 0293     		str	r3, [sp, #8]
 367 0022 069B     		ldr	r3, [sp, #24]
 368 0024 0193     		str	r3, [sp, #4]
 369 0026 0223     		movs	r3, #2
 370 0028 0093     		str	r3, [sp]
 371 002a 2346     		mov	r3, r4
 372 002c 079A     		ldr	r2, [sp, #28]
 373 002e 0D49     		ldr	r1, .L38+4
 374 0030 0D48     		ldr	r0, .L38+8
 375 0032 FFF7FEFF 		bl	xTaskCreateStatic
 376              	.LVL36:
 377 0036 0D4B     		ldr	r3, .L38+12
 378 0038 1860     		str	r0, [r3]
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 379              		.loc 1 254 0
 380 003a 50B1     		cbz	r0, .L37
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 381              		.loc 1 256 0
 382 003c 0120     		movs	r0, #1
 383              	.LVL37:
 384              	.L30:
 385              	.LBE46:
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 386              		.loc 1 275 0
 387 003e 60B9     		cbnz	r0, .L29
 388              	.LBB47:
 389              	.LBB48:
 390              		.loc 2 195 0
 391              		.syntax unified
 392              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 393 0040 4FF05003 			mov r3, #80												
 394 0044 83F31188 		msr basepri, r3											
 395 0048 BFF36F8F 		isb														
 396 004c BFF34F8F 		dsb														
 397              	
 398              	@ 0 "" 2
 399              	.LVL38:
 400              		.thumb
 401              		.syntax unified
 402              	.L33:
 403 0050 FEE7     		b	.L33
 404              	.LVL39:
 405              	.L37:
 406              	.LBE48:
 407              	.LBE47:
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 408              		.loc 1 229 0
 409 0052 2046     		mov	r0, r4
 410 0054 F3E7     		b	.L30
 411              	.L34:
 412 0056 0020     		movs	r0, #0
 413 0058 F1E7     		b	.L30
ARM GAS  /tmp/cclsodVt.s 			page 29


 414              	.LVL40:
 415              	.L29:
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 416              		.loc 1 277 0
 417 005a 08B0     		add	sp, sp, #32
 418              		.cfi_def_cfa_offset 8
 419              		@ sp needed
 420 005c 10BD     		pop	{r4, pc}
 421              	.L39:
 422 005e 00BF     		.align	2
 423              	.L38:
 424 0060 00000000 		.word	.LANCHOR2
 425 0064 00000000 		.word	.LC1
 426 0068 00000000 		.word	prvTimerTask
 427 006c 00000000 		.word	.LANCHOR7
 428              		.cfi_endproc
 429              	.LFE4:
 431              		.section	.text.xTimerCreate,"ax",%progbits
 432              		.align	1
 433              		.global	xTimerCreate
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	xTimerCreate:
 440              	.LFB5:
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 441              		.loc 1 287 0
 442              		.cfi_startproc
 443              		@ args = 4, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              	.LVL41:
 446 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 447              		.cfi_def_cfa_offset 24
 448              		.cfi_offset 4, -24
 449              		.cfi_offset 5, -20
 450              		.cfi_offset 6, -16
 451              		.cfi_offset 7, -12
 452              		.cfi_offset 8, -8
 453              		.cfi_offset 14, -4
 454 0004 82B0     		sub	sp, sp, #8
 455              		.cfi_def_cfa_offset 32
 456 0006 0546     		mov	r5, r0
 457 0008 0E46     		mov	r6, r1
 458 000a 1746     		mov	r7, r2
 459 000c 9846     		mov	r8, r3
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 460              		.loc 1 290 0
 461 000e 2C20     		movs	r0, #44
 462              	.LVL42:
 463 0010 FFF7FEFF 		bl	pvPortMalloc
 464              	.LVL43:
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 465              		.loc 1 292 0
 466 0014 0446     		mov	r4, r0
 467 0016 58B1     		cbz	r0, .L40
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
ARM GAS  /tmp/cclsodVt.s 			page 30


 468              		.loc 1 297 0
 469 0018 0023     		movs	r3, #0
 470 001a 80F82830 		strb	r3, [r0, #40]
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 471              		.loc 1 298 0
 472 001e 0190     		str	r0, [sp, #4]
 473 0020 089B     		ldr	r3, [sp, #32]
 474 0022 0093     		str	r3, [sp]
 475 0024 4346     		mov	r3, r8
 476 0026 3A46     		mov	r2, r7
 477 0028 3146     		mov	r1, r6
 478 002a 2846     		mov	r0, r5
 479              	.LVL44:
 480 002c FFF7FEFF 		bl	prvInitialiseNewTimer
 481              	.LVL45:
 482              	.L40:
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 483              		.loc 1 302 0
 484 0030 2046     		mov	r0, r4
 485 0032 02B0     		add	sp, sp, #8
 486              		.cfi_def_cfa_offset 24
 487              		@ sp needed
 488 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 489              		.cfi_endproc
 490              	.LFE5:
 492              		.section	.text.xTimerCreateStatic,"ax",%progbits
 493              		.align	1
 494              		.global	xTimerCreateStatic
 495              		.syntax unified
 496              		.thumb
 497              		.thumb_func
 498              		.fpu fpv4-sp-d16
 500              	xTimerCreateStatic:
 501              	.LFB6:
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 502              		.loc 1 315 0
 503              		.cfi_startproc
 504              		@ args = 8, pretend = 0, frame = 8
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              	.LVL46:
 507 0000 30B5     		push	{r4, r5, lr}
 508              		.cfi_def_cfa_offset 12
 509              		.cfi_offset 4, -12
 510              		.cfi_offset 5, -8
 511              		.cfi_offset 14, -4
 512 0002 85B0     		sub	sp, sp, #20
 513              		.cfi_def_cfa_offset 32
 514 0004 099C     		ldr	r4, [sp, #36]
 515              	.LBB49:
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 516              		.loc 1 323 0
 517 0006 2C25     		movs	r5, #44
 518 0008 0395     		str	r5, [sp, #12]
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 519              		.loc 1 324 0
 520 000a 039D     		ldr	r5, [sp, #12]
 521 000c 2C2D     		cmp	r5, #44
ARM GAS  /tmp/cclsodVt.s 			page 31


 522 000e 08D0     		beq	.L44
 523              	.LBB50:
 524              	.LBB51:
 525              		.loc 2 195 0
 526              		.syntax unified
 527              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 528 0010 4FF05003 			mov r3, #80												
 529 0014 83F31188 		msr basepri, r3											
 530 0018 BFF36F8F 		isb														
 531 001c BFF34F8F 		dsb														
 532              	
 533              	@ 0 "" 2
 534              	.LVL47:
 535              		.thumb
 536              		.syntax unified
 537              	.L45:
 538 0020 FEE7     		b	.L45
 539              	.LVL48:
 540              	.L44:
 541              	.LBE51:
 542              	.LBE50:
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 543              		.loc 1 325 0
 544 0022 039D     		ldr	r5, [sp, #12]
 545              	.LBE49:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 546              		.loc 1 330 0
 547 0024 44B9     		cbnz	r4, .L46
 548              	.LBB52:
 549              	.LBB53:
 550              		.loc 2 195 0
 551              		.syntax unified
 552              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 553 0026 4FF05003 			mov r3, #80												
 554 002a 83F31188 		msr basepri, r3											
 555 002e BFF36F8F 		isb														
 556 0032 BFF34F8F 		dsb														
 557              	
 558              	@ 0 "" 2
 559              	.LVL49:
 560              		.thumb
 561              		.syntax unified
 562              	.L47:
 563 0036 FEE7     		b	.L47
 564              	.LVL50:
 565              	.L46:
 566              	.LBE53:
 567              	.LBE52:
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 568              		.loc 1 338 0
 569 0038 0225     		movs	r5, #2
 570 003a 84F82850 		strb	r5, [r4, #40]
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 571              		.loc 1 340 0
 572 003e 0194     		str	r4, [sp, #4]
 573 0040 089D     		ldr	r5, [sp, #32]
 574 0042 0095     		str	r5, [sp]
ARM GAS  /tmp/cclsodVt.s 			page 32


 575 0044 FFF7FEFF 		bl	prvInitialiseNewTimer
 576              	.LVL51:
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 577              		.loc 1 344 0
 578 0048 2046     		mov	r0, r4
 579 004a 05B0     		add	sp, sp, #20
 580              		.cfi_def_cfa_offset 12
 581              		@ sp needed
 582 004c 30BD     		pop	{r4, r5, pc}
 583              		.cfi_endproc
 584              	.LFE6:
 586              		.section	.text.xTimerGenericCommand,"ax",%progbits
 587              		.align	1
 588              		.global	xTimerGenericCommand
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu fpv4-sp-d16
 594              	xTimerGenericCommand:
 595              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 596              		.loc 1 382 0
 597              		.cfi_startproc
 598              		@ args = 4, pretend = 0, frame = 16
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              	.LVL52:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 601              		.loc 1 386 0
 602 0000 C0B1     		cbz	r0, .L58
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 603              		.loc 1 382 0
 604 0002 30B5     		push	{r4, r5, lr}
 605              		.cfi_def_cfa_offset 12
 606              		.cfi_offset 4, -12
 607              		.cfi_offset 5, -8
 608              		.cfi_offset 14, -4
 609 0004 85B0     		sub	sp, sp, #20
 610              		.cfi_def_cfa_offset 32
 611 0006 1546     		mov	r5, r2
 612 0008 0446     		mov	r4, r0
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 613              		.loc 1 390 0
 614 000a 174A     		ldr	r2, .L60
 615              	.LVL53:
 616 000c 1068     		ldr	r0, [r2]
 617              	.LVL54:
 618 000e 40B3     		cbz	r0, .L55
 619 0010 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 620              		.loc 1 393 0
 621 0012 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 622              		.loc 1 394 0
 623 0014 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 624              		.loc 1 395 0
 625 0016 0294     		str	r4, [sp, #8]
ARM GAS  /tmp/cclsodVt.s 			page 33


 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 626              		.loc 1 397 0
 627 0018 0529     		cmp	r1, #5
 628 001a 1CDC     		bgt	.L53
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 629              		.loc 1 399 0
 630 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 631              	.LVL55:
 632 0020 0228     		cmp	r0, #2
 633 0022 10D0     		beq	.L59
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 634              		.loc 1 405 0
 635 0024 0023     		movs	r3, #0
 636 0026 1A46     		mov	r2, r3
 637 0028 6946     		mov	r1, sp
 638 002a 0F48     		ldr	r0, .L60
 639 002c 0068     		ldr	r0, [r0]
 640 002e FFF7FEFF 		bl	xQueueGenericSend
 641              	.LVL56:
 642 0032 14E0     		b	.L49
 643              	.LVL57:
 644              	.L58:
 645              		.cfi_def_cfa_offset 0
 646              		.cfi_restore 4
 647              		.cfi_restore 5
 648              		.cfi_restore 14
 649              	.LBB54:
 650              	.LBB55:
 651              		.loc 2 195 0
 652              		.syntax unified
 653              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 654 0034 4FF05003 			mov r3, #80												
 655 0038 83F31188 		msr basepri, r3											
 656 003c BFF36F8F 		isb														
 657 0040 BFF34F8F 		dsb														
 658              	
 659              	@ 0 "" 2
 660              	.LVL58:
 661              		.thumb
 662              		.syntax unified
 663              	.L51:
 664 0044 FEE7     		b	.L51
 665              	.LVL59:
 666              	.L59:
 667              		.cfi_def_cfa_offset 32
 668              		.cfi_offset 4, -12
 669              		.cfi_offset 5, -8
 670              		.cfi_offset 14, -4
 671              	.LBE55:
 672              	.LBE54:
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 673              		.loc 1 401 0
 674 0046 0023     		movs	r3, #0
 675 0048 089A     		ldr	r2, [sp, #32]
 676 004a 6946     		mov	r1, sp
 677 004c 0648     		ldr	r0, .L60
 678 004e 0068     		ldr	r0, [r0]
ARM GAS  /tmp/cclsodVt.s 			page 34


 679 0050 FFF7FEFF 		bl	xQueueGenericSend
 680              	.LVL60:
 681 0054 03E0     		b	.L49
 682              	.LVL61:
 683              	.L53:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 684              		.loc 1 410 0
 685 0056 0023     		movs	r3, #0
 686 0058 6946     		mov	r1, sp
 687              	.LVL62:
 688 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 689              	.LVL63:
 690              	.L49:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 691              		.loc 1 421 0
 692 005e 05B0     		add	sp, sp, #20
 693              		.cfi_remember_state
 694              		.cfi_def_cfa_offset 12
 695              		@ sp needed
 696 0060 30BD     		pop	{r4, r5, pc}
 697              	.LVL64:
 698              	.L55:
 699              		.cfi_restore_state
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 700              		.loc 1 383 0
 701 0062 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 702              		.loc 1 420 0
 703 0064 FBE7     		b	.L49
 704              	.L61:
 705 0066 00BF     		.align	2
 706              	.L60:
 707 0068 00000000 		.word	.LANCHOR2
 708              		.cfi_endproc
 709              	.LFE8:
 711              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 712              		.align	1
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 716              		.fpu fpv4-sp-d16
 718              	prvSwitchTimerLists:
 719              	.LFB21:
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 720              		.loc 1 858 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724 0000 70B5     		push	{r4, r5, r6, lr}
 725              		.cfi_def_cfa_offset 16
 726              		.cfi_offset 4, -16
 727              		.cfi_offset 5, -12
 728              		.cfi_offset 6, -8
 729              		.cfi_offset 14, -4
 730 0002 82B0     		sub	sp, sp, #8
 731              		.cfi_def_cfa_offset 24
 732              	.L64:
ARM GAS  /tmp/cclsodVt.s 			page 35


 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 733              		.loc 1 868 0
 734 0004 1B4B     		ldr	r3, .L71
 735 0006 1B68     		ldr	r3, [r3]
 736 0008 1A68     		ldr	r2, [r3]
 737 000a 62B3     		cbz	r2, .L70
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 738              		.loc 1 870 0
 739 000c DB68     		ldr	r3, [r3, #12]
 740 000e 1E68     		ldr	r6, [r3]
 741              	.LVL65:
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 742              		.loc 1 873 0
 743 0010 DC68     		ldr	r4, [r3, #12]
 744              	.LVL66:
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 745              		.loc 1 874 0
 746 0012 251D     		adds	r5, r4, #4
 747 0014 2846     		mov	r0, r5
 748 0016 FFF7FEFF 		bl	uxListRemove
 749              	.LVL67:
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 750              		.loc 1 880 0
 751 001a 236A     		ldr	r3, [r4, #32]
 752 001c 2046     		mov	r0, r4
 753 001e 9847     		blx	r3
 754              	.LVL68:
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 755              		.loc 1 882 0
 756 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 757 0024 13F0040F 		tst	r3, #4
 758 0028 ECD0     		beq	.L64
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 759              		.loc 1 890 0
 760 002a A369     		ldr	r3, [r4, #24]
 761 002c 3344     		add	r3, r3, r6
 762              	.LVL69:
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 763              		.loc 1 891 0
 764 002e 9E42     		cmp	r6, r3
 765 0030 07D2     		bcs	.L65
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 766              		.loc 1 893 0
 767 0032 6360     		str	r3, [r4, #4]
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 768              		.loc 1 894 0
 769 0034 2461     		str	r4, [r4, #16]
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 770              		.loc 1 895 0
 771 0036 2946     		mov	r1, r5
 772 0038 0E4B     		ldr	r3, .L71
 773              	.LVL70:
 774 003a 1868     		ldr	r0, [r3]
 775 003c FFF7FEFF 		bl	vListInsert
 776              	.LVL71:
 777 0040 E0E7     		b	.L64
 778              	.LVL72:
ARM GAS  /tmp/cclsodVt.s 			page 36


 779              	.L65:
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 780              		.loc 1 899 0
 781 0042 0021     		movs	r1, #0
 782 0044 0091     		str	r1, [sp]
 783 0046 0B46     		mov	r3, r1
 784              	.LVL73:
 785 0048 3246     		mov	r2, r6
 786 004a 2046     		mov	r0, r4
 787 004c FFF7FEFF 		bl	xTimerGenericCommand
 788              	.LVL74:
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 789              		.loc 1 900 0
 790 0050 0028     		cmp	r0, #0
 791 0052 D7D1     		bne	.L64
 792              	.LBB56:
 793              	.LBB57:
 794              		.loc 2 195 0
 795              		.syntax unified
 796              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 797 0054 4FF05003 			mov r3, #80												
 798 0058 83F31188 		msr basepri, r3											
 799 005c BFF36F8F 		isb														
 800 0060 BFF34F8F 		dsb														
 801              	
 802              	@ 0 "" 2
 803              	.LVL75:
 804              		.thumb
 805              		.syntax unified
 806              	.L67:
 807 0064 FEE7     		b	.L67
 808              	.LVL76:
 809              	.L70:
 810              	.LBE57:
 811              	.LBE56:
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 812              		.loc 1 911 0
 813 0066 044A     		ldr	r2, .L71+4
 814 0068 1068     		ldr	r0, [r2]
 815 006a 0249     		ldr	r1, .L71
 816 006c 0860     		str	r0, [r1]
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 817              		.loc 1 912 0
 818 006e 1360     		str	r3, [r2]
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 819              		.loc 1 913 0
 820 0070 02B0     		add	sp, sp, #8
 821              		.cfi_def_cfa_offset 16
 822              		@ sp needed
 823 0072 70BD     		pop	{r4, r5, r6, pc}
 824              	.L72:
 825              		.align	2
 826              	.L71:
 827 0074 00000000 		.word	.LANCHOR0
 828 0078 00000000 		.word	.LANCHOR1
 829              		.cfi_endproc
 830              	.LFE21:
ARM GAS  /tmp/cclsodVt.s 			page 37


 832              		.section	.text.prvSampleTimeNow,"ax",%progbits
 833              		.align	1
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu fpv4-sp-d16
 839              	prvSampleTimeNow:
 840              	.LFB18:
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 841              		.loc 1 646 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              	.LVL77:
 846 0000 38B5     		push	{r3, r4, r5, lr}
 847              		.cfi_def_cfa_offset 16
 848              		.cfi_offset 3, -16
 849              		.cfi_offset 4, -12
 850              		.cfi_offset 5, -8
 851              		.cfi_offset 14, -4
 852 0002 0546     		mov	r5, r0
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 853              		.loc 1 650 0
 854 0004 FFF7FEFF 		bl	xTaskGetTickCount
 855              	.LVL78:
 856 0008 0446     		mov	r4, r0
 857              	.LVL79:
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 858              		.loc 1 652 0
 859 000a 074B     		ldr	r3, .L78
 860 000c 1B68     		ldr	r3, [r3]
 861 000e 9842     		cmp	r0, r3
 862 0010 05D3     		bcc	.L77
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 863              		.loc 1 659 0
 864 0012 0023     		movs	r3, #0
 865 0014 2B60     		str	r3, [r5]
 866              	.LVL80:
 867              	.L75:
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 868              		.loc 1 662 0
 869 0016 044B     		ldr	r3, .L78
 870 0018 1C60     		str	r4, [r3]
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 871              		.loc 1 665 0
 872 001a 2046     		mov	r0, r4
 873 001c 38BD     		pop	{r3, r4, r5, pc}
 874              	.LVL81:
 875              	.L77:
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 876              		.loc 1 654 0
 877 001e FFF7FEFF 		bl	prvSwitchTimerLists
 878              	.LVL82:
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 879              		.loc 1 655 0
 880 0022 0123     		movs	r3, #1
 881 0024 2B60     		str	r3, [r5]
ARM GAS  /tmp/cclsodVt.s 			page 38


 882 0026 F6E7     		b	.L75
 883              	.L79:
 884              		.align	2
 885              	.L78:
 886 0028 00000000 		.word	.LANCHOR8
 887              		.cfi_endproc
 888              	.LFE18:
 890              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 891              		.align	1
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu fpv4-sp-d16
 897              	prvProcessExpiredTimer:
 898              	.LFB14:
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 899              		.loc 1 483 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              	.LVL83:
 904 0000 70B5     		push	{r4, r5, r6, lr}
 905              		.cfi_def_cfa_offset 16
 906              		.cfi_offset 4, -16
 907              		.cfi_offset 5, -12
 908              		.cfi_offset 6, -8
 909              		.cfi_offset 14, -4
 910 0002 82B0     		sub	sp, sp, #8
 911              		.cfi_def_cfa_offset 24
 912 0004 0546     		mov	r5, r0
 913 0006 0E46     		mov	r6, r1
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 914              		.loc 1 485 0
 915 0008 174B     		ldr	r3, .L86
 916 000a 1B68     		ldr	r3, [r3]
 917 000c DB68     		ldr	r3, [r3, #12]
 918 000e DC68     		ldr	r4, [r3, #12]
 919              	.LVL84:
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 920              		.loc 1 489 0
 921 0010 201D     		adds	r0, r4, #4
 922              	.LVL85:
 923 0012 FFF7FEFF 		bl	uxListRemove
 924              	.LVL86:
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 925              		.loc 1 494 0
 926 0016 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 927 001a 13F0040F 		tst	r3, #4
 928 001e 08D1     		bne	.L85
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 929              		.loc 1 514 0
 930 0020 23F00103 		bic	r3, r3, #1
 931 0024 84F82830 		strb	r3, [r4, #40]
 932              	.L82:
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 933              		.loc 1 519 0
 934 0028 236A     		ldr	r3, [r4, #32]
ARM GAS  /tmp/cclsodVt.s 			page 39


 935 002a 2046     		mov	r0, r4
 936 002c 9847     		blx	r3
 937              	.LVL87:
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 938              		.loc 1 520 0
 939 002e 02B0     		add	sp, sp, #8
 940              		.cfi_remember_state
 941              		.cfi_def_cfa_offset 16
 942              		@ sp needed
 943 0030 70BD     		pop	{r4, r5, r6, pc}
 944              	.LVL88:
 945              	.L85:
 946              		.cfi_restore_state
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 947              		.loc 1 499 0
 948 0032 A169     		ldr	r1, [r4, #24]
 949 0034 2B46     		mov	r3, r5
 950 0036 3246     		mov	r2, r6
 951 0038 2944     		add	r1, r1, r5
 952 003a 2046     		mov	r0, r4
 953 003c FFF7FEFF 		bl	prvInsertTimerInActiveList
 954              	.LVL89:
 955 0040 0028     		cmp	r0, #0
 956 0042 F1D0     		beq	.L82
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 957              		.loc 1 503 0
 958 0044 0021     		movs	r1, #0
 959 0046 0091     		str	r1, [sp]
 960 0048 0B46     		mov	r3, r1
 961 004a 2A46     		mov	r2, r5
 962 004c 2046     		mov	r0, r4
 963 004e FFF7FEFF 		bl	xTimerGenericCommand
 964              	.LVL90:
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 965              		.loc 1 504 0
 966 0052 0028     		cmp	r0, #0
 967 0054 E8D1     		bne	.L82
 968              	.LBB58:
 969              	.LBB59:
 970              		.loc 2 195 0
 971              		.syntax unified
 972              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 973 0056 4FF05003 			mov r3, #80												
 974 005a 83F31188 		msr basepri, r3											
 975 005e BFF36F8F 		isb														
 976 0062 BFF34F8F 		dsb														
 977              	
 978              	@ 0 "" 2
 979              	.LVL91:
 980              		.thumb
 981              		.syntax unified
 982              	.L83:
 983 0066 FEE7     		b	.L83
 984              	.L87:
 985              		.align	2
 986              	.L86:
 987 0068 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cclsodVt.s 			page 40


 988              	.LBE59:
 989              	.LBE58:
 990              		.cfi_endproc
 991              	.LFE14:
 993              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 994              		.align	1
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 998              		.fpu fpv4-sp-d16
 1000              	prvProcessTimerOrBlockTask:
 1001              	.LFB16:
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 1002              		.loc 1 560 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 8
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 1006              	.LVL92:
 1007 0000 70B5     		push	{r4, r5, r6, lr}
 1008              		.cfi_def_cfa_offset 16
 1009              		.cfi_offset 4, -16
 1010              		.cfi_offset 5, -12
 1011              		.cfi_offset 6, -8
 1012              		.cfi_offset 14, -4
 1013 0002 82B0     		sub	sp, sp, #8
 1014              		.cfi_def_cfa_offset 24
 1015 0004 0646     		mov	r6, r0
 1016 0006 0C46     		mov	r4, r1
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1017              		.loc 1 564 0
 1018 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1019              	.LVL93:
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1020              		.loc 1 571 0
 1021 000c 01A8     		add	r0, sp, #4
 1022 000e FFF7FEFF 		bl	prvSampleTimeNow
 1023              	.LVL94:
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1024              		.loc 1 572 0
 1025 0012 019B     		ldr	r3, [sp, #4]
 1026 0014 2BBB     		cbnz	r3, .L89
 1027 0016 0546     		mov	r5, r0
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1028              		.loc 1 575 0
 1029 0018 0CB9     		cbnz	r4, .L90
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1030              		.loc 1 575 0 is_stmt 0 discriminator 1
 1031 001a B042     		cmp	r0, r6
 1032 001c 18D2     		bcs	.L95
 1033              	.L90:
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1034              		.loc 1 588 0 is_stmt 1
 1035 001e 24B1     		cbz	r4, .L92
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1036              		.loc 1 592 0
 1037 0020 114B     		ldr	r3, .L96
 1038 0022 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cclsodVt.s 			page 41


 1039 0024 1B68     		ldr	r3, [r3]
 1040 0026 D3B9     		cbnz	r3, .L93
 1041 0028 0124     		movs	r4, #1
 1042              	.LVL95:
 1043              	.L92:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1044              		.loc 1 595 0
 1045 002a 2246     		mov	r2, r4
 1046 002c 711B     		subs	r1, r6, r5
 1047 002e 0F4B     		ldr	r3, .L96+4
 1048 0030 1868     		ldr	r0, [r3]
 1049              	.LVL96:
 1050 0032 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1051              	.LVL97:
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1052              		.loc 1 597 0
 1053 0036 FFF7FEFF 		bl	xTaskResumeAll
 1054              	.LVL98:
 1055 003a 38B9     		cbnz	r0, .L88
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1056              		.loc 1 603 0
 1057 003c 4FF08052 		mov	r2, #268435456
 1058 0040 0B4B     		ldr	r3, .L96+8
 1059 0042 1A60     		str	r2, [r3]
 1060              		.syntax unified
 1061              	@ 603 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1062 0044 BFF34F8F 		dsb
 1063              	@ 0 "" 2
 1064              	@ 603 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1065 0048 BFF36F8F 		isb
 1066              	@ 0 "" 2
 1067              	.LVL99:
 1068              		.thumb
 1069              		.syntax unified
 1070              	.L88:
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1071              		.loc 1 616 0
 1072 004c 02B0     		add	sp, sp, #8
 1073              		.cfi_remember_state
 1074              		.cfi_def_cfa_offset 16
 1075              		@ sp needed
 1076 004e 70BD     		pop	{r4, r5, r6, pc}
 1077              	.LVL100:
 1078              	.L95:
 1079              		.cfi_restore_state
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1080              		.loc 1 577 0
 1081 0050 FFF7FEFF 		bl	xTaskResumeAll
 1082              	.LVL101:
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1083              		.loc 1 578 0
 1084 0054 2946     		mov	r1, r5
 1085 0056 3046     		mov	r0, r6
 1086 0058 FFF7FEFF 		bl	prvProcessExpiredTimer
 1087              	.LVL102:
 1088 005c F6E7     		b	.L88
 1089              	.LVL103:
ARM GAS  /tmp/cclsodVt.s 			page 42


 1090              	.L93:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1091              		.loc 1 592 0
 1092 005e 0024     		movs	r4, #0
 1093              	.LVL104:
 1094 0060 E3E7     		b	.L92
 1095              	.LVL105:
 1096              	.L89:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1097              		.loc 1 613 0
 1098 0062 FFF7FEFF 		bl	xTaskResumeAll
 1099              	.LVL106:
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1100              		.loc 1 616 0
 1101 0066 F1E7     		b	.L88
 1102              	.L97:
 1103              		.align	2
 1104              	.L96:
 1105 0068 00000000 		.word	.LANCHOR1
 1106 006c 00000000 		.word	.LANCHOR2
 1107 0070 04ED00E0 		.word	-536810236
 1108              		.cfi_endproc
 1109              	.LFE16:
 1111              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1112              		.align	1
 1113              		.syntax unified
 1114              		.thumb
 1115              		.thumb_func
 1116              		.fpu fpv4-sp-d16
 1118              	prvProcessReceivedCommands:
 1119              	.LFB20:
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1120              		.loc 1 710 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 24
 1123              		@ frame_needed = 0, uses_anonymous_args = 0
 1124 0000 30B5     		push	{r4, r5, lr}
 1125              		.cfi_def_cfa_offset 12
 1126              		.cfi_offset 4, -12
 1127              		.cfi_offset 5, -8
 1128              		.cfi_offset 14, -4
 1129 0002 89B0     		sub	sp, sp, #36
 1130              		.cfi_def_cfa_offset 48
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1131              		.loc 1 716 0
 1132 0004 02E0     		b	.L101
 1133              	.L100:
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1134              		.loc 1 742 0
 1135 0006 049B     		ldr	r3, [sp, #16]
 1136 0008 002B     		cmp	r3, #0
 1137 000a 0FDA     		bge	.L116
 1138              	.L101:
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1139              		.loc 1 716 0
 1140 000c 0022     		movs	r2, #0
 1141 000e 04A9     		add	r1, sp, #16
ARM GAS  /tmp/cclsodVt.s 			page 43


 1142 0010 3E4B     		ldr	r3, .L120
 1143 0012 1868     		ldr	r0, [r3]
 1144 0014 FFF7FEFF 		bl	xQueueReceive
 1145              	.LVL107:
 1146 0018 0028     		cmp	r0, #0
 1147 001a 74D0     		beq	.L117
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1148              		.loc 1 722 0
 1149 001c 049B     		ldr	r3, [sp, #16]
 1150 001e 002B     		cmp	r3, #0
 1151 0020 F1DA     		bge	.L100
 1152              	.LVL108:
 1153              	.LBB60:
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1154              		.loc 1 731 0
 1155 0022 0799     		ldr	r1, [sp, #28]
 1156 0024 0698     		ldr	r0, [sp, #24]
 1157 0026 059B     		ldr	r3, [sp, #20]
 1158 0028 9847     		blx	r3
 1159              	.LVL109:
 1160              	.LBE60:
 1161 002a ECE7     		b	.L100
 1162              	.LVL110:
 1163              	.L116:
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1164              		.loc 1 746 0
 1165 002c 069C     		ldr	r4, [sp, #24]
 1166              	.LVL111:
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1167              		.loc 1 748 0
 1168 002e 6369     		ldr	r3, [r4, #20]
 1169 0030 13B1     		cbz	r3, .L102
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1170              		.loc 1 751 0
 1171 0032 201D     		adds	r0, r4, #4
 1172 0034 FFF7FEFF 		bl	uxListRemove
 1173              	.LVL112:
 1174              	.L102:
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1175              		.loc 1 766 0
 1176 0038 03A8     		add	r0, sp, #12
 1177 003a FFF7FEFF 		bl	prvSampleTimeNow
 1178              	.LVL113:
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1179              		.loc 1 768 0
 1180 003e 049B     		ldr	r3, [sp, #16]
 1181 0040 092B     		cmp	r3, #9
 1182 0042 E3D8     		bhi	.L101
 1183 0044 DFE803F0 		tbb	[pc, r3]
 1184              	.L105:
 1185 0048 05       		.byte	(.L104-.L105)/2
 1186 0049 05       		.byte	(.L104-.L105)/2
 1187 004a 05       		.byte	(.L104-.L105)/2
 1188 004b 31       		.byte	(.L106-.L105)/2
 1189 004c 38       		.byte	(.L107-.L105)/2
 1190 004d 51       		.byte	(.L108-.L105)/2
 1191 004e 05       		.byte	(.L104-.L105)/2
ARM GAS  /tmp/cclsodVt.s 			page 44


 1192 004f 05       		.byte	(.L104-.L105)/2
 1193 0050 31       		.byte	(.L106-.L105)/2
 1194 0051 38       		.byte	(.L107-.L105)/2
 1195              		.p2align 1
 1196              	.L104:
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1197              		.loc 1 776 0
 1198 0052 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1199 0056 43F00103 		orr	r3, r3, #1
 1200 005a 84F82830 		strb	r3, [r4, #40]
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1201              		.loc 1 777 0
 1202 005e 0599     		ldr	r1, [sp, #20]
 1203 0060 A569     		ldr	r5, [r4, #24]
 1204 0062 0B46     		mov	r3, r1
 1205 0064 0246     		mov	r2, r0
 1206 0066 2944     		add	r1, r1, r5
 1207 0068 2046     		mov	r0, r4
 1208              	.LVL114:
 1209 006a FFF7FEFF 		bl	prvInsertTimerInActiveList
 1210              	.LVL115:
 1211 006e 0028     		cmp	r0, #0
 1212 0070 CCD0     		beq	.L101
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1213              		.loc 1 781 0
 1214 0072 236A     		ldr	r3, [r4, #32]
 1215 0074 2046     		mov	r0, r4
 1216 0076 9847     		blx	r3
 1217              	.LVL116:
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1218              		.loc 1 784 0
 1219 0078 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1220 007c 13F0040F 		tst	r3, #4
 1221 0080 C4D0     		beq	.L101
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1222              		.loc 1 786 0
 1223 0082 A269     		ldr	r2, [r4, #24]
 1224 0084 0021     		movs	r1, #0
 1225 0086 0091     		str	r1, [sp]
 1226 0088 0B46     		mov	r3, r1
 1227 008a 0598     		ldr	r0, [sp, #20]
 1228 008c 0244     		add	r2, r2, r0
 1229 008e 2046     		mov	r0, r4
 1230 0090 FFF7FEFF 		bl	xTimerGenericCommand
 1231              	.LVL117:
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1232              		.loc 1 787 0
 1233 0094 0028     		cmp	r0, #0
 1234 0096 B9D1     		bne	.L101
 1235              	.LBB61:
 1236              	.LBB62:
 1237              		.loc 2 195 0
 1238              		.syntax unified
 1239              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1240 0098 4FF05003 			mov r3, #80												
 1241 009c 83F31188 		msr basepri, r3											
 1242 00a0 BFF36F8F 		isb														
ARM GAS  /tmp/cclsodVt.s 			page 45


 1243 00a4 BFF34F8F 		dsb														
 1244              	
 1245              	@ 0 "" 2
 1246              	.LVL118:
 1247              		.thumb
 1248              		.syntax unified
 1249              	.L110:
 1250 00a8 FEE7     		b	.L110
 1251              	.LVL119:
 1252              	.L106:
 1253              	.LBE62:
 1254              	.LBE61:
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1255              		.loc 1 804 0
 1256 00aa 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1257 00ae 23F00103 		bic	r3, r3, #1
 1258 00b2 84F82830 		strb	r3, [r4, #40]
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1259              		.loc 1 805 0
 1260 00b6 A9E7     		b	.L101
 1261              	.L107:
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1262              		.loc 1 809 0
 1263 00b8 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1264 00bc 43F00103 		orr	r3, r3, #1
 1265 00c0 84F82830 		strb	r3, [r4, #40]
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1266              		.loc 1 810 0
 1267 00c4 0599     		ldr	r1, [sp, #20]
 1268 00c6 A161     		str	r1, [r4, #24]
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1269              		.loc 1 811 0
 1270 00c8 31B1     		cbz	r1, .L118
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1271              		.loc 1 819 0
 1272 00ca 0346     		mov	r3, r0
 1273 00cc 0246     		mov	r2, r0
 1274 00ce 0144     		add	r1, r1, r0
 1275 00d0 2046     		mov	r0, r4
 1276              	.LVL120:
 1277 00d2 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1278              	.LVL121:
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1279              		.loc 1 820 0
 1280 00d6 99E7     		b	.L101
 1281              	.LVL122:
 1282              	.L118:
 1283              	.LBB63:
 1284              	.LBB64:
 1285              		.loc 2 195 0
 1286              		.syntax unified
 1287              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1288 00d8 4FF05003 			mov r3, #80												
 1289 00dc 83F31188 		msr basepri, r3											
 1290 00e0 BFF36F8F 		isb														
 1291 00e4 BFF34F8F 		dsb														
 1292              	
ARM GAS  /tmp/cclsodVt.s 			page 46


 1293              	@ 0 "" 2
 1294              	.LVL123:
 1295              		.thumb
 1296              		.syntax unified
 1297              	.L112:
 1298 00e8 FEE7     		b	.L112
 1299              	.L108:
 1300              	.LBE64:
 1301              	.LBE63:
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1302              		.loc 1 828 0
 1303 00ea 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1304 00ee 13F0020F 		tst	r3, #2
 1305 00f2 04D0     		beq	.L119
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1306              		.loc 1 834 0
 1307 00f4 23F00103 		bic	r3, r3, #1
 1308 00f8 84F82830 		strb	r3, [r4, #40]
 1309 00fc 86E7     		b	.L101
 1310              	.L119:
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1311              		.loc 1 830 0
 1312 00fe 2046     		mov	r0, r4
 1313              	.LVL124:
 1314 0100 FFF7FEFF 		bl	vPortFree
 1315              	.LVL125:
 1316 0104 82E7     		b	.L101
 1317              	.LVL126:
 1318              	.L117:
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1319              		.loc 1 854 0
 1320 0106 09B0     		add	sp, sp, #36
 1321              		.cfi_def_cfa_offset 12
 1322              		@ sp needed
 1323 0108 30BD     		pop	{r4, r5, pc}
 1324              	.L121:
 1325 010a 00BF     		.align	2
 1326              	.L120:
 1327 010c 00000000 		.word	.LANCHOR2
 1328              		.cfi_endproc
 1329              	.LFE20:
 1331              		.section	.text.prvTimerTask,"ax",%progbits
 1332              		.align	1
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1336              		.fpu fpv4-sp-d16
 1338              	prvTimerTask:
 1339              	.LFB15:
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1340              		.loc 1 524 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 8
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
 1344              	.LVL127:
 1345 0000 00B5     		push	{lr}
 1346              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cclsodVt.s 			page 47


 1347              		.cfi_offset 14, -4
 1348 0002 83B0     		sub	sp, sp, #12
 1349              		.cfi_def_cfa_offset 16
 1350              	.LVL128:
 1351              	.L123:
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1352              		.loc 1 547 0 discriminator 1
 1353 0004 01A8     		add	r0, sp, #4
 1354 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1355              	.LVL129:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1356              		.loc 1 551 0 discriminator 1
 1357 000a 0199     		ldr	r1, [sp, #4]
 1358 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1359              	.LVL130:
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1360              		.loc 1 554 0 discriminator 1
 1361 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1362              	.LVL131:
 1363 0014 F6E7     		b	.L123
 1364              		.cfi_endproc
 1365              	.LFE15:
 1367              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1368              		.align	1
 1369              		.global	xTimerGetTimerDaemonTaskHandle
 1370              		.syntax unified
 1371              		.thumb
 1372              		.thumb_func
 1373              		.fpu fpv4-sp-d16
 1375              	xTimerGetTimerDaemonTaskHandle:
 1376              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1377              		.loc 1 425 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1382              		.loc 1 428 0
 1383 0000 064B     		ldr	r3, .L129
 1384 0002 1868     		ldr	r0, [r3]
 1385 0004 00B1     		cbz	r0, .L128
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1386              		.loc 1 430 0
 1387 0006 7047     		bx	lr
 1388              	.L128:
 1389              	.LBB65:
 1390              	.LBB66:
 1391              		.loc 2 195 0
 1392              		.syntax unified
 1393              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1394 0008 4FF05003 			mov r3, #80												
 1395 000c 83F31188 		msr basepri, r3											
 1396 0010 BFF36F8F 		isb														
 1397 0014 BFF34F8F 		dsb														
 1398              	
 1399              	@ 0 "" 2
ARM GAS  /tmp/cclsodVt.s 			page 48


 1400              	.LVL132:
 1401              		.thumb
 1402              		.syntax unified
 1403              	.L127:
 1404 0018 FEE7     		b	.L127
 1405              	.L130:
 1406 001a 00BF     		.align	2
 1407              	.L129:
 1408 001c 00000000 		.word	.LANCHOR7
 1409              	.LBE66:
 1410              	.LBE65:
 1411              		.cfi_endproc
 1412              	.LFE9:
 1414              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1415              		.align	1
 1416              		.global	xTimerGetPeriod
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1420              		.fpu fpv4-sp-d16
 1422              	xTimerGetPeriod:
 1423              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1424              		.loc 1 434 0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 0
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              		@ link register save eliminated.
 1429              	.LVL133:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1430              		.loc 1 437 0
 1431 0000 08B1     		cbz	r0, .L134
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1432              		.loc 1 439 0
 1433 0002 8069     		ldr	r0, [r0, #24]
 1434              	.LVL134:
 1435 0004 7047     		bx	lr
 1436              	.LVL135:
 1437              	.L134:
 1438              	.LBB67:
 1439              	.LBB68:
 1440              		.loc 2 195 0
 1441              		.syntax unified
 1442              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1443 0006 4FF05003 			mov r3, #80												
 1444 000a 83F31188 		msr basepri, r3											
 1445 000e BFF36F8F 		isb														
 1446 0012 BFF34F8F 		dsb														
 1447              	
 1448              	@ 0 "" 2
 1449              	.LVL136:
 1450              		.thumb
 1451              		.syntax unified
 1452              	.L133:
 1453 0016 FEE7     		b	.L133
 1454              	.LBE68:
 1455              	.LBE67:
ARM GAS  /tmp/cclsodVt.s 			page 49


 1456              		.cfi_endproc
 1457              	.LFE10:
 1459              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 1460              		.align	1
 1461              		.global	vTimerSetReloadMode
 1462              		.syntax unified
 1463              		.thumb
 1464              		.thumb_func
 1465              		.fpu fpv4-sp-d16
 1467              	vTimerSetReloadMode:
 1468              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1469              		.loc 1 443 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 0
 1472              		@ frame_needed = 0, uses_anonymous_args = 0
 1473              	.LVL137:
 1474 0000 38B5     		push	{r3, r4, r5, lr}
 1475              		.cfi_def_cfa_offset 16
 1476              		.cfi_offset 3, -16
 1477              		.cfi_offset 4, -12
 1478              		.cfi_offset 5, -8
 1479              		.cfi_offset 14, -4
 1480              	.LVL138:
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1481              		.loc 1 446 0
 1482 0002 68B1     		cbz	r0, .L141
 1483 0004 0446     		mov	r4, r0
 1484 0006 0D46     		mov	r5, r1
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1485              		.loc 1 447 0
 1486 0008 FFF7FEFF 		bl	vPortEnterCritical
 1487              	.LVL139:
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1488              		.loc 1 449 0
 1489 000c 8DB1     		cbz	r5, .L138
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1490              		.loc 1 451 0
 1491 000e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1492 0012 43F00403 		orr	r3, r3, #4
 1493 0016 84F82830 		strb	r3, [r4, #40]
 1494              	.L139:
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1495              		.loc 1 458 0
 1496 001a FFF7FEFF 		bl	vPortExitCritical
 1497              	.LVL140:
 1498 001e 38BD     		pop	{r3, r4, r5, pc}
 1499              	.LVL141:
 1500              	.L141:
 1501              	.LBB69:
 1502              	.LBB70:
 1503              		.loc 2 195 0
 1504              		.syntax unified
 1505              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1506 0020 4FF05003 			mov r3, #80												
 1507 0024 83F31188 		msr basepri, r3											
 1508 0028 BFF36F8F 		isb														
ARM GAS  /tmp/cclsodVt.s 			page 50


 1509 002c BFF34F8F 		dsb														
 1510              	
 1511              	@ 0 "" 2
 1512              	.LVL142:
 1513              		.thumb
 1514              		.syntax unified
 1515              	.L137:
 1516 0030 FEE7     		b	.L137
 1517              	.LVL143:
 1518              	.L138:
 1519              	.LBE70:
 1520              	.LBE69:
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1521              		.loc 1 455 0
 1522 0032 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1523 0036 23F00403 		bic	r3, r3, #4
 1524 003a 84F82830 		strb	r3, [r4, #40]
 1525 003e ECE7     		b	.L139
 1526              		.cfi_endproc
 1527              	.LFE11:
 1529              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1530              		.align	1
 1531              		.global	xTimerGetExpiryTime
 1532              		.syntax unified
 1533              		.thumb
 1534              		.thumb_func
 1535              		.fpu fpv4-sp-d16
 1537              	xTimerGetExpiryTime:
 1538              	.LFB12:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1539              		.loc 1 463 0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543              		@ link register save eliminated.
 1544              	.LVL144:
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1545              		.loc 1 467 0
 1546 0000 08B1     		cbz	r0, .L145
 1547              	.LVL145:
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1548              		.loc 1 470 0
 1549 0002 4068     		ldr	r0, [r0, #4]
 1550              	.LVL146:
 1551 0004 7047     		bx	lr
 1552              	.LVL147:
 1553              	.L145:
 1554              	.LBB71:
 1555              	.LBB72:
 1556              		.loc 2 195 0
 1557              		.syntax unified
 1558              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1559 0006 4FF05003 			mov r3, #80												
 1560 000a 83F31188 		msr basepri, r3											
 1561 000e BFF36F8F 		isb														
 1562 0012 BFF34F8F 		dsb														
 1563              	
ARM GAS  /tmp/cclsodVt.s 			page 51


 1564              	@ 0 "" 2
 1565              	.LVL148:
 1566              		.thumb
 1567              		.syntax unified
 1568              	.L144:
 1569 0016 FEE7     		b	.L144
 1570              	.LBE72:
 1571              	.LBE71:
 1572              		.cfi_endproc
 1573              	.LFE12:
 1575              		.section	.text.pcTimerGetName,"ax",%progbits
 1576              		.align	1
 1577              		.global	pcTimerGetName
 1578              		.syntax unified
 1579              		.thumb
 1580              		.thumb_func
 1581              		.fpu fpv4-sp-d16
 1583              	pcTimerGetName:
 1584              	.LFB13:
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1585              		.loc 1 474 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 0
 1588              		@ frame_needed = 0, uses_anonymous_args = 0
 1589              		@ link register save eliminated.
 1590              	.LVL149:
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1591              		.loc 1 477 0
 1592 0000 08B1     		cbz	r0, .L149
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1593              		.loc 1 479 0
 1594 0002 0068     		ldr	r0, [r0]
 1595              	.LVL150:
 1596 0004 7047     		bx	lr
 1597              	.LVL151:
 1598              	.L149:
 1599              	.LBB73:
 1600              	.LBB74:
 1601              		.loc 2 195 0
 1602              		.syntax unified
 1603              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1604 0006 4FF05003 			mov r3, #80												
 1605 000a 83F31188 		msr basepri, r3											
 1606 000e BFF36F8F 		isb														
 1607 0012 BFF34F8F 		dsb														
 1608              	
 1609              	@ 0 "" 2
 1610              	.LVL152:
 1611              		.thumb
 1612              		.syntax unified
 1613              	.L148:
 1614 0016 FEE7     		b	.L148
 1615              	.LBE74:
 1616              	.LBE73:
 1617              		.cfi_endproc
 1618              	.LFE13:
 1620              		.section	.text.xTimerIsTimerActive,"ax",%progbits
ARM GAS  /tmp/cclsodVt.s 			page 52


 1621              		.align	1
 1622              		.global	xTimerIsTimerActive
 1623              		.syntax unified
 1624              		.thumb
 1625              		.thumb_func
 1626              		.fpu fpv4-sp-d16
 1628              	xTimerIsTimerActive:
 1629              	.LFB23:
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1630              		.loc 1 968 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              	.LVL153:
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1635              		.loc 1 972 0
 1636 0000 68B1     		cbz	r0, .L157
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 1637              		.loc 1 968 0
 1638 0002 10B5     		push	{r4, lr}
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 4, -8
 1641              		.cfi_offset 14, -4
 1642 0004 0446     		mov	r4, r0
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1643              		.loc 1 975 0
 1644 0006 FFF7FEFF 		bl	vPortEnterCritical
 1645              	.LVL154:
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1646              		.loc 1 977 0
 1647 000a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1648 000e 13F0010F 		tst	r3, #1
 1649 0012 0DD1     		bne	.L154
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdFALSE;
 1650              		.loc 1 979 0
 1651 0014 0024     		movs	r4, #0
 1652              	.LVL155:
 1653              	.L153:
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdTRUE;
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1654              		.loc 1 986 0
 1655 0016 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/cclsodVt.s 			page 53


 1656              	.LVL156:
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1657              		.loc 1 989 0
 1658 001a 2046     		mov	r0, r4
 1659 001c 10BD     		pop	{r4, pc}
 1660              	.LVL157:
 1661              	.L157:
 1662              		.cfi_def_cfa_offset 0
 1663              		.cfi_restore 4
 1664              		.cfi_restore 14
 1665              	.LBB75:
 1666              	.LBB76:
 1667              		.loc 2 195 0
 1668              		.syntax unified
 1669              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1670 001e 4FF05003 			mov r3, #80												
 1671 0022 83F31188 		msr basepri, r3											
 1672 0026 BFF36F8F 		isb														
 1673 002a BFF34F8F 		dsb														
 1674              	
 1675              	@ 0 "" 2
 1676              	.LVL158:
 1677              		.thumb
 1678              		.syntax unified
 1679              	.L152:
 1680 002e FEE7     		b	.L152
 1681              	.LVL159:
 1682              	.L154:
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 4, -8
 1685              		.cfi_offset 14, -4
 1686              	.LBE76:
 1687              	.LBE75:
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1688              		.loc 1 983 0
 1689 0030 0124     		movs	r4, #1
 1690              	.LVL160:
 1691 0032 F0E7     		b	.L153
 1692              		.cfi_endproc
 1693              	.LFE23:
 1695              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1696              		.align	1
 1697              		.global	pvTimerGetTimerID
 1698              		.syntax unified
 1699              		.thumb
 1700              		.thumb_func
 1701              		.fpu fpv4-sp-d16
 1703              	pvTimerGetTimerID:
 1704              	.LFB24:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1705              		.loc 1 993 0
 1706              		.cfi_startproc
ARM GAS  /tmp/cclsodVt.s 			page 54


 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709              	.LVL161:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1710              		.loc 1 997 0
 1711 0000 40B9     		cbnz	r0, .L159
 1712              	.LBB77:
 1713              	.LBB78:
 1714              		.loc 2 195 0
 1715              		.syntax unified
 1716              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1717 0002 4FF05003 			mov r3, #80												
 1718 0006 83F31188 		msr basepri, r3											
 1719 000a BFF36F8F 		isb														
 1720 000e BFF34F8F 		dsb														
 1721              	
 1722              	@ 0 "" 2
 1723              	.LVL162:
 1724              		.thumb
 1725              		.syntax unified
 1726              	.L160:
 1727 0012 FEE7     		b	.L160
 1728              	.L159:
 1729              	.LBE78:
 1730              	.LBE77:
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
 1731              		.loc 1 993 0
 1732 0014 10B5     		push	{r4, lr}
 1733              		.cfi_def_cfa_offset 8
 1734              		.cfi_offset 4, -8
 1735              		.cfi_offset 14, -4
 1736 0016 0446     		mov	r4, r0
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1737              		.loc 1 999 0
 1738 0018 FFF7FEFF 		bl	vPortEnterCritical
 1739              	.LVL163:
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1740              		.loc 1 1001 0
 1741 001c E469     		ldr	r4, [r4, #28]
 1742              	.LVL164:
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1743              		.loc 1 1003 0
 1744 001e FFF7FEFF 		bl	vPortExitCritical
 1745              	.LVL165:
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1746              		.loc 1 1006 0
 1747 0022 2046     		mov	r0, r4
 1748 0024 10BD     		pop	{r4, pc}
 1749              		.cfi_endproc
ARM GAS  /tmp/cclsodVt.s 			page 55


 1750              	.LFE24:
 1752              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1753              		.align	1
 1754              		.global	vTimerSetTimerID
 1755              		.syntax unified
 1756              		.thumb
 1757              		.thumb_func
 1758              		.fpu fpv4-sp-d16
 1760              	vTimerSetTimerID:
 1761              	.LFB25:
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1762              		.loc 1 1010 0
 1763              		.cfi_startproc
 1764              		@ args = 0, pretend = 0, frame = 0
 1765              		@ frame_needed = 0, uses_anonymous_args = 0
 1766              	.LVL166:
 1767 0000 38B5     		push	{r3, r4, r5, lr}
 1768              		.cfi_def_cfa_offset 16
 1769              		.cfi_offset 3, -16
 1770              		.cfi_offset 4, -12
 1771              		.cfi_offset 5, -8
 1772              		.cfi_offset 14, -4
 1773              	.LVL167:
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1774              		.loc 1 1013 0
 1775 0002 40B9     		cbnz	r0, .L164
 1776              	.LBB79:
 1777              	.LBB80:
 1778              		.loc 2 195 0
 1779              		.syntax unified
 1780              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1781 0004 4FF05003 			mov r3, #80												
 1782 0008 83F31188 		msr basepri, r3											
 1783 000c BFF36F8F 		isb														
 1784 0010 BFF34F8F 		dsb														
 1785              	
 1786              	@ 0 "" 2
 1787              	.LVL168:
 1788              		.thumb
 1789              		.syntax unified
 1790              	.L165:
 1791 0014 FEE7     		b	.L165
 1792              	.L164:
 1793 0016 0446     		mov	r4, r0
 1794 0018 0D46     		mov	r5, r1
 1795              	.LBE80:
 1796              	.LBE79:
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1797              		.loc 1 1015 0
 1798 001a FFF7FEFF 		bl	vPortEnterCritical
 1799              	.LVL169:
ARM GAS  /tmp/cclsodVt.s 			page 56


1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1800              		.loc 1 1017 0
 1801 001e E561     		str	r5, [r4, #28]
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1802              		.loc 1 1019 0
 1803 0020 FFF7FEFF 		bl	vPortExitCritical
 1804              	.LVL170:
 1805 0024 38BD     		pop	{r3, r4, r5, pc}
 1806              		.cfi_endproc
 1807              	.LFE25:
 1809              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1810              		.align	1
 1811              		.global	xTimerPendFunctionCallFromISR
 1812              		.syntax unified
 1813              		.thumb
 1814              		.thumb_func
 1815              		.fpu fpv4-sp-d16
 1817              	xTimerPendFunctionCallFromISR:
 1818              	.LFB26:
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1819              		.loc 1 1026 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 16
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 1823              	.LVL171:
 1824 0000 10B5     		push	{r4, lr}
 1825              		.cfi_def_cfa_offset 8
 1826              		.cfi_offset 4, -8
 1827              		.cfi_offset 14, -4
 1828 0002 84B0     		sub	sp, sp, #16
 1829              		.cfi_def_cfa_offset 24
 1830 0004 1C46     		mov	r4, r3
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1831              		.loc 1 1032 0
 1832 0006 6FF00103 		mvn	r3, #1
 1833              	.LVL172:
 1834 000a 0093     		str	r3, [sp]
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1835              		.loc 1 1033 0
 1836 000c 0190     		str	r0, [sp, #4]
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1837              		.loc 1 1034 0
 1838 000e 0291     		str	r1, [sp, #8]
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
ARM GAS  /tmp/cclsodVt.s 			page 57


 1839              		.loc 1 1035 0
 1840 0010 0392     		str	r2, [sp, #12]
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1841              		.loc 1 1037 0
 1842 0012 0023     		movs	r3, #0
 1843 0014 2246     		mov	r2, r4
 1844              	.LVL173:
 1845 0016 6946     		mov	r1, sp
 1846              	.LVL174:
 1847 0018 0248     		ldr	r0, .L169
 1848              	.LVL175:
 1849 001a 0068     		ldr	r0, [r0]
 1850 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1851              	.LVL176:
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1852              		.loc 1 1042 0
 1853 0020 04B0     		add	sp, sp, #16
 1854              		.cfi_def_cfa_offset 8
 1855              		@ sp needed
 1856 0022 10BD     		pop	{r4, pc}
 1857              	.LVL177:
 1858              	.L170:
 1859              		.align	2
 1860              	.L169:
 1861 0024 00000000 		.word	.LANCHOR2
 1862              		.cfi_endproc
 1863              	.LFE26:
 1865              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1866              		.align	1
 1867              		.global	xTimerPendFunctionCall
 1868              		.syntax unified
 1869              		.thumb
 1870              		.thumb_func
 1871              		.fpu fpv4-sp-d16
 1873              	xTimerPendFunctionCall:
 1874              	.LFB27:
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1875              		.loc 1 1050 0
 1876              		.cfi_startproc
 1877              		@ args = 0, pretend = 0, frame = 16
 1878              		@ frame_needed = 0, uses_anonymous_args = 0
 1879              	.LVL178:
 1880 0000 30B5     		push	{r4, r5, lr}
 1881              		.cfi_def_cfa_offset 12
 1882              		.cfi_offset 4, -12
ARM GAS  /tmp/cclsodVt.s 			page 58


 1883              		.cfi_offset 5, -8
 1884              		.cfi_offset 14, -4
 1885 0002 85B0     		sub	sp, sp, #20
 1886              		.cfi_def_cfa_offset 32
 1887 0004 1446     		mov	r4, r2
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1888              		.loc 1 1057 0
 1889 0006 0D4A     		ldr	r2, .L175
 1890              	.LVL179:
 1891 0008 1568     		ldr	r5, [r2]
 1892 000a 45B9     		cbnz	r5, .L172
 1893              	.LBB81:
 1894              	.LBB82:
 1895              		.loc 2 195 0
 1896              		.syntax unified
 1897              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1898 000c 4FF05003 			mov r3, #80												
 1899 0010 83F31188 		msr basepri, r3											
 1900 0014 BFF36F8F 		isb														
 1901 0018 BFF34F8F 		dsb														
 1902              	
 1903              	@ 0 "" 2
 1904              	.LVL180:
 1905              		.thumb
 1906              		.syntax unified
 1907              	.L173:
 1908 001c FEE7     		b	.L173
 1909              	.LVL181:
 1910              	.L172:
 1911 001e 1A46     		mov	r2, r3
 1912 0020 0346     		mov	r3, r0
 1913              	.LVL182:
 1914              	.LBE82:
 1915              	.LBE81:
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1916              		.loc 1 1061 0
 1917 0022 4FF0FF30 		mov	r0, #-1
 1918              	.LVL183:
 1919 0026 0090     		str	r0, [sp]
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1920              		.loc 1 1062 0
 1921 0028 0193     		str	r3, [sp, #4]
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1922              		.loc 1 1063 0
 1923 002a 0291     		str	r1, [sp, #8]
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1924              		.loc 1 1064 0
 1925 002c 0394     		str	r4, [sp, #12]
ARM GAS  /tmp/cclsodVt.s 			page 59


1065:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1066:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1926              		.loc 1 1066 0
 1927 002e 0023     		movs	r3, #0
 1928              	.LVL184:
 1929 0030 6946     		mov	r1, sp
 1930              	.LVL185:
 1931 0032 2846     		mov	r0, r5
 1932 0034 FFF7FEFF 		bl	xQueueGenericSend
 1933              	.LVL186:
1067:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1069:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1071:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1934              		.loc 1 1071 0
 1935 0038 05B0     		add	sp, sp, #20
 1936              		.cfi_def_cfa_offset 12
 1937              		@ sp needed
 1938 003a 30BD     		pop	{r4, r5, pc}
 1939              	.LVL187:
 1940              	.L176:
 1941              		.align	2
 1942              	.L175:
 1943 003c 00000000 		.word	.LANCHOR2
 1944              		.cfi_endproc
 1945              	.LFE27:
 1947              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1948              		.align	1
 1949              		.global	uxTimerGetTimerNumber
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1953              		.fpu fpv4-sp-d16
 1955              	uxTimerGetTimerNumber:
 1956              	.LFB28:
1072:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1073:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1074:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1075:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1076:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1077:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1079:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1957              		.loc 1 1079 0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961              		@ link register save eliminated.
 1962              	.LVL188:
1080:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1081:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1963              		.loc 1 1081 0
 1964 0000 406A     		ldr	r0, [r0, #36]
 1965              	.LVL189:
 1966 0002 7047     		bx	lr
 1967              		.cfi_endproc
ARM GAS  /tmp/cclsodVt.s 			page 60


 1968              	.LFE28:
 1970              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1971              		.align	1
 1972              		.global	vTimerSetTimerNumber
 1973              		.syntax unified
 1974              		.thumb
 1975              		.thumb_func
 1976              		.fpu fpv4-sp-d16
 1978              	vTimerSetTimerNumber:
 1979              	.LFB29:
1082:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1083:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1084:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1085:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1087:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1088:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1089:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1980              		.loc 1 1089 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 0
 1983              		@ frame_needed = 0, uses_anonymous_args = 0
 1984              		@ link register save eliminated.
 1985              	.LVL190:
1090:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1986              		.loc 1 1090 0
 1987 0000 4162     		str	r1, [r0, #36]
 1988 0002 7047     		bx	lr
 1989              		.cfi_endproc
 1990              	.LFE29:
 1992              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1993              		.align	2
 1994              		.set	.LANCHOR0,. + 0
 1997              	pxCurrentTimerList:
 1998 0000 00000000 		.space	4
 1999              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 2000              		.align	2
 2001              		.set	.LANCHOR1,. + 0
 2004              	pxOverflowTimerList:
 2005 0000 00000000 		.space	4
 2006              		.section	.bss.ucStaticTimerQueueStorage.6640,"aw",%nobits
 2007              		.align	2
 2008              		.set	.LANCHOR6,. + 0
 2011              	ucStaticTimerQueueStorage.6640:
 2012 0000 00000000 		.space	160
 2012      00000000 
 2012      00000000 
 2012      00000000 
 2012      00000000 
 2013              		.section	.bss.xActiveTimerList1,"aw",%nobits
 2014              		.align	2
 2015              		.set	.LANCHOR3,. + 0
 2018              	xActiveTimerList1:
 2019 0000 00000000 		.space	20
 2019      00000000 
 2019      00000000 
 2019      00000000 
ARM GAS  /tmp/cclsodVt.s 			page 61


 2019      00000000 
 2020              		.section	.bss.xActiveTimerList2,"aw",%nobits
 2021              		.align	2
 2022              		.set	.LANCHOR4,. + 0
 2025              	xActiveTimerList2:
 2026 0000 00000000 		.space	20
 2026      00000000 
 2026      00000000 
 2026      00000000 
 2026      00000000 
 2027              		.section	.bss.xLastTime.6589,"aw",%nobits
 2028              		.align	2
 2029              		.set	.LANCHOR8,. + 0
 2032              	xLastTime.6589:
 2033 0000 00000000 		.space	4
 2034              		.section	.bss.xStaticTimerQueue.6639,"aw",%nobits
 2035              		.align	2
 2036              		.set	.LANCHOR5,. + 0
 2039              	xStaticTimerQueue.6639:
 2040 0000 00000000 		.space	80
 2040      00000000 
 2040      00000000 
 2040      00000000 
 2040      00000000 
 2041              		.section	.bss.xTimerQueue,"aw",%nobits
 2042              		.align	2
 2043              		.set	.LANCHOR2,. + 0
 2046              	xTimerQueue:
 2047 0000 00000000 		.space	4
 2048              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 2049              		.align	2
 2050              		.set	.LANCHOR7,. + 0
 2053              	xTimerTaskHandle:
 2054 0000 00000000 		.space	4
 2055              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 2056              		.align	2
 2057              	.LC0:
 2058 0000 546D7251 		.ascii	"TmrQ\000"
 2058      00
 2059              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 2060              		.align	2
 2061              	.LC1:
 2062 0000 546D7220 		.ascii	"Tmr Svc\000"
 2062      53766300 
 2063              		.text
 2064              	.Letext0:
 2065              		.file 3 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 2066              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 2067              		.file 5 "/usr/include/newlib/sys/lock.h"
 2068              		.file 6 "/usr/include/newlib/sys/_types.h"
 2069              		.file 7 "/usr/include/newlib/sys/reent.h"
 2070              		.file 8 "/usr/include/newlib/stdlib.h"
 2071              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 2072              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 2073              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 2074              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2075              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
ARM GAS  /tmp/cclsodVt.s 			page 62


 2076              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2077              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2078              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 2079              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cclsodVt.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/cclsodVt.s:18     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/cclsodVt.s:24     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/cclsodVt.s:63     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/cclsodVt.s:68     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/cclsodVt.s:74     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/cclsodVt.s:149    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/cclsodVt.s:155    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/cclsodVt.s:161    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/cclsodVt.s:233    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/cclsodVt.s:245    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/cclsodVt.s:251    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/cclsodVt.s:325    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/cclsodVt.s:332    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/cclsodVt.s:424    .text.xTimerCreateTimerTask:0000000000000060 $d
     /tmp/cclsodVt.s:1338   .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/cclsodVt.s:432    .text.xTimerCreate:0000000000000000 $t
     /tmp/cclsodVt.s:439    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/cclsodVt.s:493    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/cclsodVt.s:500    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/cclsodVt.s:587    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/cclsodVt.s:594    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/cclsodVt.s:707    .text.xTimerGenericCommand:0000000000000068 $d
     /tmp/cclsodVt.s:712    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/cclsodVt.s:718    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/cclsodVt.s:827    .text.prvSwitchTimerLists:0000000000000074 $d
     /tmp/cclsodVt.s:833    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/cclsodVt.s:839    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/cclsodVt.s:886    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/cclsodVt.s:891    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/cclsodVt.s:897    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/cclsodVt.s:987    .text.prvProcessExpiredTimer:0000000000000068 $d
     /tmp/cclsodVt.s:994    .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/cclsodVt.s:1000   .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/cclsodVt.s:1105   .text.prvProcessTimerOrBlockTask:0000000000000068 $d
     /tmp/cclsodVt.s:1112   .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/cclsodVt.s:1118   .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/cclsodVt.s:1185   .text.prvProcessReceivedCommands:0000000000000048 $d
     /tmp/cclsodVt.s:1195   .text.prvProcessReceivedCommands:0000000000000052 $t
     /tmp/cclsodVt.s:1327   .text.prvProcessReceivedCommands:000000000000010c $d
     /tmp/cclsodVt.s:1332   .text.prvTimerTask:0000000000000000 $t
     /tmp/cclsodVt.s:1368   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/cclsodVt.s:1375   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/cclsodVt.s:1408   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/cclsodVt.s:1415   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/cclsodVt.s:1422   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/cclsodVt.s:1460   .text.vTimerSetReloadMode:0000000000000000 $t
     /tmp/cclsodVt.s:1467   .text.vTimerSetReloadMode:0000000000000000 vTimerSetReloadMode
     /tmp/cclsodVt.s:1530   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/cclsodVt.s:1537   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/cclsodVt.s:1576   .text.pcTimerGetName:0000000000000000 $t
     /tmp/cclsodVt.s:1583   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/cclsodVt.s:1621   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/cclsodVt.s:1628   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/cclsodVt.s:1696   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/cclsodVt.s:1703   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
ARM GAS  /tmp/cclsodVt.s 			page 64


     /tmp/cclsodVt.s:1753   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/cclsodVt.s:1760   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
     /tmp/cclsodVt.s:1810   .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/cclsodVt.s:1817   .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/cclsodVt.s:1861   .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/cclsodVt.s:1866   .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/cclsodVt.s:1873   .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/cclsodVt.s:1943   .text.xTimerPendFunctionCall:000000000000003c $d
     /tmp/cclsodVt.s:1948   .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/cclsodVt.s:1955   .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/cclsodVt.s:1971   .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/cclsodVt.s:1978   .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/cclsodVt.s:1993   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/cclsodVt.s:1997   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/cclsodVt.s:2000   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/cclsodVt.s:2004   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/cclsodVt.s:2007   .bss.ucStaticTimerQueueStorage.6640:0000000000000000 $d
     /tmp/cclsodVt.s:2011   .bss.ucStaticTimerQueueStorage.6640:0000000000000000 ucStaticTimerQueueStorage.6640
     /tmp/cclsodVt.s:2014   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/cclsodVt.s:2018   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/cclsodVt.s:2021   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/cclsodVt.s:2025   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/cclsodVt.s:2028   .bss.xLastTime.6589:0000000000000000 $d
     /tmp/cclsodVt.s:2032   .bss.xLastTime.6589:0000000000000000 xLastTime.6589
     /tmp/cclsodVt.s:2035   .bss.xStaticTimerQueue.6639:0000000000000000 $d
     /tmp/cclsodVt.s:2039   .bss.xStaticTimerQueue.6639:0000000000000000 xStaticTimerQueue.6639
     /tmp/cclsodVt.s:2042   .bss.xTimerQueue:0000000000000000 $d
     /tmp/cclsodVt.s:2046   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/cclsodVt.s:2049   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/cclsodVt.s:2053   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/cclsodVt.s:2056   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/cclsodVt.s:2060   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
